/*
 * Module code.
 *
 * Generated by SIP 6.7.9
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_richtext.h"
        #include <wx/object.h>
        #include <wx/dc.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/gdicmn.h>
        #include <wx/gdicmn.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/gdicmn.h>
        #include <wx/window.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/xml/xml.h>
        #include <wx/richtext/richtextxml.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/image.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        
        typedef wxList wxRichTextObjectList_;
        #include <wx/stream.h>
        #include <wx/stream.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/position.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/event.h>
        #include <wx/validate.h>
        #include <wx/colour.h>
        #include <wx/html/htmlcell.h>
        #include <wx/combo.h>
        #include <wx/event.h>
        #include <wx/richtext/richtextformatdlg.h>
        #include <wx/panel.h>
        #include <wx/bookctrl.h>
        #include <wx/sizer.h>
        #include <wx/textctrl.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        #include <wx/richtext/richtextbuffer.h>
        
        typedef wxList wxRichTextFileHandlerList;
        
        typedef wxList wxRichTextDrawingHandlerList;
        
        typedef wxList wxRichTextActionList;
        #include <wx/richtext/richtextctrl.h>
        #include <wx/richtext/richtextctrl.h>
        #include <wx/richtext/richtexthtml.h>
        #include <wx/richtext/richtextprint.h>
        #include <wx/richtext/richtextprint.h>
        #include <wx/richtext/richtextprint.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/richtext/richtextstyles.h>
        #include <wx/richtext/richtextstyledlg.h>
        #include <wx/richtext/richtextsymboldlg.h>
        #include <wx/richtext/richtextformatdlg.h>

/* Define the strings used by this module. */
const char sipStrings__richtext[] = {
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'W', 'I', 'T', 'H', '_', 'P', 'R', 'E', 'V', 'I', 'O', 'U', 'S', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'L', 'i', 's', 't', 'B', 'o', 'x', ':', ':', 'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', '_', 'P', 'R', 'E', 'F', 'O', 'R', 'M', 'A', 'T', 'T', 'E', 'D', '_', 'L', 'I', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', '_', 'P', 'R', 'E', 'F', 'O', 'R', 'M', 'A', 'T', 'T', 'E', 'D', '_', 'W', 'R', 'A', 'P', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', '_', 'C', 'o', 'm', 'm', 'o', 'n', 'A', 'n', 'c', 'e', 's', 't', 'o', 'r', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'S', 'A', 'V', 'E', '_', 'I', 'M', 'A', 'G', 'E', 'S', '_', 'T', 'O', '_', 'B', 'A', 'S', 'E', '6', '4', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'S', 'A', 'V', 'E', '_', 'I', 'M', 'A', 'G', 'E', 'S', '_', 'T', 'O', '_', 'M', 'E', 'M', 'O', 'R', 'Y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 'S', '_', 'O', 'N', 'L', 'Y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', 'S', '_', 'O', 'N', 'L', 'Y', 0,
    'F', 'i', 'n', 'd', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'F', 'o', 'r', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'S', 'A', 'V', 'E', '_', 'I', 'M', 'A', 'G', 'E', 'S', '_', 'T', 'O', '_', 'F', 'I', 'L', 'E', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', '_', 'P', 'R', 'E', 'F', 'O', 'R', 'M', 'A', 'T', 'T', 'E', 'D', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', '_', 'F', 'L', 'O', 'A', 'T', 'I', 'N', 'G', '_', 'O', 'B', 'J', 'E', 'C', 'T', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'T', 'O', 'P', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'I', 'N', 'C', 'L', 'U', 'D', 'E', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 'H', 'E', 'E', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'B', 'R', 'O', 'W', 'S', 'E', '_', 'N', 'U', 'M', 'B', 'E', 'R', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'C', 'U', 'S', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 'H', 'E', 'E', 'T', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'I', 'N', 'G', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'S', 'u', 'b', 'o', 'b', 'j', 'e', 'c', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 'C', 'o', 'u', 'n', 't', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'F', 'A', 'C', 'E', 'N', 'A', 'M', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', '_', 'N', 'E', 'S', 'T', 'E', 'D', '_', 'O', 'B', 'J', 'E', 'C', 'T', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'N', 'S', 'U', 'M', 'I', 'N', 'G', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 'H', 'E', 'E', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 'H', 'E', 'E', 'T', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', 'D', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'N', 'O', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'F', 'O', 'O', 'T', 'E', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'S', 'H', 'O', 'W', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'S', 'H', 'O', 'W', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 'S', '_', 'O', 'N', 'L', 'Y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', 'S', '_', 'O', 'N', 'L', 'Y', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', '_', 'N', 'o', 'r', 'm', 'a', 'l', 0,
    'S', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 'H', 'E', 'E', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'o', 'r', 'm', 'a', 't', 't', 'i', 'n', 'g', 'D', 'i', 'a', 'l', 'o', 'g', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'C', 'R', 'E', 'A', 'T', 'E', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'D', 'E', 'L', 'E', 'T', 'E', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'R', 'E', 'N', 'A', 'M', 'E', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'W', 'I', 'T', 'H', '_', 'U', 'N', 'D', 'O', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'I', 'T', 'S', '_', 'H', 'U', 'N', 'D', 'R', 'E', 'D', 'T', 'H', 'S', '_', 'P', 'O', 'I', 'N', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', '_', 'N', 'O', '_', 'W', 'R', 'A', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'D', 'o', 'e', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'H', 'a', 'v', 'e', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 'F', 'l', 'a', 'g', 0,
    'G', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'F', 'o', 'r', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 'O', 'f', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'I', 'N', 'D', 'E', 'N', 'T', 'S', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'A', 'P', 'P', 'L', 'Y', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'Y', '_', 'L', 'E', 'V', 'E', 'L', 0,
    'S', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'F', 'o', 'r', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'K', 'E', 'E', 'P', '_', 'F', 'I', 'R', 'S', 'T', '_', 'P', 'A', 'R', 'A', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'A', 'B', 'S', 'O', 'L', 'U', 'T', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'R', 'E', 'L', 'A', 'T', 'I', 'V', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'C', 'o', 'l', 'l', 'e', 'c', 't', 'C', 'o', 'm', 'm', 'o', 'n', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'N', 'T', 'E', 'N', 'T', '_', 'I', 'N', 'S', 'E', 'R', 'T', 'E', 'D', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'L', 'i', 'n', 'e', 'F', 'o', 'r', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'E', 'L', 'D', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'E', 'L', 'D', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'O', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'E', 'L', 'D', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'E', 'C', 'T', 'A', 'N', 'G', 'L', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'E', 'L', 'D', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'A', 'R', 'T', '_', 'T', 'A', 'G', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'H', 'O', 'N', 'O', 'U', 'R', '_', 'A', 'T', 'O', 'M', 'I', 'C', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'L', 'A', 'Y', 'O', 'U', 'T', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'I', 'E', 'D', '_', 'R', 'E', 'C', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'E', 'D', 'I', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'E', '_', 'B', 'O', 'R', 'D', 'E', 'R', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'N', 'T', 'E', 'N', 'T', '_', 'D', 'E', 'L', 'E', 'T', 'E', 'D', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'L', 'i', 's', 't', '_', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'O', 'r', 'g', 'a', 'n', 'i', 's', 'e', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'C', 'a', 'l', 'c', 'u', 'l', 'a', 't', 'e', 'R', 'e', 'f', 'r', 'e', 's', 'h', 'O', 'p', 't', 'i', 'm', 'i', 'z', 'a', 't', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'T', 'i', 'm', 'e', 0,
    'G', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'S', 'u', 'b', 'o', 'b', 'j', 'e', 'c', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'M', 'o', 'v', 'e', 'A', 'n', 'c', 'h', 'o', 'r', 'e', 'd', 'O', 'b', 'j', 'e', 'c', 't', 'T', 'o', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'R', 'E', 'M', 'O', 'V', 'E', 0,
    'R', 'e', 'q', 'u', 'e', 's', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'T', 'i', 'm', 'e', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'S', 'T', 'A', 'T', 'I', 'C', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'o', 'p', 't', 'i', 'm', 'i', 'z', 'a', 't', 'i', 'o', 'n', 'L', 'i', 'n', 'e', 'C', 'h', 'a', 'r', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 's', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'A', 'c', 't', 'i', 'o', 'n', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'P', 't', 'r', 'A', 'r', 'r', 'a', 'y', 'A', 'r', 'r', 'a', 'y', 0,
    'C', 'l', 'e', 'a', 'r', 'T', 'e', 'm', 'p', 'o', 'r', 'a', 'r', 'y', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 's', 0,
    'E', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'e', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'a', 'm', 'e', 's', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'I', 'm', 'p', 'a', 'c', 't', 'e', 'd', 'B', 'y', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'M', 'a', 'k', 'e', 'I', 'm', 'a', 'g', 'e', 'B', 'l', 'o', 'c', 'k', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'E', 'L', 'D', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'E', 'N', 'D', '_', 'T', 'A', 'G', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'E', 'D', 'I', 'T', 'O', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'O', 'K', '_', 'C', 'A', 'N', 'C', 'E', 'L', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'S', 'H', 'O', 'W', '_', 'L', 'I', 'S', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'R', 'E', 'S', 'E', 'T', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 'T', 'o', 'C', 'u', 'r', 's', 'o', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'I', 'm', 'p', 'a', 'c', 't', 'e', 'd', 'B', 'y', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'X', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'A', 'M', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'F', 'I', 'X', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'L', 'i', 's', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'L', 'a', 'y', 'o', 'u', 't', 'B', 'o', 'x', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 'C', 'o', 'n', 'v', 'e', 'r', 't', 'e', 'r', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'F', 'o', 'r', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'G', 'e', 't', 'N', 'o', 'n', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'I', 'N', 'T', 'E', 'R', 'A', 'C', 'T', 'I', 'V', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'R', 'E', 'N', 'U', 'M', 'B', 'E', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'S', 'H', 'O', 'W', '_', 'A', 'L', 'L', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'S', 'H', 'O', 'W', '_', 'B', 'O', 'X', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '_', 'N', 'O', 'N', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'W', 'I', 'T', 'H', '_', 'U', 'N', 'D', 'O', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 'p', 'l', 'i', 't', 'P', 'a', 'r', 'a', 'C', 'h', 'a', 'r', 'S', 't', 'y', 'l', 'e', 's', 0,
    'S', 'e', 't', 'O', 'b', 'j', 'e', 'c', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'D', 'A', 'S', 'H', 'E', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'D', 'O', 'T', 'T', 'E', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'D', 'O', 'U', 'B', 'L', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'G', 'R', 'O', 'O', 'V', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'M', 'E', 'D', 'I', 'U', 'M', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'O', 'U', 'T', 'S', 'E', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'E', '_', 'F', 'U', 'L', 'L', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'O', 'R', 'N', 'E', 'R', '_', 'R', 'A', 'D', 'I', 'U', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'm', '_', 'e', 'n', 'a', 'b', 'l', 'e', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'a', 'd', 'i', 'n', 'g', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'B', 'U', 'F', 'F', 'E', 'R', '_', 'R', 'E', 'S', 'E', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'W', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 'M', 'o', 'd', 'e', 0,
    'A', 'p', 'p', 'l', 'y', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 'T', 'o', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'F', 'o', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 't', 'i', 'n', 'g', 'D', 'i', 'a', 'l', 'o', 'g', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'S', 'a', 'v', 'e', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'e', 'm', 'p', 'o', 'r', 'a', 'r', 'y', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 's', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'a', 'd', 'i', 'n', 'g', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'A', 'T', 'T', 'R', 'I', 'B', 'U', 'T', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'D', 'R', 'A', 'W', '_', 'I', 'G', 'N', 'O', 'R', 'E', '_', 'C', 'A', 'C', 'H', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'O', 'P', 'T', 'I', 'M', 'I', 'Z', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'E', 'N', 'U', 'M', 'B', 'E', 'R', 0,
    'S', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'A', 'f', 't', 'e', 'r', 'C', 'l', 'i', 'c', 'k', 0,
    'S', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 't', 'i', 'n', 'g', 'D', 'i', 'a', 'l', 'o', 'g', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'S', 'e', 't', 'F', 'u', 'l', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'S', 'a', 'v', 'e', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'e', 'm', 'p', 'o', 'r', 'a', 'r', 'y', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 's', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'I', 'T', 'S', '_', 'P', 'E', 'R', 'C', 'E', 'N', 'T', 'A', 'G', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'V', 'A', 'L', 'U', 'E', '_', 'V', 'A', 'L', 'I', 'D', '_', 'M', 'A', 'S', 'K', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'I', 'N', 'S', 'E', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'R', 'I', 'D', 'G', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'S', 'O', 'L', 'I', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'T', 'H', 'I', 'C', 'K', 0,
    'o', 'p', 't', 'i', 'm', 'i', 'z', 'a', 't', 'i', 'o', 'n', 'L', 'i', 'n', 'e', 'Y', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 's', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'L', 'E', 'F', 'T', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'u', 'f', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'o', 'r', 'm', 'a', 't', 't', 'i', 'n', 'g', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'F', 'o', 'o', 't', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'l', 'a', 'i', 'n', 'T', 'e', 'x', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'A', 'p', 'p', 'l', 'y', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 'T', 'o', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'A', 'p', 'p', 'l', 'y', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'T', 'o', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'C', 'o', 'm', 'b', 'i', 'n', 'e', 'W', 'i', 't', 'h', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'a', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'C', 'l', 'a', 's', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'L', 'a', 'y', 'o', 'u', 't', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'L', 'i', 'n', 'e', 'B', 'r', 'e', 'a', 'k', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'u', 'f', 'f', 'e', 'r', 'F', 'o', 'r', 'm', 'a', 't', 'I', 'd', 0,
    'O', 'p', 't', 'i', 'o', 'n', '_', 'A', 'l', 'l', 'o', 'w', 'P', 'i', 'x', 'e', 'l', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'E', 'X', '_', 'N', 'O', '_', 'G', 'U', 'I', 'D', 'E', 'L', 'I', 'N', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'O', 'R', 'G', 'A', 'N', 'I', 'S', 'E', 'R', '_', 'B', 'R', 'O', 'W', 'S', 'E', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'F', 'o', 'r', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'i', 't', 'l', 'i', 's', 't', 's', 'E', 'q', 'P', 'a', 'r', 't', 'i', 'a', 'l', 0,
    'S', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'L', 'a', 'y', 'o', 'u', 't', 'T', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    'S', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'F', 'o', 'o', 't', 'e', 'r', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'I', 'T', 'S', '_', 'T', 'E', 'N', 'T', 'H', 'S', '_', 'M', 'M', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'T', 'H', 'I', 'N', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'L', 'E', 'A', 'R', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'F', 'L', 'O', 'A', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'm', '_', 'e', 'n', 'a', 'b', 'l', 'e', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'L', 'E', 'F', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'L', 'i', 's', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'M', 'o', 'd', 'e', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'G', 'e', 't', 'A', 'd', 'j', 'u', 's', 't', 'e', 'd', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'F', 'o', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'C', 'e', 'l', 'l', 'R', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 'S', 't', 'y', 'l', 'e', 'F', 'o', 'r', 'L', 'e', 'v', 'e', 'l', 0,
    'G', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'A', 'n', 'c', 'h', 'o', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'H', 'a', 's', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'I', 'n', 's', 'e', 'r', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'D', 'R', 'A', 'W', '_', 'G', 'U', 'I', 'D', 'E', 'L', 'I', 'N', 'E', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'A', 'N', 'D', 'L', 'E', 'R', '_', 'U', 'S', 'E', '_', 'C', 'S', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'U', 'T', 'S', 'I', 'D', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'E', 'M', 'O', 'V', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'V', 'A', 'R', 'I', 'A', 'B', 'L', 'E', '_', 'H', 'E', 'I', 'G', 'H', 'T', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'A', 'n', 'c', 'h', 'o', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'L', 'E', 'A', 'R', '_', 'B', 'O', 'T', 'H', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'L', 'E', 'A', 'R', '_', 'L', 'E', 'F', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'L', 'E', 'A', 'R', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'F', 'L', 'O', 'A', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'F', 'L', 'O', 'A', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'l', 'o', 'a', 't', 'C', 'o', 'l', 'l', 'e', 'c', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'P', 't', 'r', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'C', 'o', 'm', 'b', 'o', 'C', 't', 'r', 'l', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'R', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 'l', 'y', 0,
    'A', 'u', 't', 'o', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'i', 'e', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'F', 'o', 'n', 't', 'N', 'a', 'm', 'e', 's', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'P', 'i', 'x', 'e', 'l', 's', 'T', 'o', 'T', 'e', 'n', 't', 'h', 's', 'M', 'M', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'e', 'n', 't', 'h', 's', 'M', 'M', 'T', 'o', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'F', 'i', 'n', 'd', 'N', 'e', 'x', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'C', 'o', 'n', 't', 'e', 'n', 't', 'A', 'r', 'e', 'a', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'e', 'a', 'f', 'O', 'b', 'j', 'e', 'c', 't', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'T', 'e', 'x', 't', 'B', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'F', 'o', 'r', 'N', 'e', 'w', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'I', 'D', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '1', 0,
    'I', 'D', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '2', 0,
    'I', 'D', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', '3', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'B', 'U', 'L', 'L', 'E', 'T', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'B', 'E', 'F', 'O', 'R', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'E', 'S', 'E', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'V', 'A', 'R', 'I', 'A', 'B', 'L', 'E', '_', 'W', 'I', 'D', 'T', 'H', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'o', 'm', 'b', 'i', 'n', 'e', 'B', 'i', 't', 'l', 'i', 's', 't', 's', 0,
    'U', 's', 'e', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'S', 'p', 'a', 'c', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'L', 'i', 's', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'C', 'l', 'e', 'a', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'F', 'l', 'o', 'a', 't', 'S', 't', 'y', 'l', 'e', 0,
    'A', 'p', 'p', 'l', 'y', 'I', 't', 'a', 'l', 'i', 'c', 'T', 'o', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'A', 'p', 'p', 'l', 'y', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'C', 'l', 'e', 'a', 'n', 'U', 'p', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'F', 'i', 'n', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'B', 'y', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'i', 'g', 'u', 'o', 'u', 's', 'P', 'l', 'a', 'i', 'n', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'L', 'o', 'a', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'O', 'b', 'j', 'e', 'c', 't', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 'M', 'e', 'n', 'u', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'M', 'e', 'r', 'g', 'e', 'd', 'W', 'i', 't', 'h', 'B', 'a', 's', 'e', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 's', 'C', 'h', 'i', 'l', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'H', 'a', 's', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'H', 'a', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'L', 'o', 'a', 'd', 'A', 'n', 'd', 'S', 'c', 'a', 'l', 'e', 'I', 'm', 'a', 'g', 'e', 'C', 'a', 'c', 'h', 'e', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'O', 'B', 'J', 'E', 'C', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'D', 'R', 'A', 'W', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'A', 'F', 'T', 'E', 'R', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'E', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'D', 'e', 'c', 'i', 'm', 'a', 'l', 'T', 'o', 'R', 'o', 'm', 'a', 'n', 0,
    'S', 'e', 't', 'A', 'n', 'd', 'S', 'h', 'o', 'w', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 'A', 'n', 'd', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'I', 'T', 'S', '_', 'P', 'I', 'X', 'E', 'L', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'I', 'T', 'S', '_', 'P', 'O', 'I', 'N', 'T', 'S', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'H', 'i', 't', 'T', 'e', 's', 't', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'a', 'g', 'e', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'V', 'a', 'r', 'i', 'a', 'n', 't', 'A', 'r', 'r', 'a', 'y', 0,
    'A', 'u', 't', 'o', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 's', 0,
    'B', 'e', 'g', 'i', 'n', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'C', 'a', 'n', 'P', 'a', 's', 't', 'e', 'F', 'r', 'o', 'm', 'C', 'l', 'i', 'p', 'b', 'o', 'a', 'r', 'd', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'C', 'o', 'n', 't', 'e', 'n', 't', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'T', 'e', 'm', 'p', 'o', 'r', 'a', 'r', 'y', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'F', 'i', 'n', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'B', 'y', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'F', 'o', 'n', 't', 'N', 'a', 'm', 'e', 's', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'L', 'a', 'y', 'o', 'u', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'S', 'i', 'z', 'e', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'T', 'e', 'x', 't', 'F', 'o', 'n', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'O', 'w', 'n', 'R', 'a', 'n', 'g', 'e', 'I', 'f', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'F', 'o', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'H', 'a', 's', 'U', 'n', 'f', 'o', 'c', 'u', 's', 'e', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 'n', 's', 'e', 'r', 't', 'N', 'e', 'w', 'l', 'i', 'n', 'e', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'I', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'o', 'w', 'i', 'n', 'g', 0,
    'I', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'X', 'E', 'D', '_', 'H', 'E', 'I', 'G', 'H', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'R', 'e', 's', 'e', 't', 'A', 'n', 'd', 'C', 'l', 'e', 'a', 'r', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'L', 'i', 'n', 'e', 'B', 'r', 'e', 'a', 'k', 'C', 'h', 'a', 'r', 0,
    'S', 'e', 't', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'L', 'a', 'y', 'o', 'u', 't', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'F', 'u', 'l', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'R', 'e', 'q', 'u', 'i', 'r', 'e', 'd', 0,
    'S', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'T', 'e', 'x', 't', 'F', 'o', 'n', 't', 'N', 'a', 'm', 'e', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'V', 'A', 'L', 'U', 'E', '_', 'V', 'A', 'L', 'I', 'D', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'R', 'E', 'T', 'U', 'R', 'N', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'H', 'T', 'M', 'L', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'L', 'i', 's', 't', '_', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'd', 'd', 'E', 'v', 'e', 'n', 'P', 'a', 'g', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'd', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'B', 'o', 'r', 'd', 'e', 'r', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'B', 'o', 'r', 'd', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'B', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'A', 'd', 'j', 'u', 's', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'S', 'p', 'a', 'c', 'e', 0,
    'A', 'p', 'p', 'l', 'y', 'B', 'o', 'l', 'd', 'T', 'o', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'F', 'i', 'n', 'd', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'A', 't', 'P', 'o', 'i', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'N', 'e', 'x', 't', 'W', 'o', 'r', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'F', 'i', 'n', 'd', 'O', 'b', 'j', 'e', 'c', 't', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'F', 'i', 'n', 'd', 'O', 'r', 'C', 'r', 'e', 'a', 't', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'R', 'i', 'g', 'h', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'g', 'i', 'n', 'a', 'l', 'I', 'm', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'G', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'H', 'a', 's', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'H', 'a', 's', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'I', 'n', 'f', 'o', 'r', 'm', 'F', 'i', 'r', 's', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 'n', 'i', 't', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'I', 'n', 's', 'e', 'r', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'I', 'n', 's', 'e', 'r', 't', 'O', 'b', 'j', 'e', 'c', 't', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'a', 'r', 't', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'M', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'm', 'e', 'n', 't', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'I', 'X', 'E', 'D', '_', 'W', 'I', 'D', 'T', 'H', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'F', 'O', 'N', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'T', 'A', 'B', 'S', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'E', 'I', 'G', 'H', 'T', '_', 'O', 'N', 'L', 'Y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'U', 'N', 'F', 'O', 'R', 'M', 'A', 'T', 'T', 'E', 'D', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'R', 'i', 'g', 'h', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'I', 'n', 's', 'e', 'r', 't', 'i', 'o', 'n', 'P', 'o', 'i', 'n', 't', 'E', 'n', 'd', 0,
    'S', 'e', 't', 'O', 'r', 'i', 'g', 'i', 'n', 'a', 'l', 'I', 'm', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'I', 'n', 'h', 'e', 'r', 'i', 't', 'C', 'o', 'l', 'o', 'u', 'r', 's', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'P', 'r', 'e', 'v', 'e', 'n', 't', 'A', 'p', 'p', 'E', 'x', 'i', 't', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'I', 'T', 'S', '_', 'M', 'A', 'S', 'K', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'P', 'a', 'r', 'e', 'n', 't', 'S', 'p', 'a', 'c', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'A', 'c', 't', 'i', 'o', 'n', 'L', 'i', 's', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'I', 'm', 'a', 'g', 'e', 'B', 'l', 'o', 'c', 'k', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 'L', 'i', 's', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'R', 'a', 'n', 'g', 'e', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'X', 'M', 'L', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'S', 'y', 'm', 'b', 'o', 'l', 'P', 'i', 'c', 'k', 'e', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'V', 'a', 'l', 'u', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'A', 'p', 'p', 'l', 'y', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'B', 'e', 'g', 'i', 'n', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'B', 'e', 'g', 'i', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 'e', 'd', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'B', 'e', 'g', 'i', 'n', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'B', 'e', 'g', 'i', 'n', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'C', 'l', 'e', 'a', 'r', 'N', 'o', 'd', 'e', 'T', 'o', 'C', 'l', 'a', 's', 's', 'M', 'a', 'p', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'R', 'a', 'n', 'g', 'e', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'E', 'n', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'E', 'x', 't', 'e', 'n', 'd', 'C', 'e', 'l', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'A', 'b', 's', 'o', 'l', 'u', 't', 'e', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'A', 'p', 'p', 'l', 'y', 'O', 'n', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'a', 'r', 'e', 't', 'A', 't', 'L', 'i', 'n', 'e', 'S', 't', 'a', 'r', 't', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'A', 'r', 'e', 'a', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'P', 'r', 'o', 'c', 'e', 's', 's', 'o', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'G', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'F', 'o', 'o', 't', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'F', 'o', 'r', 'L', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'r', 't', 'i', 'a', 'l', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'G', 'e', 't', 'R', 'e', 's', 't', 'a', 'r', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'i', 'n', 'g', 0,
    'I', 'n', 's', 'e', 'r', 't', 'F', 'i', 'e', 'l', 'd', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'I', 'n', 's', 'e', 'r', 't', 'I', 'm', 'a', 'g', 'e', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 'H', 'i', 'e', 'r', 'a', 'r', 'c', 'h', 'y', 0,
    'O', 'n', 'G', 'e', 't', 'R', 'o', 'w', 's', 'H', 'e', 'i', 'g', 'h', 't', 'H', 'i', 'n', 't', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'A', 'C', 'H', 'E', '_', 'S', 'I', 'Z', 'E', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'D', 'R', 'A', 'W', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'G', 'E', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'H', 'I', 'F', 'T', '_', 'D', 'O', 'W', 'N', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'L', 'I', 'S', 'T', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'R', 'e', 'm', 'o', 'v', 'e', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'A', 'p', 'p', 'l', 'y', 'O', 'n', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'C', 'a', 'r', 'e', 't', 'A', 't', 'L', 'i', 'n', 'e', 'S', 't', 'a', 'r', 't', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'S', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'F', 'o', 'o', 't', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'F', 'o', 'o', 't', 'e', 'r', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'O', 'l', 'd', 'A', 'n', 'd', 'N', 'e', 'w', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'S', 'e', 't', 'P', 'a', 'r', 't', 'i', 'a', 'l', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'S', 'e', 't', 'R', 'e', 's', 't', 'a', 'r', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'i', 'n', 'g', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'C', 'L', 'E', 'A', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'B', 'O', 'X', '_', 'A', 'T', 'T', 'R', '_', 'F', 'L', 'O', 'A', 'T', 0,
    'a', 'd', 'd', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'm', '_', 'v', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'I', 'd', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'o', 'n', 't', 'T', 'a', 'b', 'l', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'l', 'a', 'i', 'n', 'T', 'e', 'x', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'C', 'a', 'n', 'D', 'e', 'l', 'e', 't', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'C', 'l', 'e', 'a', 'r', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'D', 'o', 'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'D', 'r', 'a', 'w', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'F', 'o', 'c', 'u', 's', 0,
    'F', 'i', 'n', 'd', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'F', 'i', 'n', 'd', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'F', 'i', 'n', 'd', 'L', 'e', 'v', 'e', 'l', 'F', 'o', 'r', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'F', 'o', 'r', 'c', 'e', 'D', 'e', 'l', 'a', 'y', 'e', 'd', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'B', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'G', 'e', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 'M', 'a', 'p', 'p', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'I', 'g', 'n', 'o', 'r', 'e', 'F', 'i', 'r', 's', 't', 'T', 'i', 'm', 'e', 0,
    'G', 'e', 't', 'L', 'e', 'v', 'e', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'A', 't', 'Y', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'A', 't', 'L', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'G', 'e', 't', 'R', 'e', 's', 't', 'o', 'r', 'e', 'L', 'a', 's', 't', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'w', 'O', 'n', 'F', 'i', 'r', 's', 't', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'U', 'n', 'c', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'H', 'a', 's', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'B', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'I', 'n', 's', 'e', 'r', 't', 'T', 'e', 'x', 't', 'W', 'i', 't', 'h', 'U', 'n', 'd', 'o', 0,
    'I', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'A', 'l', 'i', 'g', 'n', 'e', 'd', 0,
    'I', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'I', 't', 'a', 'l', 'i', 'c', 's', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'E', 'n', 'd', 0,
    'O', 'n', 'G', 'e', 't', 'U', 'n', 'i', 't', 's', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'O', 'n', 'S', 'y', 's', 'C', 'o', 'l', 'o', 'u', 'r', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'P', 'r', 'e', 'p', 'a', 'r', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'C', 'T', 'R', 'L', '_', 'D', 'O', 'W', 'N', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', 'T', 'E', 'D', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'G', 'E', '_', 'E', 'V', 'E', 'N', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'G', 'E', '_', 'L', 'E', 'F', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'A', 'L', 'L', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'B', 'O', 'X', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'H', 'T', 'M', 'L', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'T', 'E', 'X', 'T', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'A', 'p', 'p', 'l', 'y', 'S', 't', 'y', 'l', 'e', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'M', 'o', 'd', 'u', 'l', 'e', 'I', 'n', 'i', 't', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'B', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 'M', 'a', 'p', 'p', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'I', 'g', 'n', 'o', 'r', 'e', 'F', 'i', 'r', 's', 't', 'T', 'i', 'm', 'e', 0,
    'S', 'e', 't', 'L', 'e', 'v', 'e', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'S', 'e', 't', 'R', 'e', 's', 't', 'o', 'r', 'e', 'L', 'a', 's', 't', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'w', 'O', 'n', 'F', 'i', 'r', 's', 't', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 'D', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'S', 't', 'a', 'r', 't', 'C', 'e', 'l', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'l', 'o', 'o', 'k', 'U', 'p', 'N', 'e', 'w', 'P', 'a', 'r', 'a', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'P', 'r', 'i', 'n', 't', 'o', 'u', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 'F', 'l', 'a', 'g', 's', 0,
    'A', 'd', 'd', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'A', 'd', 'd', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'A', 'd', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'B', 'e', 'g', 'i', 'n', 'S', 'u', 'p', 'p', 'r', 'e', 's', 's', 'U', 'n', 'd', 'o', 0,
    'B', 'e', 'g', 'i', 'n', 'S', 'y', 'm', 'b', 'o', 'l', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'C', 'a', 'n', 'E', 'd', 'i', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'C', 'l', 'e', 'a', 'n', 'U', 'p', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 's', 0,
    'D', 'o', 'S', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'D', 'r', 'a', 'w', 'B', 'o', 'x', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'E', 'n', 'd', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'E', 'n', 'd', 'N', 'u', 'm', 'b', 'e', 'r', 'e', 'd', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'E', 'n', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'E', 'n', 'd', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'F', 'i', 'n', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'B', 'y', 'N', 'a', 'm', 'e', 0,
    'F', 'i', 'n', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'B', 'y', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'B', 'a', 't', 'c', 'h', 'e', 'd', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 'E', 'x', 0,
    'G', 'e', 't', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 'S', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'D', 'r', 'a', 'g', 'S', 't', 'a', 'r', 't', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'a', 't', 'C', 'o', 'l', 'l', 'e', 'c', 't', 'o', 'r', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'a', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'T', 'i', 'm', 'e', 0,
    'G', 'e', 't', 'I', 'n', 's', 'e', 'r', 't', 'i', 'o', 'n', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'D', 'o', 'u', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'S', 't', 'a', 'c', 'k', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'W', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 'M', 'o', 'd', 'e', 0,
    'H', 'a', 's', 'W', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 'M', 'o', 'd', 'e', 0,
    'I', 'n', 'h', 'e', 'r', 'i', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'I', 's', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'O', 'n', 'E', 'r', 'a', 's', 'e', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'O', 'n', 'P', 'r', 'e', 'p', 'a', 'r', 'e', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'A', 'l', 'l', 0,
    'P', 'a', 'i', 'n', 't', 'A', 'b', 'o', 'v', 'e', 'C', 'o', 'n', 't', 'e', 'n', 't', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'A', 'L', 'T', '_', 'D', 'O', 'W', 'N', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'G', 'E', '_', 'A', 'L', 'L', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'G', 'E', '_', 'O', 'D', 'D', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'A', 'N', 'Y', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'P', 'D', 'F', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'R', 'T', 'F', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'X', 'M', 'L', 0,
    'S', 'C', 'R', 'I', 'P', 'T', '_', 'M', 'U', 'L', '_', 'F', 'A', 'C', 'T', 'O', 'R', 0,
    'S', 'e', 't', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 'S', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'D', 'r', 'a', 'g', 'S', 't', 'a', 'r', 't', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'e', 't', 'F', 'u', 'l', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'T', 'i', 'm', 'e', 0,
    'S', 'e', 't', 'I', 'n', 's', 'e', 'r', 't', 'i', 'o', 'n', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'e', 't', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'S', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'W', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 'M', 'o', 'd', 'e', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'O', 't', 'h', 'e', 'r', 'D', 'i', 'r', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    't', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'B', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'A', 'd', 'j', 'u', 's', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'B', 'e', 'g', 'i', 'n', 'L', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'B', 'e', 'g', 'i', 'n', 'R', 'i', 'g', 'h', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'C', 'a', 'l', 'c', 'u', 'l', 'a', 't', 'e', 'S', 'c', 'a', 'l', 'i', 'n', 'g', 0,
    'C', 'a', 'n', 'I', 'n', 's', 'e', 'r', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 0,
    'C', 'l', 'e', 'a', 'r', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'T', 'a', 'b', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'U', 'n', 'u', 's', 'e', 'd', 'L', 'i', 'n', 'e', 's', 0,
    'D', 'o', 'M', 'a', 'k', 'e', 'I', 'm', 'a', 'g', 'e', 'B', 'l', 'o', 'c', 'k', 0,
    'D', 'r', 'a', 'w', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'F', 'i', 'n', 'd', 'R', 'a', 'n', 'g', 'e', 'F', 'o', 'r', 'L', 'i', 's', 't', 0,
    'F', 'i', 'n', 'd', 'W', 'r', 'a', 'p', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'A', 'b', 's', 'o', 'l', 'u', 't', 'e', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'O', 'u', 't', 'l', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'r', 'a', 'g', 'S', 't', 'a', 'r', 't', 'T', 'i', 'm', 'e', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 's', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'N', 'e', 'w', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 0,
    'G', 'e', 't', 'N', 'e', 'w', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'L', 'i', 'n', 'e', 's', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'P', 'h', 'y', 's', 'i', 'c', 'a', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'N', 'a', 'm', 'e', 's', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'F', 'o', 'r', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'U', 'n', 's', 'c', 'a', 'l', 'e', 'd', 'P', 'o', 'i', 'n', 't', 0,
    'I', 's', 'K', 'e', 'y', 'P', 'o', 'p', 'u', 'p', 'T', 'o', 'g', 'g', 'l', 'e', 0,
    'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'N', 'a', 'v', 'i', 'g', 'a', 't', 'e', 0,
    'L', 'a', 'y', 'o', 'u', 't', 'T', 'o', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'M', 'o', 'v', 'e', 'C', 'a', 'r', 'e', 't', 'F', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'R', 'e', 'g', 'i', 's', 't', 'e', 'r', 'N', 'o', 'd', 'e', 'N', 'a', 'm', 'e', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'H', 'a', 's', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 'n', 'd', 'D', 'e', 's', 't', 'r', 'o', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'D', 'r', 'a', 'g', 'S', 't', 'a', 'r', 't', 'T', 'i', 'm', 'e', 0,
    'S', 'e', 't', 'N', 'e', 'w', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'S', 'e', 't', 'O', 'l', 'd', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'S', 't', 'o', 'r', 'e', 'F', 'o', 'c', 'u', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'a', 'p', 'p', 'l', 'y', 'O', 'n', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'i', 'n', 'c', 'l', 'u', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 'A', 't', 't', 'r', 0,
    'm', '_', 'w', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 'M', 'o', 'd', 'e', 0,
    'r', 'e', 's', 't', 'a', 'r', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'i', 'n', 'g', 0,
    's', 'e', 't', 'C', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'S', 'h', 'a', 'd', 'o', 'w', 0,
    'A', 'd', 'd', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'A', 'p', 'p', 'l', 'y', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 0,
    'A', 'p', 'p', 'l', 'y', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'B', 'e', 'g', 'i', 'n', 'L', 'e', 'f', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'B', 'e', 'g', 'i', 'n', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'C', 'l', 'e', 'a', 'n', 'U', 'p', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'S', 't', 'y', 'l', 'e', 'S', 't', 'a', 'c', 'k', 0,
    'C', 'o', 'p', 'y', 'T', 'o', 'C', 'l', 'i', 'p', 'b', 'o', 'a', 'r', 'd', 0,
    'D', 'o', 'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'E', 'n', 'd', 'S', 'u', 'p', 'p', 'r', 'e', 's', 's', 'U', 'n', 'd', 'o', 0,
    'E', 'n', 'd', 'S', 'y', 'm', 'b', 'o', 'l', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'E', 'x', 't', 'e', 'n', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'B', 'l', 'u', 'r', 'D', 'i', 's', 't', 'a', 'n', 'c', 'e', 0,
    'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'B', 'o', 'x', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'r', 'n', 'e', 'r', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'B', 'o', 'o', 'l', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'L', 'o', 'n', 'g', 0,
    'G', 'e', 't', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'F', 'o', 'r', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'U', 'n', 's', 'c', 'a', 'l', 'e', 'd', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'U', 'n', 's', 'c', 'a', 'l', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'H', 'a', 's', 'B', 'o', 'x', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'H', 'a', 's', 'C', 'o', 'r', 'n', 'e', 'r', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'I', 'n', 'i', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'T', 'a', 'b', 's', 0,
    'I', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'B', 'o', 'l', 'd', 0,
    'M', 'e', 'r', 'g', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'L', 'i', 'n', 'e', 'S', 't', 'a', 'r', 't', 0,
    'O', 'n', 'B', 'e', 'g', 'i', 'n', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'O', 'n', 'B', 'e', 'g', 'i', 'n', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'M', 'a', 'r', 'k', 'u', 'p', 0,
    'P', 'a', 'i', 'n', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'R', 'E', '_', 'C', 'E', 'N', 'T', 'E', 'R', '_', 'C', 'A', 'R', 'E', 'T', 0,
    'R', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'E', '_', 'C', 'A', 'R', 'E', 'T', 0,
    'R', 'I', 'C', 'H', 'T', 'E', 'X', 'T', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'R', 'e', 's', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'C', 'a', 'c', 'h', 'e', 0,
    'S', 'e', 't', 'B', 'l', 'u', 'r', 'D', 'i', 's', 't', 'a', 'n', 'c', 'e', 0,
    'S', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'B', 'o', 'x', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'r', 'n', 'e', 'r', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'O', 'l', 'd', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'w', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 's', 0,
    'S', 'e', 't', 'u', 'p', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 's', 0,
    'S', 'h', 'o', 'w', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 0,
    'S', 'u', 'p', 'p', 'r', 'e', 's', 's', 'i', 'n', 'g', 'U', 'n', 'd', 'o', 0,
    'W', 'i', 't', 'h', 'i', 'n', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'e', 'x', 't', 'e', 'n', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'f', 'o', 'n', 't', 'S', 'i', 'z', 'e', 'M', 'a', 'p', 'p', 'i', 'n', 'g', 0,
    'i', 'g', 'n', 'o', 'r', 'e', 'F', 'i', 'r', 's', 't', 'T', 'i', 'm', 'e', 0,
    'o', 'n', 'l', 'y', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'R', 'e', 'c', 't', 0,
    'p', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    's', 'e', 'n', 'd', 'U', 'p', 'd', 'a', 't', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'h', 'o', 'w', 'A', 't', 'L', 'i', 'n', 'e', 'S', 't', 'a', 'r', 't', 0,
    's', 'h', 'o', 'w', 'O', 'n', 'F', 'i', 'r', 's', 't', 'P', 'a', 'g', 'e', 0,
    's', 'h', 'o', 'w', 'P', 'r', 'i', 'n', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'h', 'o', 'l', 'e', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'e', 'l', 'd', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'I', 'm', 'a', 'g', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'R', 'a', 'n', 'g', 'e', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'T', 'a', 'b', 'l', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'U', 'n', 'i', 't', 's', 0,
    'B', 'e', 'g', 'i', 'n', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'B', 'e', 'g', 'i', 'n', 'B', 'a', 't', 'c', 'h', 'U', 'n', 'd', 'o', 0,
    'B', 'e', 'g', 'i', 'n', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'B', 'e', 'g', 'i', 'n', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 0,
    'C', 'a', 'l', 'c', 'u', 'l', 'a', 't', 'e', 'R', 'a', 'n', 'g', 'e', 0,
    'C', 'a', 'n', 'D', 'e', 'l', 'e', 't', 'e', 'R', 'a', 'n', 'g', 'e', 0,
    'C', 'l', 'e', 'a', 'r', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'o', 'o', 'k', 'C', 't', 'r', 'l', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'D', 'o', 'L', 'a', 'y', 'o', 'u', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 's', 0,
    'D', 'r', 'a', 'w', 'T', 'e', 'x', 't', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'E', 'n', 'd', 'L', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'E', 'n', 'd', 'R', 'i', 'g', 'h', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'T', 'a', 'b', 's', 0,
    'G', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'E', 'x', 't', 'W', 'i', 'l', 'd', 'c', 'a', 'r', 'd', 0,
    'G', 'e', 't', 'F', 'o', 'c', 'u', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'G', 'e', 't', 'F', 'o', 'c', 'u', 's', 'e', 'd', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'U', 'n', 'i', 'c', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'N', 'a', 't', 'u', 'r', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'd', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 0,
    'G', 'e', 't', 'T', 'o', 't', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'X', 'M', 'L', 'N', 'o', 'd', 'e', 'N', 'a', 'm', 'e', 0,
    'H', 'a', 's', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'T', 'e', 'x', 't', 0,
    'I', 'n', 's', 'e', 'r', 't', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'L', 'o', 'a', 'd', 'I', 'm', 'a', 'g', 'e', 'C', 'a', 'c', 'h', 'e', 0,
    'O', 'n', 'G', 'e', 't', 'R', 'o', 'w', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'O', 'n', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'I', 'd', 'l', 'e', 0,
    'P', 'r', 'e', 'p', 'a', 'r', 'e', 'C', 'o', 'n', 't', 'e', 'n', 't', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'B', 'a', 'c', 'k', 'K', 'e', 'y', 0,
    'P', 'u', 's', 'h', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'T', 'a', 'b', 's', 'E', 'q', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'I', 'n', 't', 'o', 'V', 'i', 'e', 'w', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'R', 'o', 'w', 'P', 'a', 'g', 'e', 's', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'i', 'l', 'e', 'C', 'o', 'u', 'n', 't', 'e', 'r', 0,
    'S', 'e', 't', 'F', 'o', 'c', 'u', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'S', 'e', 't', 'F', 'r', 'o', 'm', 'U', 'n', 'i', 'c', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 'R', 'e', 'c', 't', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 0,
    'S', 'e', 't', 'U', 'n', 'i', 'c', 'o', 'd', 'e', 'M', 'o', 'd', 'e', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'S', 'p', 'a', 'c', 'e', 0,
    'c', 'a', 'r', 'e', 't', 'L', 'i', 'n', 'e', 'S', 't', 'a', 'r', 't', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'f', 'l', 'o', 'a', 't', 'C', 'o', 'l', 'l', 'e', 'c', 't', 'o', 'r', 0,
    'f', 'o', 'r', 'c', 'e', 'L', 'i', 'n', 'e', 'S', 't', 'a', 'r', 't', 0,
    'i', 'm', 'a', 'g', 'e', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 's', 0,
    'i', 's', 'N', 'u', 'm', 'b', 'e', 'r', 'e', 'd', 'L', 'i', 's', 't', 0,
    'm', '_', 'b', 'l', 'u', 'r', 'D', 'i', 's', 't', 'a', 'n', 'c', 'e', 0,
    'm', '_', 'b', 'o', 'r', 'd', 'e', 'r', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'm', '_', 'b', 'o', 'x', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'm', '_', 'c', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'M', 'o', 'd', 'e', 0,
    'm', '_', 'c', 'o', 'r', 'n', 'e', 'r', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'm', '_', 'e', 'n', 'a', 'b', 'l', 'e', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'm', '_', 's', 'h', 'a', 'd', 'o', 'w', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'T', 'e', 'x', 't', 'F', 'o', 'n', 't', 0,
    'p', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'p', 'a', 'r', 't', 'i', 'a', 'l', 'E', 'x', 't', 'e', 'n', 't', 's', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'p', 'r', 'o', 'm', 'o', 't', 'i', 'o', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'r', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    's', 'p', 'e', 'c', 'i', 'f', 'i', 'e', 'd', 'L', 'e', 'v', 'e', 'l', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 'e', 'l', 'l', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'L', 'i', 'n', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'S', 'i', 'z', 'e', 0,
    'A', 'd', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 0,
    'B', 'e', 'g', 'i', 'n', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'u', 't', 't', 'o', 'n', 's', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'E', 'n', 'd', 'L', 'e', 'f', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'E', 'n', 'd', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'F', 'i', 'n', 'd', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'F', 'i', 'n', 'd', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'F', 'o', 'r', 'm', 'a', 't', 's', 0,
    'G', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'B', 'a', 's', 'i', 'c', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'L', 'o', 'n', 'g', 0,
    'G', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'B', 'l', 'o', 'c', 'k', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'C', 'a', 'c', 'h', 'e', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'L', 'e', 'v', 'e', 'l', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'd', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'G', 'e', 't', 'S', 'y', 'm', 'b', 'o', 'l', 'C', 'h', 'a', 'r', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'O', 'u', 't', 'l', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'I', 'm', 'p', 'o', 'r', 't', 'F', 'r', 'o', 'm', 'X', 'M', 'L', 0,
    'I', 'n', 's', 'e', 'r', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'L', 'a', 'y', 'o', 'u', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 0,
    'M', 'e', 'a', 's', 'u', 'r', 'e', 'B', 'u', 'l', 'l', 'e', 't', 0,
    'M', 'o', 'v', 'e', 'C', 'a', 'r', 'e', 't', 'B', 'a', 'c', 'k', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'L', 'i', 'n', 'e', 'E', 'n', 'd', 0,
    'O', 'n', 'B', 'u', 't', 't', 'o', 'n', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'C', 'a', 'p', 't', 'u', 'r', 'e', 'L', 'o', 's', 't', 0,
    'O', 'n', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 0,
    'O', 'n', 'E', 'n', 'd', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'O', 'n', 'E', 'n', 'd', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'G', 'e', 't', 'U', 'n', 'i', 't', 'S', 'i', 'z', 'e', 0,
    'O', 'n', 'L', 'i', 'n', 'k', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'O', 'n', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'I', 't', 'e', 'm', 0,
    'O', 'n', 'M', 'i', 'd', 'd', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'C', 'l', 'e', 'a', 'r', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'P', 'a', 's', 't', 'e', 0,
    'P', 'o', 'p', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'C', 'a', 'r', 'e', 't', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'S', 'e', 't', 'B', 'a', 's', 'i', 'c', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'C', 'a', 'c', 'h', 'e', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'S', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'S', 'e', 't', 'S', 'h', 'e', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'D', 'i', 's', 'p', 'l', 'a', 'y', 0,
    'U', 's', 'e', 'N', 'o', 'r', 'm', 'a', 'l', 'F', 'o', 'n', 't', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'R', 'e', 'c', 't', 0,
    'c', 'a', 'r', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'm', 'b', 'i', 'n', 'e', 'S', 't', 'y', 'l', 'e', 's', 0,
    'c', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'J', 'P', 'E', 'G', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'l', 'e', 'f', 't', 'S', 'u', 'b', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'm', '_', 'b', 'o', 'r', 'd', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'm', '_', 'b', 'o', 'r', 'd', 'e', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'm', '_', 't', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 0,
    'p', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'B', 'o', 'x', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'B', 'o', 'x', 'A', 't', 't', 'r', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 0,
    'A', 'd', 'd', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'A', 'd', 'd', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'A', 'd', 'd', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 's', 0,
    'A', 'd', 'd', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'A', 'l', 'l', 'o', 'c', 'a', 't', 'e', 'L', 'i', 'n', 'e', 0,
    'A', 'u', 't', 'o', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'B', 'a', 't', 'c', 'h', 'i', 'n', 'g', 'U', 'n', 'd', 'o', 0,
    'C', 'l', 'e', 'a', 'r', 'A', 'c', 't', 'i', 'o', 'n', 's', 0,
    'C', 'o', 'l', 'l', 'e', 'c', 't', 'S', 't', 'y', 'l', 'e', 0,
    'C', 'o', 'p', 'y', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'S', 't', 'y', 'l', 'e', 's', 0,
    'D', 'i', 's', 'c', 'a', 'r', 'd', 'E', 'd', 'i', 't', 's', 0,
    'D', 'o', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 0,
    'D', 'o', 'M', 'o', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'D', 'o', 'N', 'u', 'm', 'b', 'e', 'r', 'L', 'i', 's', 't', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'E', 'n', 'd', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'E', 'n', 'd', 'A', 'l', 'l', 'S', 't', 'y', 'l', 'e', 's', 0,
    'E', 'n', 'd', 'B', 'a', 't', 'c', 'h', 'U', 'n', 'd', 'o', 0,
    'E', 'n', 'd', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'E', 'n', 'd', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 0,
    'F', 'i', 'n', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'F', 'r', 'o', 'm', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'a', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'T', 'a', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'L', 'a', 'y', 'i', 'n', 'g', 'O', 'u', 't', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'R', 'a', 'n', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'U', 'R', 'L', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'G', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'H', 'a', 's', 'C', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    'H', 'a', 's', 'F', 'l', 'o', 'a', 't', 'M', 'o', 'd', 'e', 0,
    'H', 'a', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 's', 'S', 'i', 'n', 'g', 'l', 'e', 'L', 'i', 'n', 'e', 0,
    'L', 'a', 'y', 'o', 'u', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'M', 'o', 'v', 'e', 'F', 'r', 'o', 'm', 'L', 'i', 's', 't', 0,
    'O', 'n', 'L', 'e', 'f', 't', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'O', 'n', 'R', 'i', 'g', 'h', 't', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'C', 'o', 'p', 'y', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'R', 'e', 'd', 'o', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'U', 'n', 'd', 'o', 0,
    'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'T', 'o', 'X', 'Y', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'R', 'E', '_', 'M', 'U', 'L', 'T', 'I', 'L', 'I', 'N', 'E', 0,
    'S', 'e', 't', 'B', 'a', 's', 'e', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'C', 'e', 'l', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 0,
    'S', 'e', 't', 'C', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'S', 'e', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'F', 'l', 'o', 'a', 't', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'T', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'L', 'a', 'y', 'i', 'n', 'g', 'O', 'u', 't', 0,
    'S', 'e', 't', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'S', 'e', 't', 'N', 'e', 'x', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'U', 'R', 'L', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'S', 'h', 'o', 'w', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'u', 'b', 'm', 'i', 't', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'R', 'a', 'n', 'g', 'e', 's', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'S', 't', 'y', 'l', 'e', 's', 0,
    'W', 'r', 'i', 't', 'e', 'T', 'e', 'x', 't', 'B', 'o', 'x', 0,
    'X', 'Y', 'T', 'o', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    '_', '_', 'c', 'o', 'n', 't', 'a', 'i', 'n', 's', '_', '_', 0,
    'b', 'o', 't', 't', 'o', 'm', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'b', 'u', 'l', 'l', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'c', 'l', 'a', 's', 'h', 'i', 'n', 'g', 'A', 't', 't', 'r', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 'S', 't', 'y', 'l', 'e', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'S', 't', 'y', 'l', 'e', 0,
    'd', 'i', 's', 'p', 'l', 'a', 'y', 'S', 't', 'y', 'l', 'e', 0,
    'f', 'o', 'o', 't', 'e', 'r', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'h', 'e', 'a', 'd', 'e', 'r', 'F', 'o', 'o', 't', 'e', 'r', 0,
    'h', 'e', 'a', 'd', 'e', 'r', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'h', 'i', 't', 'T', 'e', 's', 't', 'F', 'l', 'a', 'g', 's', 0,
    'i', 'n', 'v', 'a', 'l', 'i', 'd', 'R', 'a', 'n', 'g', 'e', 0,
    'm', '_', 'p', 'a', 'r', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'n', 'e', 'w', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'o', 'l', 'd', 'F', 'l', 'o', 'a', 't', 'R', 'e', 'c', 't', 0,
    'o', 'l', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'r', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'r', 'i', 'c', 'h', 'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 0,
    't', 'e', 'x', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'r', 'a', 'p', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', '.', '_', 'r', 'i', 'c', 'h', 't', 'e', 'x', 't', 0,
    'A', 'd', 'd', 'B', 'o', 'o', 'k', 'C', 't', 'r', 'l', 0,
    'A', 'n', 'i', 'm', 'a', 't', 'e', 'S', 'h', 'o', 'w', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    'B', 'e', 'g', 'i', 'n', 'I', 't', 'a', 'l', 'i', 'c', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'P', 'a', 'g', 'e', 's', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'T', 'a', 'b', 'l', 'e', 0,
    'D', 'e', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'D', 'o', 'S', 'h', 'o', 'w', 'P', 'o', 'p', 'u', 'p', 0,
    'D', 'o', 'W', 'r', 'i', 't', 'e', 'T', 'e', 'x', 't', 0,
    'E', 'n', 'd', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'B', 'o', 'x', 'R', 'e', 'c', 't', 's', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'H', 'e', 'r', 'e', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'D', 'r', 'a', 'g', 'g', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'O', 'w', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'G', 'e', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'G', 'e', 't', 'R', 'o', 'w', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'T', 'e', 'n', 't', 'h', 's', 'M', 'M', 0,
    'H', 'a', 's', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'I', 'n', 's', 'e', 'r', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'I', 's', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 0,
    'I', 's', 'F', 'l', 'o', 'a', 't', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'M', 'u', 'l', 't', 'i', 'L', 'i', 'n', 'e', 0,
    'L', 'a', 'y', 'o', 'u', 't', 'F', 'l', 'o', 'a', 't', 0,
    'O', 'n', 'D', 'r', 'o', 'p', 'F', 'i', 'l', 'e', 's', 0,
    'O', 'n', 'K', 'i', 'l', 'l', 'F', 'o', 'c', 'u', 's', 0,
    'O', 'n', 'L', 'e', 'f', 't', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'M', 'o', 'v', 'e', 'M', 'o', 'u', 's', 'e', 0,
    'O', 'n', 'P', 'r', 'i', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'O', 'n', 'S', 'e', 'l', 'e', 'c', 't', 'A', 'l', 'l', 0,
    'O', 'n', 'U', 'p', 'd', 'a', 't', 'e', 'C', 'u', 't', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'i', 'l', 'e', 0,
    'P', 'r', 'i', 'n', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'P', 'r', 'o', 'm', 'o', 't', 'e', 'L', 'i', 's', 't', 0,
    'R', 'E', '_', 'R', 'E', 'A', 'D', 'O', 'N', 'L', 'Y', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 's', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'S', 'e', 't', 'D', 'a', 't', 'a', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'D', 'r', 'a', 'g', 'g', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'E', 'd', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'L', 'a', 's', 't', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'S', 'e', 't', 'O', 'w', 'n', 'R', 'a', 'n', 'g', 'e', 0,
    'S', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'S', 'e', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'S', 't', 'o', 'r', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'F', 'i', 'e', 'l', 'd', 0,
    '_', '_', 'g', 'e', 't', 'i', 't', 'e', 'm', '_', '_', 0,
    '_', '_', 'n', 'o', 'n', 'z', 'e', 'r', 'o', '_', '_', 0,
    'b', 'u', 'l', 'l', 'e', 't', 'N', 'a', 'm', 'e', 's', 0,
    'b', 'u', 'l', 'l', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 'T', 'y', 'p', 'e', 0,
    'c', 'o', 'm', 'p', 'a', 'r', 'e', 'W', 'i', 't', 'h', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 'R', 'e', 'c', 't', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'S', 't', 'y', 'l', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'F', 'o', 'n', 't', 0,
    'l', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'm', '_', 'c', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    'm', '_', 'c', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'm', '_', 'f', 'l', 'o', 'a', 't', 'M', 'o', 'd', 'e', 0,
    'm', '_', 'l', 'a', 'y', 'i', 'n', 'g', 'O', 'u', 't', 0,
    'n', 'e', 'w', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'n', 'o', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 's', 0,
    'o', 'l', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'o', 'u', 't', 'l', 'i', 'n', 'e', 'R', 'e', 'c', 't', 0,
    'p', 'a', 'd', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'p', 'a', 'r', 't', 'i', 'a', 'l', 'P', 'a', 'r', 'a', 0,
    'r', 'i', 'g', 'h', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'r', 'i', 'g', 'h', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    's', 'e', 'l', 'P', 'a', 'g', 'e', 'F', 'r', 'o', 'm', 0,
    's', 't', 'a', 'r', 't', 'O', 'f', 'L', 'i', 'n', 'e', 0,
    'u', 'n', 'i', 'c', 'o', 'd', 'e', 'M', 'o', 'd', 'e', 0,
    'A', 'd', 'd', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'A', 'd', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'T', 'e', 'x', 't', 0,
    'B', 'e', 'g', 'i', 'n', 'S', 't', 'y', 'l', 'e', 0,
    'C', 'l', 'e', 'a', 'r', 'L', 'i', 'n', 'e', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'T', 'a', 'b', 'l', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'H', 'T', 'M', 'L', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'P', 'a', 'g', 'e', 0,
    'D', 'e', 'f', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'R', 'o', 'w', 's', 0,
    'D', 'o', 'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'D', 'o', 'L', 'o', 'a', 'd', 'F', 'i', 'l', 'e', 0,
    'D', 'o', 'S', 'a', 'v', 'e', 'F', 'i', 'l', 'e', 0,
    'D', 'r', 'a', 'w', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'D', 'r', 'a', 'w', 'F', 'l', 'o', 'a', 't', 's', 0,
    'F', 'o', 'r', 'c', 'e', 'U', 'p', 'p', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'S', 'p', 'a', 'n', 0,
    'G', 'e', 't', 'D', 'e', 's', 'c', 'e', 'n', 't', 0,
    'G', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    'G', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 'X', 0,
    'G', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 'Y', 0,
    'G', 'e', 't', 'O', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'G', 'e', 't', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'D', 'r', 'a', 'g', 0,
    'G', 'e', 't', 'R', 'o', 'w', 'S', 'p', 'a', 'n', 0,
    'G', 'e', 't', 'T', 'e', 'm', 'p', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'V', 'a', 'l', 'u', 'e', 'M', 'M', 0,
    'I', 'n', 'i', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'I', 'n', 's', 'e', 'r', 't', 'T', 'e', 'x', 't', 0,
    'I', 's', 'E', 'd', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'F', 'l', 'o', 'a', 't', 'i', 'n', 'g', 0,
    'I', 's', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'I', 's', 'N', 'u', 'm', 'b', 'e', 'r', 'e', 'd', 0,
    'I', 's', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 0,
    'M', 'a', 'k', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'L', 'i', 's', 't', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'I', 't', 'e', 'm', 0,
    'O', 'n', 'L', 'e', 'f', 't', 'D', 'o', 'w', 'n', 0,
    'O', 'n', 'S', 'e', 't', 'F', 'o', 'c', 'u', 's', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'F', 'l', 'a', 'g', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'R', 'o', 'w', 's', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'N', 'o', 'n', 'e', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'W', 'o', 'r', 'd', 0,
    'S', 'e', 't', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'S', 'p', 'a', 'n', 0,
    'S', 'e', 't', 'D', 'e', 's', 'c', 'e', 'n', 't', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 'X', 0,
    'S', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 'Y', 0,
    'S', 'e', 't', 'O', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'S', 'e', 't', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'S', 'e', 't', 'P', 'r', 'e', 'D', 'r', 'a', 'g', 0,
    'S', 'e', 't', 'R', 'o', 'w', 'S', 'p', 'a', 'n', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 'E', 'x', 0,
    'S', 'e', 't', 'T', 'e', 'm', 'p', 'D', 'i', 'r', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'u', 'e', 'M', 'M', 0,
    'S', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'E', 'q', 0,
    'T', 'o', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 0,
    'W', 'r', 'i', 't', 'e', 'B', 'l', 'o', 'c', 'k', 0,
    'W', 'r', 'i', 't', 'e', 'F', 'i', 'e', 'l', 'd', 0,
    'W', 'r', 'i', 't', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'W', 'r', 'i', 't', 'e', 'T', 'a', 'b', 'l', 'e', 0,
    'a', 'b', 's', 'e', 'n', 't', 'A', 't', 't', 'r', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'b', 'i', 't', 'm', 'a', 'p', 'T', 'y', 'p', 'e', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'b', 'u', 'l', 'l', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'c', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'O', 'b', 'j', 0,
    'f', 'o', 'o', 't', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'h', 'e', 'a', 'd', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'i', 'm', 'a', 'g', 'e', 'B', 'l', 'o', 'c', 'k', 0,
    'l', 'e', 'f', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'l', 'e', 'f', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'l', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'm', '_', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'm', 'a', 'r', 'g', 'i', 'n', 'R', 'e', 'c', 't', 0,
    'n', 'o', 'C', 'o', 'l', 'S', 't', 'e', 'p', 's', 0,
    'n', 'o', 'R', 'o', 'w', 'S', 't', 'e', 'p', 's', 0,
    'p', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 's', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'A', 't', 't', 'r', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'R', 'e', 'c', 't', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'p', 't', 'P', 'h', 'y', 's', 'i', 'c', 'a', 'l', 0,
    'r', 'e', 's', 'e', 't', 'C', 'a', 'c', 'h', 'e', 0,
    's', 'c', 'r', 'e', 'e', 'n', 'R', 'e', 'c', 't', 0,
    's', 't', 'y', 'l', 'e', 'S', 'h', 'e', 'e', 't', 0,
    'w', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 0,
    'w', 'i', 'd', 't', 'h', 'T', 'i', 't', 'l', 'e', 0,
    'A', 'd', 'd', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'B', 'e', 'g', 'i', 'n', 'B', 'o', 'l', 'd', 0,
    'B', 'e', 'g', 'i', 'n', 'F', 'o', 'n', 't', 0,
    'C', 'a', 'n', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'E', 'n', 'd', 'I', 't', 'a', 'l', 'i', 'c', 0,
    'E', 'x', 'p', 'o', 'r', 't', 'X', 'M', 'L', 0,
    'F', 'i', 'n', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'G', 'e', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'G', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'L', 'a', 'b', 'e', 'l', 's', 0,
    'G', 'e', 't', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'd', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'G', 'e', 't', 'R', 'a', 'n', 'g', 'e', 's', 0,
    'G', 'e', 't', 'S', 'h', 'a', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'S', 'p', 'r', 'e', 'a', 'd', 0,
    'G', 'e', 't', 'S', 'y', 'm', 'b', 'o', 'l', 0,
    'H', 'a', 's', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'H', 'a', 's', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'H', 'i', 'd', 'e', 'P', 'o', 'p', 'u', 'p', 0,
    'H', 'i', 't', 'T', 'e', 's', 't', 'X', 'Y', 0,
    'I', 'm', 'p', 'o', 'r', 't', 'X', 'M', 'L', 0,
    'I', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'I', 's', 'O', 'u', 't', 's', 'i', 'd', 'e', 0,
    'I', 's', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'I', 's', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'L', 'i', 'n', 'e', 'B', 'r', 'e', 'a', 'k', 0,
    'M', 'a', 'k', 'e', 'V', 'a', 'l', 'i', 'd', 0,
    'M', 'a', 'r', 'k', 'D', 'i', 'r', 't', 'y', 0,
    'M', 'o', 'v', 'e', 'C', 'a', 'r', 'e', 't', 0,
    'M', 'o', 'v', 'e', 'R', 'i', 'g', 'h', 't', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 0,
    'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 0,
    'P', 'r', 'i', 'n', 't', 'F', 'i', 'l', 'e', 0,
    'R', 'e', 'a', 'd', 'B', 'l', 'o', 'c', 'k', 0,
    'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'S', 'e', 'n', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'S', 'e', 't', 'R', 'a', 'n', 'g', 'e', 's', 0,
    'S', 'e', 't', 'S', 'p', 'r', 'e', 'a', 'd', 0,
    'S', 'e', 't', 'S', 'y', 'm', 'b', 'o', 'l', 0,
    'T', 'r', 'y', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'W', 'o', 'r', 'd', 'R', 'i', 'g', 'h', 't', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'c', 'h', 'a', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'c', 'h', 'i', 'l', 'd', 'A', 't', 't', 'r', 0,
    'c', 'l', 'a', 's', 's', 'N', 'a', 'm', 'e', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'a', 'x', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'i', 'n', 0,
    'c', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'r', 0,
    'd', 'e', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'e', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'f', 'i', 'e', 'l', 'd', 'T', 'y', 'p', 'e', 0,
    'f', 'o', 'n', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'f', 'r', 'o', 'm', 'S', 't', 'a', 'r', 't', 0,
    'i', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'i', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'i', 'n', 'F', 'r', 'o', 'n', 't', 'O', 'f', 0,
    'l', 'i', 'n', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'l', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 0,
    'l', 'o', 'a', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'l', 'o', 'c', 'a', 't', 'i', 'o', 'n', 's', 0,
    'm', '_', 'm', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'm', '_', 'm', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'm', '_', 'm', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'm', '_', 'o', 'b', 'j', 'e', 'c', 't', 's', 0,
    'm', '_', 'o', 'f', 'f', 's', 'e', 't', 'X', 0,
    'm', '_', 'o', 'f', 'f', 's', 'e', 't', 'Y', 0,
    'm', '_', 'o', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'm', '_', 'o', 'u', 't', 'l', 'i', 'n', 'e', 0,
    'm', '_', 'p', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'o', 'u', 't', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'p', 'a', 'r', 'a', 'S', 't', 'y', 'l', 'e', 0,
    'p', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 0,
    'p', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 's', 0,
    'p', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'p', 'r', 'o', 'm', 'o', 't', 'e', 'B', 'y', 0,
    'p', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 0,
    's', 'e', 'l', 'P', 'a', 'g', 'e', 'T', 'o', 0,
    's', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    's', 'e', 'n', 'd', 'T', 'o', 'A', 'l', 'l', 0,
    's', 'i', 'z', 'e', 'F', 'l', 'a', 'g', 's', 0,
    's', 't', 'a', 'r', 't', 'F', 'r', 'o', 'm', 0,
    's', 't', 'y', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    't', 'a', 'b', 'l', 'e', 'A', 't', 't', 'r', 0,
    't', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    't', 'o', 'p', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'v', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'A', 'd', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    'A', 'd', 'd', 'I', 'm', 'a', 'g', 'e', 0,
    'A', 'd', 'd', 'I', 't', 'e', 'm', 's', 0,
    'A', 'd', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'B', 'e', 'g', 'i', 'n', 'U', 'R', 'L', 0,
    'C', 'a', 'n', 'M', 'e', 'r', 'g', 'e', 0,
    'C', 'a', 'n', 'P', 'a', 's', 't', 'e', 0,
    'C', 'a', 'n', 'S', 'p', 'l', 'i', 't', 0,
    'C', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    'D', 'o', 'E', 'n', 'a', 'b', 'l', 'e', 0,
    'D', 'o', 'F', 'r', 'e', 'e', 'z', 'e', 0,
    'E', 'n', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'F', 'i', 'n', 'd', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'C', 'e', 'l', 'l', 's', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 's', 0,
    'G', 'e', 't', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'S', 't', 'a', 'r', 't', 0,
    'G', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'G', 'e', 't', 'U', 'n', 'i', 't', 's', 0,
    'G', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'H', 'a', 's', 'W', 'i', 'd', 't', 'h', 0,
    'I', 's', 'A', 't', 'o', 'm', 'i', 'c', 0,
    'I', 's', 'W', 'i', 't', 'h', 'i', 'n', 0,
    'M', 'o', 'v', 'e', 'D', 'o', 'w', 'n', 0,
    'M', 'o', 'v', 'e', 'H', 'o', 'm', 'e', 0,
    'M', 'o', 'v', 'e', 'L', 'e', 'f', 't', 0,
    'O', 'n', 'L', 'e', 'f', 't', 'U', 'p', 0,
    'O', 'n', 'S', 'c', 'r', 'o', 'l', 'l', 0,
    'P', 'a', 'g', 'e', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'R', 'a', 'n', 'g', 'e', 0,
    'S', 'e', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'S', 't', 'a', 'r', 't', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'S', 'e', 't', 'U', 'n', 'i', 't', 's', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'i', 'd', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'S', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'h', 'o', 'w', 'H', 'e', 'l', 'p', 0,
    'T', 'r', 'y', 'A', 'f', 't', 'e', 'r', 0,
    'V', 'a', 'l', 'i', 'd', 'a', 't', 'e', 0,
    'W', 'X', 'U', 'N', 'U', 'S', 'E', 'D', 0,
    'W', 'o', 'r', 'd', 'L', 'e', 'f', 't', 0,
    'W', 'r', 'i', 't', 'e', 'H', 'e', 'x', 0,
    '_', '_', 'b', 'o', 'o', 'l', '_', '_', 0,
    '_', '_', 'i', 't', 'e', 'r', '_', '_', 0,
    '_', '_', 'n', 'e', 'x', 't', '_', '_', 0,
    'c', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'c', 'a', 'r', 'e', 't', 'P', 'o', 's', 0,
    'c', 'e', 'l', 'l', 'A', 't', 't', 'r', 0,
    'c', 'o', 'l', 'l', 'a', 'p', 's', 'e', 0,
    'd', 'i', 'm', 'S', 'c', 'a', 'l', 'e', 0,
    'd', 'r', 'a', 'g', 'g', 'i', 'n', 'g', 0,
    'e', 'd', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'e', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'f', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'f', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'f', 'o', 'n', 't', 'S', 'p', 'e', 'c', 0,
    'l', 'a', 's', 't', 'P', 'a', 'g', 'e', 0,
    'l', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'm', '_', 'b', 'o', 'r', 'd', 'e', 'r', 0,
    'm', '_', 'b', 'o', 't', 't', 'o', 'm', 0,
    'm', '_', 'b', 'u', 'f', 'f', 'e', 'r', 0,
    'm', '_', 'h', 'e', 'i', 'g', 'h', 't', 0,
    'm', '_', 'l', 'a', 'b', 'e', 'l', 's', 0,
    'm', '_', 'r', 'a', 'n', 'g', 'e', 's', 0,
    'm', '_', 's', 'h', 'a', 'd', 'o', 'w', 0,
    'm', '_', 's', 'p', 'r', 'e', 'a', 'd', 0,
    'm', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'n', 'o', 'd', 'e', 'N', 'a', 'm', 'e', 0,
    'o', 'b', 'j', 'T', 'o', 'S', 'e', 't', 0,
    'p', 'a', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    's', 't', 'a', 'r', 't', 'C', 'm', 'd', 0,
    's', 't', 'a', 'r', 't', 'C', 'o', 'l', 0,
    's', 't', 'a', 'r', 't', 'R', 'o', 'w', 0,
    's', 't', 'y', 'l', 'e', 'D', 'e', 'f', 0,
    't', 'e', 'x', 't', 'A', 't', 't', 'r', 0,
    't', 'e', 'x', 't', 'R', 'e', 'c', 't', 0,
    'u', 'n', 't', 'i', 'l', 'O', 'b', 'j', 0,
    'w', 'e', 'a', 'k', 'T', 'e', 's', 't', 0,
    'A', 'd', 'd', 'F', 'l', 'a', 'g', 0,
    'A', 'd', 'd', 'I', 't', 'e', 'm', 0,
    'A', 'd', 'd', 'R', 'o', 'w', 's', 0,
    'C', 'a', 'n', 'C', 'o', 'p', 'y', 0,
    'C', 'a', 'n', 'L', 'o', 'a', 'd', 0,
    'C', 'a', 'n', 'R', 'e', 'd', 'o', 0,
    'C', 'a', 'n', 'S', 'a', 'v', 'e', 0,
    'C', 'a', 'n', 'U', 'n', 'd', 'o', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 0,
    'D', 'i', 's', 'm', 'i', 's', 's', 0,
    'D', 'o', 'S', 'p', 'l', 'i', 't', 0,
    'E', 'n', 'd', 'B', 'o', 'l', 'd', 0,
    'E', 'n', 'd', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'C', 'e', 'l', 'l', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'H', 'i', 'n', 't', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 0,
    'G', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'T', 'y', 'p', 'e', 0,
    'H', 'a', 's', 'F', 'l', 'a', 'g', 0,
    'H', 'a', 's', 'P', 'a', 'g', 'e', 0,
    'H', 'i', 't', 'T', 'e', 's', 't', 0,
    'I', 's', 'D', 'i', 'r', 't', 'y', 0,
    'I', 's', 'E', 'm', 'p', 't', 'y', 0,
    'I', 's', 'S', 'h', 'o', 'w', 'n', 0,
    'I', 's', 'V', 'a', 'l', 'i', 'd', 0,
    'L', 'i', 'm', 'i', 't', 'T', 'o', 0,
    'M', 'o', 'v', 'e', 'E', 'n', 'd', 0,
    'N', 'e', 'w', 'l', 'i', 'n', 'e', 0,
    'O', 'n', 'C', 'l', 'e', 'a', 'r', 0,
    'O', 'n', 'P', 'a', 'i', 'n', 't', 0,
    'O', 'n', 'P', 'a', 's', 't', 'e', 0,
    'O', 'n', 'T', 'i', 'm', 'e', 'r', 0,
    'R', 'e', 'a', 'd', 'H', 'e', 'x', 0,
    'R', 'e', 'p', 'l', 'a', 'c', 'e', 0,
    'S', 'e', 't', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'H', 'i', 'n', 't', 0,
    'S', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'T', 'y', 'p', 'e', 0,
    'S', 'p', 'l', 'i', 't', 'A', 't', 0,
    '_', '_', 'a', 'd', 'd', '_', '_', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    '_', '_', 's', 'u', 'b', '_', '_', 0,
    'a', 'd', 'd', 'r', 'e', 's', 's', 0,
    'a', 't', 'S', 't', 'a', 'r', 't', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'b', 'o', 'x', 'R', 'e', 'c', 't', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'c', 'h', 'o', 'i', 'c', 'e', 's', 0,
    'c', 'm', 'd', 'N', 'a', 'm', 'e', 0,
    'c', 'o', 'm', 'b', 'i', 'n', 'e', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 0,
    'c', 'o', 'u', 'n', 't', 'e', 'r', 0,
    'd', 'e', 'f', 'N', 'a', 'm', 'e', 0,
    'd', 'e', 's', 'c', 'e', 'n', 't', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'f', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'h', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'i', 's', 'D', 'o', 'C', 'm', 'd', 0,
    'k', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'm', '_', 'f', 'l', 'a', 'g', 's', 0,
    'm', '_', 'r', 'i', 'g', 'h', 't', 0,
    'm', '_', 's', 'c', 'a', 'l', 'e', 0,
    'm', '_', 'v', 'a', 'l', 'u', 'e', 0,
    'm', '_', 'w', 'i', 'd', 't', 'h', 0,
    'm', 'a', 'x', 'P', 'a', 'g', 'e', 0,
    'm', 'i', 'n', 'P', 'a', 'g', 'e', 0,
    'n', 'e', 'w', 'C', 'e', 'l', 'l', 0,
    'n', 'o', 'L', 'i', 'n', 'e', 's', 0,
    'n', 'o', 'P', 'a', 'g', 'e', 's', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    'q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'r', 'e', 'c', 'u', 'r', 's', 'e', 0,
    'r', 'e', 'f', 'r', 'e', 's', 'h', 0,
    't', 'e', 'm', 'p', 'D', 'i', 'r', 0,
    't', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'u', 'n', 'i', 't', 'M', 'a', 'x', 0,
    'u', 'n', 'i', 't', 'M', 'i', 'n', 0,
    'v', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'v', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'C', 'a', 'n', 'C', 'u', 't', 0,
    'C', 'r', 'e', 'a', 't', 'e', 0,
    'D', 'e', 'l', 'e', 't', 'e', 0,
    'D', 'o', 'T', 'h', 'a', 'w', 0,
    'E', 'n', 'd', 'U', 'R', 'L', 0,
    'G', 'e', 't', 'E', 'n', 'd', 0,
    'G', 'e', 't', 'T', 'o', 'p', 0,
    'M', 'o', 'd', 'i', 'f', 'y', 0,
    'M', 'o', 'v', 'e', 'U', 'p', 0,
    'O', 'n', 'C', 'h', 'a', 'r', 0,
    'O', 'n', 'C', 'o', 'p', 'y', 0,
    'O', 'n', 'I', 'd', 'l', 'e', 0,
    'O', 'n', 'R', 'e', 'd', 'o', 0,
    'O', 'n', 'S', 'i', 'z', 'e', 0,
    'O', 'n', 'U', 'n', 'd', 'o', 0,
    'P', 'a', 'g', 'e', 'U', 'p', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 0,
    'S', 'e', 't', 'E', 'n', 'd', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    'a', 'c', 't', 'i', 'o', 'n', 0,
    'a', 'n', 'c', 'h', 'o', 'r', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 0,
    'b', 'e', 'f', 'o', 'r', 'e', 0,
    'b', 'i', 't', 'm', 'a', 'p', 0,
    'c', 'l', 'i', 'e', 'n', 't', 0,
    'c', 'o', 'l', 'o', 'u', 'r', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'c', 'u', 'r', 's', 'o', 'r', 0,
    'd', 'i', 'a', 'l', 'o', 'g', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 0,
    'f', 'l', 'a', 'g', 's', 'A', 0,
    'f', 'l', 'a', 'g', 's', 'B', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'h', 'i', 't', 'O', 'b', 'j', 0,
    'i', 'n', 'd', 'e', 'n', 't', 0,
    'l', 'e', 'n', 'g', 't', 'h', 0,
    'l', 'i', 'n', 'e', 'N', 'o', 0,
    'm', '_', 'l', 'e', 'f', 't', 0,
    'm', '_', 's', 'i', 'z', 'e', 0,
    'm', 'a', 'r', 'g', 'i', 'n', 0,
    'm', 'o', 'd', 'i', 'f', 'y', 0,
    'n', 'e', 'w', 'O', 'b', 'j', 0,
    'n', 'e', 'w', 'P', 'o', 's', 0,
    'n', 'o', 'C', 'o', 'l', 's', 0,
    'n', 'o', 'R', 'o', 'w', 's', 0,
    'n', 'u', 'm', 'b', 'e', 'r', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'o', 'f', 'f', 's', 'e', 't', 0,
    'o', 'l', 'd', 'O', 'b', 'j', 0,
    'o', 'p', 't', 'i', 'o', 'n', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    'p', 'i', 'x', 'e', 'l', 's', 0,
    'r', 'o', 'w', 'M', 'a', 'x', 0,
    'r', 'o', 'w', 'M', 'i', 'n', 0,
    's', 'o', 'u', 'r', 'c', 'e', 0,
    's', 't', 'r', 'e', 'a', 'm', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    'u', 'p', 'd', 'a', 't', 'e', 0,
    'v', 'a', 'l', 'u', 'e', 'A', 0,
    'v', 'a', 'l', 'u', 'e', 'B', 0,
    'A', 'p', 'p', 'l', 'y', 0,
    'C', 'l', 'o', 'n', 'e', 0,
    'O', 'n', 'C', 'u', 't', 0,
    'R', 'e', 's', 'e', 't', 0,
    'W', 'r', 'i', 't', 'e', 0,
    'a', 'f', 't', 'e', 'r', 0,
    'a', 't', 'T', 'o', 'p', 0,
    'a', 't', 't', 'r', '1', 0,
    'a', 't', 't', 'r', '2', 0,
    'b', 'l', 'o', 'c', 'k', 0,
    'c', 'h', 'i', 'l', 'd', 0,
    'c', 'o', 'l', 'B', 'g', 0,
    'c', 'o', 'l', 'F', 'g', 0,
    'c', 'o', 'u', 'n', 't', 0,
    'd', 'e', 's', 'c', 'r', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'f', 'i', 'e', 'l', 'd', 0,
    'f', 'r', 'o', 'm', '_', 0,
    'i', 'm', 'a', 'g', 'e', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'l', 'a', 'b', 'e', 'l', 0,
    'l', 'e', 'v', 'e', 'l', 0,
    'm', '_', 'p', 'p', 'i', 0,
    'm', '_', 't', 'o', 'p', 0,
    'p', 'a', 'g', 'e', 's', 0,
    'p', 'o', 'p', 'u', 'p', 0,
    'p', 'r', 'o', 'p', 's', 0,
    'r', 'a', 'n', 'g', 'e', 0,
    's', 'h', 'e', 'e', 't', 0,
    's', 'i', 'z', 'e', 'r', 0,
    's', 't', 'a', 'r', 't', 0,
    's', 't', 'a', 't', 'e', 0,
    's', 't', 'y', 'l', 'e', 0,
    't', 'a', 'b', 's', '1', 0,
    't', 'a', 'b', 's', '2', 0,
    't', 'i', 't', 'l', 'e', 0,
    'u', 'n', 'i', 't', 's', 0,
    'w', 'i', 'n', 'i', 'd', 0,
    'D', 'r', 'a', 'w', 0,
    'F', 'i', 'n', 'd', 0,
    'I', 's', 'O', 'k', 0,
    'M', 'o', 'v', 'e', 0,
    'S', 'w', 'a', 'p', 0,
    'a', 't', 't', 'r', 0,
    'b', 'l', 'u', 'r', 0,
    'c', 'e', 'l', 'l', 0,
    'c', 'o', 'l', 's', 0,
    'c', 't', 'r', 'l', 0,
    'd', 'a', 't', 'a', 0,
    'd', 'i', 'm', 's', 0,
    'f', 'i', 'l', 'e', 0,
    'f', 'l', 'a', 'g', 0,
    'f', 'o', 'n', 't', 0,
    'h', 'i', 'n', 't', 0,
    'i', 'n', 'c', 'H', 0,
    'i', 'n', 'c', 'W', 0,
    'i', 'n', 'f', 'o', 0,
    'i', 't', 'e', 'm', 0,
    'l', 'i', 'n', 'k', 0,
    'l', 'i', 's', 't', 0,
    'm', 'a', 'x', 'H', 0,
    'm', 'a', 'x', 'W', 0,
    'm', 'e', 'n', 'u', 0,
    'm', 'i', 'n', 'H', 0,
    'm', 'i', 'n', 'W', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'o', 'd', 'e', 0,
    'p', 'a', 'g', 'e', 0,
    'p', 'r', 'o', 'p', 0,
    'r', 'e', 'c', 't', 0,
    'r', 'o', 'w', 's', 0,
    's', 'a', 'v', 'e', 0,
    's', 'h', 'o', 'w', 0,
    's', 'p', 'a', 'n', 0,
    't', 'i', 'm', 'e', 0,
    't', 'y', 'p', 'e', 0,
    'u', 'n', 'i', 't', 0,
    'A', 'd', 'd', 0,
    'G', 'e', 't', 0,
    'b', 'o', 'x', 0,
    'b', 'u', 'f', 0,
    'c', 'm', 'd', 0,
    'c', 'o', 'l', 0,
    'd', 'e', 'f', 0,
    'd', 'i', 'm', 0,
    'd', 'i', 'r', 0,
    'h', 'i', 't', 0,
    'i', 'd', 'x', 0,
    'l', 'e', 'n', 0,
    'm', 's', 'g', 0,
    'o', 'b', 'j', 0,
    'p', 'o', 's', 0,
    'r', 'o', 'w', 0,
    's', 'e', 'l', 0,
    't', 'a', 'g', 0,
    't', 'o', '_', 0,
    'u', 'r', 'l', 0,
    'w', 'i', 'n', 0,
    'D', 'o', 0,
    'c', 'h', 0,
    'd', 'c', 0,
    'p', 'd', 0,
    'p', 't', 0,
    's', 'p', 0,
    's', 'z', 0,
    'b', 0,
};

void sipVH__richtext_165(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxSizer*sizer)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", sizer, sipType_wxSizer, SIP_NULLPTR);
}

 ::wxBookCtrlBase* sipVH__richtext_164(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBookCtrlBase* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxBookCtrlBase, &sipRes);

    return sipRes;
}

bool sipVH__richtext_163(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int page, ::wxRichTextFormattingDialog*dialog)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iD", page, dialog, sipType_wxRichTextFormattingDialog, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH__richtext_162(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int i)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", i);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

bool sipVH__richtext_161(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pages, ::wxRichTextFormattingDialog*dialog)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lD", pages, dialog, sipType_wxRichTextFormattingDialog, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxPanel* sipVH__richtext_160(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int page, ::wxString& title, ::wxRichTextFormattingDialog*dialog)
{
     ::wxPanel* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iDD", page, &title, sipType_wxString, SIP_NULLPTR, dialog, sipType_wxRichTextFormattingDialog, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxPanel, &sipRes);

    return sipRes;
}

bool sipVH__richtext_159(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextFormattingDialog*dialog)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", dialog, sipType_wxRichTextFormattingDialog, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxRichTextAttr sipVH__richtext_158(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextStyleSheet*sheet)
{
     ::wxRichTextAttr sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxRichTextStyleSheet *>(sheet), sipType_wxRichTextStyleSheet, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRichTextAttr, &sipRes);

    return sipRes;
}

bool sipVH__richtext_157(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxKeyEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxKeyEvent(event), sipType_wxKeyEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_156(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRect& rect,int flags)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Ni", new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_155(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxComboPopup*popup)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", popup, sipType_wxComboPopup, SIP_NULLPTR);
}

void sipVH__richtext_154(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRect& rect,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Ni", new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, flags);
}

void sipVH__richtext_153(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRect& rect,size_t n)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DD=", &dc, sipType_wxDC, SIP_NULLPTR, &rect, sipType_wxRect, SIP_NULLPTR, n);
}

void sipVH__richtext_152(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,const  ::wxRect& rect,size_t n)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DN=", &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, n);
}

void sipVH__richtext_151(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t row)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "=", row);
}

 ::wxOrientation sipVH__richtext_150(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxOrientation sipRes = ::wxHORIZONTAL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxOrientation, &sipRes);

    return sipRes;
}

void sipVH__richtext_149(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t unitMin,size_t unitMax)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "==", unitMin, unitMax);
}

 ::wxCoord sipVH__richtext_148(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t unit)
{
     ::wxCoord sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", unit);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__richtext_147(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n,const  ::wxHtmlLinkInfo& link)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "=N", n, new  ::wxHtmlLinkInfo(link), sipType_wxHtmlLinkInfo, SIP_NULLPTR);
}

 ::wxColour sipVH__richtext_146(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxColour& colFg)
{
     ::wxColour sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxColour(colFg), sipType_wxColour, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxColour, &sipRes);

    return sipRes;
}

 ::wxString sipVH__richtext_145(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t n)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", n);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

void sipVH__richtext_144(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*minPage,int*maxPage,int*selPageFrom,int*selPageTo)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(iiii)", minPage, maxPage, selPageFrom, selPageTo);
}

bool sipVH__richtext_143(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int page)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", page);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxEvent* sipVH__richtext_142(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEvent* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxEvent, &sipRes);

    return sipRes;
}

 ::wxEventCategory sipVH__richtext_141(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEventCategory sipRes = ::wxEVT_CATEGORY_UI;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxEventCategory, &sipRes);

    return sipRes;
}

 ::wxBorder sipVH__richtext_140(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBorder sipRes = ::wxBORDER_DEFAULT;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxBorder, &sipRes);

    return sipRes;
}

void sipVH__richtext_139(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowVariant variant)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "F", variant, sipType_wxWindowVariant);
}

void sipVH__richtext_138(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int minW,int minH,int maxW,int maxH,int incW,int incH)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiiii", minW, minH, maxW, maxH, incW, incH);
}

void sipVH__richtext_137(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int width,int height)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ii", width, height);
}

void sipVH__richtext_136(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height,int sizeFlags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiii", x, y, width, height, sizeFlags);
}

void sipVH__richtext_135(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*x,int*y)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(ii)", x, y);
}

 ::wxWindow* sipVH__richtext_134(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxWindow, &sipRes);

    return sipRes;
}

void sipVH__richtext_133(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxValidator& validator)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxValidator *>(&validator), sipType_wxValidator, SIP_NULLPTR);
}

 ::wxValidator* sipVH__richtext_132(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxValidator* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxValidator, &sipRes);

    return sipRes;
}

bool sipVH__richtext_131(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int direction,int size,int availableOtherDir)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iii", direction, size, availableOtherDir);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_130(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_129(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*child)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", child, sipType_wxWindowBase, SIP_NULLPTR);
}

bool sipVH__richtext_128(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextParagraph*paragraph, ::wxDC& dc,const  ::wxRichTextAttr& attr, ::wxSize& sz)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDND", paragraph, sipType_wxRichTextParagraph, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRichTextAttr(attr), sipType_wxRichTextAttr, SIP_NULLPTR, &sz, sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_127(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxArrayString& bulletNames)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &bulletNames, sipType_wxArrayString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_126(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextParagraph*paragraph, ::wxDC& dc,const  ::wxRichTextAttr& attr,const  ::wxRect& rect,const  ::wxString& text)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNNN", paragraph, sipType_wxRichTextParagraph, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRichTextAttr(attr), sipType_wxRichTextAttr, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_125(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextParagraph*paragraph, ::wxDC& dc,const  ::wxRichTextAttr& attr,const  ::wxRect& rect)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNN", paragraph, sipType_wxRichTextParagraph, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRichTextAttr(attr), sipType_wxRichTextAttr, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_124(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxDataObjectSimple* self = static_cast<wxDataObjectSimple*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxDataObjectSimple::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

 ::wxDataFormat sipVH__richtext_123(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataObject::Direction dir)
{
     ::wxDataFormat sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", dir, sipType_wxDataObject_Direction);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxDataFormat, &sipRes);

    return sipRes;
}

size_t sipVH__richtext_122(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataObject::Direction dir)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", dir, sipType_wxDataObject_Direction);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

size_t sipVH__richtext_121(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxDataFormat(format), sipType_wxDataFormat, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

bool sipVH__richtext_120(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,void*buf)
{
    bool sipRes = 0;
        // Call self.GetDataSize() to find out how big the buffer should be
        PyObject* self = NULL;
        PyObject* fmtObj = NULL;
        PyObject* sizeObj = NULL;
        PyObject* buffer = NULL;
        PyObject* resObj = NULL;
        Py_ssize_t size = 0;
        
        self = wxPyMethod_Self(sipMethod); // this shouldn't fail, and the reference is borrowed
        
        fmtObj = wxPyConstructObject((void*)&format, "wxDataFormat", false);
        if (!fmtObj) goto error;
        sizeObj = PyObject_CallMethod(self, "GetDataSize", "(O)", fmtObj, NULL);
        if (!sizeObj) goto error;
        size = wxPyInt_AsSsize_t(sizeObj);
        
        // Make a buffer that big using the pointer passed to us, and then
        // call the Python method.
        buffer = wxPyMakeBuffer(buf, size);
        resObj = sipCallMethod(0, sipMethod, "SS", fmtObj, buffer);
        
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        
        error:
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);
        Py_XDECREF(fmtObj);
        Py_XDECREF(sizeObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH__richtext_119(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataFormat*formats, ::wxDataObject::Direction dir)
{
        // VirtualCatcherCode for wx.DataObject.GetAllFormats
        PyObject *resObj = sipCallMethod(0,sipMethod,"F",dir,sipType_wxDataObject_Direction);
        if (resObj) {
            if (!PySequence_Check(resObj)) {
                PyErr_SetString(PyExc_TypeError, "Should return a list of wx.DataFormat objects.");
                // or this?  sipBadCatcherResult(sipMethod);
            }
            else {
                Py_ssize_t len = PySequence_Length(resObj);
                Py_ssize_t idx;
                for (idx=0; idx<len; idx+=1) {
                    PyObject* item = PySequence_GetItem(resObj, idx);
                    if (! sipCanConvertToType(item, sipType_wxDataFormat, SIP_NOT_NONE)) {
                        PyErr_SetString(PyExc_TypeError, "List of wx.DataFormat objects expected.");
                        // or this?  sipBadCatcherResult(sipMethod);
                        Py_DECREF(item);
                        break;
                    }
                    wxDataFormat* fmt;
                    int err = 0;
                    fmt = (wxDataFormat*)sipConvertToType(
                                            item, sipType_wxDataFormat, NULL,
                                            SIP_NOT_NONE|SIP_NO_CONVERTORS, NULL, &err);
                    formats[idx] = *fmt;
                    Py_DECREF(item);
                }
            }
        }
        if (PyErr_Occurred())
            PyErr_Print();
        Py_XDECREF(resObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

bool sipVH__richtext_118(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, void*buf)
{
    bool sipRes = 0;
        // Call self.GetDataSize() to find out how big the buffer should be
        PyObject* self = NULL;
        PyObject* sizeObj = NULL;
        PyObject* buffer = NULL;
        PyObject* resObj = NULL;
        Py_ssize_t size = 0;
        
        self = wxPyMethod_Self(sipMethod);
        
        sizeObj = PyObject_CallMethod(self, "GetDataSize", "", NULL);
        if (!sizeObj) goto error;
        size = wxPyInt_AsSsize_t(sizeObj);
        
        // Make a buffer that big using the pointer passed to us, and then
        // call the Python method.
        buffer = wxPyMakeBuffer(buf, size);
        resObj = sipCallMethod(0, sipMethod, "S", buffer);
        
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        
        error:
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);
        Py_XDECREF(sizeObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__richtext_117(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t len,const void*buf)
{
    bool sipRes = 0;
        PyObject* buffer = wxPyMakeBuffer((void*)buf, len);
        PyObject *resObj = sipCallMethod(0,sipMethod,"S",buffer);
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__richtext_116(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextPlainText*obj, ::wxString& text)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", const_cast< ::wxRichTextPlainText *>(obj), sipType_wxRichTextPlainText, SIP_NULLPTR, &text, sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_115(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextPlainText*obj)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxRichTextPlainText *>(obj), sipType_wxRichTextPlainText, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH__richtext_114(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*obj, ::wxArrayInt& positions, ::wxRichTextAttrArray& attributes)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDD", obj, sipType_wxRichTextObject, SIP_NULLPTR, &positions, sipType_wxArrayInt, SIP_NULLPTR, &attributes, sipType_wxRichTextAttrArray, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

int sipVH__richtext_113(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*obj)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", obj, sipType_wxRichTextObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

bool sipVH__richtext_112(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextAttr& attr, ::wxRichTextObject*obj)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", &attr, sipType_wxRichTextAttr, SIP_NULLPTR, obj, sipType_wxRichTextObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_111(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*obj)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", obj, sipType_wxRichTextObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_110(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextBuffer*buffer, ::wxOutputStream& stream)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", buffer, sipType_wxRichTextBuffer, SIP_NULLPTR, &stream, sipType_wxOutputStream, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_109(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextBuffer*buffer, ::wxInputStream& stream)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", buffer, sipType_wxRichTextBuffer, SIP_NULLPTR, &stream, sipType_wxInputStream, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_108(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextBuffer*buffer,const  ::wxString& filename)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", buffer, sipType_wxRichTextBuffer, SIP_NULLPTR, new  ::wxString(filename), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_107(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int startRow,int noRows,const  ::wxRichTextAttr& attr)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iiN", startRow, noRows, new  ::wxRichTextAttr(attr), sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_106(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextSelection& selection,const  ::wxRichTextAttr& style,int flags)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNi", new  ::wxRichTextSelection(selection), sipType_wxRichTextSelection, SIP_NULLPTR, new  ::wxRichTextAttr(style), sipType_wxRichTextAttr, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_105(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int rows,int cols)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ii", rows, cols);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxPosition sipVH__richtext_104(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPosition sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxPosition, &sipRes);

    return sipRes;
}

bool sipVH__richtext_103(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,int& row,int& col)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", pos);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bii)", &sipRes, &row, &col);

    return sipRes;
}

 ::wxRichTextCell* sipVH__richtext_102(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos)
{
     ::wxRichTextCell* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", pos);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextCell, &sipRes);

    return sipRes;
}

 ::wxRichTextCell* sipVH__richtext_101(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int row,int col)
{
     ::wxRichTextCell* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ii", row, col);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextCell, &sipRes);

    return sipRes;
}

size_t sipVH__richtext_100(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

bool sipVH__richtext_99(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long position)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", position);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxRichTextCommand* sipVH__richtext_98(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextCommand* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextCommand, &sipRes);

    return sipRes;
}

bool sipVH__richtext_97(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextAction*action)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", action, sipType_wxRichTextAction, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_96(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& cmdName)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(cmdName), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_95(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxOutputStream& stream, ::wxRichTextFileType type)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DF", &stream, sipType_wxOutputStream, SIP_NULLPTR, type, sipType_wxRichTextFileType);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_94(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxInputStream& stream, ::wxRichTextFileType type)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DF", &stream, sipType_wxInputStream, SIP_NULLPTR, type, sipType_wxRichTextFileType);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_93(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& filename, ::wxRichTextFileType type)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxString(filename), sipType_wxString, SIP_NULLPTR, type, sipType_wxRichTextFileType);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_92(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxImage& image,const  ::wxSize& sz, ::wxRichTextDrawingContext& context,bool& changed)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNDb", &image, sipType_wxImage, SIP_NULLPTR, new  ::wxSize(sz), sipType_wxSize, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, changed);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bb)", &sipRes, &changed);

    return sipRes;
}

bool sipVH__richtext_91(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context, ::wxSize& retImageSize,bool resetCache,const  ::wxSize& parentSize)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDDbN", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, &retImageSize, sipType_wxSize, SIP_NULLPTR, resetCache, new  ::wxSize(parentSize), sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_90(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxImage& image, ::wxBitmapType imageType)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxImage(image), sipType_wxImage, SIP_NULLPTR, imageType, sipType_wxBitmapType);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_89(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxImage& image, ::wxBitmapType imageType,int quality)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DFi", &image, sipType_wxImage, SIP_NULLPTR, imageType, sipType_wxBitmapType, quality);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_88(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& filename, ::wxBitmapType imageType, ::wxImage& image,bool convertToJPEG)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NFDb", new  ::wxString(filename), sipType_wxString, SIP_NULLPTR, imageType, sipType_wxBitmapType, &image, sipType_wxImage, SIP_NULLPTR, convertToJPEG);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_87(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObjectList_& list)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &list, sipType_wxRichTextObjectList_, SIP_NULLPTR);
}

void sipVH__richtext_86(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*obj, ::wxRichTextObjectList_& list)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DD", obj, sipType_wxRichTextObject, SIP_NULLPTR, &list, sipType_wxRichTextObjectList_, SIP_NULLPTR);
}

 ::wxRichTextObject* sipVH__richtext_85(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos, ::wxRichTextObject**previousObject)
{
     ::wxRichTextObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", pos);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H0H0)", sipType_wxRichTextObject, &sipRes, sipType_wxRichTextObject, previousObject);

    return sipRes;
}

bool sipVH__richtext_84(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,const  ::wxString& text)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lN", pos, new  ::wxString(text), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_83(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextLine*line,const  ::wxRichTextAttr& attr,const  ::wxRect& rect, ::wxDC& dc)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DNND", line, sipType_wxRichTextLine, SIP_NULLPTR, new  ::wxRichTextAttr(attr), sipType_wxRichTextAttr, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR);
}

 ::wxRichTextLine* sipVH__richtext_82(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextLine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxRichTextLine, &sipRes);

    return sipRes;
}

bool sipVH__richtext_81(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextBuffer*buffer, ::wxRichTextField*obj)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", buffer, sipType_wxRichTextBuffer, SIP_NULLPTR, obj, sipType_wxRichTextField, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__richtext_80(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextField*obj)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", obj, sipType_wxRichTextField, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__richtext_79(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextField*obj, ::wxWindow*parent, ::wxRichTextBuffer*buffer)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDD", obj, sipType_wxRichTextField, SIP_NULLPTR, parent, sipType_wxWindow, SIP_NULLPTR, buffer, sipType_wxRichTextBuffer, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_78(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextField*obj)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", obj, sipType_wxRichTextField, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_77(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextField*obj,const  ::wxRichTextRange& range, ::wxSize& size,int& descent, ::wxDC& dc, ::wxRichTextDrawingContext& context,int flags,const  ::wxPoint& position,const  ::wxSize& parentSize, ::wxArrayInt*partialExtents)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNDDDiNND", obj, sipType_wxRichTextField, SIP_NULLPTR, new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, &size, sipType_wxSize, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, flags, new  ::wxPoint(position), sipType_wxPoint, SIP_NULLPTR, new  ::wxSize(parentSize), sipType_wxSize, SIP_NULLPTR, partialExtents, sipType_wxArrayInt, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bi)", &sipRes, &descent);

    return sipRes;
}

bool sipVH__richtext_76(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextField*obj, ::wxDC& dc, ::wxRichTextDrawingContext& context,const  ::wxRect& rect,const  ::wxRect& parentRect,int style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDDNNi", obj, sipType_wxRichTextField, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, new  ::wxRect(parentRect), sipType_wxRect, SIP_NULLPTR, style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_75(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextField*obj, ::wxDC& dc, ::wxRichTextDrawingContext& context,const  ::wxRichTextRange& range,const  ::wxRichTextSelection& selection,const  ::wxRect& rect,int descent,int style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDDNNNii", obj, sipType_wxRichTextField, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxRichTextSelection(selection), sipType_wxRichTextSelection, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, descent, style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_74(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextBuffer*buffer)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", buffer, sipType_wxRichTextBuffer, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_73(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRect& availableRect, ::wxRichTextObject*untilObj)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ND", new  ::wxRect(availableRect), sipType_wxRect, SIP_NULLPTR, untilObj, sipType_wxRichTextObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_72(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextAttr& style)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxRichTextAttr(style), sipType_wxRichTextAttr, SIP_NULLPTR);
}

const  ::wxRichTextAttr& sipVH__richtext_71(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextAttr *sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    int sipRc = sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H1", sipType_wxRichTextAttr, &sipRes);

    if (sipRc < 0)
        return *new  ::wxRichTextAttr();

    return *sipRes;
}

bool sipVH__richtext_70(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextAttr& style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxRichTextAttr(style), sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_69(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextStyleSheet*styleSheet)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", styleSheet, sipType_wxRichTextStyleSheet, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_68(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range, ::wxRichTextParagraphLayoutBox& fragment)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ND", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, &fragment, sipType_wxRichTextParagraphLayoutBox, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_67(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long position, ::wxRichTextParagraphLayoutBox& fragment)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lD", position, &fragment, sipType_wxRichTextParagraphLayoutBox, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_66(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextParagraphLayoutBox& container)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &container, sipType_wxRichTextParagraphLayoutBox, SIP_NULLPTR);
}

bool sipVH__richtext_65(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range,const  ::wxRichTextAttr& style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxRichTextAttr(style), sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_64(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject& obj,const  ::wxRichTextProperties& properties, ::wxRichTextObject*objToSet)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DND", &obj, sipType_wxRichTextObject, SIP_NULLPTR, new  ::wxRichTextProperties(properties), sipType_wxRichTextProperties, SIP_NULLPTR, objToSet, sipType_wxRichTextObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_63(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range,const  ::wxRichTextProperties& properties,int flags)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNi", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxRichTextProperties(properties), sipType_wxRichTextProperties, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_62(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextParagraph*previousParagraph, ::wxRichTextAttr& attr)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", previousParagraph, sipType_wxRichTextParagraph, SIP_NULLPTR, &attr, sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_61(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range,const  ::wxRichTextRange& promotionRange,int promoteBy, ::wxRichTextListStyleDefinition*styleDef,int flags,int startFrom,int specifiedLevel)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNiDiii", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxRichTextRange(promotionRange), sipType_wxRichTextRange, SIP_NULLPTR, promoteBy, styleDef, sipType_wxRichTextListStyleDefinition, SIP_NULLPTR, flags, startFrom, specifiedLevel);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_60(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range,int flags)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Ni", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_59(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range, ::wxRichTextAttr& style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ND", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, &style, sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_58(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long position, ::wxRichTextAttr& style,bool combineStyles)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lDb", position, &style, sipType_wxRichTextAttr, SIP_NULLPTR, combineStyles);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_57(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long position, ::wxRichTextAttr& style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lD", position, &style, sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_56(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*obj,const  ::wxRichTextAttr& textAttr,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DNi", obj, sipType_wxRichTextObject, SIP_NULLPTR, new  ::wxRichTextAttr(textAttr), sipType_wxRichTextAttr, SIP_NULLPTR, flags);
}

bool sipVH__richtext_55(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range,const  ::wxRichTextAttr& style,int flags)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNi", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxRichTextAttr(style), sipType_wxRichTextAttr, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_54(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,long*x,long*y)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", pos);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bll)", &sipRes, x, y);

    return sipRes;
}

long sipVH__richtext_53(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long x,long y)
{
    long sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ll", x, y);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "l", &sipRes);

    return sipRes;
}

 ::wxString sipVH__richtext_52(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long paragraphNumber)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", paragraphNumber);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

int sipVH__richtext_51(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long paragraphNumber)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", paragraphNumber);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxRichTextParagraph* sipVH__richtext_50(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextLine*line)
{
     ::wxRichTextParagraph* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", line, sipType_wxRichTextLine, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextParagraph, &sipRes);

    return sipRes;
}

 ::wxRichTextParagraph* sipVH__richtext_49(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long paragraphNumber)
{
     ::wxRichTextParagraph* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", paragraphNumber);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextParagraph, &sipRes);

    return sipRes;
}

 ::wxRichTextLine* sipVH__richtext_48(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long lineNumber)
{
     ::wxRichTextLine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", lineNumber);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextLine, &sipRes);

    return sipRes;
}

long sipVH__richtext_47(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,bool caretPosition,bool startOfLine)
{
    long sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lbb", pos, caretPosition, startOfLine);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "l", &sipRes);

    return sipRes;
}

 ::wxSize sipVH__richtext_46(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,bool caretPosition)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lb", pos, caretPosition);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

 ::wxRichTextParagraph* sipVH__richtext_45(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,bool caretPosition)
{
     ::wxRichTextParagraph* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lb", pos, caretPosition);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextParagraph, &sipRes);

    return sipRes;
}

 ::wxRichTextLine* sipVH__richtext_44(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int y)
{
     ::wxRichTextLine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", y);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextLine, &sipRes);

    return sipRes;
}

 ::wxRichTextLine* sipVH__richtext_43(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos,bool caretPosition)
{
     ::wxRichTextLine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "lb", pos, caretPosition);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextLine, &sipRes);

    return sipRes;
}

 ::wxRichTextRange sipVH__richtext_42(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxImage& image, ::wxRichTextAttr*paraStyle)
{
     ::wxRichTextRange sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ND", new  ::wxImage(image), sipType_wxImage, SIP_NULLPTR, paraStyle, sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRichTextRange, &sipRes);

    return sipRes;
}

 ::wxRichTextRange sipVH__richtext_41(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& text, ::wxRichTextAttr*paraStyle)
{
     ::wxRichTextRange sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ND", new  ::wxString(text), sipType_wxString, SIP_NULLPTR, paraStyle, sipType_wxRichTextAttr, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRichTextRange, &sipRes);

    return sipRes;
}

void sipVH__richtext_40(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

 ::wxRichTextStyleSheet* sipVH__richtext_39(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextStyleSheet* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextStyleSheet, &sipRes);

    return sipRes;
}

bool sipVH__richtext_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int promoteBy,const  ::wxRichTextRange& range,const  ::wxString& defName,int flags,int specifiedLevel)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iNNii", promoteBy, new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxString(defName), sipType_wxString, SIP_NULLPTR, flags, specifiedLevel);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int promoteBy,const  ::wxRichTextRange& range, ::wxRichTextListStyleDefinition*def,int flags,int specifiedLevel)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iNDii", promoteBy, new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, def, sipType_wxRichTextListStyleDefinition, SIP_NULLPTR, flags, specifiedLevel);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range,const  ::wxString& defName,int flags,int startFrom,int specifiedLevel)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNiii", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxString(defName), sipType_wxString, SIP_NULLPTR, flags, startFrom, specifiedLevel);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range, ::wxRichTextListStyleDefinition*styleDef,int flags,int startFrom,int specifiedLevel)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NDiii", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, styleDef, sipType_wxRichTextListStyleDefinition, SIP_NULLPTR, flags, startFrom, specifiedLevel);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxRichTextObject* sipVH__richtext_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxRichTextObject, &sipRes);

    return sipRes;
}

void sipVH__richtext_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool show)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", show);
}

bool sipVH__richtext_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextAttr& attr, ::wxRichTextDrawingContext& context)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", &attr, sipType_wxRichTextAttr, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context, ::wxRichTextBuffer*buffer,const  ::wxRichTextAttr& parentAttr,const  ::wxRichTextAttr& attr,const  ::wxRect& availableParentSpace,const  ::wxRect& availableContainerSpace,int style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDDNNNNi", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, buffer, sipType_wxRichTextBuffer, SIP_NULLPTR, new  ::wxRichTextAttr(parentAttr), sipType_wxRichTextAttr, SIP_NULLPTR, new  ::wxRichTextAttr(attr), sipType_wxRichTextAttr, SIP_NULLPTR, new  ::wxRect(availableParentSpace), sipType_wxRect, SIP_NULLPTR, new  ::wxRect(availableContainerSpace), sipType_wxRect, SIP_NULLPTR, style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxRect sipVH__richtext_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context,const  ::wxRect& outerRect)
{
     ::wxRect sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDN", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, new  ::wxRect(outerRect), sipType_wxRect, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRect, &sipRes);

    return sipRes;
}

void sipVH__richtext_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int leftMargin,int rightMargin,int topMargin,int bottomMargin)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiii", leftMargin, rightMargin, topMargin, bottomMargin);
}

void sipVH__richtext_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int margin)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "i", margin);
}

 ::wxRichTextParagraphLayoutBox* sipVH__richtext_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextParagraphLayoutBox* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextParagraphLayoutBox, &sipRes);

    return sipRes;
}

void sipVH__richtext_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*parent)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", parent, sipType_wxRichTextObject, SIP_NULLPTR);
}

 ::wxRichTextObject* sipVH__richtext_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRichTextObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextObject, &sipRes);

    return sipRes;
}

 ::wxRect sipVH__richtext_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRect sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRect, &sipRes);

    return sipRes;
}

void sipVH__richtext_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& pos)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);
}

 ::wxPoint sipVH__richtext_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPoint sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxPoint, &sipRes);

    return sipRes;
}

 ::wxTextAttrSize sipVH__richtext_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxTextAttrSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxTextAttrSize, &sipRes);

    return sipRes;
}

void sipVH__richtext_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& sz)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxSize(sz), sipType_wxSize, SIP_NULLPTR);
}

 ::wxRichTextSelection sipVH__richtext_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long start,long end)
{
     ::wxRichTextSelection sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ll", start, end);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRichTextSelection, &sipRes);

    return sipRes;
}

void sipVH__richtext_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& invalidRange)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxRichTextRange(invalidRange), sipType_wxRichTextRange, SIP_NULLPTR);
}

bool sipVH__richtext_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextBuffer*buffer, ::wxXmlNode*node, ::wxRichTextXMLHandler*handler,bool*recurse)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDD", buffer, sipType_wxRichTextBuffer, SIP_NULLPTR, node, sipType_wxXmlNode, SIP_NULLPTR, handler, sipType_wxRichTextXMLHandler, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bb)", &sipRes, recurse);

    return sipRes;
}

 ::wxString sipVH__richtext_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__richtext_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent, ::wxRichTextBuffer*buffer)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", parent, sipType_wxWindow, SIP_NULLPTR, buffer, sipType_wxRichTextBuffer, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxRichTextObject* sipVH__richtext_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextDrawingContext& context)
{
     ::wxRichTextObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextObject, &sipRes);

    return sipRes;
}

bool sipVH__richtext_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextDrawingContext& context)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRichTextObject*object, ::wxRichTextDrawingContext& context)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", object, sipType_wxRichTextObject, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__richtext_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

int sipVH__richtext_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

bool sipVH__richtext_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__richtext_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long start,long& end)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", start);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "l", &end);
}

 ::wxRichTextObject* sipVH__richtext_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long pos)
{
     ::wxRichTextObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", pos);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxRichTextObject, &sipRes);

    return sipRes;
}

bool sipVH__richtext_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRichTextRange& range, ::wxSize& size,int& descent, ::wxDC& dc, ::wxRichTextDrawingContext& context,int flags,const  ::wxPoint& position,const  ::wxSize& parentSize, ::wxArrayInt*partialExtents)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NDDDiNND", new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, &size, sipType_wxSize, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, flags, new  ::wxPoint(position), sipType_wxPoint, SIP_NULLPTR, new  ::wxSize(parentSize), sipType_wxSize, SIP_NULLPTR, partialExtents, sipType_wxArrayInt, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bi)", &sipRes, &descent);

    return sipRes;
}

 ::wxSize sipVH__richtext_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

bool sipVH__richtext_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context,long index, ::wxPoint& pt,int*height,bool forceLineStart)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDlb", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, index, forceLineStart);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(bH5i)", &sipRes, sipType_wxPoint, &pt, height);

    return sipRes;
}

int sipVH__richtext_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context,const  ::wxPoint& pt,long& textPosition, ::wxRichTextObject**obj, ::wxRichTextObject**contextObj,int flags)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNi", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, new  ::wxPoint(pt), sipType_wxPoint, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(ilH0H0)", &sipRes, &textPosition, sipType_wxRichTextObject, obj, sipType_wxRichTextObject, contextObj);

    return sipRes;
}

bool sipVH__richtext_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context,const  ::wxRect& rect,const  ::wxRect& parentRect,int style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNNi", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, new  ::wxRect(parentRect), sipType_wxRect, SIP_NULLPTR, style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__richtext_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRichTextDrawingContext& context,const  ::wxRichTextRange& range,const  ::wxRichTextSelection& selection,const  ::wxRect& rect,int descent,int style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNNNii", &dc, sipType_wxDC, SIP_NULLPTR, &context, sipType_wxRichTextDrawingContext, SIP_NULLPTR, new  ::wxRichTextRange(range), sipType_wxRichTextRange, SIP_NULLPTR, new  ::wxRichTextSelection(selection), sipType_wxRichTextSelection, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, descent, style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}


PyDoc_STRVAR(doc_RichTextModuleInit, "RichTextModuleInit()");

extern "C" {static PyObject *func_RichTextModuleInit(PyObject *,PyObject *);}
static PyObject *func_RichTextModuleInit(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxRichTextModuleInit();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextModuleInit, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_TextAttrCollectCommonAttributes, "TextAttrCollectCommonAttributes(currentStyle, attr, clashingAttr, absentAttr)");

extern "C" {static PyObject *func_TextAttrCollectCommonAttributes(PyObject *,PyObject *, PyObject *);}
static PyObject *func_TextAttrCollectCommonAttributes(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxTextAttr* currentStyle;
        const  ::wxTextAttr* attr;
         ::wxTextAttr* clashingAttr;
         ::wxTextAttr* absentAttr;

        static const char *sipKwdList[] = {
            sipName_currentStyle,
            sipName_attr,
            sipName_clashingAttr,
            sipName_absentAttr,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9J9J9J9", sipType_wxTextAttr, &currentStyle, sipType_wxTextAttr, &attr, sipType_wxTextAttr, &clashingAttr, sipType_wxTextAttr, &absentAttr))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxTextAttrCollectCommonAttributes(*currentStyle,*attr,*clashingAttr,*absentAttr);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_TextAttrCollectCommonAttributes, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextDecimalToRoman, "RichTextDecimalToRoman(n) -> String\n"
"\n"
"Convert a decimal to Roman numerals.");

extern "C" {static PyObject *func_RichTextDecimalToRoman(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextDecimalToRoman(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        long n;

        static const char *sipKwdList[] = {
            sipName_n,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "l", &n))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxRichTextDecimalToRoman(n));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextDecimalToRoman, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextTabsEq, "RichTextTabsEq(tabs1, tabs2) -> bool\n"
"\n"
"Compare tabs.");

extern "C" {static PyObject *func_RichTextTabsEq(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextTabsEq(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxArrayInt* tabs1;
        int tabs1State = 0;
        const  ::wxArrayInt* tabs2;
        int tabs2State = 0;

        static const char *sipKwdList[] = {
            sipName_tabs1,
            sipName_tabs2,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1", sipType_wxArrayInt, &tabs1, &tabs1State, sipType_wxArrayInt, &tabs2, &tabs2State))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextTabsEq(*tabs1,*tabs2);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxArrayInt *>(tabs1), sipType_wxArrayInt, tabs1State);
            sipReleaseType(const_cast< ::wxArrayInt *>(tabs2), sipType_wxArrayInt, tabs2State);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextTabsEq, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextSplitParaCharStyles, "RichTextSplitParaCharStyles(style, parStyle, charStyle) -> bool\n"
"\n"
"Split into paragraph and character styles.");

extern "C" {static PyObject *func_RichTextSplitParaCharStyles(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextSplitParaCharStyles(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxRichTextAttr* style;
         ::wxRichTextAttr* parStyle;
         ::wxRichTextAttr* charStyle;

        static const char *sipKwdList[] = {
            sipName_style,
            sipName_parStyle,
            sipName_charStyle,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9J9J9", sipType_wxRichTextAttr, &style, sipType_wxRichTextAttr, &parStyle, sipType_wxRichTextAttr, &charStyle))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextSplitParaCharStyles(*style,*parStyle,*charStyle);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextSplitParaCharStyles, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextBitlistsEqPartial, "RichTextBitlistsEqPartial(valueA, valueB, flags) -> bool\n"
"\n"
"Compare two bitlists.");

extern "C" {static PyObject *func_RichTextBitlistsEqPartial(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextBitlistsEqPartial(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int valueA;
        int valueB;
        int flags;

        static const char *sipKwdList[] = {
            sipName_valueA,
            sipName_valueB,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "iii", &valueA, &valueB, &flags))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextBitlistsEqPartial(valueA,valueB,flags);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextBitlistsEqPartial, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextCombineBitlists, "RichTextCombineBitlists(valueA, valueB, flagsA, flagsB) -> bool\n"
"\n"
"Combine two bitlists.");

extern "C" {static PyObject *func_RichTextCombineBitlists(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextCombineBitlists(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int valueA;
        int valueB;
        int flagsA;
        int flagsB;

        static const char *sipKwdList[] = {
            sipName_valueB,
            sipName_flagsB,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "ii", &valueB, &flagsB))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextCombineBitlists(valueA,valueB,flagsA,flagsB);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(bii)",sipRes,valueA,flagsA);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextCombineBitlists, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextRemoveStyle, "RichTextRemoveStyle(destStyle, style) -> bool");

extern "C" {static PyObject *func_RichTextRemoveStyle(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextRemoveStyle(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxRichTextAttr* destStyle;
        const  ::wxRichTextAttr* style;

        static const char *sipKwdList[] = {
            sipName_destStyle,
            sipName_style,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9J9", sipType_wxRichTextAttr, &destStyle, sipType_wxRichTextAttr, &style))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextRemoveStyle(*destStyle,*style);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextRemoveStyle, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextApplyStyle, "RichTextApplyStyle(destStyle, style, compareWith=None) -> bool\n"
"\n"
"Apply one style to another.");

extern "C" {static PyObject *func_RichTextApplyStyle(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextApplyStyle(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxRichTextAttr* destStyle;
        const  ::wxRichTextAttr* style;
         ::wxRichTextAttr* compareWith = 0;

        static const char *sipKwdList[] = {
            sipName_destStyle,
            sipName_style,
            sipName_compareWith,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9J9|J8", sipType_wxRichTextAttr, &destStyle, sipType_wxRichTextAttr, &style, sipType_wxRichTextAttr, &compareWith))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextApplyStyle(*destStyle,*style,compareWith);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextApplyStyle, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_TextAttrEq, "TextAttrEq(attr1, attr2) -> bool\n"
"\n"
"Compare two attribute objects.");

extern "C" {static PyObject *func_TextAttrEq(PyObject *,PyObject *, PyObject *);}
static PyObject *func_TextAttrEq(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxRichTextAttr* attr1;
        const  ::wxRichTextAttr* attr2;

        static const char *sipKwdList[] = {
            sipName_attr1,
            sipName_attr2,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9J9", sipType_wxRichTextAttr, &attr1, sipType_wxRichTextAttr, &attr2))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxTextAttrEq(*attr1,*attr2);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_TextAttrEq, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RichTextHasStyle, "RichTextHasStyle(flags, style) -> bool");

extern "C" {static PyObject *func_RichTextHasStyle(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RichTextHasStyle(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int flags;
        int style;

        static const char *sipKwdList[] = {
            sipName_flags,
            sipName_style,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "ii", &flags, &style))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxRichTextHasStyle(flags,style);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RichTextHasStyle, SIP_NULLPTR);

    return SIP_NULLPTR;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextCommandId, SIP_NULLPTR, 0}, sipNameNr_RichTextCommandId, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextCtrlSelectionState, SIP_NULLPTR, 0}, sipNameNr_RichTextCtrlSelectionState, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextFileType, SIP_NULLPTR, 0}, sipNameNr_RichTextFileType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextHitTestFlags, SIP_NULLPTR, 0}, sipNameNr_RichTextHitTestFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextOddEvenPage, SIP_NULLPTR, 0}, sipNameNr_RichTextOddEvenPage, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextPageLocation, SIP_NULLPTR, 0}, sipNameNr_RichTextPageLocation, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRichTextStyleListBox__wxRichTextStyleType, SIP_NULLPTR, 0}, sipNameNr_RichTextStyleType, 64, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrBorderFlags, SIP_NULLPTR, 0}, sipNameNr_TextAttrBorderFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrBorderStyle, SIP_NULLPTR, 0}, sipNameNr_TextAttrBorderStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrBorderWidth, SIP_NULLPTR, 0}, sipNameNr_TextAttrBorderWidth, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrUnits, SIP_NULLPTR, 0}, sipNameNr_TextAttrUnits, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrValueFlags, SIP_NULLPTR, 0}, sipNameNr_TextAttrValueFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrClearStyle, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrClearStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrCollapseMode, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrCollapseMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrFlags, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrFloatStyle, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrFloatStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrPosition, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrPosition, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrVerticalAlignment, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrVerticalAlignment, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextBoxAttrWhitespaceMode, SIP_NULLPTR, 0}, sipNameNr_TextBoxAttrWhitespaceMode, -1, SIP_NULLPTR},
};

/* These are the enum members of all global enums. */
static sipEnumMemberDef enummembers[] = {
    {sipName_RICHTEXT_CHANGE_ATTRIBUTES, static_cast<int>(::wxRICHTEXT_CHANGE_ATTRIBUTES), 11},
    {sipName_RICHTEXT_CHANGE_OBJECT, static_cast<int>(::wxRICHTEXT_CHANGE_OBJECT), 11},
    {sipName_RICHTEXT_CHANGE_STYLE, static_cast<int>(::wxRICHTEXT_CHANGE_STYLE), 11},
    {sipName_RICHTEXT_DELETE, static_cast<int>(::wxRICHTEXT_DELETE), 11},
    {sipName_RICHTEXT_HITTEST_AFTER, static_cast<int>(::wxRICHTEXT_HITTEST_AFTER), 34},
    {sipName_RICHTEXT_HITTEST_BEFORE, static_cast<int>(::wxRICHTEXT_HITTEST_BEFORE), 34},
    {sipName_RICHTEXT_HITTEST_HONOUR_ATOMIC, static_cast<int>(::wxRICHTEXT_HITTEST_HONOUR_ATOMIC), 34},
    {sipName_RICHTEXT_HITTEST_NONE, static_cast<int>(::wxRICHTEXT_HITTEST_NONE), 34},
    {sipName_RICHTEXT_HITTEST_NO_FLOATING_OBJECTS, static_cast<int>(::wxRICHTEXT_HITTEST_NO_FLOATING_OBJECTS), 34},
    {sipName_RICHTEXT_HITTEST_NO_NESTED_OBJECTS, static_cast<int>(::wxRICHTEXT_HITTEST_NO_NESTED_OBJECTS), 34},
    {sipName_RICHTEXT_HITTEST_ON, static_cast<int>(::wxRICHTEXT_HITTEST_ON), 34},
    {sipName_RICHTEXT_HITTEST_OUTSIDE, static_cast<int>(::wxRICHTEXT_HITTEST_OUTSIDE), 34},
    {sipName_RICHTEXT_INSERT, static_cast<int>(::wxRICHTEXT_INSERT), 11},
    {sipName_RICHTEXT_PAGE_ALL, static_cast<int>(::wxRICHTEXT_PAGE_ALL), 47},
    {sipName_RICHTEXT_PAGE_CENTRE, static_cast<int>(::wxRICHTEXT_PAGE_CENTRE), 48},
    {sipName_RICHTEXT_PAGE_EVEN, static_cast<int>(::wxRICHTEXT_PAGE_EVEN), 47},
    {sipName_RICHTEXT_PAGE_LEFT, static_cast<int>(::wxRICHTEXT_PAGE_LEFT), 48},
    {sipName_RICHTEXT_PAGE_ODD, static_cast<int>(::wxRICHTEXT_PAGE_ODD), 47},
    {sipName_RICHTEXT_PAGE_RIGHT, static_cast<int>(::wxRICHTEXT_PAGE_RIGHT), 48},
    {sipName_RICHTEXT_TYPE_ANY, static_cast<int>(::wxRICHTEXT_TYPE_ANY), 27},
    {sipName_RICHTEXT_TYPE_HTML, static_cast<int>(::wxRICHTEXT_TYPE_HTML), 27},
    {sipName_RICHTEXT_TYPE_PDF, static_cast<int>(::wxRICHTEXT_TYPE_PDF), 27},
    {sipName_RICHTEXT_TYPE_RTF, static_cast<int>(::wxRICHTEXT_TYPE_RTF), 27},
    {sipName_RICHTEXT_TYPE_TEXT, static_cast<int>(::wxRICHTEXT_TYPE_TEXT), 27},
    {sipName_RICHTEXT_TYPE_XML, static_cast<int>(::wxRICHTEXT_TYPE_XML), 27},
    {sipName_RichTextCtrlSelectionState_CommonAncestor, static_cast<int>(::wxRichTextCtrlSelectionState_CommonAncestor), 15},
    {sipName_RichTextCtrlSelectionState_Normal, static_cast<int>(::wxRichTextCtrlSelectionState_Normal), 15},
    {sipName_TEXT_ATTR_UNITS_HUNDREDTHS_POINT, static_cast<int>(::wxTEXT_ATTR_UNITS_HUNDREDTHS_POINT), 83},
    {sipName_TEXT_ATTR_UNITS_MASK, static_cast<int>(::wxTEXT_ATTR_UNITS_MASK), 83},
    {sipName_TEXT_ATTR_UNITS_PERCENTAGE, static_cast<int>(::wxTEXT_ATTR_UNITS_PERCENTAGE), 83},
    {sipName_TEXT_ATTR_UNITS_PIXELS, static_cast<int>(::wxTEXT_ATTR_UNITS_PIXELS), 83},
    {sipName_TEXT_ATTR_UNITS_POINTS, static_cast<int>(::wxTEXT_ATTR_UNITS_POINTS), 83},
    {sipName_TEXT_ATTR_UNITS_TENTHS_MM, static_cast<int>(::wxTEXT_ATTR_UNITS_TENTHS_MM), 83},
    {sipName_TEXT_ATTR_VALUE_VALID, static_cast<int>(::wxTEXT_ATTR_VALUE_VALID), 84},
    {sipName_TEXT_ATTR_VALUE_VALID_MASK, static_cast<int>(::wxTEXT_ATTR_VALUE_VALID_MASK), 84},
    {sipName_TEXT_BOX_ATTR_BORDER_COLOUR, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_COLOUR), 74},
    {sipName_TEXT_BOX_ATTR_BORDER_DASHED, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_DASHED), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_DOTTED, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_DOTTED), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_DOUBLE, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_DOUBLE), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_GROOVE, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_GROOVE), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_INSET, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_INSET), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_MEDIUM, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_MEDIUM), 76},
    {sipName_TEXT_BOX_ATTR_BORDER_NONE, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_NONE), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_OUTSET, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_OUTSET), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_RIDGE, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_RIDGE), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_SOLID, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_SOLID), 75},
    {sipName_TEXT_BOX_ATTR_BORDER_STYLE, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_STYLE), 74},
    {sipName_TEXT_BOX_ATTR_BORDER_THICK, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_THICK), 76},
    {sipName_TEXT_BOX_ATTR_BORDER_THIN, static_cast<int>(::wxTEXT_BOX_ATTR_BORDER_THIN), 76},
    {sipName_TEXT_BOX_ATTR_BOX_STYLE_NAME, static_cast<int>(::wxTEXT_BOX_ATTR_BOX_STYLE_NAME), 88},
    {sipName_TEXT_BOX_ATTR_CLEAR, static_cast<int>(::wxTEXT_BOX_ATTR_CLEAR), 88},
    {sipName_TEXT_BOX_ATTR_CLEAR_BOTH, static_cast<int>(::wxTEXT_BOX_ATTR_CLEAR_BOTH), 86},
    {sipName_TEXT_BOX_ATTR_CLEAR_LEFT, static_cast<int>(::wxTEXT_BOX_ATTR_CLEAR_LEFT), 86},
    {sipName_TEXT_BOX_ATTR_CLEAR_NONE, static_cast<int>(::wxTEXT_BOX_ATTR_CLEAR_NONE), 86},
    {sipName_TEXT_BOX_ATTR_CLEAR_RIGHT, static_cast<int>(::wxTEXT_BOX_ATTR_CLEAR_RIGHT), 86},
    {sipName_TEXT_BOX_ATTR_COLLAPSE_BORDERS, static_cast<int>(::wxTEXT_BOX_ATTR_COLLAPSE_BORDERS), 88},
    {sipName_TEXT_BOX_ATTR_COLLAPSE_FULL, static_cast<int>(::wxTEXT_BOX_ATTR_COLLAPSE_FULL), 87},
    {sipName_TEXT_BOX_ATTR_COLLAPSE_NONE, static_cast<int>(::wxTEXT_BOX_ATTR_COLLAPSE_NONE), 87},
    {sipName_TEXT_BOX_ATTR_CORNER_RADIUS, static_cast<int>(::wxTEXT_BOX_ATTR_CORNER_RADIUS), 88},
    {sipName_TEXT_BOX_ATTR_FLOAT, static_cast<int>(::wxTEXT_BOX_ATTR_FLOAT), 88},
    {sipName_TEXT_BOX_ATTR_FLOAT_LEFT, static_cast<int>(::wxTEXT_BOX_ATTR_FLOAT_LEFT), 89},
    {sipName_TEXT_BOX_ATTR_FLOAT_NONE, static_cast<int>(::wxTEXT_BOX_ATTR_FLOAT_NONE), 89},
    {sipName_TEXT_BOX_ATTR_FLOAT_RIGHT, static_cast<int>(::wxTEXT_BOX_ATTR_FLOAT_RIGHT), 89},
    {sipName_TEXT_BOX_ATTR_POSITION_ABSOLUTE, static_cast<int>(::wxTEXT_BOX_ATTR_POSITION_ABSOLUTE), 90},
    {sipName_TEXT_BOX_ATTR_POSITION_FIXED, static_cast<int>(::wxTEXT_BOX_ATTR_POSITION_FIXED), 90},
    {sipName_TEXT_BOX_ATTR_POSITION_MASK, static_cast<int>(::wxTEXT_BOX_ATTR_POSITION_MASK), 90},
    {sipName_TEXT_BOX_ATTR_POSITION_RELATIVE, static_cast<int>(::wxTEXT_BOX_ATTR_POSITION_RELATIVE), 90},
    {sipName_TEXT_BOX_ATTR_POSITION_STATIC, static_cast<int>(::wxTEXT_BOX_ATTR_POSITION_STATIC), 90},
    {sipName_TEXT_BOX_ATTR_VERTICAL_ALIGNMENT, static_cast<int>(::wxTEXT_BOX_ATTR_VERTICAL_ALIGNMENT), 88},
    {sipName_TEXT_BOX_ATTR_VERTICAL_ALIGNMENT_BOTTOM, static_cast<int>(::wxTEXT_BOX_ATTR_VERTICAL_ALIGNMENT_BOTTOM), 91},
    {sipName_TEXT_BOX_ATTR_VERTICAL_ALIGNMENT_CENTRE, static_cast<int>(::wxTEXT_BOX_ATTR_VERTICAL_ALIGNMENT_CENTRE), 91},
    {sipName_TEXT_BOX_ATTR_VERTICAL_ALIGNMENT_NONE, static_cast<int>(::wxTEXT_BOX_ATTR_VERTICAL_ALIGNMENT_NONE), 91},
    {sipName_TEXT_BOX_ATTR_VERTICAL_ALIGNMENT_TOP, static_cast<int>(::wxTEXT_BOX_ATTR_VERTICAL_ALIGNMENT_TOP), 91},
    {sipName_TEXT_BOX_ATTR_WHITESPACE, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE), 88},
    {sipName_TEXT_BOX_ATTR_WHITESPACE_NONE, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE_NONE), 92},
    {sipName_TEXT_BOX_ATTR_WHITESPACE_NORMAL, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE_NORMAL), 92},
    {sipName_TEXT_BOX_ATTR_WHITESPACE_NO_WRAP, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE_NO_WRAP), 92},
    {sipName_TEXT_BOX_ATTR_WHITESPACE_PREFORMATTED, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE_PREFORMATTED), 92},
    {sipName_TEXT_BOX_ATTR_WHITESPACE_PREFORMATTED_LINE, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE_PREFORMATTED_LINE), 92},
    {sipName_TEXT_BOX_ATTR_WHITESPACE_PREFORMATTED_WRAP, static_cast<int>(::wxTEXT_BOX_ATTR_WHITESPACE_PREFORMATTED_WRAP), 92},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes__richtext[] = {
    &sipTypeDef__richtext_wxRichTextAction.ctd_base,
    &sipTypeDef__richtext_wxRichTextActionList.ctd_base,
    &sipTypeDef__richtext_wxRichTextActionList_iterator.ctd_base,
    &sipTypeDef__richtext_wxRichTextAttr.ctd_base,
    &sipTypeDef__richtext_wxRichTextAttrArray.ctd_base,
    &sipTypeDef__richtext_wxRichTextBox.ctd_base,
    &sipTypeDef__richtext_wxRichTextBuffer.ctd_base,
    &sipTypeDef__richtext_wxRichTextBufferDataObject.ctd_base,
    &sipTypeDef__richtext_wxRichTextCell.ctd_base,
    &sipTypeDef__richtext_wxRichTextCharacterStyleDefinition.ctd_base,
    &sipTypeDef__richtext_wxRichTextCommand.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef__richtext_wxRichTextCompositeObject.ctd_base,
    &sipTypeDef__richtext_wxRichTextContextMenuPropertiesInfo.ctd_base,
    &sipTypeDef__richtext_wxRichTextCtrl.ctd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef__richtext_wxRichTextDrawingContext.ctd_base,
    &sipTypeDef__richtext_wxRichTextDrawingHandler.ctd_base,
    &sipTypeDef__richtext_wxRichTextDrawingHandlerList.ctd_base,
    &sipTypeDef__richtext_wxRichTextDrawingHandlerList_iterator.ctd_base,
    &sipTypeDef__richtext_wxRichTextEvent.ctd_base,
    &sipTypeDef__richtext_wxRichTextField.ctd_base,
    &sipTypeDef__richtext_wxRichTextFieldType.ctd_base,
    &sipTypeDef__richtext_wxRichTextFieldTypeStandard.ctd_base,
    &sipTypeDef__richtext_wxRichTextFileHandler.ctd_base,
    &sipTypeDef__richtext_wxRichTextFileHandlerList.ctd_base,
    &sipTypeDef__richtext_wxRichTextFileHandlerList_iterator.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef__richtext_wxRichTextFloatCollector.ctd_base,
    &sipTypeDef__richtext_wxRichTextFontTable.ctd_base,
    &sipTypeDef__richtext_wxRichTextFormattingDialog.ctd_base,
    &sipTypeDef__richtext_wxRichTextFormattingDialogFactory.ctd_base,
    &sipTypeDef__richtext_wxRichTextHTMLHandler.ctd_base,
    &sipTypeDef__richtext_wxRichTextHeaderFooterData.ctd_base,
    &enumTypes[3].etd_base,
    &sipTypeDef__richtext_wxRichTextImage.ctd_base,
    &sipTypeDef__richtext_wxRichTextImageBlock.ctd_base,
    &sipTypeDef__richtext_wxRichTextLine.ctd_base,
    &sipTypeDef__richtext_wxRichTextListStyleDefinition.ctd_base,
    &sipTypeDef__richtext_wxRichTextObject.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectAddress.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectList.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectList_.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectList__iterator.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectList_iterator.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectPtrArray.ctd_base,
    &sipTypeDef__richtext_wxRichTextObjectPtrArrayArray.ctd_base,
    &enumTypes[4].etd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef__richtext_wxRichTextParagraph.ctd_base,
    &sipTypeDef__richtext_wxRichTextParagraphLayoutBox.ctd_base,
    &sipTypeDef__richtext_wxRichTextParagraphStyleDefinition.ctd_base,
    &sipTypeDef__richtext_wxRichTextPlainText.ctd_base,
    &sipTypeDef__richtext_wxRichTextPlainTextHandler.ctd_base,
    &sipTypeDef__richtext_wxRichTextPrinting.ctd_base,
    &sipTypeDef__richtext_wxRichTextPrintout.ctd_base,
    &sipTypeDef__richtext_wxRichTextProperties.ctd_base,
    &sipTypeDef__richtext_wxRichTextRange.ctd_base,
    &sipTypeDef__richtext_wxRichTextRangeArray.ctd_base,
    &sipTypeDef__richtext_wxRichTextRenderer.ctd_base,
    &sipTypeDef__richtext_wxRichTextSelection.ctd_base,
    &sipTypeDef__richtext_wxRichTextStdRenderer.ctd_base,
    &sipTypeDef__richtext_wxRichTextStyleComboCtrl.ctd_base,
    &sipTypeDef__richtext_wxRichTextStyleDefinition.ctd_base,
    &sipTypeDef__richtext_wxRichTextStyleListBox.ctd_base,
    &enumTypes[6].etd_base,
    &sipTypeDef__richtext_wxRichTextStyleListCtrl.ctd_base,
    &sipTypeDef__richtext_wxRichTextStyleOrganiserDialog.ctd_base,
    &sipTypeDef__richtext_wxRichTextStyleSheet.ctd_base,
    &sipTypeDef__richtext_wxRichTextTable.ctd_base,
    &sipTypeDef__richtext_wxRichTextVariantArray.ctd_base,
    &sipTypeDef__richtext_wxRichTextXMLHandler.ctd_base,
    &sipTypeDef__richtext_wxSymbolPickerDialog.ctd_base,
    &sipTypeDef__richtext_wxTextAttrBorder.ctd_base,
    &enumTypes[7].etd_base,
    &enumTypes[8].etd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef__richtext_wxTextAttrBorders.ctd_base,
    &sipTypeDef__richtext_wxTextAttrDimension.ctd_base,
    &sipTypeDef__richtext_wxTextAttrDimensionConverter.ctd_base,
    &sipTypeDef__richtext_wxTextAttrDimensions.ctd_base,
    &sipTypeDef__richtext_wxTextAttrShadow.ctd_base,
    &sipTypeDef__richtext_wxTextAttrSize.ctd_base,
    &enumTypes[10].etd_base,
    &enumTypes[11].etd_base,
    &sipTypeDef__richtext_wxTextBoxAttr.ctd_base,
    &enumTypes[12].etd_base,
    &enumTypes[13].etd_base,
    &enumTypes[14].etd_base,
    &enumTypes[15].etd_base,
    &enumTypes[16].etd_base,
    &enumTypes[17].etd_base,
    &enumTypes[18].etd_base,
};


/*
 * These define each typedef in this module.
 */
static sipTypedefDef typedefsTable[] = {
    {"wxRichTextLineVector", "wxVector<wxRichTextLine*>"},
    {"wxTextAttrDimensionFlags", "unsigned short"},
};


/* This defines the types that this module needs to import from _core. */
sipImportedTypeDef sipImportedTypes__richtext__core[] = {
    {"wxArrayInt"},
    {"wxArrayString"},
    {"wxBitmap"},
    {"wxBitmapType"},
    {"wxBookCtrlBase"},
    {"wxBorder"},
    {"wxChoice"},
    {"wxColour"},
    {"wxColourData"},
    {"wxComboCtrl"},
    {"wxComboPopup"},
    {"wxCommand"},
    {"wxCommandEvent"},
    {"wxCommandProcessor"},
    {"wxContextMenuEvent"},
    {"wxControl"},
    {"wxCursor"},
    {"wxDC"},
    {"wxDataFormat"},
    {"wxDataObject"},
    {"wxDataObject::Direction"},
    {"wxDataObjectSimple"},
    {"wxDateTime"},
    {"wxDialog"},
    {"wxDropFilesEvent"},
    {"wxEraseEvent"},
    {"wxEvent"},
    {"wxEventCategory"},
    {"wxEvtHandler"},
    {"wxFocusEvent"},
    {"wxFont"},
    {"wxIdleEvent"},
    {"wxImage"},
    {"wxImageList"},
    {"wxInputStream"},
    {"wxKeyEvent"},
    {"wxLongLong"},
    {"wxMenu"},
    {"wxMouseCaptureLostEvent"},
    {"wxMouseEvent"},
    {"wxNonOwnedWindow"},
    {"wxNotifyEvent"},
    {"wxObject"},
    {"wxOrientation"},
    {"wxOutputStream"},
    {"wxPageSetupDialogData"},
    {"wxPaintEvent"},
    {"wxPanel"},
    {"wxPoint"},
    {"wxPosition"},
    {"wxPrintData"},
    {"wxPrintout"},
    {"wxRect"},
    {"wxScrollWinEvent"},
    {"wxSize"},
    {"wxSizeEvent"},
    {"wxSizer"},
    {"wxString"},
    {"wxSysColourChangedEvent"},
    {"wxTextAttr"},
    {"wxTextAttrAlignment"},
    {"wxTextCompleter"},
    {"wxTextCtrlHitTestResult"},
    {"wxTextEntry"},
    {"wxTimerEvent"},
    {"wxTopLevelWindow"},
    {"wxTrackable"},
    {"wxUpdateUIEvent"},
    {"wxVListBox"},
    {"wxVScrolledWindow"},
    {"wxValidator"},
    {"wxVarScrollHelperBase"},
    {"wxVarVScrollHelper"},
    {"wxVariant"},
    {"wxVisualAttributes"},
    {"wxWindow"},
    {"wxWindowBase"},
    {"wxWindowVariant"},
    {SIP_NULLPTR}
};


/* This defines the types that this module needs to import from _xml. */
sipImportedTypeDef sipImportedTypes__richtext__xml[] = {
    {"wxXmlNode"},
    {SIP_NULLPTR}
};


/* This defines the types that this module needs to import from _html. */
sipImportedTypeDef sipImportedTypes__richtext__html[] = {
    {"wxHtmlLinkInfo"},
    {"wxHtmlListBox"},
    {SIP_NULLPTR}
};


/* This defines the types that this module needs to import from _adv. */
sipImportedTypeDef sipImportedTypes__richtext__adv[] = {
    {"wxPropertySheetDialog"},
    {SIP_NULLPTR}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"wx._core", sipImportedTypes__richtext__core, SIP_NULLPTR, SIP_NULLPTR},
    {"wx._xml", sipImportedTypes__richtext__xml, SIP_NULLPTR, SIP_NULLPTR},
    {"wx._html", sipImportedTypes__richtext__html, SIP_NULLPTR, SIP_NULLPTR},
    {"wx._adv", sipImportedTypes__richtext__adv, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


/* Define the strings to be added to this module dictionary. */
static sipStringInstanceDef stringInstances[] = {
    {sipName_RichTextLineBreakChar, (const char *)&wxRichTextLineBreakChar, 'w'},
    {0, 0, 0}
};


/* Define the enum members and ints to be added to this module. */
static sipIntInstanceDef intInstances[] = {
    {sipName_ID_RICHTEXT_PROPERTIES1, wxID_RICHTEXT_PROPERTIES1},
    {sipName_ID_RICHTEXT_PROPERTIES2, wxID_RICHTEXT_PROPERTIES2},
    {sipName_ID_RICHTEXT_PROPERTIES3, wxID_RICHTEXT_PROPERTIES3},
    {sipName_RE_CENTER_CARET, wxRE_CENTER_CARET},
    {sipName_RE_CENTRE_CARET, wxRE_CENTRE_CARET},
    {sipName_RE_MULTILINE, wxRE_MULTILINE},
    {sipName_RE_READONLY, wxRE_READONLY},
    {sipName_RICHTEXT_ALT_DOWN, wxRICHTEXT_ALT_DOWN},
    {sipName_RICHTEXT_CACHE_SIZE, wxRICHTEXT_CACHE_SIZE},
    {sipName_RICHTEXT_CTRL_DOWN, wxRICHTEXT_CTRL_DOWN},
    {sipName_RICHTEXT_DRAW_GUIDELINES, wxRICHTEXT_DRAW_GUIDELINES},
    {sipName_RICHTEXT_DRAW_IGNORE_CACHE, wxRICHTEXT_DRAW_IGNORE_CACHE},
    {sipName_RICHTEXT_DRAW_PRINT, wxRICHTEXT_DRAW_PRINT},
    {sipName_RICHTEXT_DRAW_SELECTED, wxRICHTEXT_DRAW_SELECTED},
    {sipName_RICHTEXT_EX_NO_GUIDELINES, wxRICHTEXT_EX_NO_GUIDELINES},
    {sipName_RICHTEXT_FIXED_HEIGHT, wxRICHTEXT_FIXED_HEIGHT},
    {sipName_RICHTEXT_FIXED_WIDTH, wxRICHTEXT_FIXED_WIDTH},
    {sipName_RICHTEXT_FORMATTED, wxRICHTEXT_FORMATTED},
    {sipName_RICHTEXT_FORMAT_BULLETS, wxRICHTEXT_FORMAT_BULLETS},
    {sipName_RICHTEXT_FORMAT_FONT, wxRICHTEXT_FORMAT_FONT},
    {sipName_RICHTEXT_FORMAT_INDENTS_SPACING, wxRICHTEXT_FORMAT_INDENTS_SPACING},
    {sipName_RICHTEXT_FORMAT_STYLE_EDITOR, wxRICHTEXT_FORMAT_STYLE_EDITOR},
    {sipName_RICHTEXT_FORMAT_TABS, wxRICHTEXT_FORMAT_TABS},
    {sipName_RICHTEXT_HANDLER_CONVERT_FACENAMES, wxRICHTEXT_HANDLER_CONVERT_FACENAMES},
    {sipName_RICHTEXT_HANDLER_INCLUDE_STYLESHEET, wxRICHTEXT_HANDLER_INCLUDE_STYLESHEET},
    {sipName_RICHTEXT_HANDLER_NO_HEADER_FOOTER, wxRICHTEXT_HANDLER_NO_HEADER_FOOTER},
    {sipName_RICHTEXT_HANDLER_SAVE_IMAGES_TO_BASE64, wxRICHTEXT_HANDLER_SAVE_IMAGES_TO_BASE64},
    {sipName_RICHTEXT_HANDLER_SAVE_IMAGES_TO_FILES, wxRICHTEXT_HANDLER_SAVE_IMAGES_TO_FILES},
    {sipName_RICHTEXT_HANDLER_SAVE_IMAGES_TO_MEMORY, wxRICHTEXT_HANDLER_SAVE_IMAGES_TO_MEMORY},
    {sipName_RICHTEXT_HANDLER_USE_CSS, wxRICHTEXT_HANDLER_USE_CSS},
    {sipName_RICHTEXT_HEIGHT_ONLY, wxRICHTEXT_HEIGHT_ONLY},
    {sipName_RICHTEXT_INSERT_INTERACTIVE, wxRICHTEXT_INSERT_INTERACTIVE},
    {sipName_RICHTEXT_INSERT_NONE, wxRICHTEXT_INSERT_NONE},
    {sipName_RICHTEXT_INSERT_WITH_PREVIOUS_PARAGRAPH_STYLE, wxRICHTEXT_INSERT_WITH_PREVIOUS_PARAGRAPH_STYLE},
    {sipName_RICHTEXT_LAYOUT_SPECIFIED_RECT, wxRICHTEXT_LAYOUT_SPECIFIED_RECT},
    {sipName_RICHTEXT_ORGANISER_APPLY_STYLES, wxRICHTEXT_ORGANISER_APPLY_STYLES},
    {sipName_RICHTEXT_ORGANISER_BROWSE, wxRICHTEXT_ORGANISER_BROWSE},
    {sipName_RICHTEXT_ORGANISER_BROWSE_NUMBERING, wxRICHTEXT_ORGANISER_BROWSE_NUMBERING},
    {sipName_RICHTEXT_ORGANISER_CREATE_STYLES, wxRICHTEXT_ORGANISER_CREATE_STYLES},
    {sipName_RICHTEXT_ORGANISER_DELETE_STYLES, wxRICHTEXT_ORGANISER_DELETE_STYLES},
    {sipName_RICHTEXT_ORGANISER_EDIT_STYLES, wxRICHTEXT_ORGANISER_EDIT_STYLES},
    {sipName_RICHTEXT_ORGANISER_OK_CANCEL, wxRICHTEXT_ORGANISER_OK_CANCEL},
    {sipName_RICHTEXT_ORGANISER_ORGANISE, wxRICHTEXT_ORGANISER_ORGANISE},
    {sipName_RICHTEXT_ORGANISER_RENAME_STYLES, wxRICHTEXT_ORGANISER_RENAME_STYLES},
    {sipName_RICHTEXT_ORGANISER_RENUMBER, wxRICHTEXT_ORGANISER_RENUMBER},
    {sipName_RICHTEXT_ORGANISER_SHOW_ALL, wxRICHTEXT_ORGANISER_SHOW_ALL},
    {sipName_RICHTEXT_ORGANISER_SHOW_BOX, wxRICHTEXT_ORGANISER_SHOW_BOX},
    {sipName_RICHTEXT_ORGANISER_SHOW_CHARACTER, wxRICHTEXT_ORGANISER_SHOW_CHARACTER},
    {sipName_RICHTEXT_ORGANISER_SHOW_LIST, wxRICHTEXT_ORGANISER_SHOW_LIST},
    {sipName_RICHTEXT_ORGANISER_SHOW_PARAGRAPH, wxRICHTEXT_ORGANISER_SHOW_PARAGRAPH},
    {sipName_RICHTEXT_SETPROPERTIES_CHARACTERS_ONLY, wxRICHTEXT_SETPROPERTIES_CHARACTERS_ONLY},
    {sipName_RICHTEXT_SETPROPERTIES_NONE, wxRICHTEXT_SETPROPERTIES_NONE},
    {sipName_RICHTEXT_SETPROPERTIES_PARAGRAPHS_ONLY, wxRICHTEXT_SETPROPERTIES_PARAGRAPHS_ONLY},
    {sipName_RICHTEXT_SETPROPERTIES_REMOVE, wxRICHTEXT_SETPROPERTIES_REMOVE},
    {sipName_RICHTEXT_SETPROPERTIES_RESET, wxRICHTEXT_SETPROPERTIES_RESET},
    {sipName_RICHTEXT_SETPROPERTIES_WITH_UNDO, wxRICHTEXT_SETPROPERTIES_WITH_UNDO},
    {sipName_RICHTEXT_SETSTYLE_CHARACTERS_ONLY, wxRICHTEXT_SETSTYLE_CHARACTERS_ONLY},
    {sipName_RICHTEXT_SETSTYLE_NONE, wxRICHTEXT_SETSTYLE_NONE},
    {sipName_RICHTEXT_SETSTYLE_OPTIMIZE, wxRICHTEXT_SETSTYLE_OPTIMIZE},
    {sipName_RICHTEXT_SETSTYLE_PARAGRAPHS_ONLY, wxRICHTEXT_SETSTYLE_PARAGRAPHS_ONLY},
    {sipName_RICHTEXT_SETSTYLE_REMOVE, wxRICHTEXT_SETSTYLE_REMOVE},
    {sipName_RICHTEXT_SETSTYLE_RENUMBER, wxRICHTEXT_SETSTYLE_RENUMBER},
    {sipName_RICHTEXT_SETSTYLE_RESET, wxRICHTEXT_SETSTYLE_RESET},
    {sipName_RICHTEXT_SETSTYLE_SPECIFY_LEVEL, wxRICHTEXT_SETSTYLE_SPECIFY_LEVEL},
    {sipName_RICHTEXT_SETSTYLE_WITH_UNDO, wxRICHTEXT_SETSTYLE_WITH_UNDO},
    {sipName_RICHTEXT_SHIFT_DOWN, wxRICHTEXT_SHIFT_DOWN},
    {sipName_RICHTEXT_UNFORMATTED, wxRICHTEXT_UNFORMATTED},
    {sipName_RICHTEXT_VARIABLE_HEIGHT, wxRICHTEXT_VARIABLE_HEIGHT},
    {sipName_RICHTEXT_VARIABLE_WIDTH, wxRICHTEXT_VARIABLE_WIDTH},
    {sipName_TEXT_ATTR_KEEP_FIRST_PARA_STYLE, wxTEXT_ATTR_KEEP_FIRST_PARA_STYLE},
    {sipName_wxEVT_RICHTEXT_BUFFER_RESET, wxEVT_RICHTEXT_BUFFER_RESET},
    {sipName_wxEVT_RICHTEXT_CHARACTER, wxEVT_RICHTEXT_CHARACTER},
    {sipName_wxEVT_RICHTEXT_CONSUMING_CHARACTER, wxEVT_RICHTEXT_CONSUMING_CHARACTER},
    {sipName_wxEVT_RICHTEXT_CONTENT_DELETED, wxEVT_RICHTEXT_CONTENT_DELETED},
    {sipName_wxEVT_RICHTEXT_CONTENT_INSERTED, wxEVT_RICHTEXT_CONTENT_INSERTED},
    {sipName_wxEVT_RICHTEXT_DELETE, wxEVT_RICHTEXT_DELETE},
    {sipName_wxEVT_RICHTEXT_FOCUS_OBJECT_CHANGED, wxEVT_RICHTEXT_FOCUS_OBJECT_CHANGED},
    {sipName_wxEVT_RICHTEXT_LEFT_CLICK, wxEVT_RICHTEXT_LEFT_CLICK},
    {sipName_wxEVT_RICHTEXT_LEFT_DCLICK, wxEVT_RICHTEXT_LEFT_DCLICK},
    {sipName_wxEVT_RICHTEXT_MIDDLE_CLICK, wxEVT_RICHTEXT_MIDDLE_CLICK},
    {sipName_wxEVT_RICHTEXT_PROPERTIES_CHANGED, wxEVT_RICHTEXT_PROPERTIES_CHANGED},
    {sipName_wxEVT_RICHTEXT_RETURN, wxEVT_RICHTEXT_RETURN},
    {sipName_wxEVT_RICHTEXT_RIGHT_CLICK, wxEVT_RICHTEXT_RIGHT_CLICK},
    {sipName_wxEVT_RICHTEXT_SELECTION_CHANGED, wxEVT_RICHTEXT_SELECTION_CHANGED},
    {sipName_wxEVT_RICHTEXT_STYLESHEET_CHANGED, wxEVT_RICHTEXT_STYLESHEET_CHANGED},
    {sipName_wxEVT_RICHTEXT_STYLESHEET_CHANGING, wxEVT_RICHTEXT_STYLESHEET_CHANGING},
    {sipName_wxEVT_RICHTEXT_STYLESHEET_REPLACED, wxEVT_RICHTEXT_STYLESHEET_REPLACED},
    {sipName_wxEVT_RICHTEXT_STYLESHEET_REPLACING, wxEVT_RICHTEXT_STYLESHEET_REPLACING},
    {sipName_wxEVT_RICHTEXT_STYLE_CHANGED, wxEVT_RICHTEXT_STYLE_CHANGED},
    {0, 0}
};


/* Define the doubles to be added to this module dictionary. */
static sipDoubleInstanceDef doubleInstances[] = {
    {sipName_SCRIPT_MUL_FACTOR, wxSCRIPT_MUL_FACTOR},
    {0, 0}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI__richtext = {
    SIP_NULLPTR,
    8,
    sipNameNr_wx__richtext,
    0,
    sipStrings__richtext,
    importsTable,
    SIP_NULLPTR,
    93,
    sipExportedTypes__richtext,
    SIP_NULLPTR,
    80,
    enummembers,
    2,
    typedefsTable,
    SIP_NULLPTR,
    SIP_NULLPTR,
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, stringInstances, intInstances, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, doubleInstances},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI__richtext;


/* The Python module initialisation function. */
#if defined(SIP_STATIC_MODULE)
extern "C" PyObject *PyInit__richtext()
#else
PyMODINIT_FUNC PyInit__richtext()
#endif
{
    static PyMethodDef sip_methods[] = {
        {sipName_RichTextModuleInit, func_RichTextModuleInit, METH_VARARGS, doc_RichTextModuleInit},
        {sipName_TextAttrCollectCommonAttributes, SIP_MLMETH_CAST(func_TextAttrCollectCommonAttributes), METH_VARARGS|METH_KEYWORDS, doc_TextAttrCollectCommonAttributes},
        {sipName_RichTextDecimalToRoman, SIP_MLMETH_CAST(func_RichTextDecimalToRoman), METH_VARARGS|METH_KEYWORDS, doc_RichTextDecimalToRoman},
        {sipName_RichTextTabsEq, SIP_MLMETH_CAST(func_RichTextTabsEq), METH_VARARGS|METH_KEYWORDS, doc_RichTextTabsEq},
        {sipName_RichTextSplitParaCharStyles, SIP_MLMETH_CAST(func_RichTextSplitParaCharStyles), METH_VARARGS|METH_KEYWORDS, doc_RichTextSplitParaCharStyles},
        {sipName_RichTextBitlistsEqPartial, SIP_MLMETH_CAST(func_RichTextBitlistsEqPartial), METH_VARARGS|METH_KEYWORDS, doc_RichTextBitlistsEqPartial},
        {sipName_RichTextCombineBitlists, SIP_MLMETH_CAST(func_RichTextCombineBitlists), METH_VARARGS|METH_KEYWORDS, doc_RichTextCombineBitlists},
        {sipName_RichTextRemoveStyle, SIP_MLMETH_CAST(func_RichTextRemoveStyle), METH_VARARGS|METH_KEYWORDS, doc_RichTextRemoveStyle},
        {sipName_RichTextApplyStyle, SIP_MLMETH_CAST(func_RichTextApplyStyle), METH_VARARGS|METH_KEYWORDS, doc_RichTextApplyStyle},
        {sipName_TextAttrEq, SIP_MLMETH_CAST(func_TextAttrEq), METH_VARARGS|METH_KEYWORDS, doc_TextAttrEq},
        {sipName_RichTextHasStyle, SIP_MLMETH_CAST(func_RichTextHasStyle), METH_VARARGS|METH_KEYWORDS, doc_RichTextHasStyle},
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "wx._richtext",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
    if ((sipModule = PyModule_Create(&sip_module_def)) == SIP_NULLPTR)
        return SIP_NULLPTR;

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
    if ((sip_sipmod = PyImport_ImportModule("wx.siplib")) == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
    {
        PyErr_SetString(PyExc_AttributeError, "wx.siplib._C_API is missing or has the wrong type");
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sipAPI__richtext = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "wx.siplib._C_API"));

    if (sipAPI__richtext == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }
        wxPyReinitializeModules();
    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI__richtext, 12, 8, 0) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }
    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI__richtext,sipModuleDict) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    return sipModule;
}
