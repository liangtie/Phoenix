/*
 * Module code.
 *
 * Generated by SIP 6.7.9
 *
 *     Copyright: (c) 2020 by Total Control Software
 *     License:   wxWindows License
 */

#include "sipAPI_core.h"
        #include <wx/object.h>
        #include <wx/datetime.h>
        #include <wx/gdicmn.h>
        #include <wx/gdicmn.h>
        #include <wx/gbsizer.h>
        #include <wx/validate.h>
        #include <wx/vidmode.h>
        #include <wx/dataobj.h>
        #include <wx/accel.h>
        #include <wx/bitmap.h>
        #include <wx/brush.h>
        #include <wx/colour.h>
        #include <wx/cursor.h>
        #include <wx/font.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/icon.h>
        #include <wx/iconbndl.h>
        #include <wx/image.h>
        #include <wx/palette.h>
        #include <wx/pen.h>
        #include "arrayholder.h"
        #include <wx/mimetype.h>
        #include <wx/affinematrix2dbase.h>
        #include <wx/affinematrix2dbase.h>
        #include <wx/geometry.h>
        #include <wx/filesys.h>
        #include <wx/filesys.h>
        #include <wx/stream.h>
        #include <wx/stream.h>
        #include <wx/graphics.h>
        #include <wx/window.h>
        #include <wx/dc.h>
        #include <wx/gdicmn.h>
        #include <wx/renderer.h>
        #include <wx/renderer.h>
        #include <wx/renderer.h>
        #include <wx/access.h>
        #include <wx/log.h>
        #include <wx/frame.h>
        #include <wx/dataobj.h>
        #include <wx/config.h>
        #include <wx/event.h>
        #include <wx/sizer.h>
        #include <wx/stdpaths.h>
        #include <wx/evtloop.h>
        #include <wx/log.h>
        #include <wx/event.h>
        #include <wx/position.h>
        #include <wx/imaglist.h>
        #include <wx/bmpbndl.h>
        #include <wx/headercol.h>
        #include <wx/itemattr.h>
        #include <wx/treebase.h>
        #include <wx/event.h>
        #include <wx/combo.h>
        #include <wx/dialog.h>
        #include <wx/filedlgcustomize.h>
        #include <wx/statusbr.h>
        #include <wx/toolbar.h>
        #include <wx/event.h>
        #include <wx/mdi.h>
        #include <wx/mdi.h>
        #include <wx/event.h>
        #include <wx/dcmemory.h>
        #include <wx/print.h>
        #include <wx/print.h>
        #include <wx/print.h>
        #include <wx/cmndata.h>
        #include <wx/cmndata.h>
        #include <wx/menu.h>
        #include <wx/cmdproc.h>
    #include <wx/setup.h>
    #include <wxPython/wxpy_api.h>
    #include <wx/setup.h>
    #include <wxPython/wxpy_api.h>
        #include <wx/intl.h>
        #include <wx/event.h>
        #include <wx/app.h>
        #include <wx/colourdata.h>
        #include <wx/versioninfo.h>
        #include <wx/mousestate.h>
        #include <wx/process.h>
        #include <wx/clntdata.h>
        #include <wx/clntdata.h>
        #include <wx/datetime.h>
            #include <wx/datetime.h>
        #include <wx/datetime.h>
            #include <wx/datetime.h>
        #include <wx/datetime.h>
        #include <wx/datetime.h>
        #include <wx/stopwatch.h>
        #include <wx/windowid.h>
        #include <wx/platinfo.h>
        #include <wx/platinfo.h>
        #include <wx/platinfo.h>
        #include <wx/intl.h>
        #include <wx/translation.h>
        #include <wx/translation.h>
        #include <wx/cmndata.h>
        #include <wx/gdicmn.h>
        #include <wx/gdicmn.h>
        #include <wx/geometry.h>
        #include <wx/affinematrix2d.h>
        #include <wx/fs_mem.h>
        #include <wx/fs_arc.h>
        #include <wx/fs_filter.h>
        #include <wx/fs_inet.h>
        #include <wx/image.h>
            #include <wx/image.h>
        #include <wx/image.h>
            #include <wx/image.h>
        #include <wx/image.h>
        #include <wx/imagtiff.h>
        #include <wx/imaggif.h>
        #include <wx/imagiff.h>
        #include <wx/imagjpeg.h>
        #include <wx/imagpcx.h>
        #include <wx/imagpng.h>
        #include <wx/imagpnm.h>
        #include <wx/imagtga.h>
        #include <wx/imagxpm.h>
        #include <wx/bitmap.h>
        #include <wx/iconloc.h>
        #include <wx/font.h>
        #include <wx/font.h>
        #include <wx/fontutil.h>
        #include <wx/pen.h>
        #include <wx/pen.h>
        #include <wx/brush.h>
        #include <wx/region.h>
        #include <wx/region.h>
        #include <wx/dc.h>
        #include <wx/dcbuffer.h>
        #include <wx/dcscreen.h>
        #include <wx/dcgraph.h>
        #include <wx/dcps.h>
        #include <wx/dcsvg.h>
        #include <wx/dcsvg.h>
        #include <wx/metafile.h>
        #include <wx/metafile.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/graphics.h>
        #include <wx/overlay.h>
        #include <wx/accel.h>
        #include <wx/log.h>
        #include <wx/log.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dataobj.h>
        #include <wx/dnd.h>
        #include <wx/clipbrd.h>
        #include <wx/fileconf.h>
        #include <wx/kbdstate.h>
        #include <wx/layout.h>
        #include <wx/layout.h>
        #include <wx/sizer.h>
        #include <wx/gbsizer.h>
        #include <wx/evtloop.h>
        #include <wx/app.h>
        #include <wx/timer.h>
        #include <wx/window.h>
        #include <wx/panel.h>
        #include <wx/menuitem.h>
        #include <wx/menu.h>
        #include <wx/control.h>
        #include <wx/statbmp.h>
        #include <wx/statbmp.h>
        #include <wx/stattext.h>
        #include <wx/statbox.h>
        #include <wx/statusbr.h>
        #include <wx/choice.h>
        #include <wx/button.h>
        #include <wx/bmpbuttn.h>
        #include <wx/splitter.h>
        #include <wx/collpane.h>
        #include <wx/statline.h>
        #include <wx/textctrl.h>
        #include <wx/textctrl.h>
        #include <wx/combobox.h>
        #include <wx/checkbox.h>
        #include <wx/listbox.h>
        #include <wx/checklst.h>
        #include <wx/gauge.h>
        #include <wx/headercol.h>
        #include <wx/headerctrl.h>
        #include <wx/srchctrl.h>
        #include <wx/radiobox.h>
        #include <wx/radiobut.h>
        #include <wx/slider.h>
        #include <wx/spinbutt.h>
        #include <wx/spinctrl.h>
        #include <wx/spinctrl.h>
        #include <wx/tglbtn.h>
        #include <wx/tglbtn.h>
        #include <wx/scrolbar.h>
        #include <wx/infobar.h>
        #include <wx/listctrl.h>
        #include <wx/listctrl.h>
        #include <wx/listctrl.h>
        #include <wx/clrpicker.h>
        #include <wx/filepicker.h>
        #include <wx/filepicker.h>
        #include <wx/fontpicker.h>
        #include <wx/filectrl.h>
        #include <wx/combo.h>
        #include <wx/combo.h>
        #include <wx/activityindicator.h>
        #include <wx/collheaderctrl.h>
        #include <wx/nonownedwnd.h>
        #include <wx/toplevel.h>
        #include <wx/dirctrl.h>
        #include <wx/dirctrl.h>
        #include <wx/popupwin.h>
        #include <wx/popupwin.h>
        #include <wx/fdrepdlg.h>
        #include <wx/fdrepdlg.h>
        #include <wx/mdi.h>
        #include <wx/fontdata.h>
        #include <wx/fontdlg.h>
        #include <wx/rearrangectrl.h>
        #include <wx/rearrangectrl.h>
        #include <wx/rearrangectrl.h>
        #include <wx/minifram.h>
        #include <wx/textdlg.h>
        #include <wx/numdlg.h>
        #include <wx/power.h>
        #include <wx/utils.h>
        #include <wx/utils.h>
        #include <wx/cshelp.h>
        #include <wx/cshelp.h>
        #include <wx/cshelp.h>
        #include <wx/settings.h>
        #include <wx/settings.h>
        #include <wx/sysopt.h>
        #include <wx/artprov.h>
        #include <wx/dragimag.h>
        #include <wx/dragimag.h>
        #include <wx/generic/dragimgg.h>
        #include <wx/print.h>
        #include <wx/mimetype.h>
            #include <wx/mimetype.h>
        #include <wx/mimetype.h>
        #include <wx/busyinfo.h>
        #include <wx/caret.h>
        #include <wx/fontenum.h>
        #include <wx/fontmap.h>
        #include <wx/filehistory.h>
        
        typedef wxList wxFileHistoryMenuList;
        #include <wx/cmdproc.h>
        
        typedef wxList wxCommandList;
        #include <wx/fswatcher.h>
        #include <wx/preferences.h>
        #include <wx/unichar.h>

/* Define the strings used by this module. */
const char sipStrings__core[] = {
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'T', '_', 'H', 'E', 'L', 'E', 'N', 'A', '_', 'A', 'S', 'C', 'E', 'N', 'S', 'I', 'O', 'N', '_', 'T', 'R', 'I', 'S', 'T', 'A', 'N', '_', 'D', 'A', '_', 'C', 'U', 'N', 'H', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'T', 'A', 'N', 'D', 'A', 'R', 'D', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'A', 'N', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'T', 'I', 'F', 'I', 'N', 'A', 'G', 'H', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'T', 'I', 'F', 'I', 'N', 'A', 'G', 'H', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'S', 'N', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'B', 'O', 'S', 'N', 'I', 'A', '_', 'A', 'N', 'D', '_', 'H', 'E', 'R', 'Z', 'E', 'G', 'O', 'V', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'W', 'E', 'G', 'I', 'A', 'N', '_', 'B', 'O', 'K', 'M', 'A', 'L', '_', 'S', 'V', 'A', 'L', 'B', 'A', 'R', 'D', '_', 'A', 'N', 'D', '_', 'J', 'A', 'N', '_', 'M', 'A', 'Y', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'B', 'O', 'S', 'N', 'I', 'A', '_', 'A', 'N', 'D', '_', 'H', 'E', 'R', 'Z', 'E', 'G', 'O', 'V', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'R', 'I', 'T', 'I', 'S', 'H', '_', 'I', 'N', 'D', 'I', 'A', 'N', '_', 'O', 'C', 'E', 'A', 'N', '_', 'T', 'E', 'R', 'R', 'I', 'T', 'O', 'R', 'Y', 0,
    'w', 'x', 'N', 'a', 'v', 'i', 'g', 'a', 't', 'i', 'o', 'n', 'K', 'e', 'y', 'E', 'v', 'e', 'n', 't', ':', ':', 'w', 'x', 'N', 'a', 'v', 'i', 'g', 'a', 't', 'i', 'o', 'n', 'K', 'e', 'y', 'E', 'v', 'e', 'n', 't', 'F', 'l', 'a', 'g', 's', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'L', 'A', 'T', 'I', 'N', '_', 'A', 'L', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'L', 'A', 'T', 'I', 'N', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'B', 'O', 'N', 'A', 'I', 'R', 'E', '_', 'S', 'I', 'N', 'T', '_', 'E', 'U', 'S', 'T', 'A', 'T', 'I', 'U', 'S', '_', 'A', 'N', 'D', '_', 'S', 'A', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'S', 'N', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'B', 'O', 'S', 'N', 'I', 'A', '_', 'A', 'N', 'D', '_', 'H', 'E', 'R', 'Z', 'E', 'G', 'O', 'V', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'B', 'O', 'S', 'N', 'I', 'A', '_', 'A', 'N', 'D', '_', 'H', 'E', 'R', 'Z', 'E', 'G', 'O', 'V', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'T', 'A', 'N', 'D', 'A', 'R', 'D', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'A', 'N', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'T', 'I', 'F', 'I', 'N', 'A', 'G', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'T', '_', 'V', 'I', 'N', 'C', 'E', 'N', 'T', '_', 'A', 'N', 'D', '_', 'G', 'R', 'E', 'N', 'A', 'D', 'I', 'N', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'T', 'I', 'F', 'I', 'N', 'A', 'G', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'O', 'R', 'T', 'H', 'E', 'R', 'N', '_', 'M', 'A', 'R', 'I', 'A', 'N', 'A', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'T', 'U', 'R', 'K', 'S', '_', 'A', 'N', 'D', '_', 'C', 'A', 'I', 'C', 'O', 'S', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'N', 'G', 'A', 'L', 'A', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'F', 'R', 'I', 'C', 'A', 'N', '_', 'R', 'E', 'P', 'U', 'B', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'S', 'A', 'O', '_', 'T', 'O', 'M', 'E', '_', 'A', 'N', 'D', '_', 'P', 'R', 'I', 'N', 'C', 'I', 'P', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 'I', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'R', 'O', 'A', 'T', 'I', 'A', 'N', '_', 'B', 'O', 'S', 'N', 'I', 'A', '_', 'A', 'N', 'D', '_', 'H', 'E', 'R', 'Z', 'E', 'G', 'O', 'V', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'F', 'R', 'I', 'C', 'A', 'N', '_', 'R', 'E', 'P', 'U', 'B', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'N', 'G', 'H', 'O', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'F', 'R', 'I', 'C', 'A', 'N', '_', 'R', 'E', 'P', 'U', 'B', 'L', 'I', 'C', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'I', 'G', 'H', 'T', '_', 'P', 'A', 'R', 'E', 'N', 'T', 'H', 'E', 'S', 'I', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'R', 'I', 'T', 'I', 'S', 'H', '_', 'V', 'I', 'R', 'G', 'I', 'N', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', '_', 'T', 'R', 'A', 'D', 'I', 'T', 'I', 'O', 'N', 'A', 'L', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', '_', 'P', 'E', 'R', 'S', 'O', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'A', 'F', 'G', 'H', 'A', 'N', 'I', 'S', 'T', 'A', 'N', 0,
    'S', 'V', 'G', '_', 'S', 'H', 'A', 'P', 'E', '_', 'R', 'E', 'N', 'D', 'E', 'R', 'I', 'N', 'G', '_', 'G', 'E', 'O', 'M', 'E', 'T', 'R', 'I', 'C', '_', 'P', 'R', 'E', 'C', 'I', 'S', 'I', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'O', 'C', 'O', 'S', '_', 'K', 'E', 'E', 'L', 'I', 'N', 'G', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'T', '_', 'P', 'I', 'E', 'R', 'R', 'E', '_', 'A', 'N', 'D', '_', 'M', 'I', 'Q', 'U', 'E', 'L', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'S', 'O', 'T', 'H', 'O', '_', 'S', 'A', '_', 'L', 'E', 'B', 'O', 'A', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'P', 'A', 'L', 'E', 'S', 'T', 'I', 'N', 'I', 'A', 'N', '_', 'A', 'U', 'T', 'H', 'O', 'R', 'I', 'T', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 'I', '_', 'L', 'A', 'T', 'I', 'N', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'T', 'R', 'A', 'D', 'I', 'T', 'I', 'O', 'N', 'A', 'L', '_', 'E', 'X', 'P', 'L', 'I', 'C', 'I', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'U', 'N', 'I', 'T', 'E', 'D', '_', 'A', 'R', 'A', 'B', '_', 'E', 'M', 'I', 'R', 'A', 'T', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'E', 'Q', 'U', 'A', 'T', 'O', 'R', 'I', 'A', 'L', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'D', 'O', 'U', 'B', 'L', 'E', '_', 'S', 'T', 'R', 'I', 'K', 'E', 'T', 'H', 'R', 'O', 'U', 'G', 'H', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'U', 'P', 'P', 'R', 'E', 'S', 'S', '_', 'H', 'Y', 'P', 'H', 'E', 'N', 'A', 'T', 'I', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'S', 'I', 'M', 'P', 'L', 'I', 'F', 'I', 'E', 'D', '_', 'E', 'X', 'P', 'L', 'I', 'C', 'I', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'S', 'I', 'M', 'P', 'L', 'I', 'F', 'I', 'E', 'D', '_', 'H', 'O', 'N', 'G', 'K', 'O', 'N', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'A', 'N', 'T', 'I', 'G', 'U', 'A', '_', 'A', 'N', 'D', '_', 'B', 'A', 'R', 'B', 'U', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'U', 'S', '_', 'O', 'U', 'T', 'L', 'Y', 'I', 'N', 'G', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'A', 'V', 'A', 'N', 'E', 'S', 'E', '_', 'J', 'A', 'V', 'A', 'N', 'E', 'S', 'E', '_', 'I', 'N', 'D', 'O', 'N', 'E', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'S', 'H', 'M', 'I', 'R', 'I', '_', 'P', 'E', 'R', 'S', 'O', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', '_', 'T', 'R', 'A', 'D', 'I', 'T', 'I', 'O', 'N', 'A', 'L', '_', 'C', 'H', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'M', 'O', 'N', 'T', 'E', 'N', 'E', 'G', 'R', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'T', 'A', 'N', 'D', 'A', 'R', 'D', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'A', 'N', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'L', 'E', 'T', 'T', 'E', 'R', 'S', '_', 'L', 'O', 'W', 'E', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'L', 'E', 'T', 'T', 'E', 'R', 'S', '_', 'U', 'P', 'P', 'E', 'R', 0,
    'w', 'x', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'W', 'i', 'n', 'd', 'o', 'w', ':', ':', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'S', 'e', 'r', 'i', 'a', 'l', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', ':', ':', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 'R', 'e', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'i', 'n', 'g', 'G', 'u', 'a', 'r', 'd', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'T', '_', 'K', 'I', 'T', 'T', 'S', '_', 'A', 'N', 'D', '_', 'N', 'E', 'V', 'I', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'U', 'K', 'T', 'I', 'T', 'U', 'T', '_', 'S', 'Y', 'L', 'L', 'A', 'B', 'I', 'C', 'S', '_', 'C', 'A', 'N', 'A', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'C', 'E', 'D', 'O', 'N', 'I', 'A', 'N', '_', 'N', 'O', 'R', 'T', 'H', '_', 'M', 'A', 'C', 'E', 'D', 'O', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'H', 'A', 'E', 'T', 'O', '_', 'R', 'O', 'M', 'A', 'N', 'C', 'E', '_', 'S', 'W', 'I', 'T', 'Z', 'E', 'R', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'U', 'T', 'H', '_', 'N', 'D', 'E', 'B', 'E', 'L', 'E', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'D', 'O', 'M', 'I', 'N', 'I', 'C', 'A', 'N', '_', 'R', 'E', 'P', 'U', 'B', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'I', 'S', 'S', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'L', 'I', 'E', 'C', 'H', 'T', 'E', 'N', 'S', 'T', 'E', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'C', 'H', 'E', 'L', 'H', 'I', 'T', '_', 'T', 'I', 'F', 'I', 'N', 'A', 'G', 'H', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'O', 'S', 'X', 'E', 'n', 'a', 'b', 'l', 'e', 'A', 'u', 't', 'o', 'm', 'a', 't', 'i', 'c', 'Q', 'u', 'o', 't', 'e', 'S', 'u', 'b', 's', 't', 'i', 't', 'u', 't', 'i', 'o', 'n', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'D', 'B', 'L', '_', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', '_', 'P', 'O', 'S', 'T', 'C', 'A', 'R', 'D', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'O', 'N', 'T', 'I', 'N', 'U', 'A', 'T', 'I', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 'P', 'I', 'C', 'K', 'E', 'R', '_', 'D', 'I', 'A', 'L', 'O', 'G', '_', 'C', 'A', 'N', 'C', 'E', 'L', 'L', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'A', 'C', 'C', 'E', 'L', 'E', 'R', 'A', 'T', 'O', 'R', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'D', 'E', 'S', 'C', 'R', 'I', 'P', 'T', 'I', 'O', 'N', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'B', 'U', 'A', 'N', 'O', '_', 'L', 'A', 'T', 'I', 'N', '_', 'P', 'H', 'I', 'L', 'I', 'P', 'P', 'I', 'N', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'U', 'S', '_', 'V', 'I', 'R', 'G', 'I', 'N', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'G', 'U', 'I', 'N', 'E', 'A', '_', 'B', 'I', 'S', 'S', 'A', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'S', 'H', 'M', 'I', 'R', 'I', '_', 'D', 'E', 'V', 'A', 'N', 'A', 'G', 'A', 'R', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'U', 'R', 'D', 'I', 'S', 'H', '_', 'P', 'E', 'R', 'S', 'O', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'I', 'R', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'K', 'H', 'U', 'W', 'A', '_', 'M', 'E', 'E', 'T', 'T', 'O', '_', 'M', 'O', 'Z', 'A', 'M', 'B', 'I', 'Q', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'E', 'Q', 'U', 'A', 'T', 'O', 'R', 'I', 'A', 'L', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'J', 'I', 'K', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'T', 'A', 'J', 'I', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'U', 'Z', 'B', 'E', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'O', 'S', 'X', 'E', 'n', 'a', 'b', 'l', 'e', 'A', 'u', 't', 'o', 'm', 'a', 't', 'i', 'c', 'D', 'a', 's', 'h', 'S', 'u', 'b', 's', 't', 'i', 't', 'u', 't', 'i', 'o', 'n', 0,
    'S', 'V', 'G', '_', 'S', 'H', 'A', 'P', 'E', '_', 'R', 'E', 'N', 'D', 'E', 'R', 'I', 'N', 'G', '_', 'O', 'P', 'T', 'I', 'M', 'I', 'S', 'E', '_', 'S', 'P', 'E', 'E', 'D', 0,
    'S', 'V', 'G', '_', 'S', 'H', 'A', 'P', 'E', '_', 'R', 'E', 'N', 'D', 'E', 'R', 'I', 'N', 'G', '_', 'O', 'P', 'T', 'I', 'M', 'I', 'Z', 'E', '_', 'S', 'P', 'E', 'E', 'D', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'A', 'L', 'I', 'G', 'N', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'P', 'A', 'R', 'E', 'N', 'T', 'H', 'E', 'S', 'E', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'O', 'M', 'A', 'N', '_', 'L', 'O', 'W', 'E', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'R', 'O', 'M', 'A', 'N', '_', 'U', 'P', 'P', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 'P', 'I', 'C', 'K', 'E', 'R', '_', 'C', 'U', 'R', 'R', 'E', 'N', 'T', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', 'H', 'E', 'L', 'P', 'S', 'T', 'A', 'R', 'T', 0,
    'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'F', 'L', 'A', 'G', 'S', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'M', 'N', 'E', 'M', 'O', 'N', 'I', 'C', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'L', 'B', 'A', 'N', 'I', 'A', 'N', '_', 'N', 'O', 'R', 'T', 'H', '_', 'M', 'A', 'C', 'E', 'D', 'O', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'K', 'M', 'A', '_', 'C', 'H', 'A', 'K', 'M', 'A', '_', 'B', 'A', 'N', 'G', 'L', 'A', 'D', 'E', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'S', 'I', 'M', 'P', 'L', 'I', 'F', 'I', 'E', 'D', '_', 'M', 'A', 'C', 'A', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'H', 'R', 'I', 'S', 'T', 'M', 'A', 'S', '_', 'I', 'S', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'F', 'A', 'L', 'K', 'L', 'A', 'N', 'D', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'R', 'S', 'H', 'A', 'L', 'L', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'P', 'A', 'P', 'U', 'A', '_', 'N', 'E', 'W', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'P', 'I', 'T', 'C', 'A', 'I', 'R', 'N', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'E', 'Q', 'U', 'A', 'T', 'O', 'R', 'I', 'A', 'L', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'W', 'A', 'L', 'L', 'I', 'S', '_', 'A', 'N', 'D', '_', 'F', 'U', 'T', 'U', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'B', 'U', 'R', 'K', 'I', 'N', 'A', '_', 'F', 'A', 'S', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'S', 'I', 'E', 'R', 'R', 'A', '_', 'L', 'E', 'O', 'N', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'X', 'E', 'M', 'B', 'O', 'U', 'R', 'G', 'I', 'S', 'H', '_', 'L', 'U', 'X', 'E', 'M', 'B', 'O', 'U', 'R', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'W', 'E', 'G', 'I', 'A', 'N', '_', 'N', 'Y', 'N', 'O', 'R', 'S', 'K', '_', 'N', 'O', 'R', 'W', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'G', 'U', 'I', 'N', 'E', 'A', '_', 'B', 'I', 'S', 'S', 'A', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'M', 'O', 'N', 'T', 'E', 'N', 'E', 'G', 'R', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'I', 'S', 'S', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'S', 'W', 'I', 'T', 'Z', 'E', 'R', 'L', 'A', 'N', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'A', 'V', 'O', 'I', 'D', '_', 'P', 'A', 'G', 'E', '_', 'B', 'R', 'E', 'A', 'K', '_', 'B', 'E', 'F', 'O', 'R', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'A', 'L', 'I', 'G', 'N', '_', 'L', 'E', 'F', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'D', 'E', 'F', 'A', 'C', 'T', 'I', 'O', 'N', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 'R', 'E', 'M', 'O', 'V', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 'W', 'I', 'T', 'H', 'I', 'N', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'U', 'L', 'T', 'I', 'S', 'E', 'L', 'E', 'C', 'T', 'A', 'B', 'L', 'E', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'S', 'T', 'A', 'N', 'D', 'A', 'R', 'D', '_', 'S', 'I', 'Z', 'E', 'R', 0,
    'G', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'd', 'A', 's', 'c', 'e', 'n', 'd', 'i', 'n', 'g', 'S', 'o', 'r', 't', 'I', 'n', 'd', 'i', 'c', 'a', 't', 'o', 'r', 0,
    'I', 's', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'A', 'T', 'L', 'A', 'S', '_', 'T', 'A', 'M', 'A', 'Z', 'I', 'G', 'H', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'O', 'L', 'O', 'M', 'O', 'N', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'P', 'O', 'L', 'Y', 'N', 'E', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'B', 'U', 'V', 'E', 'R', 'D', 'I', 'A', 'N', 'U', '_', 'C', 'A', 'B', 'O', '_', 'V', 'E', 'R', 'D', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', '_', 'B', 'R', 'U', 'N', 'E', 'I', '_', 'D', 'A', 'R', 'U', 'S', 'S', 'A', 'L', 'A', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'W', 'E', 'G', 'I', 'A', 'N', '_', 'B', 'O', 'K', 'M', 'A', 'L', '_', 'N', 'O', 'R', 'W', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'K', 'O', 'S', 'O', 'V', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'S', 'E', 'R', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'D', 'H', 'I', '_', 'D', 'E', 'V', 'A', 'N', 'A', 'G', 'A', 'R', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'C', 'H', 'E', 'L', 'H', 'I', 'T', '_', 'L', 'A', 'T', 'I', 'N', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', 'A', 'C', 'T', 'I', 'V', 'E', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 0,
    'S', 'u', 's', 'p', 'e', 'n', 'd', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'O', 'f', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'E', 'v', 'e', 'n', 't', 's', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'A', 'V', 'O', 'I', 'D', '_', 'P', 'A', 'G', 'E', '_', 'B', 'R', 'E', 'A', 'K', '_', 'A', 'F', 'T', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'L', 'I', 'T', 'T', 'E', 'R', '_', 'S', 'A', 'S', 'H', '_', 'P', 'O', 'S', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'M', 'O', 'D', 'A', 'L', '_', 'D', 'I', 'A', 'L', 'O', 'G', '_', 'C', 'L', 'O', 'S', 'E', 'D', 0,
    'w', 'x', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'S', 't', 'a', 't', 'i', 'c', 'B', 'i', 't', 'm', 'a', 'p', ':', ':', 'S', 'c', 'a', 'l', 'e', 'M', 'o', 'd', 'e', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'L', 'O', 'C', 'A', 'T', 'I', 'O', 'N', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', 'H', 'E', 'L', 'P', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'P', 'O', 'P', 'U', 'P', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'I', 'N', 'G', 'S', 'T', 'A', 'R', 'T', 0,
    'C', 'O', 'N', 'F', 'I', 'G', '_', 'U', 'S', 'E', '_', 'N', 'O', '_', 'E', 'S', 'C', 'A', 'P', 'E', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 'S', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'L', 'O', 'O', 'S', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'M', 'O', 'D', 'E', '_', 'D', 'I', 'S', 'A', 'B', 'L', 'E', 'D', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'l', 'y', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'i', 'l', 't', 'e', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 'O', 'f', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'F', 'o', 'r', 'S', 'c', 'r', 'o', 'l', 'l', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'R', 'I', 'K', 'A', 'A', 'N', 'S', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'A', 'M', 'E', 'R', 'I', 'C', 'A', 'N', '_', 'S', 'A', 'M', 'O', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'A', 'Y', 'M', 'A', 'N', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'O', 'R', 'F', 'O', 'L', 'K', '_', 'I', 'S', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'A', 'E', 'R', 'O', 'E', 'S', 'E', '_', 'F', 'A', 'R', 'O', 'E', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'M', 'A', 'U', 'R', 'I', 'T', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'U', 'K', 'T', 'I', 'T', 'U', 'T', '_', 'L', 'A', 'T', 'I', 'N', '_', 'C', 'A', 'N', 'A', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'O', 'W', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'N', 'E', 'T', 'H', 'E', 'R', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'B', 'A', '_', 'K', 'A', 'T', 'A', 'N', 'G', 'A', '_', 'C', 'O', 'N', 'G', 'O', '_', 'D', 'R', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'T', 'H', '_', 'N', 'D', 'E', 'B', 'E', 'L', 'E', '_', 'Z', 'I', 'M', 'B', 'A', 'B', 'W', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'S', 'W', 'I', 'T', 'Z', 'E', 'R', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'T', 'I', 'M', 'O', 'R', '_', 'L', 'E', 'S', 'T', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', '_', 'L', 'A', 'T', 'I', 'N', '_', 'U', 'Z', 'B', 'E', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'O', 'S', 'X', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'A', 'l', 'l', 'S', 'm', 'a', 'r', 't', 'S', 'u', 'b', 's', 't', 'i', 't', 'u', 't', 'i', 'o', 'n', 's', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', '_', 'P', 'O', 'S', 'T', 'C', 'A', 'R', 'D', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'R', 'e', 's', 'u', 'm', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'O', 'f', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'E', 'v', 'e', 'n', 't', 's', 0,
    'S', 'V', 'G', '_', 'S', 'H', 'A', 'P', 'E', '_', 'R', 'E', 'N', 'D', 'E', 'R', 'I', 'N', 'G', '_', 'C', 'R', 'I', 'S', 'P', '_', 'E', 'D', 'G', 'E', 'S', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'X', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 'T', 'E', 'X', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'A', 'N', 'D', 'A', 'R', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'M', 'A', 'L', 'L', '_', 'C', 'A', 'P', 'I', 'T', 'A', 'L', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'I', 'B', 'L', 'E', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'L', 'E', 'C', 'T', 'R', 'L', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'D', 'R', 'A', 'G', 'G', 'I', 'N', 'G', '_', 'C', 'A', 'N', 'C', 'E', 'L', 'L', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'L', 'I', 'T', 'T', 'E', 'R', '_', 'S', 'A', 'S', 'H', '_', 'P', 'O', 'S', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'P', 'a', 't', 'h', 's', ':', ':', 'C', 'o', 'n', 'f', 'i', 'g', 'F', 'i', 'l', 'e', 'C', 'o', 'n', 'v', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'R', 'A', 'G', 'D', 'R', 'O', 'P', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'I', 'N', 'I', 'M', 'I', 'Z', 'E', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'O', 'V', 'E', 'S', 'I', 'Z', 'E', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'E', 'X', 'T', 'S', 'E', 'L', 'E', 'C', 'T', 'A', 'B', 'L', 'E', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'I', 'P', 'P', 'L', 'E', '_', 'M', 'A', 'S', 'K', '_', 'O', 'P', 'A', 'Q', 'U', 'E', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 'F', 'r', 'o', 'm', 'N', 'a', 't', 'i', 'v', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'M', 'O', 'D', 'E', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'M', 'O', 'D', 'E', '_', 'E', 'N', 'A', 'B', 'L', 'E', 'D', 0,
    'F', 'i', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'W', 'i', 'l', 'd', 'c', 'a', 'r', 'd', 'S', 't', 'r', 0,
    'G', 'e', 't', 'W', 'e', 'i', 'g', 'h', 't', 'C', 'l', 'o', 's', 'e', 's', 't', 'T', 'o', 'N', 'u', 'm', 'e', 'r', 'i', 'c', 'V', 'a', 'l', 'u', 'e', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'M', 'A', 'N', 'A', 'N', 'K', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'M', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'H', 'O', 'N', 'G', '_', 'K', 'O', 'N', 'G', '_', 'S', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'S', 'H', 'M', 'I', 'R', 'I', '_', 'P', 'E', 'R', 'S', 'O', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'O', 'W', 'E', 'R', '_', 'S', 'O', 'R', 'B', 'I', 'A', 'N', '_', 'G', 'E', 'R', 'M', 'A', 'N', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', '_', 'T', 'R', 'A', 'D', 'I', 'T', 'I', 'O', 'N', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'C', 'A', 'B', 'O', '_', 'V', 'E', 'R', 'D', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'L', 'U', 'X', 'E', 'M', 'B', 'O', 'U', 'R', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'M', 'O', 'Z', 'A', 'M', 'B', 'I', 'Q', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'T', 'S', 'W', 'A', 'N', 'A', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'A', 'M', 'E', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'E', 'D', 'I', 'S', 'H', '_', 'A', 'L', 'A', 'N', 'D', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'P', 'P', 'E', 'R', '_', 'S', 'O', 'R', 'B', 'I', 'A', 'N', '_', 'G', 'E', 'R', 'M', 'A', 'N', 'Y', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 'G', 'R', 'I', 'D', 0,
    'S', 'Y', 'S', '_', 'C', 'A', 'N', '_', 'D', 'R', 'A', 'W', '_', 'F', 'R', 'A', 'M', 'E', '_', 'D', 'E', 'C', 'O', 'R', 'A', 'T', 'I', 'O', 'N', 'S', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 'T', 'E', 'X', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'O', 'U', 'T', 'L', 'I', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'A', 'M', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'T', 'R', 'I', 'K', 'E', 'T', 'H', 'R', 'O', 'U', 'G', 'H', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'A', 'M', 'E', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'n', 't', 'r', 'o', 'l', 's', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'O', 'I', 'C', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'L', 'I', 'T', 'T', 'E', 'R', '_', 'S', 'A', 'S', 'H', '_', 'P', 'O', 'S', '_', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'H', 'i', 's', 't', 'o', 'r', 'y', 'M', 'e', 'n', 'u', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'P', 'A', 'R', 'E', 'N', 'T', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 'A', 'D', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'A', 'P', 'T', 'U', 'R', 'E', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'P', 'O', 'P', 'U', 'P', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'I', 'N', 'G', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'L', 'E', 'R', 'T', '_', 'M', 'E', 'D', 'I', 'U', 'M', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 'F', 'r', 'o', 'm', 'N', 'a', 't', 'i', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'E', 'x', 't', 'e', 'n', 'd', 'R', 'u', 'l', 'e', 's', 'A', 'n', 'd', 'A', 'l', 't', 'e', 'r', 'n', 'a', 't', 'e', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'M', 'e', 'n', 'u', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 'A', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 'I', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'K', 'U', 'R', 'D', 'I', 'S', 'H', '_', 'I', 'R', 'A', 'Q', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'U', 'R', 'C', 'H', '_', 'S', 'L', 'A', 'V', 'I', 'C', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'A', 'R', 'I', 'B', 'B', 'E', 'A', 'N', '_', 'C', 'B', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'O', 'O', 'K', '_', 'I', 'S', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'I', 'E', 'R', 'R', 'A', '_', 'L', 'E', 'O', 'N', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'I', 'N', 'T', '_', 'M', 'A', 'A', 'R', 'T', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'I', 'L', 'I', 'P', 'I', 'N', 'O', '_', 'P', 'H', 'I', 'L', 'I', 'P', 'P', 'I', 'N', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'G', 'U', 'I', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'N', 'E', 'W', '_', 'C', 'A', 'L', 'E', 'D', 'O', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'T', '_', 'B', 'A', 'R', 'T', 'H', 'E', 'L', 'E', 'M', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'L', 'I', 'E', 'C', 'H', 'T', 'E', 'N', 'S', 'T', 'E', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'D', 'O', 'N', 'E', 'S', 'I', 'A', 'N', '_', 'I', 'N', 'D', 'O', 'N', 'E', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'T', 'A', 'L', 'I', 'A', 'N', '_', 'V', 'A', 'T', 'I', 'C', 'A', 'N', '_', 'C', 'I', 'T', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'Y', 'R', 'A', 'B', 'O', 'R', 'O', '_', 'S', 'E', 'N', 'N', 'I', '_', 'M', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'T', 'H', 'U', 'A', 'N', 'I', 'A', 'N', '_', 'L', 'I', 'T', 'H', 'U', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'A', 'P', 'I', 'A', 'M', 'E', 'N', 'T', 'O', '_', 'C', 'A', 'R', 'I', 'B', 'B', 'E', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'B', 'R', 'A', 'Z', 'I', 'L', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'M', 'A', 'C', 'A', 'O', '_', 'S', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'S', 'O', 'U', 'T', 'H', 'E', 'R', 'N', '_', 'N', 'O', 'R', 'W', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'S', 'O', 'U', 'T', 'H', 'E', 'R', 'N', '_', 'S', 'W', 'E', 'D', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'K', 'O', 'S', 'O', 'V', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'S', 'E', 'R', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'S', 'O', 'T', 'H', 'O', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'H', 'O', 'N', 'A', '_', 'L', 'A', 'T', 'I', 'N', '_', 'Z', 'I', 'M', 'B', 'A', 'B', 'W', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'S', 'W', 'A', 'T', 'I', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'U', 'R', 'K', 'M', 'E', 'N', '_', 'T', 'U', 'R', 'K', 'M', 'E', 'N', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'I', 'S', 'T', '_', 'G', 'E', 'T', 'S', 'U', 'B', 'I', 'T', 'E', 'M', 'R', 'E', 'C', 'T', '_', 'W', 'H', 'O', 'L', 'E', 'I', 'T', 'E', 'M', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', '_', 'E', 'X', 'T', 'R', 'A', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'S', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'A', 'p', 'p', 'l', 'y', 'C', 'h', 'a', 'n', 'g', 'e', 's', 'I', 'm', 'm', 'e', 'd', 'i', 'a', 't', 'e', 'l', 'y', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'B', 'I', 'T', 'M', 'A', 'P', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'P', 'E', 'R', 'I', 'O', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'Y', 'M', 'B', 'O', 'L', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'L', 'I', 'N', 'E', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'P', 'A', 'R', 'A', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'B', 'E', 'F', 'O', 'R', 'E', 0,
    'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'c', 'o', 'n', '_', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'E', 'x', 'p', 'a', 'n', 'd', 'e', 'd', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'O', 'I', 'C', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'I', 'B', 'L', 'E', 'P', 'A', 'N', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', 'B', 'O', 'O', 'K', '_', 'N', 'O', 'D', 'E', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'E', 'D', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', ':', ':', 'M', 'e', 's', 's', 'a', 'g', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'S', 'T', 'A', 'T', 'E', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'V', 'A', 'L', 'U', 'E', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'I', 'A', 'L', 'O', 'G', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'R', 'A', 'G', 'D', 'R', 'O', 'P', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'I', 'N', 'I', 'M', 'I', 'Z', 'E', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'O', 'V', 'E', 'S', 'I', 'Z', 'E', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'W', 'I', 'T', 'C', 'H', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'E', 'L', 'F', 'V', 'O', 'I', 'C', 'I', 'N', 'G', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'U', 'N', 'A', 'V', 'A', 'I', 'L', 'A', 'B', 'L', 'E', 0,
    'C', 'H', 'K', '_', 'A', 'L', 'L', 'O', 'W', '_', '3', 'R', 'D', '_', 'S', 'T', 'A', 'T', 'E', '_', 'F', 'O', 'R', '_', 'U', 'S', 'E', 'R', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'i', 'b', 'l', 'e', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'i', 't', 'm', 'a', 'p', 'F', 'r', 'o', 'm', 'N', 'a', 't', 'i', 'v', 'e', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'l', 'y', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'C', 'p', 'u', 'A', 'r', 'c', 'h', 'i', 't', 'e', 'c', 't', 'u', 'r', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'F', 'a', 'm', 'i', 'l', 'y', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'P', 'a', 's', 's', 'w', 'o', 'r', 'd', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 'P', 'r', 'o', 'm', 'p', 't', 'S', 't', 'r', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'S', 'A', 'U', 'D', 'I', '_', 'A', 'R', 'A', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'K', 'M', 'A', '_', 'C', 'H', 'A', 'K', 'M', 'A', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'T', 'R', 'A', 'D', 'I', 'T', 'I', 'O', 'N', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'I', 'S', 'L', 'E', '_', 'O', 'F', '_', 'M', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'E', 'T', 'H', 'E', 'R', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'E', 'W', '_', 'Z', 'E', 'A', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'P', 'H', 'I', 'L', 'I', 'P', 'P', 'I', 'N', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'P', 'U', 'E', 'R', 'T', 'O', '_', 'R', 'I', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'O', 'U', 'T', 'H', '_', 'S', 'U', 'D', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'W', 'I', 'T', 'Z', 'E', 'R', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'B', 'U', 'R', 'K', 'I', 'N', 'A', '_', 'F', 'A', 'S', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'O', 'T', 'E', '_', 'D', 'I', 'V', 'O', 'I', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'I', 'S', 'I', 'A', 'N', '_', 'N', 'E', 'T', 'H', 'E', 'R', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'L', 'I', 'B', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'S', 'E', 'N', 'E', 'G', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'U', 'S', 'A', '_', 'L', 'A', 'T', 'I', 'N', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'U', 'K', 'T', 'I', 'T', 'U', 'T', '_', 'S', 'Y', 'L', 'L', 'A', 'B', 'I', 'C', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'S', 'H', 'M', 'I', 'R', 'I', '_', 'D', 'E', 'V', 'A', 'N', 'A', 'G', 'A', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'G', 'A', 'S', 'Y', '_', 'M', 'A', 'D', 'A', 'G', 'A', 'S', 'C', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', '_', 'Y', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'H', 'A', 'L', 'E', 'S', 'E', '_', 'S', 'R', 'I', '_', 'L', 'A', 'N', 'K', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'E', 'L', '_', 'S', 'A', 'L', 'V', 'A', 'D', 'O', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'P', 'H', 'I', 'L', 'I', 'P', 'P', 'I', 'N', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'P', 'U', 'E', 'R', 'T', 'O', '_', 'R', 'I', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'S', 'O', 'N', 'G', 'A', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'S', 'T', 'A', 'T', 'E', 'I', 'C', 'O', 'N', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'I', 'P', 'P', 'L', 'E', '_', 'M', 'A', 'S', 'K', '_', 'O', 'P', 'A', 'Q', 'U', 'E', 0,
    'R', 'E', 'S', 'E', 'R', 'V', 'E', '_', 'S', 'P', 'A', 'C', 'E', '_', 'E', 'V', 'E', 'N', '_', 'I', 'F', '_', 'H', 'I', 'D', 'D', 'E', 'N', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'U', 'P', 'E', 'R', 'S', 'C', 'R', 'I', 'P', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'S', 'T', 'R', 'I', 'K', 'E', 'T', 'H', 'R', 'O', 'U', 'G', 'H', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'L', 'I', 'N', 'E', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'T', 'W', 'I', 'C', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'P', 'A', 'R', 'A', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'A', 'F', 'T', 'E', 'R', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', '_', 'P', 'A', 'N', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'L', 'O', 'W', 'E', 'R', 'P', 'A', 'R', 'T', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'S', 'T', 'A', 'T', 'E', 'I', 'C', 'O', 'N', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'U', 'P', 'P', 'E', 'R', 'P', 'A', 'R', 'T', 0,
    'w', 'x', 'D', 'i', 'a', 'l', 'o', 'g', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'L', 'E', 'C', 'T', 'R', 'L', '_', 'F', 'I', 'L', 'E', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'L', 'E', 'C', 'T', 'R', 'L', '_', 'F', 'I', 'L', 'T', 'E', 'R', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'L', 'E', 'C', 'T', 'R', 'L', '_', 'F', 'O', 'L', 'D', 'E', 'R', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'T', 'H', 'U', 'M', 'B', 'R', 'E', 'L', 'E', 'A', 'S', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'L', 'I', 'T', 'T', 'E', 'R', '_', 'D', 'O', 'U', 'B', 'L', 'E', 'C', 'L', 'I', 'C', 'K', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'O', 'L', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', 'B', 'O', 'O', 'K', '_', 'N', 'O', 'D', 'E', '_', 'E', 'X', 'P', 'A', 'N', 'D', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'S', 'T', 'A', 'T', 'E', '_', 'I', 'M', 'A', 'G', 'E', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'H', 'e', 'l', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 'H', 'e', 'l', 'p', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'w', 'x', 'I', 'n', 'd', 'i', 'v', 'i', 'd', 'u', 'a', 'l', 'L', 'a', 'y', 'o', 'u', 't', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    'w', 'x', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'P', 'a', 't', 'h', 's', ':', ':', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'C', 'a', 't', 0,
    'w', 'x', 'S', 't', 'o', 'c', 'k', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 'P', 'a', 'g', 'e', ':', ':', 'K', 'i', 'n', 'd', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'H', 'E', 'L', 'P', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'N', 'A', 'M', 'E', 'C', 'H', 'A', 'N', 'G', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'A', 'P', 'T', 'U', 'R', 'E', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'F', 'O', 'R', 'E', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'L', 'E', 'R', 'T', '_', 'H', 'I', 'G', 'H', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'H', 'O', 'T', 'T', 'R', 'A', 'C', 'K', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'A', 'B', 'L', 'E', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'C', 'o', 'u', 'n', 't', 'r', 'y', '_', 'W', 'e', 's', 't', 'e', 'r', 'n', 'E', 'u', 'r', 'o', 'p', 'e', '_', 'S', 't', 'a', 'r', 't', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'A', 'N', 'Y', '_', 'S', 'I', 'Z', 'E', 'R', 0,
    'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'F', 'L', 'A', 'G', 'S', '_', 'E', 'X', 'P', 'A', 'N', 'D', '_', 'T', 'A', 'B', 'S', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'C', 'H', 'I', 'N', 'E', 'S', 'E', 'S', 'I', 'M', 'P', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'C', 'H', 'I', 'N', 'E', 'S', 'E', 'T', 'R', 'A', 'D', 0,
    'G', 'e', 't', 'M', 'a', 'c', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'G', 'e', 't', 'N', 'o', 'n', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'A', 'R', 'R', 'A', 'N', 'G', 'E', '_', 'I', 'C', 'O', 'N', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'S', 'O', 'U', 'T', 'H', '_', 'S', 'U', 'D', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'L', 'A', 'R', 'U', 'S', 'I', 'A', 'N', '_', 'B', 'E', 'L', 'A', 'R', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'N', 'G', 'A', 'L', 'I', '_', 'B', 'A', 'N', 'G', 'L', 'A', 'D', 'E', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'U', 'L', 'G', 'A', 'R', 'I', 'A', 'N', '_', 'B', 'U', 'L', 'G', 'A', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'S', 'I', 'M', 'P', 'L', 'I', 'F', 'I', 'E', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'S', 'I', 'N', 'T', '_', 'M', 'A', 'A', 'R', 'T', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'D', 'A', 'G', 'A', 'S', 'C', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'I', 'C', 'R', 'O', 'N', 'E', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'O', 'N', 'T', 'S', 'E', 'R', 'R', 'A', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'E', 'Y', 'C', 'H', 'E', 'L', 'L', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'G', 'A', 'M', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'T', 'A', 'L', 'I', 'A', 'N', '_', 'S', 'A', 'N', '_', 'M', 'A', 'R', 'I', 'N', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'A', 'V', 'A', 'N', 'E', 'S', 'E', '_', 'I', 'N', 'D', 'O', 'N', 'E', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'O', 'L', 'A', '_', 'F', 'O', 'N', 'Y', 'I', '_', 'S', 'E', 'N', 'E', 'G', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'N', 'Y', 'A', 'R', 'W', 'A', 'N', 'D', 'A', '_', 'R', 'W', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'R', 'G', 'H', 'I', 'Z', '_', 'K', 'Y', 'R', 'G', 'Y', 'Z', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'R', 'E', 'A', 'N', '_', 'N', 'O', 'R', 'T', 'H', '_', 'K', 'O', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'O', 'W', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'G', 'E', 'R', 'M', 'A', 'N', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'R', 'I', 'S', 'Y', 'E', 'N', '_', 'M', 'A', 'U', 'R', 'I', 'T', 'I', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'G', 'I', 'E', 'M', 'B', 'O', 'O', 'N', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'T', 'H', 'E', 'R', 'N', '_', 'L', 'U', 'R', 'I', '_', 'I', 'R', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'T', 'H', 'E', 'R', 'N', '_', 'L', 'U', 'R', 'I', '_', 'I', 'R', 'A', 'Q', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'A', 'S', 'H', 'T', 'O', '_', 'A', 'F', 'G', 'H', 'A', 'N', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'K', 'A', 'Z', 'A', 'K', 'H', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'K', 'Y', 'R', 'G', 'Y', 'Z', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'I', 'N', 'A', 'R', 'I', '_', 'F', 'I', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'S', 'K', 'O', 'L', 'T', '_', 'F', 'I', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'L', 'O', 'V', 'E', 'N', 'I', 'A', 'N', '_', 'S', 'L', 'O', 'V', 'E', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'C', 'O', 'S', 'T', 'A', '_', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'C', 'H', 'E', 'L', 'H', 'I', 'T', '_', 'T', 'I', 'F', 'I', 'N', 'A', 'G', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', '_', 'P', 'E', 'R', 'S', 'O', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'E', 'N', 'D', 'A', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'I', 'E', 'T', 'N', 'A', 'M', 'E', 'S', 'E', '_', 'V', 'I', 'E', 'T', 'N', 'A', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'A', 'L', 'S', 'E', 'R', '_', 'S', 'W', 'I', 'T', 'Z', 'E', 'R', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'X', 'H', 'O', 'S', 'A', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'O', 'S', 'X', 'E', 'n', 'a', 'b', 'l', 'e', 'N', 'e', 'w', 'L', 'i', 'n', 'e', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'm', 'e', 'n', 't', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'D', 'B', 'L', '_', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', '_', 'P', 'O', 'S', 'T', 'C', 'A', 'R', 'D', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'L', 'I', 'D', 'E', '_', 'T', 'O', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'S', 'e', 't', 'M', 'a', 'c', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'L', 'I', 'N', 'E', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'H', 'A', 'L', 'F', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', 0,
    'U', 'P', 'D', 'A', 'T', 'E', '_', 'U', 'I', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'I', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'F', 'I', 'L', 'E', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'B', 'E', 'G', 'I', 'N', '_', 'L', 'A', 'B', 'E', 'L', '_', 'E', 'D', 'I', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'D', 'E', 'L', 'E', 'T', 'E', '_', 'A', 'L', 'L', '_', 'I', 'T', 'E', 'M', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'U', 'S', 'E', '_', 'C', 'A', 'P', 'T', 'U', 'R', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'N', 'O', 'T', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'O', 'L', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', 'B', 'O', 'O', 'K', '_', 'P', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'B', 'E', 'G', 'I', 'N', '_', 'L', 'A', 'B', 'E', 'L', '_', 'E', 'D', 'I', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'S', 'h', 'a', 'r', 'e', 'd', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'w', 'x', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'P', 'a', 't', 'h', 's', ':', ':', 'F', 'i', 'l', 'e', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'I', 'A', 'L', 'O', 'G', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'S', 'T', 'A', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'W', 'I', 'T', 'C', 'H', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'L', 'E', 'R', 'T', '_', 'L', 'O', 'W', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'F', 'O', 'C', 'U', 'S', 'A', 'B', 'L', 'E', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'I', 'N', 'V', 'I', 'S', 'I', 'B', 'L', 'E', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'O', 'F', 'F', 'S', 'C', 'R', 'E', 'E', 'N', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'R', 'O', 'T', 'E', 'C', 'T', 'E', 'D', 0,
    'A', 'd', 'd', 'C', 'a', 't', 'a', 'l', 'o', 'g', 'L', 'o', 'o', 'k', 'u', 'p', 'P', 'a', 't', 'h', 'P', 'r', 'e', 'f', 'i', 'x', 0,
    'A', 'u', 't', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 'e', 'd', 'P', 'a', 'i', 'n', 't', 'D', 'C', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'B', 'D', 'I', 'A', 'G', 'O', 'N', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'R', 'O', 'S', 'S', 'D', 'I', 'A', 'G', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'F', 'D', 'I', 'A', 'G', 'O', 'N', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'B', 'e', 'g', 'i', 'n', 'R', 'e', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'i', 'n', 'g', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'C', 'O', 'N', 'T', 'E', 'N', 'T', '_', 'P', 'R', 'O', 'T', 'E', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'A', 'B', 'L', 'E', 'D', 0,
    'C', 'a', 'n', 'A', 'c', 'c', 'e', 'p', 't', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 'F', 'r', 'o', 'm', 'U', 'n', 'k', 'n', 'o', 'w', 'n', 'D', 'C', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'e', 'd', 'B', 'u', 't', 't', 'o', 'n', 'S', 'i', 'z', 'e', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 't', 'd', 'D', 'i', 'a', 'l', 'o', 'g', 'B', 'u', 't', 't', 'o', 'n', 'S', 'i', 'z', 'e', 'r', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'C', 'E', 'N', 'T', 'R', 'A', 'L', 'E', 'U', 'R', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'D', 'E', 'V', 'A', 'N', 'A', 'G', 'A', 'R', 'I', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'V', 'I', 'A', 'T', 'N', 'A', 'M', 'E', 'S', 'E', 0,
    'G', 'T', 'K', 'A', 'l', 'l', 'o', 'w', 'D', 'i', 'a', 'g', 'n', 'o', 's', 't', 'i', 'c', 's', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'F', 'o', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 'F', 'r', 'a', 'c', 't', 'i', 'o', 'n', 'a', 'l', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'M', 'u', 'l', 't', 'i', 'L', 'i', 'n', 'e', 'T', 'e', 'x', 't', 'E', 'x', 't', 'e', 'n', 't', 0,
    'G', 'e', 't', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 'J', 'u', 'l', 'i', 'a', 'n', 'D', 'a', 'y', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'S', 'i', 'z', 'e', 'F', 'o', 'r', 0,
    'G', 'e', 't', 'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 's', 'C', 'o', 'u', 'n', 't', 0,
    'I', 'M', 'A', 'G', 'E', 'L', 'I', 'S', 'T', '_', 'D', 'R', 'A', 'W', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'R', 'I', 'K', 'A', 'A', 'N', 'S', '_', 'N', 'A', 'M', 'I', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'M', 'A', 'U', 'R', 'I', 'T', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 'I', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'N', 'G', 'L', 'A', '_', 'B', 'A', 'N', 'G', 'L', 'A', 'D', 'E', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'E', 'R', 'O', 'K', 'E', 'E', '_', 'C', 'H', 'E', 'R', 'O', 'K', 'E', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'S', 'I', 'N', 'G', 'A', 'P', 'O', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'O', 'L', 'O', 'G', 'N', 'I', 'A', 'N', '_', 'G', 'E', 'R', 'M', 'A', 'N', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'N', 'E', 'T', 'H', 'E', 'R', 'L', 'A', 'N', 'D', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'A', 'U', 'S', 'T', 'R', 'A', 'L', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'A', 'R', 'I', 'B', 'B', 'E', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'I', 'B', 'R', 'A', 'L', 'T', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'I', 'N', 'D', 'O', 'N', 'E', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'C', 'A', 'O', '_', 'S', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'U', 'R', 'I', 'T', 'I', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'I', 'N', 'G', 'A', 'P', 'O', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'G', 'U', 'A', 'D', 'E', 'L', 'O', 'U', 'P', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'L', 'U', 'X', 'E', 'M', 'B', 'O', 'U', 'R', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'A', 'D', 'A', 'G', 'A', 'S', 'C', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'A', 'R', 'T', 'I', 'N', 'I', 'Q', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'A', 'U', 'R', 'I', 'T', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'E', 'Y', 'C', 'H', 'E', 'L', 'L', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'G', 'H', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', '_', 'N', 'I', 'G', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'L', 'U', 'X', 'E', 'M', 'B', 'O', 'U', 'R', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'U', 'S', 'A', '_', 'L', 'A', 'T', 'I', 'N', '_', 'G', 'H', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'U', 'S', 'A', '_', 'L', 'A', 'T', 'I', 'N', '_', 'N', 'I', 'G', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'U', 'N', 'G', 'A', 'R', 'I', 'A', 'N', '_', 'H', 'U', 'N', 'G', 'A', 'R', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'C', 'E', 'L', 'A', 'N', 'D', 'I', 'C', '_', 'I', 'C', 'E', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'T', 'E', 'R', 'L', 'I', 'N', 'G', 'U', 'A', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'A', 'V', 'A', 'N', 'E', 'S', 'E', '_', 'J', 'A', 'V', 'A', 'N', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'Z', 'A', 'K', 'H', '_', 'K', 'A', 'Z', 'A', 'K', 'H', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'Y', 'R', 'A', '_', 'C', 'H', 'I', 'I', 'N', 'I', '_', 'M', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'N', 'G', 'A', 'L', 'A', '_', 'C', 'O', 'N', 'G', 'O', '_', 'D', 'R', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'O', 'R', 'I', '_', 'N', 'E', 'W', '_', 'Z', 'E', 'A', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'W', 'E', 'G', 'I', 'A', 'N', '_', 'N', 'Y', 'N', 'O', 'R', 'S', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', '_', 'A', 'N', 'G', 'O', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'T', 'S', 'W', 'A', 'N', 'A', '_', 'B', 'O', 'T', 'S', 'W', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'H', 'A', 'M', 'B', 'A', 'L', 'A', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'D', 'H', 'I', '_', 'D', 'E', 'V', 'A', 'N', 'A', 'G', 'A', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'A', 'R', 'G', 'E', 'N', 'T', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'G', 'U', 'A', 'T', 'E', 'M', 'A', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'N', 'I', 'C', 'A', 'R', 'A', 'G', 'U', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'V', 'E', 'N', 'E', 'Z', 'U', 'E', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'A', 'H', 'I', 'L', 'I', '_', 'C', 'O', 'N', 'G', 'O', '_', 'D', 'R', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'G', 'R', 'I', 'N', 'Y', 'A', '_', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'K', 'R', 'A', 'I', 'N', 'I', 'A', 'N', '_', 'U', 'K', 'R', 'A', 'I', 'N', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'A', 'I', '_', 'L', 'A', 'T', 'I', 'N', '_', 'L', 'I', 'B', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'O', 'L', 'A', 'Y', 'T', 'T', 'A', '_', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Z', 'U', 'L', 'U', '_', 'S', 'O', 'U', 'T', 'H', '_', 'A', 'F', 'R', 'I', 'C', 'A', 0,
    'M', 'a', 'p', 'S', 'c', 'r', 'e', 'e', 'n', 'S', 'i', 'z', 'e', 'T', 'o', 'P', 'a', 'g', 'e', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'R', 'O', 'L', 'L', '_', 'T', 'O', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'L', 'I', 'D', 'E', '_', 'T', 'O', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'C', 'h', 'i', 'l', 'd', 'O', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'U', 'B', 'S', 'C', 'R', 'I', 'P', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', '_', 'D', 'O', 'U', 'B', 'L', 'E', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'P', 'A', 'N', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 0,
    'T', 'R', '_', 'H', 'A', 'S', '_', 'V', 'A', 'R', 'I', 'A', 'B', 'L', 'E', '_', 'R', 'O', 'W', '_', 'H', 'E', 'I', 'G', 'H', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 'P', 'I', 'C', 'K', 'E', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'R', 'I', 'G', 'H', 'T', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'E', 'O', 'R', 'D', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'C', 'O', 'L', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'D', 'E', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'O', 'W', 'E', 'R', '_', 'S', 'U', 'S', 'P', 'E', 'N', 'D', '_', 'C', 'A', 'N', 'C', 'E', 'L', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'T', 'H', 'U', 'M', 'B', 'T', 'R', 'A', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'G', 'E', 'T', 'T', 'O', 'O', 'L', 'T', 'I', 'P', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'H', 'i', 's', 't', 'o', 'r', 'y', 'M', 'e', 'n', 'u', 'P', 'a', 't', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'B', 'u', 't', 't', 'o', 'n', 'L', 'a', 'b', 'e', 'l', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'C', 'a', 'p', 't', 'u', 'r', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'N', 'a', 't', 'i', 'v', 'e', 'P', 'i', 'x', 'e', 'l', 'D', 'a', 't', 'a', '_', 'A', 'c', 'c', 'e', 's', 's', 'o', 'r', 0,
    'w', 'x', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'r', 'a', 'm', 'e', 'M', 'o', 'd', 'a', 'l', 'i', 't', 'y', 'K', 'i', 'n', 'd', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'N', 'I', 'M', 'A', 'T', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'E', 'X', 'P', 'A', 'N', 'D', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'F', 'L', 'O', 'A', 'T', 'I', 'N', 'G', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'A', 'R', 'Q', 'U', 'E', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'R', 'E', 'A', 'D', 'O', 'N', 'L', 'Y', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'B', 'U', 'F', 'F', 'E', 'R', '_', 'U', 'S', 'E', 'S', '_', 'S', 'H', 'A', 'R', 'E', 'D', '_', 'B', 'U', 'F', 'F', 'E', 'R', 0,
    'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'f', 'f', 'e', 'r', 'F', 'o', 'r', 'm', 'a', 't', '_', 'A', 'R', 'G', 'B', '3', '2', 0,
    'C', 'o', 'l', 'o', 'u', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'W', 'i', 'd', 'g', 'e', 't', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'o', 'u', 'n', 't', 'r', 'y', '_', 'W', 'e', 's', 't', 'e', 'r', 'n', 'E', 'u', 'r', 'o', 'p', 'e', '_', 'E', 'n', 'd', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'L', 'i', 'n', 'e', 'a', 'r', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'B', 'r', 'u', 's', 'h', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'R', 'a', 'd', 'i', 'a', 'l', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'B', 'r', 'u', 's', 'h', 0,
    'D', 'i', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'F', 'o', 'l', 'd', 'e', 'r', 'S', 't', 'r', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'A', 'l', 't', 'e', 'r', 'n', 'a', 't', 'e', 'R', 'o', 'w', 'C', 'o', 'l', 'o', 'u', 'r', 's', 0,
    'F', 'H', '_', 'P', 'A', 'T', 'H', '_', 'S', 'H', 'O', 'W', '_', 'I', 'F', '_', 'D', 'I', 'F', 'F', 'E', 'R', 'E', 'N', 'T', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'A', 'R', 'A', 'B', 'I', 'C', 'E', 'X', 'T', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'I', 'C', 'E', 'L', 'A', 'N', 'D', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'M', 'A', 'L', 'A', 'J', 'A', 'L', 'A', 'M', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'S', 'I', 'N', 'H', 'A', 'L', 'E', 'S', 'E', 0,
    'G', 'e', 't', 'C', 'l', 'a', 's', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'P', 'a', 'g', 'e', 'M', 'a', 'r', 'g', 'i', 'n', 's', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 'U', 's', 'e', 'r', 'D', 'e', 's', 'c', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 'F', 'o', 'r', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'A', 'R', 'R', 'O', 'W', '_', 'L', 'I', 'N', 'E', '_', '1', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'A', 'R', 'R', 'O', 'W', '_', 'L', 'I', 'N', 'E', '_', '2', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'A', 'R', 'R', 'O', 'W', '_', 'P', 'A', 'G', 'E', '_', '1', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'A', 'R', 'R', 'O', 'W', '_', 'P', 'A', 'G', 'E', '_', '2', 0,
    'H', 'a', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'A', 'L', 'P', 'H', 'A', '_', 'B', 'L', 'E', 'N', 'D', '_', 'C', 'O', 'M', 'P', 'O', 'S', 'E', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'B', 'O', 'X', '_', 'A', 'V', 'E', 'R', 'A', 'G', 'E', 0,
    'I', 's', 'E', 'v', 'e', 'n', 't', 'A', 'l', 'l', 'o', 'w', 'e', 'd', 'I', 'n', 's', 'i', 'd', 'e', 'Y', 'i', 'e', 'l', 'd', 0,
    'I', 's', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'I', 's', 'S', 'c', 'h', 'e', 'd', 'u', 'l', 'e', 'd', 'F', 'o', 'r', 'D', 'e', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'L', 'B', 'A', 'N', 'I', 'A', 'N', '_', 'A', 'L', 'B', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'M', 'H', 'A', 'R', 'I', 'C', '_', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'M', 'E', 'N', 'I', 'A', 'N', '_', 'A', 'R', 'M', 'E', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'M', 'A', 'N', 'A', 'N', 'K', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'S', 'N', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'H', 'O', 'N', 'G', 'K', 'O', 'N', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'R', 'O', 'A', 'T', 'I', 'A', 'N', '_', 'C', 'R', 'O', 'A', 'T', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'A', 'N', 'I', 'S', 'H', '_', 'G', 'R', 'E', 'E', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'A', 'R', 'I', '_', 'A', 'F', 'G', 'H', 'A', 'N', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'A', 'N', 'G', 'U', 'I', 'L', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'A', 'R', 'B', 'A', 'D', 'O', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'O', 'T', 'S', 'W', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'D', 'O', 'M', 'I', 'N', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'E', 'S', 'W', 'A', 'T', 'I', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'U', 'E', 'R', 'N', 'S', 'E', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'K', 'I', 'R', 'I', 'B', 'A', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'L', 'A', 'Y', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'P', 'A', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'L', 'O', 'V', 'E', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'T', '_', 'L', 'U', 'C', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'T', 'R', 'I', 'N', 'I', 'D', 'A', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'Z', 'I', 'M', 'B', 'A', 'B', 'W', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'S', 'T', 'O', 'N', 'I', 'A', 'N', '_', 'E', 'S', 'T', 'O', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'A', 'E', 'R', 'O', 'E', 'S', 'E', '_', 'D', 'E', 'N', 'M', 'A', 'R', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'A', 'R', 'I', 'B', 'B', 'E', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'O', 'N', 'G', 'O', '_', 'D', 'R', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'A', 'U', 'R', 'I', 'T', 'I', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'T', '_', 'M', 'A', 'R', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'O', 'R', 'G', 'I', 'A', 'N', '_', 'G', 'E', 'O', 'R', 'G', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'U', 'A', 'R', 'A', 'N', 'I', '_', 'P', 'A', 'R', 'A', 'G', 'U', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'C', 'H', 'A', 'M', 'E', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'K', 'O', 'N', 'D', 'E', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'N', 'X', '_', 'I', 'S', 'L', 'E', '_', 'O', 'F', '_', 'M', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'Z', 'A', 'N', 'D', 'E', 'R', 'A', 'N', 'I', '_', 'I', 'R', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'U', 'N', 'D', 'A', 'N', 'G', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'W', 'E', 'G', 'I', 'A', 'N', '_', 'B', 'O', 'K', 'M', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'U', 'E', 'R', '_', 'S', 'O', 'U', 'T', 'H', '_', 'S', 'U', 'D', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'U', 'N', 'J', 'A', 'B', 'I', '_', 'G', 'U', 'R', 'M', 'U', 'K', 'H', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'U', 'N', 'J', 'A', 'B', 'I', '_', 'P', 'A', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'O', 'M', 'A', 'N', 'I', 'A', 'N', '_', 'M', 'O', 'L', 'D', 'O', 'V', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'O', 'M', 'A', 'N', 'I', 'A', 'N', '_', 'R', 'O', 'M', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'L', 'U', 'L', 'E', '_', 'N', 'O', 'R', 'W', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'L', 'U', 'L', 'E', '_', 'S', 'W', 'E', 'D', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', '_', 'Y', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'S', 'O', 'T', 'H', 'O', '_', 'S', 'A', '_', 'L', 'E', 'B', 'O', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'S', 'W', 'A', 'T', 'I', '_', 'E', 'S', 'W', 'A', 'T', 'I', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'C', 'O', 'L', 'O', 'M', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'H', 'O', 'N', 'D', 'U', 'R', 'A', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'P', 'A', 'R', 'A', 'G', 'U', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'A', 'H', 'I', 'L', 'I', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'G', 'R', 'I', 'N', 'Y', 'A', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'A', 'N', 'G', 'B', 'E', 'N', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'N', 'O', '_', 'F', 'U', 'L', 'L', '_', 'R', 'E', 'P', 'A', 'I', 'N', 'T', '_', 'O', 'N', '_', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'O', 'S', 'X', 'E', 'n', 'a', 'b', 'l', 'e', 'A', 'u', 't', 'o', 'm', 'a', 't', 'i', 'c', 'T', 'a', 'b', 'b', 'i', 'n', 'g', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '3', '_', 'E', 'X', 'T', 'R', 'A', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'W', 'i', 'n', 'd', 'o', 'w', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'c', 'a', 'l', 'l', 'y', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'R', 'O', 'L', 'L', '_', 'T', 'O', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'L', 'I', 'D', 'E', '_', 'T', 'O', '_', 'L', 'E', 'F', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'I', 'N', 'A', 'C', 'T', 'I', 'V', 'E', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 'U', 's', 'e', 'r', 'D', 'e', 's', 'c', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'S', 'e', 't', 'S', 'y', 'm', 'b', 'o', 'l', 'i', 'c', 'S', 'i', 'z', 'e', 'R', 'e', 'l', 'a', 't', 'i', 'v', 'e', 'T', 'o', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'C', 'A', 'P', 'I', 'T', 'A', 'L', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'P', 'I', 'X', 'E', 'L', '_', 'S', 'I', 'Z', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'P', 'O', 'I', 'N', 'T', '_', 'S', 'I', 'Z', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'L', 'I', 'S', 'T', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'A', 'M', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', '_', 'S', 'O', 'L', 'I', 'D', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'I', 'N', 'D', 'E', 'N', 'T', 0,
    'w', 'x', 'A', 'l', 'p', 'h', 'a', 'P', 'i', 'x', 'e', 'l', 'D', 'a', 't', 'a', '_', 'A', 'c', 'c', 'e', 's', 's', 'o', 'r', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'L', 'E', 'F', 'T', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'R', 'I', 'G', 'H', 'T', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'C', 'O', 'L', '_', 'B', 'E', 'G', 'I', 'N', '_', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'E', 'N', 'D', '_', 'L', 'A', 'B', 'E', 'L', '_', 'E', 'D', 'I', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'U', 'N', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'T', 'H', 'U', 'M', 'B', 'R', 'E', 'L', 'E', 'A', 'S', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'E', 'N', 'D', '_', 'L', 'A', 'B', 'E', 'L', '_', 'E', 'D', 'I', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'C', 'O', 'L', 'L', 'A', 'P', 'S', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'E', 'X', 'P', 'A', 'N', 'D', 'I', 'N', 'G', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'u', 's', 't', 'o', 'm', 'i', 'z', 'e', 'H', 'o', 'o', 'k', 0,
    'w', 'x', 'F', 'i', 'n', 'd', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'S', 't', 'y', 'l', 'e', 's', 0,
    'w', 'x', 'S', 't', 'a', 't', 'i', 'c', 'B', 'i', 't', 'm', 'a', 'p', ':', ':', 'S', 'c', 'a', 'l', 'e', 'M', 'o', 'd', 'e', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'D', 'E', 'S', 'T', 'R', 'O', 'Y', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'R', 'E', 'O', 'R', 'D', 'E', 'R', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'E', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'F', 'O', 'C', 'U', 'S', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'R', 'E', 'S', 'S', 'E', 'D', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'A', 'd', 'd', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 0,
    'A', 'd', 'j', 'u', 's', 't', 'F', 'o', 'r', 'L', 'a', 'y', 'o', 'u', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'f', 'f', 'e', 'r', 'F', 'o', 'r', 'm', 'a', 't', '_', 'R', 'G', 'B', '3', '2', 0,
    'C', 'O', 'N', 'F', 'I', 'G', '_', 'U', 'S', 'E', '_', 'R', 'E', 'L', 'A', 'T', 'I', 'V', 'E', '_', 'P', 'A', 'T', 'H', 0,
    'C', 'o', 'm', 'p', 'u', 't', 'e', 'F', 'i', 't', 't', 'i', 'n', 'g', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'C', 'o', 'm', 'p', 'u', 't', 'e', 'F', 'i', 't', 't', 'i', 'n', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 'i', 'z', 'e', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'C', 'o', 'n', 's', 'i', 's', 't', 'e', 'n', 'c', 'y', 'C', 'h', 'e', 'c', 'k', 's', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'D', 'r', 'a', 'w', 'H', 'e', 'a', 'd', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 0,
    'E', 'X', 'T', 'E', 'N', 'D', '_', 'L', 'A', 'S', 'T', '_', 'O', 'N', '_', 'E', 'A', 'C', 'H', '_', 'L', 'I', 'N', 'E', 0,
    'E', 'n', 'd', 'R', 'e', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'i', 'n', 'g', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'A', 'L', 'T', 'E', 'R', 'N', 'A', 'T', 'I', 'V', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', 'M', 'A', 'X', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'A', 'R', 'M', 'E', 'N', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'C', 'R', 'O', 'A', 'T', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'D', 'I', 'N', 'G', 'B', 'A', 'T', 'S', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'G', 'E', 'O', 'R', 'G', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'G', 'U', 'J', 'A', 'R', 'A', 'T', 'I', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'G', 'U', 'R', 'M', 'U', 'K', 'H', 'I', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'K', 'E', 'Y', 'B', 'O', 'A', 'R', 'D', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'R', 'O', 'M', 'A', 'N', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'N', 'O', 'T', '_', 'A', 'N', 'T', 'I', 'A', 'L', 'I', 'A', 'S', 'E', 'D', 0,
    'F', 'i', 't', 'T', 'h', 'i', 's', 'S', 'i', 'z', 'e', 'T', 'o', 'P', 'a', 'g', 'e', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'G', 'e', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 'F', 'r', 'o', 'm', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'C', 'a', 'n', 'o', 'n', 'i', 'c', 'a', 'l', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'L', 'e', 'v', 'e', 'l', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'u', 'x', 'D', 'i', 's', 't', 'r', 'i', 'b', 'u', 't', 'i', 'o', 'n', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'L', 'o', 'c', 'a', 'l', 'i', 'z', 'e', 'd', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 's', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'I', 'd', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 'A', 'f', 't', 'e', 'r', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 'P', 'r', 'o', 'm', 'p', 't', 'S', 't', 'r', 0,
    'G', 'e', 't', 'T', 'h', 'e', 'm', 'e', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'H', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'H', 'O', 'R', 'Z', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', 0,
    'H', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'V', 'E', 'R', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', 0,
    'H', 'a', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 'A', 'f', 't', 'e', 'r', 0,
    'H', 'a', 's', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'I', 'n', 'h', 'e', 'r', 'i', 't', 's', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'I', 'n', 'h', 'e', 'r', 'i', 't', 's', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'I', 's', '3', 'r', 'd', 'S', 't', 'a', 't', 'e', 'A', 'l', 'l', 'o', 'w', 'e', 'd', 'F', 'o', 'r', 'U', 's', 'e', 'r', 0,
    'I', 's', 'A', 's', 'c', 'e', 'n', 'd', 'i', 'n', 'g', 'S', 'o', 'r', 't', 'I', 'n', 'd', 'i', 'c', 'a', 't', 'o', 'r', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'L', 'B', 'A', 'N', 'I', 'A', 'N', '_', 'K', 'O', 'S', 'O', 'V', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'L', 'S', 'A', 'T', 'I', 'A', 'N', '_', 'F', 'R', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'D', 'J', 'I', 'B', 'O', 'U', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'U', 'R', 'M', 'E', 'S', 'E', '_', 'M', 'Y', 'A', 'N', 'M', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'A', 'T', 'A', 'L', 'A', 'N', '_', 'A', 'N', 'D', 'O', 'R', 'R', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'A', 'L', '_', 'K', 'U', 'R', 'D', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'O', 'R', 'S', 'I', 'C', 'A', 'N', '_', 'F', 'R', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'I', 'V', 'E', 'H', 'I', '_', 'M', 'A', 'L', 'D', 'I', 'V', 'E', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'Z', 'O', 'N', 'G', 'K', 'H', 'A', '_', 'B', 'H', 'U', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'A', 'U', 'S', 'T', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'A', 'H', 'A', 'M', 'A', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'E', 'L', 'G', 'I', 'U', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'E', 'R', 'M', 'U', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'U', 'R', 'U', 'N', 'D', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'D', 'E', 'N', 'M', 'A', 'R', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'F', 'I', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'E', 'R', 'M', 'A', 'N', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'R', 'E', 'N', 'A', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'J', 'A', 'M', 'A', 'I', 'C', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'L', 'E', 'S', 'O', 'T', 'H', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'L', 'I', 'B', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'A', 'M', 'I', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'T', 'O', 'K', 'E', 'L', 'A', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'V', 'A', 'N', 'U', 'A', 'T', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'S', 'P', 'E', 'R', 'A', 'N', 'T', 'O', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'W', 'O', 'N', 'D', 'O', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'I', 'N', 'N', 'I', 'S', 'H', '_', 'F', 'I', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'A', 'N', 'A', 'D', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'D', 'J', 'I', 'B', 'O', 'U', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'A', 'U', 'S', 'T', 'R', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'U', 'K', 'T', 'I', 'T', 'U', 'T', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'C', 'H', 'E', '_', 'G', 'U', 'A', 'T', 'E', 'M', 'A', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'R', 'U', 'N', 'D', 'I', '_', 'B', 'U', 'R', 'U', 'N', 'D', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'Y', 'R', 'A', 'B', 'O', 'R', 'O', '_', 'S', 'E', 'N', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'W', 'A', 'S', 'I', 'O', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', 'A', 'L', 'A', 'M', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', '_', 'S', 'I', 'N', 'G', 'A', 'P', 'O', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'G', 'O', 'M', 'B', 'A', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'Y', 'A', 'N', 'K', 'O', 'L', 'E', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'S', 'S', 'E', 'T', 'I', 'C', '_', 'G', 'E', 'O', 'R', 'G', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'A', 'S', 'H', 'T', 'O', '_', 'P', 'A', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Q', 'U', 'E', 'C', 'H', 'U', 'A', '_', 'B', 'O', 'L', 'I', 'V', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Q', 'U', 'E', 'C', 'H', 'U', 'A', '_', 'E', 'C', 'U', 'A', 'D', 'O', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'B', 'E', 'L', 'A', 'R', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'M', 'O', 'L', 'D', 'O', 'V', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'U', 'K', 'R', 'A', 'I', 'N', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'C', 'O', 'T', 'S', '_', 'G', 'A', 'E', 'L', 'I', 'C', '_', 'U', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'N', 'A', '_', 'M', 'O', 'Z', 'A', 'M', 'B', 'I', 'Q', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'S', 'O', 'T', 'H', 'O', '_', 'L', 'E', 'S', 'O', 'T', 'H', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'D', 'H', 'I', '_', 'P', 'A', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'L', 'O', 'V', 'A', 'K', '_', 'S', 'L', 'O', 'V', 'A', 'K', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'M', 'A', 'L', 'I', '_', 'D', 'J', 'I', 'B', 'O', 'U', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'M', 'A', 'L', 'I', '_', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'B', 'O', 'L', 'I', 'V', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'E', 'C', 'U', 'A', 'D', 'O', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'M', 'E', 'X', 'I', 'C', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'U', 'R', 'U', 'G', 'U', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'E', 'D', 'I', 'S', 'H', '_', 'F', 'I', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'C', 'H', 'E', 'L', 'H', 'I', 'T', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'M', 'I', 'L', '_', 'S', 'I', 'N', 'G', 'A', 'P', 'O', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'M', 'I', 'L', '_', 'S', 'R', 'I', '_', 'L', 'A', 'N', 'K', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'A', 'I', '_', 'V', 'A', 'I', '_', 'L', 'I', 'B', 'E', 'R', 'I', 'A', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'L', 'A', 'B', 'E', 'L', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'D', 'O', 'N', 'T', '_', 'L', 'O', 'A', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'a', 'u', 'n', 'c', 'h', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 'p', 'p', 'l', 'i', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'F', 'A', 'N', 'F', 'O', 'L', 'D', '_', 'L', 'G', 'L', '_', 'G', 'E', 'R', 'M', 'A', 'N', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'F', 'A', 'N', 'F', 'O', 'L', 'D', '_', 'S', 'T', 'D', '_', 'G', 'E', 'R', 'M', 'A', 'N', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'C', 'H', 'O', 'U', '3', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'C', 'H', 'O', 'U', '4', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'K', 'A', 'K', 'U', '2', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'K', 'A', 'K', 'U', '3', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'B', 'D', 'I', 'A', 'G', 'O', 'N', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'R', 'O', 'S', 'S', 'D', 'I', 'A', 'G', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'F', 'D', 'I', 'A', 'G', 'O', 'N', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'r', 'a', 'm', 'e', '_', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'o', 'd', 'a', 'l', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'O', 'L', 'U', 'M', 'N', 'H', 'E', 'A', 'D', 'E', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'Y', 'P', 'A', 'G', 'E', 0,
    'R', 'e', 's', 'e', 'r', 'v', 'e', 'S', 'p', 'a', 'c', 'e', 'E', 'v', 'e', 'n', 'I', 'f', 'H', 'i', 'd', 'd', 'e', 'n', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'R', 'O', 'L', 'L', '_', 'T', 'O', '_', 'L', 'E', 'F', 'T', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'L', 'I', 'D', 'E', '_', 'T', 'O', '_', 'T', 'O', 'P', 0,
    'S', 'V', 'G', '_', 'S', 'H', 'A', 'P', 'E', '_', 'R', 'E', 'N', 'D', 'E', 'R', 'I', 'N', 'G', '_', 'A', 'U', 'T', 'O', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'A', 'C', 'T', 'I', 'V', 'E', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 'T', 'E', 'X', 'T', 0,
    'S', 'e', 't', 'F', 'o', 'c', 'u', 's', 'I', 'g', 'n', 'o', 'r', 'i', 'n', 'g', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'S', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'L', 'e', 'v', 'e', 'l', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'u', 'x', 'D', 'i', 's', 't', 'r', 'i', 'b', 'u', 't', 'i', 'o', 'n', 'I', 'n', 'f', 'o', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 'A', 'f', 't', 'e', 'r', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'J', 'U', 'S', 'T', 'I', 'F', 'I', 'E', 'D', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'E', 'N', 'G', 'R', 'A', 'V', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'O', 'U', 'T', 'L', 'I', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'M', 'A', 'X', 'I', 'M', 'I', 'Z', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'L', 'A', 'B', 'E', 'L', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'R', 'I', 'G', 'H', 'T', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'P', 'i', 'c', 'k', 'e', 'r', 'F', 'r', 'o', 'm', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'F', 'r', 'o', 'm', 'P', 'i', 'c', 'k', 'e', 'r', 0,
    'W', 'S', '_', 'E', 'X', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'U', 'I', '_', 'U', 'P', 'D', 'A', 'T', 'E', 'S', 0,
    'w', 'x', 'D', 'e', 'l', 'e', 'g', 'a', 't', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 'N', 'a', 't', 'i', 'v', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'K', 'I', 'L', 'L', '_', 'F', 'O', 'C', 'U', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'L', 'E', 'F', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'L', 'E', 'P', 'I', 'C', 'K', 'E', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'O', 'N', 'T', 'P', 'I', 'C', 'K', 'E', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'E', 'N', 'D', '_', 'R', 'E', 'O', 'R', 'D', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'R', 'I', 'G', 'H', 'T', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'U', 'S', 'E', '_', 'C', 'A', 'P', 'T', 'U', 'R', 'E', '_', 'L', 'O', 'S', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'L', 'I', 'N', 'E', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'P', 'A', 'G', 'E', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'E', 'X', 'P', 'A', 'N', 'D', 'E', 'D', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 'W', 'a', 't', 'c', 'h', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'i', 'o', 'n', 's', 'L', 'o', 'a', 'd', 'e', 'r', 0,
    'w', 'x', 'I', 't', 'e', 'm', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 'I', 'm', 'm', 'u', 't', 'a', 'b', 'l', 'e', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'r', 'I', 't', 'e', 'm', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'V', 'e', 'c', 't', 'o', 'r', '<', 'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'n', 'd', 'l', 'e', '>', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'o', 'd', 'a', 'l', 'D', 'i', 'a', 'l', 'o', 'g', 'E', 'v', 'e', 'n', 't', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'C', 'R', 'E', 'A', 'T', 'E', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', '_', 'E', 'X', 'T', 'E', 'N', 'D', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', '_', 'R', 'E', 'M', 'O', 'V', 'E', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'E', 'R', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'R', 'E', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 'R', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 'l', 'y', 0,
    'A', 'd', 'd', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'D', 'e', 't', 'a', 'i', 'l', 's', 0,
    'A', 'u', 't', 'o', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'i', 'e', 's', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'I', 'P', 'P', 'L', 'E', '_', 'M', 'A', 'S', 'K', 0,
    'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'f', 'f', 'e', 'r', 'F', 'o', 'r', 'm', 'a', 't', '_', 'R', 'G', 'B', 'A', 0,
    'C', 'O', 'N', 'T', 'E', 'N', 'T', '_', 'P', 'R', 'O', 'T', 'E', 'C', 'T', 'I', 'O', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'C', 'o', 'l', 'o', 'u', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'F', 'L', 'A', 'G', 'S', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'E', 'V', 'T', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'U', 'S', 'E', 'R', '_', 'I', 'N', 'P', 'U', 'T', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'P', 'h', 'y', 's', 'i', 'c', 'a', 'l', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'F', 'A', 'L', 'L', 'B', 'A', 'C', 'K', '_', 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'L', 'A', 'R', 'G', 'E', 'R', 0,
    'F', 'L', 'E', 'X', '_', 'G', 'R', 'O', 'W', 'M', 'O', 'D', 'E', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'I', 'E', 'D', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '2', '0', '2', '2', '_', 'J', 'P', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', '0', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', '1', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', '2', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', '3', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', '4', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', '5', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'B', 'E', 'N', 'G', 'A', 'L', 'I', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'B', 'U', 'R', 'M', 'E', 'S', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'K', 'A', 'N', 'N', 'A', 'D', 'A', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'L', 'A', 'O', 'T', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'T', 'I', 'B', 'E', 'T', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'T', 'U', 'R', 'K', 'I', 'S', 'H', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'V', 'I', 'E', 'T', 'N', 'A', 'M', 'E', 'S', 'E', 0,
    'F', 'i', 'l', 'e', 'P', 'i', 'c', 'k', 'e', 'r', 'W', 'i', 'd', 'g', 'e', 't', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'F', 'o', 'n', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'W', 'i', 'd', 'g', 'e', 't', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'I', 'n', 'd', 'e', 'x', 'F', 'r', 'o', 'm', 'O', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 'F', 'r', 'o', 'm', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'D', 'o', 'n', 'e', 0,
    'G', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'c', 'H', 'e', 'l', 'p', 'M', 'e', 'n', 'u', 'T', 'i', 't', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'P', 'a', 'n', 'g', 'o', 'F', 'o', 'n', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'T', 'I', 'L', 'E', '_', 'H', 'O', 'R', 'Z', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'T', 'I', 'L', 'E', '_', 'V', 'E', 'R', 'T', 0,
    'I', 'M', 'A', 'G', 'E', 'L', 'I', 'S', 'T', '_', 'D', 'R', 'A', 'W', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'A', 'L', 'P', 'H', 'A', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'R', 'E', 'S', 'O', 'L', 'U', 'T', 'I', 'O', 'N', '_', 'I', 'N', 'C', 'H', 'E', 'S', 0,
    'I', 's', 'U', 's', 'i', 'n', 'g', 'P', 'r', 'i', 'm', 'a', 'r', 'y', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 's', 'U', 's', 'i', 'n', 'g', 'U', 'n', 'i', 'v', 'e', 'r', 's', 'a', 'l', 'W', 'i', 'd', 'g', 'e', 't', 's', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'G', 'H', 'E', 'M', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'A', 'L', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'B', 'A', 'H', 'R', 'A', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'C', 'O', 'M', 'O', 'R', 'O', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'L', 'E', 'B', 'A', 'N', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'S', 'O', 'M', 'A', 'L', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'T', 'U', 'N', 'I', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'S', 'S', 'A', 'M', 'E', 'S', 'E', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'S', 'T', 'U', 'R', 'I', 'A', 'N', '_', 'S', 'P', 'A', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'I', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'F', 'I', 'A', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'S', 'A', 'A', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'S', 'H', 'K', 'I', 'R', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'A', 'T', 'A', 'L', 'A', 'N', '_', 'F', 'R', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'E', 'C', 'H', 'E', 'N', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'T', 'A', 'I', 'W', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'A', 'N', 'I', 'S', 'H', '_', 'D', 'E', 'N', 'M', 'A', 'R', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'A', 'L', 'A', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'S', 'U', 'R', 'I', 'N', 'A', 'M', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'B', 'E', 'L', 'I', 'Z', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'A', 'N', 'A', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'C', 'Y', 'P', 'R', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'E', 'U', 'R', 'O', 'P', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'A', 'M', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'U', 'Y', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'I', 'S', 'R', 'A', 'E', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'J', 'E', 'R', 'S', 'E', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'L', 'A', 'W', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'R', 'W', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'W', 'E', 'D', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'T', 'U', 'V', 'A', 'L', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'Z', 'A', 'M', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'A', 'L', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'B', 'E', 'L', 'G', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'B', 'U', 'R', 'U', 'N', 'D', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'O', 'M', 'O', 'R', 'O', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'A', 'Y', 'O', 'T', 'T', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'O', 'R', 'O', 'C', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'R', 'E', 'U', 'N', 'I', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'E', 'N', 'E', 'G', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'T', 'U', 'N', 'I', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'V', 'A', 'N', 'U', 'A', 'T', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'I', 'U', 'L', 'I', 'A', 'N', '_', 'I', 'T', 'A', 'L', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'A', 'L', 'I', 'C', 'I', 'A', 'N', '_', 'S', 'P', 'A', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'B', 'E', 'L', 'G', 'I', 'U', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'G', 'E', 'R', 'M', 'A', 'N', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'U', 'J', 'A', 'R', 'A', 'T', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'B', 'I', 'B', 'I', 'O', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', '_', 'J', 'A', 'P', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'B', 'Y', 'L', 'E', '_', 'A', 'L', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'L', 'E', 'N', 'J', 'I', 'N', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'N', 'U', 'R', 'I', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'S', 'H', 'M', 'I', 'R', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'H', 'M', 'E', 'R', '_', 'C', 'A', 'M', 'B', 'O', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'N', 'G', 'I', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'T', 'V', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'V', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'N', 'G', 'A', 'L', 'A', '_', 'A', 'N', 'G', 'O', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'K', 'H', 'U', 'W', 'A', '_', 'M', 'E', 'E', 'T', 'T', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', '_', 'M', 'A', 'L', 'A', 'Y', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'N', 'I', 'P', 'U', 'R', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'S', 'A', 'I', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'C', 'C', 'I', 'T', 'A', 'N', '_', 'F', 'R', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'R', 'O', 'M', 'O', '_', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'S', 'S', 'E', 'T', 'I', 'C', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'U', 'N', 'J', 'A', 'B', 'I', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'H', 'A', 'E', 'T', 'O', '_', 'R', 'O', 'M', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'O', 'M', 'B', 'O', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'N', 'G', 'U', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'N', 'S', 'K', 'R', 'I', 'T', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'S', 'E', 'R', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'O', '_', 'C', 'R', 'O', 'A', 'T', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'M', 'A', 'L', 'I', '_', 'S', 'O', 'M', 'A', 'L', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'B', 'E', 'L', 'I', 'Z', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'B', 'R', 'A', 'Z', 'I', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'M', 'O', 'D', 'E', 'R', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'P', 'A', 'N', 'A', 'M', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'A', 'H', 'I', 'L', 'I', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'E', 'D', 'I', 'S', 'H', '_', 'S', 'W', 'E', 'D', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'J', 'I', 'K', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'M', 'I', 'L', '_', 'M', 'A', 'L', 'A', 'Y', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'U', 'R', 'K', 'I', 'S', 'H', '_', 'C', 'Y', 'P', 'R', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'U', 'R', 'K', 'I', 'S', 'H', '_', 'T', 'U', 'R', 'K', 'E', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', '_', 'C', 'Y', 'R', 'I', 'L', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'U', 'N', 'J', 'O', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'O', 'R', 'U', 'B', 'A', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'I', 'S', 'T', '_', 'A', 'L', 'I', 'G', 'N', '_', 'S', 'N', 'A', 'P', '_', 'T', 'O', '_', 'G', 'R', 'I', 'D', 0,
    'L', 'I', 'S', 'T', '_', 'A', 'U', 'T', 'O', 'S', 'I', 'Z', 'E', '_', 'U', 'S', 'E', 'H', 'E', 'A', 'D', 'E', 'R', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'I', 'C', 'O', 'N', 0,
    'M', 'a', 'c', 'G', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 'R', 'e', 'f', 0,
    'M', 'a', 'c', 'G', 'e', 't', 'U', 'n', 'i', 'f', 'i', 'e', 'd', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', '_', 'P', 'O', 'S', 'T', 'C', 'A', 'R', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'Y', 'O', 'U', '4', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'P', 'P', 'L', 'I', 'C', 'A', 'T', 'I', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'H', 'E', 'C', 'K', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'H', 'E', 'L', 'P', 'B', 'A', 'L', 'L', 'O', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'H', 'O', 'T', 'K', 'E', 'Y', 'F', 'I', 'E', 'L', 'D', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'O', 'U', 'T', 'L', 'I', 'N', 'E', 'I', 'T', 'E', 'M', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'A', 'G', 'E', 'T', 'A', 'B', 'L', 'I', 'S', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'R', 'O', 'G', 'R', 'E', 'S', 'S', 'B', 'A', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'R', 'A', 'D', 'I', 'O', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'R', 'O', 'L', 'L', '_', 'T', 'O', '_', 'T', 'O', 'P', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'A', 'C', 'T', 'I', 'V', 'E', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'A', 'P', 'P', 'W', 'O', 'R', 'K', 'S', 'P', 'A', 'C', 'E', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'T', 'N', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'D', 'E', 'V', 'I', 'C', 'E', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'F', 'O', 'N', 'T', 0,
    'S', 'e', 't', 'D', 'e', 'v', 'i', 'c', 'e', 'C', 'l', 'i', 'p', 'p', 'i', 'n', 'g', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'D', 'o', 'n', 'e', 0,
    'S', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'c', 'H', 'e', 'l', 'p', 'M', 'e', 'n', 'u', 'T', 'i', 't', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'N', 'U', 'M', 'B', 'E', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'E', 'M', 'B', 'O', 'S', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'S', 'H', 'A', 'D', 'O', 'W', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'O', 'U', 'T', 'L', 'I', 'N', 'E', '_', 'L', 'E', 'V', 'E', 'L', 0,
    'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'I', 'C', 'O', 'N', 'I', 'Z', 'E', 0,
    'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 'I', 'C', 'O', 'N', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'B', 'a', 'c', 'k', 'i', 'n', 'g', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'W', 'R', 'A', 'P', 'S', 'I', 'Z', 'E', 'R', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'F', 'L', 'A', 'G', 'S', 0,
    'W', 'S', '_', 'E', 'X', '_', 'T', 'H', 'E', 'M', 'E', 'D', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'N', 'A', 'V', 'I', 'G', 'A', 'T', 'I', 'O', 'N', 0,
    'w', 'x', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 'E', 'n', 't', 'r', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 'E', 'v', 'e', 'n', 't', ':', ':', 'R', 'e', 'a', 's', 'o', 'n', 0,
    'w', 'x', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'i', 'b', 'l', 'e', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'C', 'o', 'n', 'f', 'i', 'g', 'B', 'a', 's', 'e', ':', ':', 'E', 'n', 't', 'r', 'y', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'D', 'C', 'T', 'e', 'x', 't', 'B', 'g', 'C', 'o', 'l', 'o', 'u', 'r', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', ':', ':', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'L', 'I', 'P', 'B', 'O', 'A', 'R', 'D', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'B', 'O', 'B', 'O', 'X', '_', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'S', 'E', 'T', '_', 'F', 'O', 'C', 'U', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'I', 'R', 'P', 'I', 'C', 'K', 'E', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'E', 'N', 'D', '_', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'C', 'O', 'L', '_', 'D', 'R', 'A', 'G', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'C', 'O', 'L', '_', 'E', 'N', 'D', '_', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'T', 'E', 'M', '_', 'F', 'O', 'C', 'U', 'S', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'Q', 'U', 'E', 'R', 'Y', '_', 'E', 'N', 'D', '_', 'S', 'E', 'S', 'S', 'I', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'Q', 'U', 'E', 'R', 'Y', '_', 'N', 'E', 'W', '_', 'P', 'A', 'L', 'E', 'T', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'T', 'H', 'U', 'M', 'B', 'T', 'R', 'A', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'S', 'E', 'L', '_', 'C', 'H', 'A', 'N', 'G', 'I', 'N', 'G', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'R', 'a', 'd', 'i', 'o', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'P', 'r', 'o', 'g', 'r', 'e', 's', 's', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'S', 't', 'o', 'p', 's', 0,
    'w', 'x', 'L', 'i', 'n', 'u', 'x', 'D', 'i', 's', 't', 'r', 'i', 'b', 'u', 't', 'i', 'o', 'n', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'C', 'a', 'p', 't', 'u', 'r', 'e', 'L', 'o', 's', 't', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'V', 'G', 'B', 'i', 't', 'm', 'a', 'p', 'E', 'm', 'b', 'e', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'S', 'V', 'G', 'S', 'h', 'a', 'p', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'S', 'i', 'n', 'g', 'l', 'e', 'I', 'n', 's', 't', 'a', 'n', 'c', 'e', 'C', 'h', 'e', 'c', 'k', 'e', 'r', 0,
    'w', 'x', 'S', 'y', 's', 'C', 'o', 'l', 'o', 'u', 'r', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'H', 'i', 't', 'T', 'e', 's', 't', 'R', 'e', 's', 'u', 'l', 't', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'F', 'O', 'C', 'U', 'S', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'L', 'E', 'R', 'T', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'O', 'U', 'N', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'I', 'X', 'E', 'D', 0,
    'B', 'A', 'T', 'T', 'E', 'R', 'Y', '_', 'C', 'R', 'I', 'T', 'I', 'C', 'A', 'L', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'B', 'A', 'T', 'T', 'E', 'R', 'Y', '_', 'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'R', 'O', 'S', 'S', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'F', 'I', 'R', 'S', 'T', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'f', 'f', 'e', 'r', 'F', 'o', 'r', 'm', 'a', 't', '_', 'R', 'G', 'B', 0,
    'C', 'O', 'N', 'F', 'I', 'G', '_', 'U', 'S', 'E', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'F', 'I', 'L', 'E', 0,
    'C', 'a', 'l', 'c', 'U', 'n', 's', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'i', 'b', 'l', 'e', 'P', 'a', 'n', 'e', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 'F', 'r', 'o', 'm', 'I', 'm', 'a', 'g', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'F', 'r', 'o', 'm', 'N', 'a', 't', 'i', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'M', 'e', 'a', 's', 'u', 'r', 'i', 'n', 'g', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'A', 'D', 'A', 'P', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'D', 'i', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'W', 'i', 'd', 'g', 'e', 't', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'D', 'r', 'a', 'w', 'C', 'o', 'm', 'b', 'o', 'B', 'o', 'x', 'D', 'r', 'o', 'p', 'B', 'u', 't', 't', 'o', 'n', 0,
    'E', 'X', 'E', 'C', '_', 'M', 'A', 'K', 'E', '_', 'G', 'R', 'O', 'U', 'P', '_', 'L', 'E', 'A', 'D', 'E', 'R', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 0,
    'F', 'N', 'T', 'P', '_', 'F', 'O', 'N', 'T', 'D', 'E', 'S', 'C', '_', 'A', 'S', '_', 'L', 'A', 'B', 'E', 'L', 0,
    'F', 'N', 'T', 'P', '_', 'U', 'S', 'E', 'F', 'O', 'N', 'T', '_', 'F', 'O', 'R', '_', 'L', 'A', 'B', 'E', 'L', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'B', 'U', 'L', 'G', 'A', 'R', 'I', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '1', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '2', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '3', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '4', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '5', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '6', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '7', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '8', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'I', 'S', 'O', '8', '8', '5', '9', '_', '9', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'C', 'E', 'L', 'T', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'G', 'A', 'E', 'L', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'H', 'E', 'B', 'R', 'E', 'W', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'K', 'O', 'R', 'E', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'S', 'Y', 'M', 'B', 'O', 'L', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'T', 'E', 'L', 'U', 'G', 'U', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'S', 'H', 'I', 'F', 'T', '_', 'J', 'I', 'S', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'S', 'T', 'R', 'I', 'K', 'E', 'T', 'H', 'R', 'O', 'U', 'G', 'H', 0,
    'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'N', 'O', 'S', 'T', 'A', 'T', 'U', 'S', 'B', 'A', 'R', 0,
    'G', 'T', 'K', 'S', 'u', 'p', 'p', 'r', 'e', 's', 's', 'D', 'i', 'a', 'g', 'n', 'o', 's', 't', 'i', 'c', 's', 0,
    'G', 'e', 't', 'C', 'a', 'n', 'o', 'n', 'i', 'c', 'a', 'l', 'W', 'i', 't', 'h', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'p', 'u', 'A', 'r', 'c', 'h', 'i', 't', 'e', 'c', 't', 'u', 'r', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'F', 'r', 'a', 'c', 't', 'i', 'o', 'n', 'a', 'l', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'u', 'l', 't', 'i', 'L', 'i', 'n', 'e', 'T', 'e', 'x', 't', 'E', 'x', 't', 'e', 'n', 't', 0,
    'G', 'e', 't', 'N', 'o', 'n', 'F', 'l', 'e', 'x', 'i', 'b', 'l', 'e', 'G', 'r', 'o', 'w', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'o', 'u', 't', 'F', 'o', 'r', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'P', 'i', 'x', 'e', 'l', 's', 'P', 'e', 'r', 'U', 'n', 'i', 't', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'k', 'i', 't', 'M', 'a', 'j', 'o', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'k', 'i', 't', 'M', 'i', 'c', 'r', 'o', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'k', 'i', 't', 'M', 'i', 'n', 'o', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'd', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 'F', 'o', 'r', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'B', 'e', 'g', 'i', 'n', 0,
    'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'F', 'i', 'l', 'l', 'C', 'o', 'n', 'c', 'e', 'n', 't', 'r', 'i', 'c', 0,
    'I', 'D', 'L', 'E', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'I', 'E', 'D', 0,
    'I', 'M', 'A', 'G', 'E', 'L', 'I', 'S', 'T', '_', 'D', 'R', 'A', 'W', '_', 'F', 'O', 'C', 'U', 'S', 'E', 'D', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'A', 'L', 'P', 'H', 'A', '_', 'B', 'L', 'E', 'N', 'D', '_', 'O', 'V', 'E', 'R', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'B', 'I', 'L', 'I', 'N', 'E', 'A', 'R', 0,
    'I', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'W', 'i', 't', 'h', 'M', 'o', 'd', 'a', 'l', 'i', 't', 'y', 0,
    'I', 'n', 's', 'e', 'r', 't', 'S', 't', 'r', 'e', 't', 'c', 'h', 'a', 'b', 'l', 'e', 'S', 'p', 'a', 'c', 'e', 0,
    'I', 's', 'P', 'l', 'a', 't', 'f', 'o', 'r', 'm', 'L', 'i', 't', 't', 'l', 'e', 'E', 'n', 'd', 'i', 'a', 'n', 0,
    'I', 's', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 'A', 'l', 'w', 'a', 'y', 's', 'S', 'h', 'o', 'w', 'n', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'A', 'R', '_', 'D', 'J', 'I', 'B', 'O', 'U', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'A', 'R', '_', 'E', 'T', 'H', 'I', 'O', 'P', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'I', 'S', 'R', 'A', 'E', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'J', 'O', 'R', 'D', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'K', 'U', 'W', 'A', 'I', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'N', 'A', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'N', 'G', 'A', 'L', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'S', 'N', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'R', 'E', 'T', 'O', 'N', '_', 'F', 'R', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'A', 'T', 'A', 'L', 'A', 'N', '_', 'I', 'T', 'A', 'L', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'A', 'T', 'A', 'L', 'A', 'N', '_', 'S', 'P', 'A', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'B', 'U', 'A', 'N', 'O', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'K', 'M', 'A', '_', 'C', 'H', 'A', 'K', 'M', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'C', 'H', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'M', 'A', 'C', 'A', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', '_', 'M', 'A', 'C', 'A', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'U', 'R', 'C', 'H', '_', 'S', 'L', 'A', 'V', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'Z', 'E', 'C', 'H', '_', 'C', 'Z', 'E', 'C', 'H', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'B', 'E', 'L', 'G', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'C', 'U', 'R', 'A', 'C', 'A', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'H', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'M', 'A', 'L', 'T', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'A', 'U', 'R', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'P', 'A', 'L', 'A', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'A', 'M', 'O', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'S', 'U', 'D', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'T', 'O', 'N', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'F', 'R', 'A', 'N', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'O', 'N', 'A', 'C', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'R', 'W', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'E', 'B', 'R', 'E', 'W', '_', 'I', 'S', 'R', 'A', 'E', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'R', 'I', 'S', 'H', '_', 'I', 'R', 'E', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'T', 'A', 'L', 'I', 'A', 'N', '_', 'I', 'T', 'A', 'L', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'T', 'A', 'L', 'I', 'A', 'N', '_', 'S', 'W', 'I', 'S', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'K', 'O', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'N', 'N', 'A', 'D', 'A', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'N', 'K', 'A', 'N', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'O', 'T', 'H', 'I', 'A', 'N', '_', 'L', 'A', 'O', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'N', 'G', 'A', 'L', 'A', '_', 'C', 'O', 'N', 'G', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'O', 'W', 'E', 'R', '_', 'S', 'O', 'R', 'B', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'X', 'E', 'M', 'B', 'O', 'U', 'R', 'G', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'T', 'E', 'S', 'E', '_', 'M', 'A', 'L', 'T', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'P', 'U', 'C', 'H', 'E', '_', 'C', 'H', 'I', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'R', 'A', 'T', 'H', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'E', 'T', 'A', '_', 'C', 'A', 'M', 'E', 'R', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'H', 'A', 'W', 'K', '_', 'C', 'A', 'N', 'A', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'T', 'H', 'E', 'R', 'N', '_', 'L', 'U', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'T', 'H', '_', 'N', 'D', 'E', 'B', 'E', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'L', 'I', 'S', 'H', '_', 'P', 'O', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'U', 'N', 'J', 'A', 'B', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Q', 'U', 'E', 'C', 'H', 'U', 'A', '_', 'M', 'A', 'C', 'R', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'B', 'U', 'R', 'U', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'S', 'O', 'U', 'T', 'H', 'E', 'R', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'D', 'H', 'I', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'U', 'T', 'H', '_', 'N', 'D', 'E', 'B', 'E', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'C', 'H', 'I', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'S', 'P', 'A', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'A', 'H', 'I', 'L', 'I', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'S', 'A', 'W', 'A', 'Q', '_', 'N', 'I', 'G', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'H', 'A', 'I', '_', 'T', 'H', 'A', 'I', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'B', 'E', 'T', 'A', 'N', '_', 'C', 'H', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'B', 'E', 'T', 'A', 'N', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'G', 'R', 'E', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'P', 'P', 'E', 'R', '_', 'S', 'O', 'R', 'B', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'R', 'D', 'U', '_', 'P', 'A', 'K', 'I', 'S', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'O', 'L', 'A', 'P', 'U', 'K', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'O', 'L', 'O', 'F', '_', 'S', 'E', 'N', 'E', 'G', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'I', 'D', 'D', 'I', 'S', 'H', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'I', 'S', 'T', '_', 'S', 'T', 'A', 'T', 'E', '_', 'D', 'R', 'O', 'P', 'H', 'I', 'L', 'I', 'T', 'E', 'D', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'A', 'G', 'T', 'Y', 'P', 'E', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'A', 'G', 'T', 'Y', 'P', 'E', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'S', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'W', 'H', 'E', 'E', 'L', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'M', 'o', 'v', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 'I', 'n', 'O', 'r', 'd', 'e', 'r', 'A', 'r', 'r', 'a', 'y', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'L', 'A', 'R', 'G', 'E', 'C', 'A', 'P', 'A', 'C', 'I', 'T', 'Y', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'M', 'E', 'N', 'U', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'U', 'S', 'H', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'P', 'I', 'N', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'T', 'A', 'T', 'I', 'C', 'T', 'E', 'X', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'W', 'H', 'I', 'T', 'E', 'S', 'P', 'A', 'C', 'E', 0,
    'R', 'e', 'a', 'r', 'r', 'a', 'n', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 'T', 'O', 'C', 'K', '_', 'W', 'I', 'T', 'H', 'O', 'U', 'T', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'S', 0,
    'S', 'T', 'O', 'C', 'K', '_', 'W', 'I', 'T', 'H', '_', 'A', 'C', 'C', 'E', 'L', 'E', 'R', 'A', 'T', 'O', 'R', 0,
    'S', 'Y', 'S', '_', 'C', 'A', 'R', 'E', 'T', '_', 'T', 'I', 'M', 'E', 'O', 'U', 'T', '_', 'M', 'S', 'E', 'C', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', '3', 'D', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 'T', 'E', 'X', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'X', 'T', 'E', 'X', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'M', 'E', 'N', 'U', 'H', 'I', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'F', 'R', 'A', 'M', 'E', 0,
    'S', 'Y', 'S', '_', 'P', 'E', 'N', 'W', 'I', 'N', 'D', 'O', 'W', 'S', '_', 'P', 'R', 'E', 'S', 'E', 'N', 'T', 0,
    'S', 'c', 'h', 'e', 'd', 'u', 'l', 'e', 'F', 'o', 'r', 'D', 'e', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'r', 'a', 'c', 't', 'i', 'o', 'n', 'a', 'l', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'N', 'o', 'n', 'F', 'l', 'e', 'x', 'i', 'b', 'l', 'e', 'G', 'r', 'o', 'w', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'O', 'w', 'n', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'O', 'w', 'n', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'R', 'e', 'p', 'r', 'e', 's', 'e', 'n', 't', 'e', 'd', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'S', 'e', 't', 'T', 'o', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 'I', 'n', 'S', 'a', 'm', 'e', 'W', 'e', 'e', 'k', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'L', 'I', 'N', 'E', '_', 'S', 'P', 'A', 'C', 'I', 'N', 'G', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'R', 'I', 'G', 'H', 'T', '_', 'I', 'N', 'D', 'E', 'N', 'T', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 'V', 'i', 's', 'i', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 'W', 'i', 'd', 't', 'h', 'T', 'o', 'F', 'i', 't', 0,
    't', 'e', 's', 't', 'A', 'r', 'r', 'a', 'y', 'D', 'o', 'u', 'b', 'l', 'e', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    't', 'e', 's', 't', 'A', 'r', 'r', 'a', 'y', 'S', 't', 'r', 'i', 'n', 'g', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    'w', 'x', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'i', 'b', 'l', 'e', 'P', 'a', 'n', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'B', 'O', 'B', 'O', 'X', '_', 'C', 'L', 'O', 'S', 'E', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'E', 'R', 'A', 'S', 'E', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'N', 'D', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'A', 'L', 'L', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'D', 'E', 'L', 'E', 'T', 'E', '_', 'I', 'T', 'E', 'M', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'I', 'T', 'E', 'M', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'O', 'W', 'E', 'R', '_', 'S', 'U', 'S', 'P', 'E', 'N', 'D', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'L', 'I', 'N', 'E', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'P', 'A', 'G', 'E', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'L', 'I', 'T', 'T', 'E', 'R', '_', 'U', 'N', 'S', 'P', 'L', 'I', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'D', 'E', 'L', 'E', 'T', 'E', '_', 'I', 'T', 'E', 'M', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'S', 'E', 'L', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'S', 't', 'a', 't', 'i', 'c', 'T', 'e', 'x', 't', 0,
    'w', 'x', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'S', 't', 'o', 'p', 0,
    'w', 'x', 'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'w', 'x', 'P', 'o', 'p', 'u', 'p', 'T', 'r', 'a', 'n', 's', 'i', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'P', 'o', 'w', 'e', 'r', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'B', 'l', 'o', 'c', 'k', 'e', 'r', 0,
    'w', 'x', 'P', 'y', 'S', 'i', 'n', 'g', 'l', 'e', 'C', 'h', 'o', 'i', 'c', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'Q', 'u', 'e', 'r', 'y', 'N', 'e', 'w', 'P', 'a', 'l', 'e', 't', 't', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'V', 'G', 'B', 'i', 't', 'm', 'a', 'p', 'F', 'i', 'l', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'S', 'e', 't', 't', 'a', 'b', 'l', 'e', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'w', 'x', 'S', 'p', 'l', 'i', 't', 't', 'e', 'r', 'R', 'e', 'n', 'd', 'e', 'r', 'P', 'a', 'r', 'a', 'm', 's', 0,
    'w', 'x', 'S', 't', 'd', 'D', 'i', 'a', 'l', 'o', 'g', 'B', 'u', 't', 't', 'o', 'n', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'S', 't', 'o', 'c', 'k', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 'P', 'a', 'g', 'e', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'H', 'I', 'D', 'E', 0,
    'A', 'C', 'C', '_', 'E', 'V', 'E', 'N', 'T', '_', 'O', 'B', 'J', 'E', 'C', 'T', '_', 'S', 'H', 'O', 'W', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', '_', 'T', 'A', 'K', 'E', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 0,
    'A', 'C', 'C', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'B', 'U', 'S', 'Y', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'E', 'R', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'R', 'E', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'A', 'u', 't', 'o', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 's', 0,
    'B', 'A', 'T', 'T', 'E', 'R', 'Y', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'M', 'A', 'C', 'C', 'U', 'R', 'S', 'O', 'R', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'L', 'A', 'S', 'T', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'D', 'E', 'S', 'T', '_', 'A', 'T', 'O', 'P', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'D', 'E', 'S', 'T', '_', 'O', 'V', 'E', 'R', 0,
    'C', 'O', 'N', 'F', 'I', 'G', '_', 'U', 'S', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', 'I', 'L', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'Q', 'U', 'E', 'S', 'T', 'I', 'O', 'N', '_', 'A', 'R', 'R', 'O', 'W', 0,
    'C', 'a', 'n', 'D', 'o', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'a', 't', 'i', 'o', 'n', 0,
    'C', 'a', 'n', 'U', 's', 'e', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'T', 'o', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'P', 'i', 'x', 'e', 'l', 's', 'T', 'o', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'i', 't', 'm', 'a', 'p', 'F', 'r', 'o', 'm', 'I', 'm', 'a', 'g', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'I', 'm', 'a', 'g', 'e', 'F', 'r', 'o', 'm', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'E', 'X', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', 'H', 'E', 'L', 'P', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'T', 'i', 'm', 'e', 'S', 'p', 'a', 'n', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'C', 'l', 'i', 'p', 'p', 'i', 'n', 'g', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'I', 't', 'e', 'm', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'R', 'e', 'c', 't', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 's', 0,
    'F', 'O', 'N', 'T', 'B', 'T', 'N', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '_', 'M', 'A', 'X', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'G', 'R', 'E', 'E', 'K', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'K', 'H', 'M', 'E', 'R', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'O', 'R', 'I', 'Y', 'A', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'R', 'O', 'M', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'T', 'A', 'M', 'I', 'L', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'D', 'E', 'C', 'O', 'R', 'A', 'T', 'I', 'V', 'E', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'E', 'X', 'T', 'R', 'A', 'H', 'E', 'A', 'V', 'Y', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'E', 'X', 'T', 'R', 'A', 'L', 'I', 'G', 'H', 'T', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'F', 'L', 'O', 'A', 'T', '_', 'O', 'N', '_', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'F', 'i', 'l', 'e', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'F', 'i', 'l', 'e', 'P', 'i', 'c', 'k', 'e', 'r', 'W', 'i', 'd', 'g', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'F', 'i', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 'P', 'r', 'o', 'm', 'p', 't', 'S', 't', 'r', 0,
    'F', 'i', 'n', 'd', 'F', 'i', 'r', 's', 't', 'U', 'n', 'u', 's', 'e', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'F', 'o', 'n', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'G', 'e', 't', 'A', 'l', 't', 'e', 'r', 'n', 'a', 't', 'e', 'R', 'o', 'w', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'S', 'c', 'a', 'l', 'e', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'G', 'e', 't', 'D', 'e', 's', 'k', 't', 'o', 'p', 'E', 'n', 'v', 'i', 'r', 'o', 'n', 'm', 'e', 'n', 't', 0,
    'G', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'i', 'v', 'e', 'C', 'o', 'l', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'i', 'v', 'e', 'R', 'o', 'w', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'E', 'n', 'g', 'l', 'i', 's', 'h', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'L', 'i', 'b', 'r', 'a', 'r', 'y', 'V', 'e', 'r', 's', 'i', 'o', 'n', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'M', 'a', 'c', 'A', 'b', 'o', 'u', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'G', 'e', 't', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 'D', 'e', 's', 'c', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'S', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'r', 't', 'i', 'a', 'l', 'T', 'e', 'x', 't', 'E', 'x', 't', 'e', 'n', 't', 's', 0,
    'G', 'e', 't', 'R', 'e', 'p', 'e', 't', 'i', 't', 'i', 'o', 'n', 'C', 'o', 'u', 'n', 't', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'S', 'y', 's', 't', 'e', 'm', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'e', 'i', 'n', 'g', 'R', 'e', 'm', 'o', 'v', 'e', 'd', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 'A', 's', 'N', 'a', 'v', 'i', 'g', 'a', 't', 'i', 'o', 'n', 'K', 'e', 'y', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 'F', 'a', 't', 'a', 'l', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 's', 0,
    'H', 'a', 's', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'H', 'a', 's', 'C', 'o', 'l', 'u', 'm', 'n', 'O', 'r', 'd', 'e', 'r', 'S', 'u', 'p', 'p', 'o', 'r', 't', 0,
    'H', 'a', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'C', 'A', 'S', 'C', 'A', 'D', 'E', 0,
    'I', 'M', 'A', 'G', 'E', 'L', 'I', 'S', 'T', '_', 'D', 'R', 'A', 'W', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'A', 'L', 'P', 'H', 'A', '_', 'T', 'H', 'R', 'E', 'S', 'H', 'O', 'L', 'D', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'B', 'I', 'C', 'U', 'B', 'I', 'C', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'N', 'E', 'A', 'R', 'E', 'S', 'T', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'R', 'E', 'S', 'O', 'L', 'U', 'T', 'I', 'O', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'I', 'N', 'T', 'E', 'R', 'P', 'O', 'L', 'A', 'T', 'I', 'O', 'N', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'I', 's', 'C', 'a', 'n', 'c', 'e', 'l', 'B', 'u', 't', 't', 'o', 'n', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'S', 'e', 'a', 'r', 'c', 'h', 'B', 'u', 't', 't', 'o', 'n', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'U', 's', 'i', 'n', 'g', 'D', 'a', 'r', 'k', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'I', 's', 'W', 'e', 's', 't', 'E', 'u', 'r', 'o', 'p', 'e', 'a', 'n', 'C', 'o', 'u', 'n', 't', 'r', 'y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'A', 'R', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'E', 'G', 'Y', 'P', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'L', 'I', 'B', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'Q', 'A', 'T', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'S', 'U', 'D', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'S', 'Y', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'Y', 'E', 'M', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'S', 'U', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'N', 'G', 'L', 'A', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'S', 'Q', 'U', 'E', '_', 'S', 'P', 'A', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'M', 'B', 'A', '_', 'Z', 'A', 'M', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'L', 'I', 'N', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'G', 'A', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'E', 'I', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'F', 'I', 'J', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'G', 'U', 'A', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'N', 'I', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'B', 'E', 'N', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'O', 'N', 'G', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'G', 'A', 'B', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'H', 'A', 'I', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'N', 'I', 'G', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'W', 'I', 'S', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'S', 'Y', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'A', 'N', 'D', 'A', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'I', 'T', 'A', 'L', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', '_', 'S', 'W', 'I', 'S', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'R', 'E', 'E', 'K', '_', 'C', 'Y', 'P', 'R', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'R', 'E', 'E', 'K', '_', 'G', 'R', 'E', 'E', 'C', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'G', 'B', 'O', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'B', 'U', 'V', 'E', 'R', 'D', 'I', 'A', 'N', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'N', 'U', 'R', 'I', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'K', 'U', 'Y', 'U', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'R', 'E', 'A', 'N', '_', 'K', 'O', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'Y', 'R', 'A', '_', 'C', 'H', 'I', 'I', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'B', 'A', '_', 'K', 'A', 'T', 'A', 'N', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', '_', 'B', 'R', 'U', 'N', 'E', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'A', 'M', 'A', '_', 'N', 'A', 'M', 'I', 'B', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'E', 'P', 'A', 'L', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'E', 'P', 'A', 'L', 'I', '_', 'N', 'E', 'P', 'A', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'E', 'R', 'S', 'I', 'A', 'N', '_', 'I', 'R', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Q', 'U', 'E', 'C', 'H', 'U', 'A', '_', 'P', 'E', 'R', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'W', 'A', '_', 'T', 'A', 'N', 'Z', 'A', 'N', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'H', 'O', '_', 'E', 'R', 'I', 'T', 'R', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'K', 'H', 'A', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'F', 'I', 'N', 'L', 'A', 'N', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'C', 'O', 'T', 'S', '_', 'G', 'A', 'E', 'L', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'M', 'A', 'L', 'I', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'C', 'U', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'P', 'E', 'R', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'I', 'S', 'S', '_', 'G', 'E', 'R', 'M', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'Y', 'R', 'I', 'A', 'C', '_', 'S', 'Y', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'T', 'A', 'R', '_', 'R', 'U', 'S', 'S', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'E', 'L', 'U', 'G', 'U', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'I', 'G', 'H', 'U', 'R', '_', 'C', 'H', 'I', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'S', 'E', 'R', '_', 'D', 'E', 'F', 'I', 'N', 'E', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'O', 'R', 'U', 'B', 'A', '_', 'B', 'E', 'N', 'I', 'N', 0,
    'L', 'A', 'Y', 'O', 'U', 'T', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'M', 'A', 'R', 'G', 'I', 'N', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'S', 'H', 'O', 'R', 'T', '_', 'D', 'A', 'T', 'E', '_', 'F', 'M', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'A', 'G', 'T', 'Y', 'P', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', 0,
    'M', 'a', 'c', 'G', 'e', 't', 'M', 'e', 't', 'a', 'l', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'M', 'a', 'c', 'S', 'e', 't', 'M', 'e', 't', 'a', 'l', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'M', 'a', 'p', 'S', 'c', 'r', 'e', 'e', 'n', 'S', 'i', 'z', 'e', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'O', 'n', 'C', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 'C', 'h', 'a', 'n', 'g', 'i', 'n', 'g', 0,
    'O', 'n', 'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'W', 'i', 'd', 't', 'h', 'H', 'i', 'n', 't', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', '3', '2', 'K', 'B', 'I', 'G', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '1', '0', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'I', 'P', 'P', 'L', 'E', '_', 'M', 'A', 'S', 'K', 0,
    'P', 'O', 'W', 'E', 'R', '_', 'R', 'E', 'S', 'O', 'U', 'R', 'C', 'E', '_', 'S', 'C', 'R', 'E', 'E', 'N', 0,
    'P', 'O', 'W', 'E', 'R', '_', 'R', 'E', 'S', 'O', 'U', 'R', 'C', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', 0,
    'P', 'o', 's', 't', 'S', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 'T', 'o', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'r', 'a', 'm', 'e', '_', 'A', 'p', 'p', 'M', 'o', 'd', 'a', 'l', 0,
    'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'r', 'a', 'm', 'e', '_', 'N', 'o', 'n', 'M', 'o', 'd', 'a', 'l', 0,
    'R', 'E', 'M', 'O', 'V', 'E', '_', 'L', 'E', 'A', 'D', 'I', 'N', 'G', '_', 'S', 'P', 'A', 'C', 'E', 'S', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'N', 'I', 'M', 'A', 'T', 'I', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'I', 'N', 'D', 'I', 'C', 'A', 'T', 'O', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'P', 'O', 'P', 'U', 'P', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'R', 'O', 'W', 'H', 'E', 'A', 'D', 'E', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'T', 'A', 'T', 'U', 'S', 'B', 'A', 'R', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'F', 'i', 'l', 'e', 'F', 'r', 'o', 'm', 'H', 'i', 's', 't', 'o', 'r', 'y', 0,
    'S', 'Y', 'S', '_', 'C', 'A', 'N', '_', 'I', 'C', 'O', 'N', 'I', 'Z', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', '3', 'D', 'D', 'K', 'S', 'H', 'A', 'D', 'O', 'W', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'A', 'C', 'K', 'G', 'R', 'O', 'U', 'N', 'D', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'T', 'N', 'H', 'I', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'T', 'E', 'X', 'T', 0,
    'S', 'e', 'n', 'd', 'S', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 'T', 'o', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'S', 'e', 't', 'A', 'l', 't', 'e', 'r', 'n', 'a', 't', 'e', 'R', 'o', 'w', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'D', 'e', 's', 'k', 't', 'o', 'p', 'E', 'n', 'v', 'i', 'r', 'o', 'n', 'm', 'e', 'n', 't', 0,
    'S', 'e', 't', 'M', 'a', 'c', 'A', 'b', 'o', 'u', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'R', 'e', 'p', 'e', 't', 'i', 't', 'i', 'o', 'n', 'C', 'o', 'u', 'n', 't', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'S', 'h', 'a', 'p', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'h', 'r', 'e', 'a', 'd', 'A', 'c', 't', 'i', 'v', 'e', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'h', 'o', 'w', 'W', 'i', 't', 'h', 'o', 'u', 't', 'A', 'c', 't', 'i', 'v', 'a', 't', 'i', 'n', 'g', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'N', 'A', 'M', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', '_', 'T', 'E', 'X', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'F', 'A', 'M', 'I', 'L', 'Y', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'I', 'T', 'A', 'L', 'I', 'C', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'W', 'E', 'I', 'G', 'H', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'L', 'E', 'F', 'T', '_', 'I', 'N', 'D', 'E', 'N', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'T', 'R', '_', 'F', 'U', 'L', 'L', '_', 'R', 'O', 'W', '_', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 0,
    'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'c', 'o', 'n', '_', 'E', 'x', 'p', 'a', 'n', 'd', 'e', 'd', 0,
    'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'c', 'o', 'n', '_', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    'U', 'P', 'D', 'A', 'T', 'E', '_', 'U', 'I', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'A', 'L', 'L', 0,
    'U', 'S', 'E', '_', 'U', 'I', 'A', 'C', 'T', 'I', 'O', 'N', 'S', 'I', 'M', 'U', 'L', 'A', 'T', 'O', 'R', 0,
    'W', 'I', 'N', 'D', 'O', 'W', '_', 'V', 'A', 'R', 'I', 'A', 'N', 'T', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'F', 'A', 'V', 'O', 'R', 'I', 'T', 'E', 'S', 0,
    '_', 'g', 'e', 't', 'T', 'h', 'e', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 'b', 'a', 's', 'e', 0,
    'i', 'n', 'd', 'e', 'x', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'w', 'x', 'A', 'u', 't', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 'e', 'd', 'P', 'a', 'i', 'n', 't', 'D', 'C', 0,
    'w', 'x', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'w', 'x', 'D', 'C', 'T', 'e', 'x', 't', 'B', 'g', 'M', 'o', 'd', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'D', 'C', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'N', 'a', 'm', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'W', 'e', 'e', 'k', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'D', 'i', 'a', 'l', 'o', 'g', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'e', 'r', 0,
    'w', 'x', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'I', 'S', 'P', 'L', 'A', 'Y', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'R', 'E', 'S', 'I', 'Z', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'B', 'E', 'G', 'I', 'N', '_', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'C', 'A', 'C', 'H', 'E', '_', 'H', 'I', 'N', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'A', 'L', 'E', 'T', 'T', 'E', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'O', 'W', 'E', 'R', '_', 'S', 'U', 'S', 'P', 'E', 'N', 'D', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'L', 'I', 'N', 'E', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'P', 'A', 'G', 'E', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'B', 'E', 'G', 'I', 'N', '_', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'u', 's', 't', 'o', 'm', 'i', 'z', 'e', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'H', 'i', 's', 't', 'o', 'r', 'y', 'M', 'e', 'n', 'u', 'L', 'i', 's', 't', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 'O', 'p', 'e', 'n', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'S', 't', 'a', 't', 'i', 'c', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'A', 'l', 'p', 'h', 'a', 'B', 'l', 'e', 'n', 'd', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'i', 'a', 'l', 'o', 'g', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'P', 'a', 'l', 'e', 't', 't', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'a', 's', 's', 'w', 'o', 'r', 'd', 'E', 'n', 't', 'r', 'y', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'P', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'i', 'o', 'n', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'r', 0,
    'w', 'x', 'R', 'a', 's', 't', 'e', 'r', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 'V', 'i', 's', 'i', 'b', 'i', 'l', 'i', 't', 'y', 0,
    'w', 'x', 'S', 't', 'o', 'c', 'k', 'L', 'a', 'b', 'e', 'l', 'Q', 'u', 'e', 'r', 'y', 'F', 'l', 'a', 'g', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'B', 'u', 'l', 'l', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'L', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'r', 'S', 'i', 'm', 'p', 'l', 'e', 0,
    'w', 'x', 'V', 'a', 'r', 'S', 'c', 'r', 'o', 'l', 'l', 'H', 'e', 'l', 'p', 'e', 'r', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', '_', 'A', 'D', 'D', 'S', 'E', 'L', 'E', 'C', 'T', 'I', 'O', 'N', 0,
    'A', 'P', 'P', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'E', 'X', 'C', 'E', 'P', 'T', 'I', 'O', 'N', 0,
    'A', 'R', 'T', '_', 'F', 'I', 'N', 'D', '_', 'A', 'N', 'D', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', 0,
    'A', 'l', 'w', 'a', 'y', 's', 'S', 'h', 'o', 'w', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 's', 0,
    'A', 's', 's', 'i', 'g', 'n', 'S', 't', 'a', 't', 'e', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'B', 'A', 'T', 'T', 'E', 'R', 'Y', '_', 'N', 'O', 'R', 'M', 'A', 'L', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'B', 'G', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'X', 'B', 'M', '_', 'D', 'A', 'T', 'A', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'X', 'P', 'M', '_', 'D', 'A', 'T', 'A', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'D', 'E', 'S', 'T', '_', 'O', 'U', 'T', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'U', 'N', 'D', 'E', 'T', 'E', 'R', 'M', 'I', 'N', 'E', 'D', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'C', 'a', 'l', 'c', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'C', 'h', 'e', 'c', 'k', 'F', 'o', 'r', 'I', 'n', 't', 'e', 'r', 's', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'e', 'd', 'S', 'i', 'z', 'e', 'r', 0,
    'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'D', 'I', 'A', 'L', 'O', 'G', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', 'I', 'R', 'S', 'T', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'S', 'H', 'O', 'W', '_', 'F', 'I', 'L', 'T', 'E', 'R', 'S', 0,
    'D', 'i', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'D', 'i', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'W', 'i', 'd', 'g', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'D', 'i', 'r', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 'P', 'r', 'o', 'm', 'p', 't', 'S', 't', 'r', 0,
    'D', 'r', 'a', 'w', 'R', 'o', 'u', 'n', 'd', 'e', 'd', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'l', 'e', 0,
    'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'F', 'L', 'A', 'G', 'S', '_', 'N', 'O', 'N', 'E', 0,
    'E', 'V', 'E', 'N', 'T', '_', 'P', 'R', 'O', 'P', 'A', 'G', 'A', 'T', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'F', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 'V', 'i', 'e', 'w', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'M', 'i', 'n', 'i', 'm', 'i', 'z', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'P', 'o', 'p', 'u', 'p', 'A', 'n', 'i', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'F', 'L', 'P', '_', 'O', 'V', 'E', 'R', 'W', 'R', 'I', 'T', 'E', '_', 'P', 'R', 'O', 'M', 'P', 'T', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'T', 'H', 'A', 'I', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'N', 'I', 'C', 'O', 'D', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '1', '6', 'B', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '1', '6', 'L', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '3', '2', 'B', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '3', '2', 'L', 'E', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'A', 'N', 'T', 'I', 'A', 'L', 'I', 'A', 'S', 'E', 'D', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'E', 'X', 'T', 'R', 'A', 'B', 'O', 'L', 'D', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'E', 'X', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', 'H', 'E', 'L', 'P', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'N', 'O', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'M', 'E', 'N', 'U', 0,
    'F', 'S', 'W', '_', 'W', 'A', 'R', 'N', 'I', 'N', 'G', '_', 'O', 'V', 'E', 'R', 'F', 'L', 'O', 'W', 0,
    'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'N', 'O', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 0,
    'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'N', 'O', 'M', 'E', 'N', 'U', 'B', 'A', 'R', 0,
    'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'N', 'O', 'T', 'O', 'O', 'L', 'B', 'A', 'R', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'P', 'r', 'o', 't', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'M', 'i', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'E', 'v', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'E', 'x', 'i', 't', 'O', 'n', 'F', 'r', 'a', 'm', 'e', 'D', 'e', 'l', 'e', 't', 'e', 0,
    'G', 'e', 't', 'F', 'l', 'e', 'x', 'i', 'b', 'l', 'e', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'M', 'a', 'c', 'E', 'x', 'i', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'G', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'D', 'I', 'P', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'I', 'd', 0,
    'G', 'e', 't', 'R', 'e', 's', 't', 'r', 'i', 'c', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'I', 't', 'e', 'm', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'V', 'e', 'n', 'd', 'o', 'r', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'E', 'n', 'd', 0,
    'G', 'e', 't', 'W', 'a', 't', 'c', 'h', 'e', 'd', 'P', 'a', 't', 'h', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 'I', 'n', 'S', 'a', 'm', 'e', 'W', 'e', 'e', 'k', 0,
    'H', 'a', 's', 'C', 'l', 'i', 'e', 'n', 't', 'U', 'n', 't', 'y', 'p', 'e', 'd', 'D', 'a', 't', 'a', 0,
    'H', 'a', 's', 'M', 'u', 'l', 't', 'i', 'p', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'I', 'n', 'f', 'o', 'r', 'm', 'F', 'i', 'r', 's', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 'n', 'i', 't', 'A', 'l', 'l', 'I', 'm', 'a', 'g', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'I', 'n', 'i', 't', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'I', 's', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'S', 'o', 'r', 't', 'O', 'r', 'd', 'e', 'r', 'A', 's', 'c', 'e', 'n', 'd', 'i', 'n', 'g', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'C', 'H', 'A', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'I', 'R', 'A', 'Q', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'O', 'M', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'B', 'A', 'I', 'J', 'A', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'I', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'E', 'R', 'O', 'K', 'E', 'E', '_', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', '_', 'A', 'R', 'U', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'D', 'O', '_', 'N', 'I', 'G', 'E', 'R', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'C', 'H', 'A', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'M', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', '_', 'T', 'O', 'G', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'R', 'E', 'E', 'N', 'L', 'A', 'N', 'D', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'U', 'S', 'I', 'I', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'U', 'S', 'A', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'W', 'A', 'I', 'I', 'A', 'N', '_', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'I', 'N', 'D', 'I', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'T', 'E', 'R', 'L', 'I', 'N', 'G', 'U', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'T', 'E', 'R', 'L', 'I', 'N', 'G', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'L', 'A', 'A', 'L', 'L', 'I', 'S', 'U', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'M', 'B', 'A', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'C', 'H', 'E', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'N', 'Y', 'A', 'R', 'W', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'T', 'I', 'N', '_', 'W', 'O', 'R', 'L', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'Y', 'I', 'A', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'S', 'A', 'I', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'Z', 'A', 'N', 'D', 'E', 'R', 'A', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'R', 'I', 'Y', 'A', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'R', 'O', 'M', 'O', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'N', 'O', 'R', 'W', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'S', 'W', 'E', 'D', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'H', 'O', 'N', 'A', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'G', 'A', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'I', 'T', 'A', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'M', 'I', 'L', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'E', 'S', 'O', '_', 'U', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'O', 'N', 'G', 'A', '_', 'T', 'O', 'N', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Z', 'A', 'R', 'M', 'A', '_', 'N', 'I', 'G', 'E', 'R', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', 'W', 'H', 'E', 'R', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'T', 'O', 'R', 'I', 'G', 'H', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'D', 'A', 'T', 'E', '_', 'T', 'I', 'M', 'E', '_', 'F', 'M', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'D', 'E', 'C', 'I', 'M', 'A', 'L', '_', 'P', 'O', 'I', 'N', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'L', 'O', 'N', 'G', '_', 'D', 'A', 'T', 'E', '_', 'F', 'M', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'N', 'A', 'M', 'E', '_', 'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'A', 'G', 'T', 'Y', 'P', 'E', '_', 'B', 'C', 'P', '4', '7', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'A', 'G', 'T', 'Y', 'P', 'E', '_', 'M', 'A', 'C', 'O', 'S', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'A', 'G', 'T', 'Y', 'P', 'E', '_', 'P', 'O', 'S', 'I', 'X', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'H', 'O', 'U', 'S', 'A', 'N', 'D', 'S', '_', 'S', 'E', 'P', 0,
    'L', 'a', 'u', 'n', 'c', 'h', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'r', 'o', 'w', 's', 'e', 'r', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'W', 'H', 'E', 'E', 'L', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'M', 'a', 'c', 'I', 's', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 0,
    'M', 'a', 'p', 'S', 'c', 'r', 'e', 'e', 'n', 'S', 'i', 'z', 'e', 'T', 'o', 'P', 'a', 'p', 'e', 'r', 0,
    'M', 'e', 's', 's', 'a', 'g', 'e', 'B', 'o', 'x', 'C', 'a', 'p', 't', 'i', 'o', 'n', 'S', 't', 'r', 0,
    'M', 'o', 'v', 'e', 'B', 'e', 'f', 'o', 'r', 'e', 'I', 'n', 'T', 'a', 'b', 'O', 'r', 'd', 'e', 'r', 0,
    'N', 'u', 'l', 'l', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 'T', 'a', 'b', 'l', 'e', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'C', 'o', 'l', 'u', 'm', 'n', 'I', 'm', 'a', 'g', 'e', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '4', '_', 'J', 'I', 'S', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '5', '_', 'J', 'I', 'S', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '6', '_', 'J', 'I', 'S', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '1', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '2', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '3', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '4', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '5', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '6', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '7', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '8', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '9', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'R', 'O', 'S', 'S', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'F', 'I', 'R', 'S', 'T', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'M', 'E', 'D', 'I', 'U', 'M', 0,
    'P', 'U', '_', 'C', 'O', 'N', 'T', 'A', 'I', 'N', 'S', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', 'S', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 'S', 't', 'r', 'e', 't', 'c', 'h', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'E', 'v', 'e', 'n', 't', 's', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'O', 'M', 'B', 'O', 'B', 'O', 'X', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'O', 'C', 'U', 'M', 'E', 'N', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'R', 'O', 'P', 'L', 'I', 'S', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'E', 'Q', 'U', 'A', 'T', 'I', 'O', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'G', 'R', 'O', 'U', 'P', 'I', 'N', 'G', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'L', 'I', 'S', 'T', 'I', 'T', 'E', 'M', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'I', 'T', 'E', 'M', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', 0,
    'R', 'e', 'a', 'r', 'r', 'a', 'n', 'g', 'e', 'L', 'i', 's', 't', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'R', 'e', 'q', 'u', 'e', 's', 't', 'U', 's', 'e', 'r', 'A', 't', 't', 'e', 'n', 't', 'i', 'o', 'n', 0,
    'R', 'e', 's', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'C', 'a', 't', '_', 'M', 'e', 's', 's', 'a', 'g', 'e', 's', 0,
    'S', 'I', 'Z', 'E', 'R', '_', 'F', 'L', 'A', 'G', '_', 'B', 'I', 'T', 'S', '_', 'M', 'A', 'S', 'K', 0,
    'S', 'I', 'Z', 'E', '_', 'A', 'L', 'L', 'O', 'W', '_', 'M', 'I', 'N', 'U', 'S', '_', 'O', 'N', 'E', 0,
    'S', 'P', 'L', 'I', 'T', '_', 'D', 'R', 'A', 'G', '_', 'L', 'E', 'F', 'T', '_', 'D', 'O', 'W', 'N', 0,
    'S', 'T', 'B', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'M', 'I', 'D', 'D', 'L', 'E', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', '3', 'D', 'H', 'I', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'T', 'N', 'S', 'H', 'A', 'D', 'O', 'W', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', 0,
    'S', 'Y', 'S', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'G', 'U', 'I', '_', 'F', 'O', 'N', 'T', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'O', 'b', 'j', 'e', 'c', 't', 'A', 's', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'S', 'e', 'n', 'd', 'A', 'u', 't', 'o', 'S', 'c', 'r', 'o', 'l', 'l', 'E', 'v', 'e', 'n', 't', 's', 0,
    'S', 'e', 't', 'A', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'P', 'r', 'o', 't', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'M', 'i', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'S', 'e', 't', 'E', 'v', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'S', 'e', 't', 'E', 'x', 'i', 't', 'O', 'n', 'F', 'r', 'a', 'm', 'e', 'D', 'e', 'l', 'e', 't', 'e', 0,
    'S', 'e', 't', 'F', 'l', 'e', 'x', 'i', 'b', 'l', 'e', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'I', 'n', 's', 'e', 'r', 't', 'i', 'o', 'n', 'P', 'o', 'i', 'n', 't', 'E', 'n', 'd', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'D', 'r', 'o', 'p', 'H', 'i', 'g', 'h', 'l', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'M', 'a', 'c', 'E', 'x', 'i', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'I', 'd', 0,
    'S', 'e', 't', 'V', 'e', 'n', 'd', 'o', 'r', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'Y', 'e', 's', 'N', 'o', 'C', 'a', 'n', 'c', 'e', 'l', 'L', 'a', 'b', 'e', 'l', 's', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'I', 'n', 'h', 'e', 'r', 'i', 't', 'C', 'o', 'l', 'o', 'u', 'r', 's', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'P', 'r', 'e', 'v', 'e', 'n', 't', 'A', 'p', 'p', 'E', 'x', 'i', 't', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'R', 'T', 'L', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'P', 'A', 'G', 'E', '_', 'B', 'R', 'E', 'A', 'K', 0,
    'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'H', 'E', 'L', 'P', 0,
    'T', 'O', 'O', 'L', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'P', 'R', 'E', 'S', 'S', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 'S', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'R', 'O', 'T', 'A', 'T', 'E', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', 'W', 'H', 'E', 'R', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'T', 'O', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'e', 'x', 't', 'E', 'n', 't', 'r', 'y', 'D', 'i', 'a', 'l', 'o', 'g', 'S', 't', 'y', 'l', 'e', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'D', 'a', 't', 'a', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'U', 'S', 'E', 'R', '_', 'A', 'T', 'T', 'E', 'N', 'T', 'I', 'O', 'N', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'n', 't', 'r', 'o', 'l', 's', 0,
    'W', 'I', 'N', 'D', 'O', 'W', '_', 'V', 'A', 'R', 'I', 'A', 'N', 'T', '_', 'L', 'A', 'R', 'G', 'E', 0,
    'W', 'I', 'N', 'D', 'O', 'W', '_', 'V', 'A', 'R', 'I', 'A', 'N', 'T', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'W', 'X', 'K', '_', 'M', 'E', 'D', 'I', 'A', '_', 'N', 'E', 'X', 'T', '_', 'T', 'R', 'A', 'C', 'K', 0,
    'W', 'X', 'K', '_', 'M', 'E', 'D', 'I', 'A', '_', 'P', 'L', 'A', 'Y', '_', 'P', 'A', 'U', 'S', 'E', 0,
    'W', 'X', 'K', '_', 'M', 'E', 'D', 'I', 'A', '_', 'P', 'R', 'E', 'V', '_', 'T', 'R', 'A', 'C', 'K', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', 0,
    '_', 'D', 'r', 'a', 'w', 'L', 'i', 'n', 'e', 's', 'F', 'r', 'o', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'w', 'x', 'A', 'f', 'f', 'i', 'n', 'e', 'M', 'a', 't', 'r', 'i', 'x', '2', 'D', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'f', 'f', 'e', 'r', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'T', 'o', 'g', 'g', 'l', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'C', 'l', 'i', 'p', 'b', 'o', 'a', 'r', 'd', 'T', 'e', 'x', 't', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'C', 'a', 'l', 'e', 'n', 'd', 'a', 'r', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'T', 'i', 'm', 'e', 'Z', 'o', 'n', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', '_', 'R', 'O', 'T', 'A', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'X', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'C', 'O', 'L', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'E', 'N', 'U', '_', 'H', 'I', 'G', 'H', 'L', 'I', 'G', 'H', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'N', 'A', 'V', 'I', 'G', 'A', 'T', 'I', 'O', 'N', '_', 'K', 'E', 'Y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'I', 'N', 'C', 'T', 'R', 'L', 'D', 'O', 'U', 'B', 'L', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'W', 'O', '_', 'F', 'I', 'N', 'G', 'E', 'R', '_', 'T', 'A', 'P', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 'A', 'c', 't', 'i', 'v', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 'P', 'a', 'r', 'a', 'm', 's', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 'o', 'l', 'u', 'm', 'n', 'S', 'i', 'm', 'p', 'l', 'e', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'S', 'o', 'r', 't', 'I', 'c', 'o', 'n', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'H', 'e', 'l', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'R', 'e', 's', 'i', 'z', 'e', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'w', 'x', 'N', 'a', 'v', 'i', 'g', 'a', 't', 'i', 'o', 'n', 'K', 'e', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'o', 'i', 'n', 't', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'o', 't', 'a', 't', 'e', 'G', 'e', 's', 't', 'u', 'r', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'i', 'm', 'p', 'l', 'e', 'H', 'e', 'l', 'p', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'w', 'x', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'P', 'a', 't', 'h', 's', ':', ':', 'D', 'i', 'r', 0,
    'w', 'x', 'S', 't', 'r', 'i', 'n', 'g', 'C', 'A', 'r', 'r', 'a', 'y', 'H', 'o', 'l', 'd', 'e', 'r', 0,
    'w', 'x', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'i', 'o', 'n', 's', 'L', 'o', 'a', 'd', 'e', 'r', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'D', 'e', 's', 't', 'r', 'o', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'A', 'C', 'C', '_', 'N', 'O', 'T', '_', 'I', 'M', 'P', 'L', 'E', 'M', 'E', 'N', 'T', 'E', 'D', 0,
    'A', 'P', 'P', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'P', 'P', 'R', 'E', 'S', 'S', 0,
    'A', 'R', 'T', '_', 'E', 'X', 'E', 'C', 'U', 'T', 'A', 'B', 'L', 'E', '_', 'F', 'I', 'L', 'E', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', '_', 'S', 'I', 'D', 'E', '_', 'P', 'A', 'N', 'E', 'L', 0,
    'A', 'd', 'd', 'F', 'i', 'l', 'e', 'W', 'i', 't', 'h', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 0,
    'A', 'd', 'd', 'Q', 'u', 'a', 'd', 'C', 'u', 'r', 'v', 'e', 'T', 'o', 'P', 'o', 'i', 'n', 't', 0,
    'A', 'd', 'd', 'R', 'o', 'u', 'n', 'd', 'e', 'd', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'l', 'e', 0,
    'A', 'd', 'd', 'S', 't', 'r', 'e', 't', 'c', 'h', 'a', 'b', 'l', 'e', 'S', 'p', 'a', 'c', 'e', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'D', 'E', 'P', 'T', 'H', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'B', 'U', 'F', 'F', 'E', 'R', '_', 'V', 'I', 'R', 'T', 'U', 'A', 'L', '_', 'A', 'R', 'E', 'A', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'D', 'E', 'S', 'T', '_', 'I', 'N', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'R', 'I', 'G', 'H', 'T', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'C', 'h', 'e', 'c', 'k', 'T', 'o', 'o', 'l', 'k', 'i', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'A', 'l', 'l', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'F', 'r', 'o', 'm', 'U', 'n', 'k', 'n', 'o', 'w', 'n', 'D', 'C', 0,
    'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'F', 'R', 'A', 'M', 'E', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', '3', 'D', '_', 'I', 'N', 'T', 'E', 'R', 'N', 'A', 'L', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'E', 'D', 'I', 'T', '_', 'L', 'A', 'B', 'E', 'L', 'S', 0,
    'D', 'I', 'R', 'P', '_', 'D', 'I', 'R', '_', 'M', 'U', 'S', 'T', '_', 'E', 'X', 'I', 'S', 'T', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'E', 'v', 'e', 'n', 't', 's', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'T', 'o', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'X', 'R', 'e', 'l', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'T', 'o', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'Y', 'R', 'e', 'l', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'C', 'o', 'n', 't', 'e', 'x', 't', 'P', 'o', 'p', 'u', 'p', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'E', 'V', 'E', 'N', 'T', '_', 'P', 'R', 'O', 'P', 'A', 'G', 'A', 'T', 'E', '_', 'M', 'A', 'X', 0,
    'E', 'V', 'T', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'S', 'O', 'C', 'K', 'E', 'T', 0,
    'E', 'V', 'T', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'T', 'H', 'R', 'E', 'A', 'D', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'B', 'e', 'l', 'l', 'O', 'n', 'N', 'o', 'M', 'a', 't', 'c', 'h', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'F', 'D', '_', 'O', 'V', 'E', 'R', 'W', 'R', 'I', 'T', 'E', '_', 'P', 'R', 'O', 'M', 'P', 'T', 0,
    'F', 'H', '_', 'P', 'A', 'T', 'H', '_', 'S', 'H', 'O', 'W', '_', 'A', 'L', 'W', 'A', 'Y', 'S', 0,
    'F', 'L', 'P', '_', 'F', 'I', 'L', 'E', '_', 'M', 'U', 'S', 'T', '_', 'E', 'X', 'I', 'S', 'T', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '0', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '1', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '2', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '3', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '4', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '5', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '6', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '7', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '2', '5', '8', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '1', '3', '6', '1', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'E', 'U', 'C', '_', 'J', 'P', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'E', 'U', 'C', '_', 'K', 'R', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'G', 'B', '2', '3', '1', '2', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'K', 'O', 'I', '8', '_', 'U', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'M', 'A', 'X', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'C', 'M', 'I', 'N', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'S', 'Y', 'S', 'T', 'E', 'M', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'T', 'E', 'L', 'E', 'T', 'Y', 'P', 'E', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', 'D', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'S', 'E', 'M', 'I', 'B', 'O', 'L', 'D', 0,
    'F', 'S', 'W', '_', 'W', 'A', 'R', 'N', 'I', 'N', 'G', '_', 'G', 'E', 'N', 'E', 'R', 'A', 'L', 0,
    'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'N', 'O', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'F', 'i', 'n', 'd', 'T', 'o', 'o', 'l', 'F', 'o', 'r', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'F', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 'A', 't', 'P', 'o', 'i', 'n', 't', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 'T', 'a', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'a', 't', 'i', 'o', 'n', 'R', 'e', 'a', 's', 'o', 'n', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'N', 'a', 'm', 'e', 's', 0,
    'G', 'e', 't', 'A', 's', 's', 'e', 'r', 't', 'S', 't', 'a', 'c', 'k', 'T', 'r', 'a', 'c', 'e', 0,
    'G', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'B', 'e', 's', 't', 'F', 'i', 't', 't', 'i', 'n', 'g', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'A', 'r', 'e', 'a', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'T', 'i', 't', 'l', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'P', 'e', 'r', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'i', 'n', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'u', 's', 't', 'o', 'm', 'P', 'a', 'i', 'n', 't', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'L', 'o', 'a', 'd', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'D', 'i', 'r', 'e', 'c', 't', '2', 'D', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'i', 'v', 'e', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'F', 'r', 'o', 'm', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'E', 'n', 'g', 'l', 'i', 's', 'h', 'M', 'o', 'n', 't', 'h', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'E', 'r', 'r', 'o', 'r', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'L', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'E', 'x', 't', 'W', 'i', 'l', 'd', 'c', 'a', 'r', 'd', 0,
    'G', 'e', 't', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'S', 'h', 'o', 'r', 't', 'c', 'u', 't', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'P', 'a', 'p', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'M', 'e', 's', 's', 'a', 'g', 'e', 'B', 'o', 'x', 'I', 'c', 'o', 'n', 'I', 'd', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'G', 'e', 't', 'M', 'o', 'd', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 'T', 'i', 'm', 'e', 0,
    'G', 'e', 't', 'O', 'r', 'F', 'i', 'n', 'd', 'M', 'a', 's', 'k', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'P', 'a', 's', 's', 'w', 'o', 'r', 'd', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'F', 'r', 'o', 'm', 'T', 'e', 'x', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'e', 'd', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'C', 'l', 'i', 'e', 'n', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'L', 'o', 'c', 'a', 'l', 'D', 'a', 't', 'a', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'R', 'o', 'w', 's', 'B', 'e', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'o', 'r', 'd', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'H', 'a', 's', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'H', 'a', 's', 'C', 'l', 'i', 'e', 'n', 't', 'O', 'b', 'j', 'e', 'c', 't', 'D', 'a', 't', 'a', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'F', 'I', 'R', 'S', 'T', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'P', 'R', 'E', 'V', 'I', 'O', 'U', 'S', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'Z', 'O', 'O', 'M', '_', 'O', 'U', 'T', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'R', 'E', 'S', 'O', 'L', 'U', 'T', 'I', 'O', 'N', '_', 'C', 'M', 0,
    'I', 'n', 's', 'e', 'r', 't', 'S', 't', 'r', 'e', 't', 'c', 'h', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'I', 's', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'R', 'e', 'c', 'o', 'r', 'd', 'i', 'n', 'g', 'D', 'e', 'f', 'a', 'u', 'l', 't', 's', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'K', 'A', 'N', '_', 'G', 'H', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', '_', 'U', 'A', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'M', 'A', 'N', 'A', 'N', 'K', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'L', 'A', 'R', 'U', 'S', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'D', 'O', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'O', 'R', 'N', 'I', 'S', 'H', '_', 'U', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'M', 'B', 'U', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'U', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', '_', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'D', 'O', 'N', 'E', 'S', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'O', 'L', 'A', '_', 'F', 'O', 'N', 'Y', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'T', 'H', 'U', 'A', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'O', 'W', '_', 'G', 'E', 'R', 'M', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'C', 'E', 'D', 'O', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'E', 'R', 'U', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'K', 'O', '_', 'G', 'U', 'I', 'N', 'E', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'D', 'I', 'A', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'A', 'P', 'I', 'A', 'M', 'E', 'N', 'T', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'R', 'T', 'U', 'G', 'U', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'I', 'N', 'A', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'S', 'K', 'O', 'L', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', '_', 'Y', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', '_', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'E', 'S', 'O', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'R', 'D', 'U', '_', 'I', 'N', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'I', 'E', 'T', 'N', 'A', 'M', 'E', 'S', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'T', 'O', 'L', 'E', 'F', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'S', 'T', 'A', 'T', 'E', '_', 'D', 'O', 'N', 'T', 'C', 'A', 'R', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'S', 'T', 'A', 'T', 'E', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'F', 'O', 'R', 'M', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'L', 'O', 'A', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'N', 'A', 'M', 'E', '_', 'C', 'O', 'U', 'N', 'T', 'R', 'Y', 0,
    'L', 'o', 'g', 'i', 'c', 'a', 'l', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 'X', 'R', 'e', 'l', 0,
    'L', 'o', 'g', 'i', 'c', 'a', 'l', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 'Y', 'R', 'e', 'l', 0,
    'M', 'a', 'c', 'G', 'e', 't', 'C', 'o', 'm', 'm', 'o', 'n', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'M', 'a', 'c', 'S', 'e', 't', 'C', 'o', 'm', 'm', 'o', 'n', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'M', 'a', 'p', 'S', 'c', 'r', 'e', 'e', 'n', 'S', 'i', 'z', 'e', 'T', 'o', 'P', 'a', 'g', 'e', 0,
    'M', 'o', 'u', 's', 'e', 'C', 'l', 'i', 'c', 'k', 'C', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd', 0,
    'M', 'o', 'v', 'e', 'A', 'f', 't', 'e', 'r', 'I', 'n', 'T', 'a', 'b', 'O', 'r', 'd', 'e', 'r', 0,
    'O', 'S', 'X', 'I', 's', 'G', 'U', 'I', 'A', 'p', 'p', 'l', 'i', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'O', 'f', 'f', 's', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'O', 'n', 'G', 'e', 't', 'R', 'o', 'w', 's', 'H', 'e', 'i', 'g', 'h', 't', 'H', 'i', 'n', 't', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '3', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '4', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '5', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '5', '_', 'T', 'R', 'A', 'N', 'S', 'V', 'E', 'R', 'S', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'T', 'A', 'B', 'L', 'O', 'I', 'D', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'L', 'A', 'S', 'T', '_', 'H', 'A', 'T', 'C', 'H', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'H', 'O', 'R', 'T', '_', 'D', 'A', 'S', 'H', 0,
    'P', 'E', 'N', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'F', 'O', 'R', 'M', 'S', 'O', 'U', 'R', 'C', 'E', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'D', 'R', 'A', 'F', 'T', 0,
    'P', 'l', 'a', 't', 'f', 'o', 'r', 'm', 'I', 'n', 'f', 'o', 'r', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'c', 'a', 'l', 'l', 'y', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'I', 'A', 'G', 'R', 'A', 'M', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'G', 'R', 'A', 'P', 'H', 'I', 'C', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 'B', 'A', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'O', 'U', 'T', 'L', 'I', 'N', 'E', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'A', 'G', 'E', 'T', 'A', 'B', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'T', 'O', 'O', 'L', 'B', 'A', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'T', 'O', 'O', 'L', 'T', 'I', 'P', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'S', 'o', 'r', 't', 'I', 'n', 'd', 'i', 'c', 'a', 't', 'o', 'r', 0,
    'S', 'I', 'Z', 'E', '_', 'N', 'O', '_', 'A', 'D', 'J', 'U', 'S', 'T', 'M', 'E', 'N', 'T', 'S', 0,
    'S', 'P', 'L', 'I', 'T', '_', 'D', 'R', 'A', 'G', '_', 'D', 'R', 'A', 'G', 'G', 'I', 'N', 'G', 0,
    'S', 'T', 'B', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
    'S', 'T', 'O', 'C', 'K', '_', 'W', 'I', 'T', 'H', '_', 'M', 'N', 'E', 'M', 'O', 'N', 'I', 'C', 0,
    'S', 'T', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'M', 'I', 'D', 'D', 'L', 'E', 0,
    'S', 'Y', 'S', '_', 'A', 'N', 'S', 'I', '_', 'F', 'I', 'X', 'E', 'D', '_', 'F', 'O', 'N', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', '3', 'D', 'S', 'H', 'A', 'D', 'O', 'W', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'G', 'R', 'A', 'Y', 'T', 'E', 'X', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'H', 'O', 'T', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'I', 'N', 'F', 'O', 'T', 'E', 'X', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'M', 'E', 'N', 'U', 'T', 'E', 'X', 'T', 0,
    'S', 'Y', 'S', '_', 'H', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'A', 'R', 'R', 'O', 'W', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'H', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'A', 'R', 'R', 'O', 'W', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'N', 'E', 'T', 'W', 'O', 'R', 'K', '_', 'P', 'R', 'E', 'S', 'E', 'N', 'T', 0,
    'S', 'Y', 'S', '_', 'V', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'A', 'R', 'R', 'O', 'W', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'V', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'A', 'R', 'R', 'O', 'W', '_', 'Y', 0,
    'S', 'e', 't', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 'T', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'P', 'e', 'r', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'i', 'n', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'C', 'u', 's', 't', 'o', 'm', 'P', 'a', 'i', 'n', 't', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'L', 'o', 'a', 'd', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'M', 'a', 'r', 'g', 'i', 'n', 'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'S', 'e', 't', 'S', 'e', 'a', 'r', 'c', 'h', 'M', 'e', 'n', 'u', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'N', 'o', 'r', 'm', 'a', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'h', 'o', 'w', 'C', 'u', 's', 't', 'o', 'm', 'i', 'z', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'S', 't', 'a', 't', 'i', 'c', 'B', 'i', 't', 'm', 'a', 'p', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 'u', 'p', 'p', 'r', 'e', 's', 's', 'B', 'e', 'l', 'l', 'O', 'n', 'E', 'r', 'r', 'o', 'r', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'A', 'L', 'I', 'G', 'N', 'M', 'E', 'N', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'C', 'H', 'A', 'R', 'A', 'C', 'T', 'E', 'R', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'F', 'A', 'C', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', '_', 'S', 'I', 'Z', 'E', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'P', 'A', 'R', 'A', 'G', 'R', 'A', 'P', 'H', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'T', 'O', 'L', 'E', 'F', 'T', 0,
    'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', 'S', 'T', 'A', 'T', 'E', '_', 'N', 'E', 'X', 'T', 0,
    'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', 'S', 'T', 'A', 'T', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'I', 'T', 'E', 'M', 'S', 'T', 'A', 'T', 'E', '_', 'P', 'R', 'E', 'V', 0,
    'T', 'h', 'e', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'T', 'o', 'g', 'g', 'l', 'e', 'I', 't', 'e', 'm', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'c', 'o', 'n', '_', 'N', 'o', 'r', 'm', 'a', 'l', 0,
    'U', 'S', 'E', 'R', '_', 'A', 'T', 'T', 'E', 'N', 'T', 'I', 'O', 'N', '_', 'I', 'N', 'F', 'O', 0,
    'U', 's', 'e', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'U', 's', 'e', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'U', 's', 'e', 'P', 'r', 'i', 'm', 'a', 'r', 'y', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'W', 'I', 'N', 'D', 'O', 'W', '_', 'V', 'A', 'R', 'I', 'A', 'N', 'T', '_', 'M', 'I', 'N', 'I', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'F', 'O', 'R', 'W', 'A', 'R', 'D', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'R', 'E', 'F', 'R', 'E', 'S', 'H', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'P', 'A', 'G', 'I', 'N', 'G', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'Y', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'P', 'A', 'G', 'E', 'D', 'O', 'W', 'N', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'S', 'U', 'B', 'T', 'R', 'A', 'C', 'T', 0,
    '_', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'a', 's', 'e', 0,
    'b', 'D', 'e', 'l', 'e', 't', 'e', 'G', 'r', 'o', 'u', 'p', 'I', 'f', 'E', 'm', 'p', 't', 'y', 0,
    'o', 'f', 'f', 's', 'e', 't', 'A', 'f', 't', 'e', 'r', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'p', 'r', 'i', 'n', 't', 'o', 'u', 't', 'F', 'o', 'r', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    't', 'e', 's', 't', 'A', 'r', 'r', 'a', 'y', 'I', 'n', 't', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    't', 'e', 's', 't', 'V', 'a', 'r', 'i', 'a', 'n', 't', 'T', 'y', 'p', 'e', 'N', 'a', 'm', 'e', 0,
    'w', 'x', 'A', 'c', 'c', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'A', 'c', 't', 'i', 'v', 'i', 't', 'y', 'I', 'n', 'd', 'i', 'c', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'C', 'o', 'm', 'b', 'o', 'C', 't', 'r', 'l', 'F', 'e', 'a', 't', 'u', 'r', 'e', 's', 0,
    'w', 'x', 'C', 'o', 'n', 'f', 'i', 'g', 'P', 'a', 't', 'h', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'C', 'o', 'n', 't', 'e', 'n', 't', 'P', 'r', 'o', 't', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'C', 'o', 'n', 't', 'e', 'x', 't', 'H', 'e', 'l', 'p', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'C', 'o', 'u', 'n', 't', 'r', 'y', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'w', 'x', 'D', 'i', 'r', 'F', 'i', 'l', 't', 'e', 'r', 'L', 'i', 's', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', '_', 'E', 'N', 'T', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'E', 'T', 'A', 'I', 'L', 'E', 'D', '_', 'H', 'E', 'L', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', '_', 'K', 'E', 'Y', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'R', 'E', 'S', 'S', '_', 'A', 'N', 'D', '_', 'T', 'A', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'W', 'I', 'N', '_', 'T', 'O', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'L', 'I', 'N', 'E', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'P', 'A', 'G', 'E', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'E', 'A', 'R', 'C', 'H', '_', 'C', 'A', 'N', 'C', 'E', 'L', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'O', 'L', '_', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'O', 'L', '_', 'R', 'C', 'L', 'I', 'C', 'K', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'E', 'N', 'D', '_', 'D', 'R', 'A', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'G', 'E', 'T', '_', 'I', 'N', 'F', 'O', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'K', 'E', 'Y', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'R', 'E', 'E', '_', 'S', 'E', 'T', '_', 'I', 'N', 'F', 'O', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 'W', 'a', 't', 'c', 'h', 'e', 'r', 0,
    'w', 'x', 'F', 'i', 'n', 'd', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'F', 'l', 'e', 'x', 'S', 'i', 'z', 'e', 'r', 'G', 'r', 'o', 'w', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'H', 'e', 'l', 'p', 'E', 'v', 'e', 'n', 't', ':', ':', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'w', 'x', 'I', 'n', 't', 'e', 'r', 'n', 'e', 't', 'F', 'S', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'L', 'a', 'y', 'o', 'u', 't', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'w', 'x', 'L', 'o', 'g', 'I', 'n', 't', 'e', 'r', 'p', 'o', 's', 'e', 'r', 'T', 'e', 'm', 'p', 0,
    'w', 'x', 'M', 'D', 'I', 'C', 'h', 'i', 'l', 'd', 'F', 'r', 'a', 'm', 'e', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'L', 'i', 's', 't', '_', 'i', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'M', 'u', 'l', 't', 'i', 'C', 'h', 'o', 'i', 'c', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'N', 'u', 'm', 'b', 'e', 'r', 'E', 'n', 't', 'r', 'y', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'O', 'p', 'e', 'r', 'a', 't', 'i', 'n', 'g', 'S', 'y', 's', 't', 'e', 'm', 'I', 'd', 0,
    'w', 'x', 'P', 'o', 'w', 'e', 'r', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'K', 'i', 'n', 'd', 0,
    'w', 'x', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 'E', 'd', 'i', 't', 'o', 'r', 0,
    'w', 'x', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'B', 'a', 'r', 0,
    'w', 'x', 'R', 'i', 'c', 'h', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'w', 'x', 'T', 'w', 'o', 'F', 'i', 'n', 'g', 'e', 'r', 'T', 'a', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'U', 'I', 'A', 'c', 't', 'i', 'o', 'n', 'S', 'i', 'm', 'u', 'l', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'V', 'a', 'r', 'H', 'V', 'S', 'c', 'r', 'o', 'l', 'l', 'H', 'e', 'l', 'p', 'e', 'r', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'C', 'r', 'e', 'a', 't', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'B', 'K', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', 'W', 'H', 'E', 'R', 'E', 0,
    'B', 'K', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'L', 'A', 'B', 'E', 'L', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'I', 'P', 'P', 'L', 'E', 0,
    'B', 'U', 'F', 'F', 'E', 'R', '_', 'C', 'L', 'I', 'E', 'N', 'T', '_', 'A', 'R', 'E', 'A', 0,
    'C', 'L', 'R', 'P', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'C', 'O', 'L', '_', 'W', 'I', 'D', 'T', 'H', '_', 'A', 'U', 'T', 'O', 'S', 'I', 'Z', 'E', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'S', 'O', 'U', 'R', 'C', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'L', 'E', 'F', 'T', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'P', 'A', 'I', 'N', 'T', '_', 'B', 'R', 'U', 'S', 'H', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'P', 'O', 'I', 'N', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'R', 'I', 'G', 'H', 'T', '_', 'A', 'R', 'R', 'O', 'W', 0,
    'C', 'a', 'n', 'M', 'o', 'v', 'e', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'D', 'o', 'w', 'n', 0,
    'C', 'l', 'i', 'e', 'n', 't', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 'i', 'z', 'e', 0,
    'C', 'o', 'n', 'f', 'i', 'g', 'F', 'i', 'l', 'e', 'C', 'o', 'n', 'v', '_', 'D', 'o', 't', 0,
    'C', 'o', 'n', 'f', 'i', 'g', 'F', 'i', 'l', 'e', 'C', 'o', 'n', 'v', '_', 'E', 'x', 't', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'A', 'l', 'p', 'h', 'a', 'T', 'o', 'M', 'a', 's', 'k', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'G', 'r', 'e', 'y', 's', 'c', 'a', 'l', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'I', 'n', 't', 'e', 'r', 's', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'D', 'I', 'R', 'P', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'D', 'e', 't', 'a', 'c', 'h', 'C', 'l', 'i', 'e', 'n', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'T', 'o', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'R', 'e', 'l', 0,
    'D', 'o', 'G', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'D', 'o', 'n', 't', 'C', 'r', 'e', 'a', 't', 'e', 'O', 'n', 'D', 'e', 'm', 'a', 'n', 'd', 0,
    'D', 'r', 'a', 'w', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'S', 'p', 'l', 'i', 't', 't', 'e', 'r', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'D', 'r', 'a', 'w', 'T', 'i', 't', 'l', 'e', 'B', 'a', 'r', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'D', 'r', 'a', 'w', 'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'B', 'u', 't', 't', 'o', 'n', 0,
    'E', 'V', 'T', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'T', 'I', 'M', 'E', 'R', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'F', 'o', 'c', 'u', 's', 0,
    'E', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'e', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 's', 0,
    'E', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'e', 'F', 'a', 'c', 'e', 'n', 'a', 'm', 'e', 's', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'W', 'i', 'd', 't', 'h', 0,
    'F', 'D', '_', 'F', 'I', 'L', 'E', '_', 'M', 'U', 'S', 'T', '_', 'E', 'X', 'I', 'S', 'T', 0,
    'F', 'H', '_', 'P', 'A', 'T', 'H', '_', 'S', 'H', 'O', 'W', '_', 'N', 'E', 'V', 'E', 'R', 0,
    'F', 'L', 'E', 'X', '_', 'G', 'R', 'O', 'W', 'M', 'O', 'D', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'F', 'N', 'T', 'P', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '4', '3', '7', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '8', '5', '0', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '8', '5', '2', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '8', '5', '5', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '8', '6', '6', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '8', '7', '4', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '9', '3', '2', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '9', '3', '6', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '9', '4', '9', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'C', 'P', '9', '5', '0', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'J', 'O', 'H', 'A', 'B', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '1', '6', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '3', '2', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'F', 'i', 'l', 'e', 'L', 'a', 'y', 'o', 'u', 't', '_', 'C', 'l', 'a', 's', 's', 'i', 'c', 0,
    'F', 'i', 'n', 'd', 'I', 't', 'e', 'm', 'A', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'F', 'i', 'n', 'd', 'I', 't', 'e', 'm', 'B', 'y', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'F', 'i', 't', 'T', 'h', 'i', 's', 'S', 'i', 'z', 'e', 'T', 'o', 'P', 'a', 'p', 'e', 'r', 0,
    'F', 'r', 'o', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 'A', 'n', 'd', 'A', 'l', 'p', 'h', 'a', 0,
    'G', 'e', 't', 'A', 'p', 'p', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 's', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'B', 'e', 's', 't', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'B', 'e', 's', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 's', 'F', 'o', 'r', 'S', 'i', 'z', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'C', 't', 'l', '3', '2', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'i', 'n', 'g', 'S', 'i', 'z', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 'a', 's', 'h', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'v', 'e', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'E', 'x', 'p', 'a', 'n', 'd', 'e', 'd', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'G', 'e', 't', 'E', 'x', 't', 'e', 'n', 'd', 'e', 'd', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'F', 'r', 'a', 'm', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'G', 'e', 't', 'G', 'D', 'I', 'P', 'l', 'u', 's', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'G', 'e', 't', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 'T', 'e', 'x', 't', 'A', 't', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'O', 'f', 'E', 'x', 'a', 'c', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'J', 'u', 'l', 'i', 'a', 'n', 'D', 'a', 'y', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'L', 'i', 'n', 'e', 0,
    'G', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'P', 'a', 'g', 'e', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 'F', 'r', 'o', 'm', 'E', 'x', 't', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'i', 'm', 'u', 'm', 'P', 'a', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'E', 'n', 't', 'r', 'i', 'e', 's', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'e', 'r', 'i', 'c', 'W', 'e', 'i', 'g', 'h', 't', 'O', 'f', 0,
    'G', 'e', 't', 'P', 'a', 'l', 'e', 't', 't', 'e', 'R', 'e', 'a', 'l', 'i', 'z', 'e', 'd', 0,
    'G', 'e', 't', 'P', 'a', 'p', 'e', 'r', 'R', 'e', 'c', 't', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'G', 'e', 't', 'P', 'o', 'r', 't', 'I', 'd', 'S', 'h', 'o', 'r', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'I', 'n', 'G', 'r', 'o', 'u', 'p', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'R', 'e', 'd', 'o', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 's', 0,
    'G', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'G', 'e', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'U', 'n', 'd', 'o', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 'F', 'l', 'a', 'g', 0,
    'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'F', 'i', 'l', 'l', 'L', 'i', 'n', 'e', 'a', 'r', 0,
    'H', 'D', 'R', '_', 'S', 'O', 'R', 'T', '_', 'I', 'C', 'O', 'N', '_', 'D', 'O', 'W', 'N', 0,
    'H', 'D', 'R', '_', 'S', 'O', 'R', 'T', '_', 'I', 'C', 'O', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'H', 'D', '_', 'B', 'I', 'T', 'M', 'A', 'P', '_', 'O', 'N', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'B', 'A', 'R', '_', '1', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'B', 'A', 'R', '_', '2', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'F', 'I', 'R', 'S', 'T', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'T', 'H', 'U', 'M', 'B', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', '_', 'P', 'R', 'O', 'C', 'E', 'D', 'U', 'R', 'E', 'S', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'L', 'A', 'S', 'T', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'N', 'E', 'X', 'T', 0,
    'I', 'D', '_', 'M', 'D', 'I', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'P', 'R', 'E', 'V', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'Z', 'O', 'O', 'M', '_', 'I', 'N', 0,
    'I', 'D', '_', 'R', 'E', 'V', 'E', 'R', 'T', '_', 'T', 'O', '_', 'S', 'A', 'V', 'E', 'D', 0,
    'I', 'D', '_', 'S', 'O', 'R', 'T', '_', 'D', 'E', 'S', 'C', 'E', 'N', 'D', 'I', 'N', 'G', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'L', 'A', 'R', 'G', 'E', 'I', 'C', 'O', 'N', 'S', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'S', 'M', 'A', 'L', 'L', 'I', 'C', 'O', 'N', 'S', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'A', 'L', 'P', 'H', 'A', '_', 'O', 'P', 'A', 'Q', 'U', 'E', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'H', 'I', 'G', 'H', 0,
    'I', 'N', 'T', 'E', 'R', 'P', 'O', 'L', 'A', 'T', 'I', 'O', 'N', '_', 'B', 'E', 'S', 'T', 0,
    'I', 'N', 'T', 'E', 'R', 'P', 'O', 'L', 'A', 'T', 'I', 'O', 'N', '_', 'F', 'A', 'S', 'T', 0,
    'I', 'N', 'T', 'E', 'R', 'P', 'O', 'L', 'A', 'T', 'I', 'O', 'N', '_', 'G', 'O', 'O', 'D', 0,
    'I', 'N', 'T', 'E', 'R', 'P', 'O', 'L', 'A', 'T', 'I', 'O', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'I', 's', 'A', 'l', 'l', 'o', 'w', 'e', 'd', 'T', 'r', 'a', 'c', 'e', 'M', 'a', 's', 'k', 0,
    'I', 's', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'E', 'x', 'p', 'a', 'n', 'd', 'i', 'n', 'g', 'E', 'n', 'v', 'V', 'a', 'r', 's', 0,
    'I', 's', 'N', 'e', 'x', 't', 'E', 'v', 'e', 'n', 't', 'A', 'l', 'l', 'o', 'w', 'e', 'd', 0,
    'I', 's', 'P', 'o', 'p', 'u', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'a', 't', 'e', 0,
    'I', 's', 'R', 'u', 'n', 'n', 'i', 'n', 'g', 'U', 'n', 'd', 'e', 'r', 'W', 'i', 'n', 'e', 0,
    'I', 's', 'S', 't', 'r', 'e', 't', 'c', 'h', 'a', 'b', 'l', 'e', 'S', 'p', 'a', 'c', 'e', 0,
    'I', 's', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 0,
    'K', 'I', 'L', 'L', '_', 'A', 'C', 'C', 'E', 'S', 'S', '_', 'D', 'E', 'N', 'I', 'E', 'D', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'B', 'K', 'H', 'A', 'Z', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'R', 'I', 'K', 'A', 'A', 'N', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'U', 'L', 'G', 'A', 'R', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'A', 'M', 'B', 'O', 'D', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'O', 'L', 'O', 'G', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'S', 'P', 'E', 'R', 'A', 'N', 'T', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'W', 'E', '_', 'G', 'H', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'U', 'N', 'G', 'A', 'R', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'C', 'E', 'L', 'A', 'N', 'D', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'U', 'K', 'T', 'I', 'T', 'U', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'K', 'O', 'T', 'A', '_', 'U', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'O', '_', 'K', 'E', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', 'A', 'L', 'A', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'L', 'D', 'A', 'V', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'N', 'G', 'O', 'L', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'G', 'I', 'E', 'M', 'B', 'O', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'O', 'R', 'W', 'E', 'G', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', '_', 'L', 'U', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'H', 'A', 'L', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'L', 'O', 'V', 'E', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'U', 'N', 'D', 'A', 'N', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'C', 'H', 'E', 'L', 'H', 'I', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'K', 'R', 'A', 'I', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'A', 'I', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'A', 'L', 'E', 'N', 'C', 'I', 'A', 'N', 0,
    'L', 'C', '_', 'S', 'O', 'R', 'T', '_', 'D', 'E', 'S', 'C', 'E', 'N', 'D', 'I', 'N', 'G', 0,
    'L', 'I', 'S', 'T', '_', 'A', 'L', 'I', 'G', 'N', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'A', 'B', 'O', 'V', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'B', 'E', 'L', 'O', 'W', 0,
    'L', 'I', 'S', 'T', '_', 'S', 'T', 'A', 'T', 'E', '_', 'F', 'O', 'C', 'U', 'S', 'E', 'D', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'C', 'A', 'T', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'F', 'O', 'R', 'M', '_', 'N', 'A', 'T', 'I', 'V', 'E', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'N', 'A', 'M', 'E', '_', 'L', 'O', 'C', 'A', 'L', 'E', 0,
    'L', 'a', 'y', 'o', 'u', 't', '_', 'L', 'e', 'f', 't', 'T', 'o', 'R', 'i', 'g', 'h', 't', 0,
    'L', 'a', 'y', 'o', 'u', 't', '_', 'R', 'i', 'g', 'h', 't', 'T', 'o', 'L', 'e', 'f', 't', 0,
    'L', 'o', 'g', 'i', 'c', 'a', 'l', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 'R', 'e', 'l', 0,
    'M', 'a', 'c', 'M', 'e', 't', 'a', 'l', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'M', 'a', 'k', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'r', 'a', 'g', 'C', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd', 0,
    'N', 'B', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'N', 'O', 'W', 'H', 'E', 'R', 'E', 0,
    'N', 'B', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'L', 'A', 'B', 'E', 'L', 0,
    'N', 'u', 'l', 'l', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'N', 'u', 'l', 'l', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'O', 'n', 'C', 'o', 'm', 'b', 'o', 'D', 'o', 'u', 'b', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'I', 's', 'C', 'h', 'e', 'c', 'k', 'e', 'd', 0,
    'O', 'n', 'G', 'e', 't', 'U', 'n', 'i', 't', 's', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'P', 'E', 'R', 'S', 'O', 'N', 'A', 'L', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', '1', '6', 'K', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', '3', '2', 'K', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'L', 'O', 'N', 'G', '_', 'D', 'A', 'S', 'H', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'U', 'S', 'E', 'R', '_', 'D', 'A', 'S', 'H', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'E', 'N', 'V', 'M', 'A', 'N', 'U', 'A', 'L', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'M', 'O', 'D', 'E', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'M', 'O', 'D', 'E', '_', 'P', 'R', 'I', 'N', 'T', 'E', 'R', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'H', 'I', 'G', 'H', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'W', 'i', 'n', 'd', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'L', 'I', 'E', 'N', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'O', 'L', 'U', 'M', 'N', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'U', 'R', 'S', 'O', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'I', 'A', 'L', 'O', 'G', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'L', 'I', 'D', 'E', 'R', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'R', 'a', 'd', 'i', 'o', 'B', 'u', 't', 't', 'o', 'n', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 's', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'R', 'e', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'E', 'X', 'P', 'A', 'N', 'D', 0,
    'S', 'T', 'R', 'E', 'A', 'M', '_', 'W', 'R', 'I', 'T', 'E', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'S', 'T', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'A', 'R', 'E', 'T', '_', 'O', 'F', 'F', '_', 'M', 'S', 'E', 'C', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', '3', 'D', 'L', 'I', 'G', 'H', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'T', 'N', 'F', 'A', 'C', 'E', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'T', 'N', 'T', 'E', 'X', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'D', 'E', 'S', 'K', 'T', 'O', 'P', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'F', 'R', 'A', 'M', 'E', 'B', 'K', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'X', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'M', 'E', 'N', 'U', 'B', 'A', 'R', 0,
    'S', 'Y', 'S', '_', 'O', 'E', 'M', '_', 'F', 'I', 'X', 'E', 'D', '_', 'F', 'O', 'N', 'T', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'D', 'E', 'S', 'K', 'T', 'O', 'P', 0,
    'S', 'Y', 'S', '_', 'T', 'A', 'B', 'L', 'E', 'T', '_', 'P', 'R', 'E', 'S', 'E', 'N', 'T', 0,
    'S', 'a', 'f', 'e', 'l', 'y', 'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'a', 't', 'i', 's', 'f', 'y', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'S', 'e', 't', 'A', 'x', 'i', 's', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'i', 'n', 'g', 'S', 'i', 'z', 'e', 'r', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'v', 'e', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 's', 'T', 'i', 'm', 'e', 'o', 'u', 't', 's', 0,
    'S', 'e', 't', 'E', 'x', 't', 'e', 'n', 'd', 'e', 'd', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'F', 'r', 'a', 'm', 'e', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's', 0,
    'S', 'e', 't', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'C', 'o', 'l', 'u', 'm', 'n', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'H', 'a', 's', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'S', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'i', 'm', 'u', 'm', 'P', 'a', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'P', 'a', 'l', 'e', 't', 't', 'e', 'R', 'e', 'a', 'l', 'i', 'z', 'e', 'd', 0,
    'S', 'e', 't', 'P', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'R', 'e', 'd', 'o', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'w', 'H', 'i', 'd', 'e', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'S', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'S', 'e', 't', 'U', 'n', 'd', 'o', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 'F', 'l', 'a', 'g', 0,
    'S', 't', 'r', 'i', 'p', '_', 'C', 'J', 'K', 'M', 'n', 'e', 'm', 'o', 'n', 'i', 'c', 's', 0,
    'S', 't', 'r', 'o', 'k', 'e', 'L', 'i', 'n', 'e', 'S', 'e', 'g', 'm', 'e', 'n', 't', 's', 0,
    'T', 'O', 'O', 'L', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'A', 'L', 'L', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 'S', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'P', 'A', 'N', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 'S', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'Z', 'O', 'O', 'M', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', 0,
    'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'A', 'B', 'O', 'V', 'E', 0,
    'T', 'R', 'E', 'E', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'B', 'E', 'L', 'O', 'W', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'U', 'P', 'D', 'A', 'T', 'E', '_', 'U', 'I', '_', 'F', 'R', 'O', 'M', 'I', 'D', 'L', 'E', 0,
    'U', 'n', 'r', 'e', 's', 'e', 'r', 'v', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'I', 'd', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'O', 'r', 'd', 'e', 'r', 0,
    'W', 'I', 'N', 'D', 'O', 'W', '_', 'V', 'A', 'R', 'I', 'A', 'N', 'T', '_', 'M', 'A', 'X', 0,
    'W', 'S', '_', 'E', 'X', '_', 'B', 'L', 'O', 'C', 'K', '_', 'E', 'V', 'E', 'N', 'T', 'S', 0,
    'W', 'S', '_', 'E', 'X', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'I', 'D', 'L', 'E', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'S', 'E', 'A', 'R', 'C', 'H', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'A', 'R', 'R', 'O', 'W', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'D', 'E', 'C', 'I', 'M', 'A', 'L', 0,
    'W', 'i', 'n', 'd', 'o', 'w', 'T', 'o', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    '_', 'D', 'r', 'a', 'w', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'l', 'e', 'L', 'i', 's', 't', 0,
    '_', 't', 'e', 's', 't', 'G', 'e', 't', 'A', 'l', 'l', 'F', 'o', 'r', 'm', 'a', 't', 's', 0,
    't', 'e', 's', 't', 'U', 'I', 'n', 't', 'P', 't', 'r', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    't', 'e', 's', 't', 'V', 'a', 'r', 'i', 'a', 'n', 't', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    'w', 'x', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 'E', 'n', 't', 'r', 'y', 0,
    'w', 'x', 'A', 'c', 'c', 'e', 'l', 'e', 'r', 'a', 't', 'o', 'r', 'T', 'a', 'b', 'l', 'e', 0,
    'w', 'x', 'A', 'r', 'c', 'h', 'i', 'v', 'e', 'F', 'S', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'n', 'd', 'l', 'e', 'I', 'm', 'p', 'l', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'P', 'r', 'o', 'c', 'e', 's', 's', 'o', 'r', 0,
    'w', 'x', 'C', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'W', 'i', 't', 'h', 'I', 't', 'e', 'm', 's', 0,
    'w', 'x', 'C', 'u', 's', 't', 'o', 'm', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'D', 'a', 's', 'h', 'C', 'A', 'r', 'r', 'a', 'y', 'H', 'o', 'l', 'd', 'e', 'r', 0,
    'w', 'x', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 'S', 'i', 'm', 'p', 'l', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', '_', 'A', 'P', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'E', 'C', 'K', 'L', 'I', 'S', 'T', 'B', 'O', 'X', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'L', 'O', 'S', 'E', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', '_', 'M', 'E', 'N', 'U', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'E', 'N', 'T', 'E', 'R', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'N', 'D', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', '_', 'Z', 'O', 'O', 'M', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', '_', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'E', 'A', 'V', 'E', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'O', 'W', 'E', 'R', '_', 'R', 'E', 'S', 'U', 'M', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'G', 'H', 'T', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'G', 'G', 'L', 'E', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 'P', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'w', 'x', 'F', 'i', 'n', 'd', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'S', 'y', 'm', 'b', 'o', 'l', 'i', 'c', 'S', 'i', 'z', 'e', 0,
    'w', 'x', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'D', 'r', 'a', 'g', 'I', 'm', 'a', 'g', 'e', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'w', 'x', 'H', 'V', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 't', 'r', 'l', 'S', 'i', 'm', 'p', 'l', 'e', 0,
    'w', 'x', 'K', 'e', 'y', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'L', 'i', 's', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'w', 'x', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'w', 'x', 'P', 'r', 'e', 's', 's', 'A', 'n', 'd', 'T', 'a', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'A', 'b', 'o', 'r', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'S', 'V', 'G', 'B', 'i', 't', 'm', 'a', 'p', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'S', 'c', 'r', 'e', 'e', 'n', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'T', 'o', 'o', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'V', 'a', 'r', 'H', 'S', 'c', 'r', 'o', 'l', 'l', 'H', 'e', 'l', 'p', 'e', 'r', 0,
    'w', 'x', 'V', 'a', 'r', 'V', 'S', 'c', 'r', 'o', 'l', 'l', 'H', 'e', 'l', 'p', 'e', 'r', 0,
    'w', 'x', 'V', 'e', 'c', 't', 'o', 'r', '<', 'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', '>', 0,
    'w', 'x', 'V', 'i', 's', 'u', 'a', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'w', 'x', 'Z', 'o', 'o', 'm', 'G', 'e', 's', 't', 'u', 'r', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'A', 'C', 'C', '_', 'N', 'O', 'T', '_', 'S', 'U', 'P', 'P', 'O', 'R', 'T', 'E', 'D', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', '_', 'T', 'A', 'K', 'E', 'F', 'O', 'C', 'U', 'S', 0,
    'A', 'N', 'T', 'I', 'A', 'L', 'I', 'A', 'S', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'A', 'P', 'P', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'D', 'I', 'A', 'L', 'O', 'G', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', '_', 'S', 'E', 'T', 'T', 'I', 'N', 'G', 'S', 0,
    'A', 'R', 'T', '_', 'M', 'I', 'S', 'S', 'I', 'N', 'G', '_', 'I', 'M', 'A', 'G', 'E', 0,
    'A', 'd', 'd', 'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'n', 't', 'r', 'o', 'l', 's', 0,
    'B', 'A', 'T', 'T', 'E', 'R', 'Y', '_', 'L', 'O', 'W', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'B', 'K', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'C', 'O', 'N', 0,
    'B', 'K', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 0,
    'B', 'K', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'P', 'A', 'G', 'E', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'C', 'C', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'C', 'L', 'R', 'P', '_', 'U', 'S', 'E', '_', 'T', 'E', 'X', 'T', 'C', 'T', 'R', 'L', 0,
    'C', 'O', 'L', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'F', 'L', 'A', 'G', 'S', 0,
    'C', 'O', 'L', '_', 'W', 'I', 'D', 'T', 'H', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'C', 'L', 'E', 'A', 'R', 0,
    'C', 'O', 'N', 'F', 'I', 'G', '_', 'U', 'S', 'E', '_', 'S', 'U', 'B', 'D', 'I', 'R', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'C', 'H', 'E', 'C', 'K', 'A', 'B', 'L', 'E', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'I', 'S', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'I', 'S', 'S', 'U', 'B', 'M', 'E', 'N', 'U', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'C', 'O', 'P', 'Y', '_', 'A', 'R', 'R', 'O', 'W', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'P', 'O', 'I', 'N', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'C', 'a', 'n', 'S', 'e', 't', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 0,
    'C', 'a', 'n', 'U', 's', 'e', 'P', 'r', 'i', 'v', 'a', 't', 'e', 'F', 'o', 'n', 't', 0,
    'C', 'h', 'a', 'r', 's', 'e', 't', 'T', 'o', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'A', 'b', 'o', 'r', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'u', 't', 't', 'o', 'n', 'S', 'i', 'z', 'e', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'l', 'o', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'W', 'i', 't', 'h', 'D', 'I', 'P', 'S', 'i', 'z', 'e', 0,
    'D', 'D', '_', 'D', 'I', 'R', '_', 'M', 'U', 'S', 'T', '_', 'E', 'X', 'I', 'S', 'T', 0,
    'D', 'D', '_', 'N', 'E', 'W', '_', 'D', 'I', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'D', 'I', 'R', 'P', '_', 'U', 'S', 'E', '_', 'T', 'E', 'X', 'T', 'C', 'T', 'R', 'L', 0,
    'D', 'U', 'P', 'L', 'E', 'X', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 'N', 'a', 't', 'i', 'v', 'e', 0,
    'D', 'o', 'S', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'E', 'X', 'E', 'C', '_', 'H', 'I', 'D', 'E', '_', 'C', 'O', 'N', 'S', 'O', 'L', 'E', 0,
    'E', 'X', 'E', 'C', '_', 'S', 'H', 'O', 'W', '_', 'C', 'O', 'N', 'S', 'O', 'L', 'E', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'C', 'l', 'o', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'P', 'a', 'g', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 's', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'P', 'r', 'i', 'n', 't', 'T', 'o', 'F', 'i', 'l', 'e', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 'T', 'h', 'e', 'm', 'e', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'T', 'o', 'u', 'c', 'h', 'E', 'v', 'e', 'n', 't', 's', 0,
    'E', 's', 't', 'i', 'm', 'a', 't', 'e', 'T', 'o', 't', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'E', 'x', 'p', 'a', 'n', 'd', 'A', 'l', 'l', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'F', 'L', 'E', 'X', '_', 'G', 'R', 'O', 'W', 'M', 'O', 'D', 'E', '_', 'A', 'L', 'L', 0,
    'F', 'L', 'P', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'F', 'N', 'T', 'P', '_', 'U', 'S', 'E', '_', 'T', 'E', 'X', 'T', 'C', 'T', 'R', 'L', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'B', 'I', 'G', '5', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'K', 'O', 'I', '8', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '7', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'U', 'T', 'F', '8', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'M', 'O', 'D', 'E', 'R', 'N', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'S', 'C', 'R', 'I', 'P', 'T', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'X', 'X', '_', 'L', 'A', 'R', 'G', 'E', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'X', 'X', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'M', 'E', 'D', 'I', 'U', 'M', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'T', 'O', 'O', 'L', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'U', 'N', 'M', 'O', 'U', 'N', 'T', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'W', 'A', 'R', 'N', 'I', 'N', 'G', 0,
    'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'F', 'i', 'n', 'd', 'O', 'r', 'C', 'r', 'e', 'a', 't', 'e', 'B', 'r', 'u', 's', 'h', 0,
    'F', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 'A', 't', 'P', 'o', 'i', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'y', 'L', 'a', 'b', 'e', 'l', 0,
    'F', 'i', 't', 'T', 'h', 'i', 's', 'S', 'i', 'z', 'e', 'T', 'o', 'P', 'a', 'g', 'e', 0,
    'F', 'o', 'r', 'm', 'a', 't', 'I', 'S', 'O', 'C', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 0,
    'G', 'e', 't', 'A', 'l', 't', 'F', 'o', 'r', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'A', 'p', 'p', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 'C', 'l', 'a', 's', 's', 'N', 'a', 'm', 'e', '1', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 'C', 'l', 'a', 's', 's', 'N', 'a', 'm', 'e', '2', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'C', 'a', 'p', 't', 'u', 'r', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'G', 'e', 't', 'D', 'P', 'I', 'S', 'c', 'a', 'l', 'e', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'G', 'e', 't', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'D', 'i', 's', 't', 'a', 'n', 'c', 'e', 'S', 'q', 'u', 'a', 'r', 'e', 0,
    'G', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'D', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'i', 'a', 'n', 'n', 'e', 's', 's', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'E', 'x', 'e', 'c', 'u', 't', 'a', 'b', 'l', 'e', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 'L', 'i', 's', 't', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'T', 'e', 'x', 't', 'E', 'x', 't', 'e', 'n', 't', 0,
    'G', 'e', 't', 'G', 'l', 'o', 'b', 'a', 'l', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'x', 'T', 'o', 'U', 'p', 's', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'I', 'n', 's', 'e', 'r', 't', 'i', 'o', 'n', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'I', 'n', 'v', 'o', 'k', 'i', 'n', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 's', 'P', 'e', 'r', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'M', 'e', 's', 's', 'a', 'g', 'e', 'B', 'o', 'x', 'I', 'c', 'o', 'n', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'G', 'r', 'o', 'u', 'p', 's', 0,
    'G', 'e', 't', 'O', 'S', 'M', 'a', 'j', 'o', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 'S', 'M', 'i', 'c', 'r', 'o', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 'S', 'M', 'i', 'n', 'o', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'G', 'e', 't', 'R', 'e', 'c', 'e', 'i', 'v', 'e', 'd', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'G', 'e', 't', 'R', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'e', 'e', 'n', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'S', 'p', 'l', 'i', 't', 't', 'e', 'r', 'P', 'a', 'r', 'a', 'm', 's', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'e', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'G', 'e', 't', 'S', 'y', 's', 't', 'e', 'm', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'S', 'y', 's', 't', 'e', 'm', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'G', 'e', 't', 'T', 'm', 'p', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'k', 'i', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'R', 'o', 'w', 's', 'E', 'n', 'd', 0,
    'H', 'E', 'L', 'P', '_', 'S', 'E', 'A', 'R', 'C', 'H', '_', 'I', 'N', 'D', 'E', 'X', 0,
    'H', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', '_', 'L', 'A', 'S', 'T', 0,
    'H', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'O', 'U', 'T', 'S', 'I', 'D', 'E', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'H', 'a', 's', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'F', 'o', 'r', 'P', 'a', 't', 'h', 0,
    'H', 'a', 's', 'N', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'I', 'C', 'O', 'N', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'D', 'E', 'P', 'T', 'H', 0,
    'I', 'D', '_', 'J', 'U', 'S', 'T', 'I', 'F', 'Y', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'I', 'D', '_', 'M', 'A', 'X', 'I', 'M', 'I', 'Z', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'S', 'O', 'R', 'T', '_', 'A', 'S', 'C', 'E', 'N', 'D', 'I', 'N', 'G', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'L', 'I', 'S', 'T', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'I', 'n', 'h', 'e', 'r', 'i', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'I', 's', 'A', 'l', 'w', 'a', 'y', 's', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'd', 0,
    'I', 's', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'C', 'h', 'e', 'c', 'k', 'e', 'd', 0,
    'I', 's', 'M', 'a', 'i', 'n', 'L', 'o', 'o', 'p', 'R', 'u', 'n', 'n', 'i', 'n', 'g', 0,
    'I', 's', 'P', 'a', 's', 's', 'i', 'n', 'g', 'M', 'e', 's', 's', 'a', 'g', 'e', 's', 0,
    'I', 's', 'S', 't', 'r', 'i', 'c', 't', 'l', 'y', 'B', 'e', 't', 'w', 'e', 'e', 'n', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'L', 'B', 'A', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'M', 'E', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'S', 'S', 'A', 'M', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'S', 'T', 'U', 'R', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'E', 'R', 'O', 'K', 'E', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'O', 'R', 'S', 'I', 'C', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'R', 'O', 'A', 'T', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'Z', 'O', 'N', 'G', 'K', 'H', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'S', 'T', 'O', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'W', 'E', '_', 'T', 'O', 'G', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'A', 'E', 'R', 'O', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'I', 'L', 'I', 'P', 'I', 'N', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'I', 'U', 'L', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'A', 'L', 'I', 'C', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'O', 'R', 'G', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'U', 'J', 'A', 'R', 'A', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'W', 'A', 'I', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'A', 'P', 'A', 'N', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'J', 'A', 'V', 'A', 'N', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'L', 'E', 'N', 'J', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'S', 'H', 'M', 'I', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'E', 'R', 'N', 'E', 'W', 'E', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'O', 'T', 'H', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'G', 'A', 'S', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'N', 'I', 'P', 'U', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'R', 'I', 'S', 'Y', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'Y', 'A', 'N', 'K', 'O', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'R', 'U', 'S', 'S', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'O', 'M', 'A', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'N', 'S', 'K', 'R', 'I', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'T', 'S', 'W', 'A', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'H', 'A', 'M', 'B', 'A', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'G', 'R', 'I', 'N', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'E', 'L', 'S', 'H', '_', 'U', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'O', 'L', 'A', 'Y', 'T', 'T', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'I', '_', 'C', 'H', 'I', 'N', 'A', 0,
    'L', 'C', '_', 'N', 'O', '_', 'S', 'O', 'R', 'T', '_', 'H', 'E', 'A', 'D', 'E', 'R', 0,
    'L', 'C', '_', 'S', 'O', 'R', 'T', '_', 'A', 'S', 'C', 'E', 'N', 'D', 'I', 'N', 'G', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'C', 'A', 'T', '_', 'N', 'U', 'M', 'B', 'E', 'R', 0,
    'M', 'a', 'k', 'e', 'S', 't', 'r', 'i', 'k', 'e', 't', 'h', 'r', 'o', 'u', 'g', 'h', 0,
    'M', 'o', 'v', 'e', 'R', 'i', 'g', 'h', 't', 'B', 'o', 't', 't', 'o', 'm', 'T', 'o', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'F', 'I', 'R', 'S', 'T', 'C', 'H', 'I', 'L', 'D', 0,
    'N', 'B', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'C', 'O', 'N', 0,
    'N', 'B', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'I', 'T', 'E', 'M', 0,
    'N', 'B', '_', 'H', 'I', 'T', 'T', 'E', 'S', 'T', '_', 'O', 'N', 'P', 'A', 'G', 'E', 0,
    'N', 'u', 'l', 'l', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'B', 'r', 'u', 's', 'h', 0,
    'O', 'S', '_', 'M', 'A', 'C', '_', 'O', 'S', 'X', '_', 'D', 'A', 'R', 'W', 'I', 'N', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'O', 'n', 'P', 'r', 'e', 'p', 'a', 'r', 'e', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'r', 'i', 'g', 'i', 'n', '_', 'H', 'e', 'l', 'p', 'B', 'u', 't', 't', 'o', 'n', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'M', 'O', 'N', 'A', 'R', 'C', 'H', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'G', 'A', 'L', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', 'S', 'M', 'A', 'L', 'L', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', '_', 'P', 'L', 'U', 'S', 0,
    'P', 'D', '_', 'E', 'S', 'T', 'I', 'M', 'A', 'T', 'E', 'D', '_', 'T', 'I', 'M', 'E', 0,
    'P', 'D', '_', 'R', 'E', 'M', 'A', 'I', 'N', 'I', 'N', 'G', '_', 'T', 'I', 'M', 'E', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'D', 'O', 'T', '_', 'D', 'A', 'S', 'H', 0,
    'P', 'N', 'G', '_', 'T', 'Y', 'P', 'E', '_', 'G', 'R', 'E', 'Y', '_', 'R', 'E', 'D', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'C', 'A', 'S', 'S', 'E', 'T', 'T', 'E', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'E', 'N', 'V', 'E', 'L', 'O', 'P', 'E', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'L', 'A', 'R', 'G', 'E', 'F', 'M', 'T', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'S', 'M', 'A', 'L', 'L', 'F', 'M', 'T', 0,
    'P', 'R', 'I', 'N', 'T', 'E', 'R', '_', 'C', 'A', 'N', 'C', 'E', 'L', 'L', 'E', 'D', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'M', 'O', 'D', 'E', '_', 'S', 'T', 'R', 'E', 'A', 'M', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'L', 'O', 'W', 0,
    'P', 'a', 'i', 'n', 't', 'C', 'o', 'm', 'b', 'o', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'P', 'r', 'e', 'p', 'a', 'r', 'e', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'A', 'L', 'E', 'R', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'A', 'R', 'E', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'H', 'A', 'R', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'L', 'O', 'C', 'K', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'S', 'O', 'U', 'N', 'D', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'T', 'A', 'B', 'L', 'E', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 'C', 'o', 'l', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 'R', 'o', 'w', 0,
    'R', 'e', 's', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'O', 'r', 'd', 'e', 'r', 0,
    'R', 'e', 's', 't', 'o', 'r', 'e', 'T', 'o', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'R', 'e', 's', 'u', 'm', 'e', 'P', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'B', 'L', 'E', 'N', 'D', 0,
    'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', '_', 'P', 'O', 'W', 'E', 'R', 'O', 'F', 'F', 0,
    'S', 'I', 'Z', 'E', '_', 'U', 'S', 'E', '_', 'E', 'X', 'I', 'S', 'T', 'I', 'N', 'G', 0,
    'S', 'L', '_', 'M', 'I', 'N', '_', 'M', 'A', 'X', '_', 'L', 'A', 'B', 'E', 'L', 'S', 0,
    'S', 'P', '_', 'P', 'E', 'R', 'M', 'I', 'T', '_', 'U', 'N', 'S', 'P', 'L', 'I', 'T', 0,
    'S', 'T', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'S', 'T', 'B', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'E', 'N', 'D', 0,
    'S', 'T', 'R', 'E', 'A', 'M', '_', 'R', 'E', 'A', 'D', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'S', 'Y', 'S', '_', 'A', 'N', 'S', 'I', '_', 'V', 'A', 'R', '_', 'F', 'O', 'N', 'T', 0,
    'S', 'Y', 'S', '_', 'C', 'A', 'R', 'E', 'T', '_', 'O', 'N', '_', 'M', 'S', 'E', 'C', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', '3', 'D', 'F', 'A', 'C', 'E', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'I', 'N', 'F', 'O', 'B', 'K', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'S', 'Y', 'S', '_', 'I', 'C', 'O', 'N', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'I', 'C', 'O', 'N', 'S', 'P', 'A', 'C', 'I', 'N', 'G', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'M', 'O', 'U', 'S', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'S', 'a', 't', 'i', 's', 'f', 'y', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'C', 'o', 'l', 'u', 'm', 'n', 'P', 'a', 'g', 'e', 's', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'R', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'S', 'e', 'a', 'r', 'c', 'h', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 'e', 't', 'A', 'p', 'p', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'C', 'l', 'i', 'p', 'p', 'i', 'n', 'g', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 'L', 'e', 'v', 'e', 'l', 0,
    'S', 'e', 't', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'D', 'o', 'u', 'b', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 'e', 'd', 0,
    'S', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'D', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'S', 'e', 't', 'H', 'e', 'l', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'I', 'n', 's', 'e', 'r', 't', 'i', 'o', 'n', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'e', 't', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'I', 'n', 'v', 'o', 'k', 'i', 'n', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'e', 's', 'P', 'e', 'r', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 0,
    'S', 'e', 't', 'N', 'e', 'g', 'a', 't', 'i', 'v', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'S', 'e', 't', 'O', 'K', 'C', 'a', 'n', 'c', 'e', 'l', 'L', 'a', 'b', 'e', 'l', 's', 0,
    'S', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'M', 'a', 'x', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'R', 'a', 'w', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'R', 'e', 'c', 'o', 'r', 'd', 'D', 'e', 'f', 'a', 'u', 'l', 't', 's', 0,
    'S', 'e', 't', 'R', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'e', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'S', 'e', 't', 'T', 'm', 'p', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'I', 't', 'e', 'm', 0,
    'S', 'e', 't', 'T', 'o', 'L', 'a', 's', 't', 'M', 'o', 'n', 't', 'h', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'i', 't', 'm', 'a', 'p', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'k', 'i', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'S', 'h', 'o', 'w', 'S', 'o', 'r', 't', 'I', 'n', 'd', 'i', 'c', 'a', 't', 'o', 'r', 0,
    'S', 'p', 'l', 'i', 't', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'l', 'y', 0,
    'S', 't', 'a', 'r', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'O', 'n', 'T', 'o', 'p', 0,
    'S', 't', 'a', 't', 'i', 'c', 'L', 'i', 'n', 'e', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 't', 'a', 't', 'i', 'c', 'T', 'e', 'x', 't', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 't', 'o', 'p', 'A', 'u', 't', 'o', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
    'T', 'O', 'O', 'L', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', '_', 'N', 'o', 'n', 'e', 0,
    'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', '_', 'U', 'n', 'i', 'x', 0,
    'T', 'o', 'g', 'g', 'l', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'D', 'i', 's', 't', 'a', 'n', 'c', 'e', 0,
    'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'U', 'P', 'D', 'A', 'T', 'E', '_', 'U', 'I', '_', 'R', 'E', 'C', 'U', 'R', 'S', 'E', 0,
    'U', 'S', 'E', '_', 'A', 'C', 'C', 'E', 'S', 'S', 'I', 'B', 'I', 'L', 'I', 'T', 'Y', 0,
    'U', 's', 'e', 'A', 'l', 't', 'P', 'o', 'p', 'u', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'W', 'S', '_', 'E', 'X', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', 'H', 'E', 'L', 'P', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'J', 'U', 'M', 'P', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'D', 'I', 'V', 'I', 'D', 'E', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'P', 'A', 'G', 'E', 'U', 'P', 0,
    'W', 'X', 'K', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'S', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'O', 't', 'h', 'e', 'r', 'D', 'i', 'r', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 'P', 'r', 'o', 't', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', '_', 'e', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'm', '_', 's', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    't', 'e', 's', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'T', 'y', 'p', 'e', 'M', 'a', 'p', 0,
    't', 'e', 's', 't', 'I', 'n', 't', 'P', 't', 'r', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    't', 'e', 's', 't', 'S', 't', 'r', 'i', 'n', 'g', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    'w', 'x', 'A', 'r', 'r', 'a', 'y', 'V', 'i', 'd', 'e', 'o', 'M', 'o', 'd', 'e', 's', 0,
    'w', 'x', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'B', 'u', 'f', 'f', 'e', 'r', 'e', 'd', 'P', 'a', 'i', 'n', 't', 'D', 'C', 0,
    'w', 'x', 'C', 'h', 'i', 'l', 'd', 'F', 'o', 'c', 'u', 's', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'i', 'b', 'l', 'e', 'P', 'a', 'n', 'e', 0,
    'w', 'x', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'D', 'P', 'I', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'M', 'o', 'n', 't', 'h', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'X', '1', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'X', '2', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'I', 'L', 'D', '_', 'F', 'O', 'C', 'U', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'P', 'I', '_', 'C', 'H', 'A', 'N', 'G', 'E', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'E', 'N', 'D', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'E', 'N', 'D', '_', 'S', 'E', 'S', 'S', 'I', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'G', 'E', 'S', 'T', 'U', 'R', 'E', '_', 'P', 'A', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'I', 'N', 'I', 'T', '_', 'D', 'I', 'A', 'L', 'O', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'E', 'F', 'T', '_', 'D', 'C', 'L', 'I', 'C', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'A', 'D', 'I', 'O', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', '_', 'M', 'A', 'X', 'L', 'E', 'N', 0,
    'w', 'x', 'F', 'i', 'l', 't', 'e', 'r', 'F', 'S', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'F', 'i', 'n', 'd', 'D', 'i', 'a', 'l', 'o', 'g', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'F', 'i', 'n', 'd', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'F', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'P', 'e', 'n', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'H', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 't', 'r', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', ':', ':', 'H', 'S', 'V', 'V', 'a', 'l', 'u', 'e', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', ':', ':', 'R', 'G', 'B', 'V', 'a', 'l', 'u', 'e', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'R', 'e', 's', 'o', 'l', 'u', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'I', 'n', 'i', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'I', 'n', 't', 'C', 'A', 'r', 'r', 'a', 'y', 'H', 'o', 'l', 'd', 'e', 'r', 0,
    'w', 'x', 'L', 'a', 'y', 'o', 'u', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 'I', 'n', 'i', 't', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'M', 'D', 'I', 'C', 'l', 'i', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'M', 'e', 'm', 'o', 'r', 'y', 'F', 'S', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'M', 'o', 'd', 'a', 'l', 'D', 'i', 'a', 'l', 'o', 'g', 'H', 'o', 'o', 'k', 0,
    'w', 'x', 'N', 'a', 't', 'i', 'v', 'e', 'P', 'i', 'x', 'e', 'l', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'P', 'a', 'n', 'G', 'e', 's', 't', 'u', 'r', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 'F', 'i', 'l', 'l', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'P', 'r', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 's', 'P', 'a', 'g', 'e', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'R', 'e', 'a', 'r', 'r', 'a', 'n', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'w', 'x', 'S', 'p', 'i', 'n', 'D', 'o', 'u', 'b', 'l', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'E', 'n', 't', 'r', 'y', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 'T', 'o', 'o', 'l', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'V', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'A', 'R', 'T', '_', 'A', 'D', 'D', '_', 'B', 'O', 'O', 'K', 'M', 'A', 'R', 'K', 0,
    'A', 'R', 'T', '_', 'D', 'E', 'L', '_', 'B', 'O', 'O', 'K', 'M', 'A', 'R', 'K', 0,
    'A', 'R', 'T', '_', 'F', 'I', 'L', 'E', '_', 'S', 'A', 'V', 'E', '_', 'A', 'S', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'T', 'O', '_', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', 0,
    'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 'P', 'r', 'e', 'v', 'i', 'o', 'u', 's', 0,
    'A', 'd', 'd', 'E', 'x', 't', 'r', 'a', 'C', 'o', 'n', 't', 'r', 'o', 'l', 's', 0,
    'A', 'd', 'd', 'F', 'i', 'l', 'e', 'T', 'o', 'H', 'i', 's', 't', 'o', 'r', 'y', 0,
    'A', 'd', 'd', 'S', 't', 'r', 'e', 't', 'c', 'h', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'A', 'd', 'j', 'u', 's', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 's', 0,
    'A', 'd', 'v', 'a', 'n', 'c', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'I', 'C', 'O', 'N', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'J', 'P', 'E', 'G', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'P', 'I', 'C', 'T', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'T', 'I', 'F', 'F', 0,
    'B', 'M', 'P', '_', '8', 'B', 'P', 'P', '_', 'P', 'A', 'L', 'E', 'T', 'T', 'E', 0,
    'B', 'R', 'U', 'S', 'H', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'O', 'L', 'I', 'D', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'M', 'E', 'D', 'I', 'U', 'M', 'G', 'R', 'E', 'Y', 0,
    'B', 'e', 'g', 'i', 'n', 'C', 'o', 'n', 't', 'e', 'x', 't', 'H', 'e', 'l', 'p', 0,
    'C', 'H', 'K', '_', 'U', 'N', 'D', 'E', 'T', 'E', 'R', 'M', 'I', 'N', 'E', 'D', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'L', 'I', 'G', 'H', 'T', 'G', 'R', 'E', 'Y', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'A', 'T', 'O', 'P', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'D', 'E', 'S', 'T', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'D', 'I', 'F', 'F', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'O', 'V', 'E', 'R', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'D', 'I', 'S', 'A', 'B', 'L', 'E', 'D', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'E', 'X', 'P', 'A', 'N', 'D', 'E', 'D', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'E', 'D', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'S', 'I', 'Z', 'E', 'G', 'R', 'I', 'P', 0,
    'C', 'P', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'C', 'P', '_', 'N', 'O', '_', 'T', 'L', 'W', '_', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'A', 'R', 'R', 'O', 'W', 'W', 'A', 'I', 'T', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'H', 'O', 'U', 'R', 'G', 'L', 'A', 'S', 'S', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'M', 'A', 'G', 'N', 'I', 'F', 'I', 'E', 'R', 0,
    'C', 'a', 'n', 'G', 'e', 't', 'T', 'e', 'x', 't', 'E', 'x', 't', 'e', 'n', 't', 0,
    'C', 'a', 'n', 'M', 'o', 'v', 'e', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'U', 'p', 0,
    'C', 'e', 'n', 't', 'e', 'r', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'B', 'r', 'i', 'g', 'h', 't', 'n', 'e', 's', 's', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'S', 'a', 't', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'C', 'l', 'e', 'a', 'r', 'C', 'o', 'l', 'u', 'm', 'n', 'I', 'm', 'a', 'g', 'e', 0,
    'C', 'l', 'e', 'a', 'r', 'E', 'x', 't', 'r', 'a', 'A', 'c', 'c', 'e', 'l', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'F', 'o', 'c', 'u', 's', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'A', 'n', 'd', 'R', 'e', 's', 'e', 't', 0,
    'C', 'o', 'm', 'p', 'u', 't', 'e', 'H', 'i', 's', 't', 'o', 'g', 'r', 'a', 'm', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'B', 'a', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'F', 'r', 'o', 'm', 'N', 'a', 't', 'i', 'v', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'I', 'c', 'o', 'n', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'D', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'N', 'O', '_', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'D', 'I', 'R', '_', 'O', 'N', 'L', 'Y', 0,
    'D', 'I', 'R', 'C', 'T', 'R', 'L', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'D', 'e', 'c', 'T', 'o', 'I', 'f', 'S', 'p', 'e', 'c', 'i', 'f', 'i', 'e', 'd', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'V', 'i', 'd', 'e', 'o', 'M', 'o', 'd', 'e', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'A', 'l', 'l', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'T', 'o', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'X', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'T', 'o', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'Y', 0,
    'D', 'i', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'T', 'i', 'm', 'e', 's', 't', 'a', 'm', 'p', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'T', 'e', 'x', 't', 'P', 'o', 'p', 'u', 'p', 0,
    'D', 'i', 's', 's', 'o', 'c', 'i', 'a', 't', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'D', 'o', 'A', 'l', 'l', 'o', 'w', 'N', 'e', 'x', 't', 'E', 'v', 'e', 'n', 't', 0,
    'D', 'o', 'L', 'o', 'g', 'T', 'e', 'x', 't', 'A', 't', 'L', 'e', 'v', 'e', 'l', 0,
    'D', 'o', 'U', 'p', 'd', 'a', 't', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 'U', 'I', 0,
    'D', 'o', 'u', 'b', 'l', 'e', 'H', 'o', 'r', 'z', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'D', 'r', 'a', 'g', '_', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'M', 'o', 'v', 'e', 0,
    'D', 'r', 'a', 'w', 'H', 'e', 'a', 'd', 'e', 'r', 'B', 'u', 't', 't', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'S', 'p', 'l', 'i', 't', 't', 'e', 'r', 'S', 'a', 's', 'h', 0,
    'E', 'V', 'T', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'A', 'L', 'L', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'e', 's', 0,
    'E', 'n', 'u', 'm', 'A', 'l', 'l', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 's', 0,
    'F', 'C', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'F', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'F', 'L', 'P', '_', 'U', 'S', 'E', '_', 'T', 'E', 'X', 'T', 'C', 'T', 'R', 'L', 0,
    'F', 'O', 'N', 'T', 'E', 'N', 'C', 'O', 'D', 'I', 'N', 'G', '_', 'M', 'A', 'X', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'R', 'O', 'M', 'A', 'N', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'S', 'W', 'I', 'S', 'S', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'X', '_', 'L', 'A', 'R', 'G', 'E', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'X', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'F', 'O', 'N', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'I', 'T', 'A', 'L', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'H', 'E', 'A', 'V', 'Y', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'L', 'I', 'G', 'H', 'T', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'N', 'O', '_', 'T', 'A', 'S', 'K', 'B', 'A', 'R', 0,
    'F', 'R', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', 'D', 'I', 'A', 'L', 'O', 'G', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'A', 'C', 'C', 'E', 'S', 'S', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'A', 'T', 'T', 'R', 'I', 'B', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'R', 'E', 'A', 'T', 'E', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'M', 'O', 'D', 'I', 'F', 'Y', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'R', 'E', 'N', 'A', 'M', 'E', 0,
    'F', 'S', 'W', '_', 'W', 'A', 'R', 'N', 'I', 'N', 'G', '_', 'N', 'O', 'N', 'E', 0,
    'F', 'i', 'n', 'd', 'I', 't', 'e', 'm', 'W', 'i', 't', 'h', 'D', 'a', 't', 'a', 0,
    'F', 'i', 'n', 'd', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'I', 'n', 'f', 'o', 0,
    'F', 'i', 'n', 'd', 'O', 'r', 'C', 'r', 'e', 'a', 't', 'e', 'F', 'o', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'y', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'A', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', 'I', 'd', 0,
    'G', 'e', 't', 'A', 'l', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'P', 'r', 'e', 's', 's', 'e', 'd', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'O', 'r', 'd', 'i', 'n', 'a', 'l', 0,
    'G', 'e', 't', 'C', 'a', 'i', 'r', 'o', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'a', 'n', 'o', 'n', 'i', 'c', 'a', 'l', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'C', 'h', 'e', 'c', 'k', 'M', 'a', 'r', 'k', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'S', 'i', 'z', 'e', 'M', 'M', 0,
    'G', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'i', 'v', 'e', 'I', 'c', 'o', 'n', 0,
    'G', 'e', 't', 'E', 'm', 'p', 't', 'y', 'C', 'e', 'l', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'P', 'r', 'i', 'n', 't', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    'G', 'e', 't', 'I', 'n', 's', 't', 'a', 'l', 'l', 'P', 'r', 'e', 'f', 'i', 'x', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'F', 'r', 'o', 'm', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'L', 'a', 'b', 'e', 'l', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'e', 'r', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'S', 'u', 'b', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'G', 'e', 't', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'L', 'o', 'c', 'a', 'l', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'M', 'a', 'g', 'n', 'i', 'f', 'i', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'B', 'u', 't', 't', 'o', 'n', 'I', 'd', 's', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'T', 'o', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'L', 'a', 'b', 'e', 'l', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'P', 'a', 't', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'o', 'u', 's', 'e', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'F', 'i', 'l', 'e', 's', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'L', 'i', 'n', 'e', 's', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'e', 'r', 'i', 'c', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'O', 's', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'Q', 'u', 'i', 'c', 'k', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'R', 'e', 'd', 'o', 'M', 'e', 'n', 'u', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 'A', 'n', 'g', 'l', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'S', 'o', 'r', 't', 'I', 'n', 'd', 'i', 'c', 'a', 't', 'o', 'r', 0,
    'G', 'e', 't', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'P', 'a', 't', 'h', 's', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 'P', 'a', 'n', 'e', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'k', 'e', 't', 'h', 'r', 'o', 'u', 'g', 'h', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'h', 'u', 'm', 'b', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'U', 'n', 'd', 'o', 'M', 'e', 'n', 'u', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'U', 's', 'e', 'B', 'e', 's', 't', 'V', 'i', 's', 'u', 'a', 'l', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'C', 'o', 'n', 'f', 'i', 'g', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 'B', 'a', 's', 'e', 'd', 'Y', 'e', 'a', 'r', 0,
    'G', 'e', 't', 'W', 'h', 'e', 'e', 'l', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'H', 'D', 'R', '_', 'S', 'O', 'R', 'T', '_', 'I', 'C', 'O', 'N', '_', 'U', 'P', 0,
    'H', 'D', '_', 'A', 'L', 'L', 'O', 'W', '_', 'R', 'E', 'O', 'R', 'D', 'E', 'R', 0,
    'H', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'H', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'C', 'O', 'R', 'N', 'E', 'R', 0,
    'H', 'T', '_', 'W', 'I', 'N', 'D', 'O', 'W', '_', 'I', 'N', 'S', 'I', 'D', 'E', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'P', 'i', 'x', 'e', 'l', 'S', 'i', 'z', 'e', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'H', 'a', 's', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'H', 'a', 's', 'M', 'u', 'l', 't', 'i', 'p', 'l', 'e', 'P', 'a', 'g', 'e', 's', 0,
    'H', 'a', 's', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'E', 'v', 'e', 'n', 't', 's', 0,
    'I', 'C', 'O', 'N', '_', 'A', 'U', 'T', 'H', '_', 'N', 'E', 'E', 'D', 'E', 'D', 0,
    'I', 'C', 'O', 'N', '_', 'E', 'X', 'C', 'L', 'A', 'M', 'A', 'T', 'I', 'O', 'N', 0,
    'I', 'C', 'O', 'N', '_', 'I', 'N', 'F', 'O', 'R', 'M', 'A', 'T', 'I', 'O', 'N', 0,
    'I', 'D', 'L', 'E', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'A', 'L', 'L', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', 'S', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', '_', 'C', 'O', 'N', 'T', 'E', 'N', 'T', 'S', 0,
    'I', 'D', '_', 'I', 'C', 'O', 'N', 'I', 'Z', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'J', 'U', 'S', 'T', 'I', 'F', 'Y', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'F', 'I', 'R', 'S', 'T', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'I', 'D', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'S', 'T', 'R', 'I', 'K', 'E', 'T', 'H', 'R', 'O', 'U', 'G', 'H', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'S', 'O', 'R', 'T', 'D', 'A', 'T', 'E', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'S', 'O', 'R', 'T', 'N', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'S', 'O', 'R', 'T', 'S', 'I', 'Z', 'E', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'S', 'O', 'R', 'T', 'T', 'Y', 'P', 'E', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'L', 'I', 'S', 'T', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'I', 'M', 'A', 'G', 'E', '_', 'L', 'I', 'S', 'T', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'I', 's', 'A', 'n', 'o', 't', 'h', 'e', 'r', 'R', 'u', 'n', 'n', 'i', 'n', 'g', 0,
    'I', 's', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'I', 's', 'D', 'o', 'u', 'b', 'l', 'e', 'B', 'u', 'f', 'f', 'e', 'r', 'e', 'd', 0,
    'I', 's', 'E', 'r', 'r', 'o', 'r', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'F', 'u', 'l', 'l', 'y', 'S', 'p', 'e', 'c', 'i', 'f', 'i', 'e', 'd', 0,
    'I', 's', 'I', 'n', 'p', 'u', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'K', 'e', 'y', 'P', 'o', 'p', 'u', 'p', 'T', 'o', 'g', 'g', 'l', 'e', 0,
    'I', 's', 'N', 'o', 'n', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 0,
    'I', 's', 'P', 'a', 'r', 'a', 'g', 'r', 'a', 'p', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'M', 'H', 'A', 'R', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'S', 'H', 'K', 'I', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'N', 'G', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'H', 'U', 'T', 'A', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'I', 'S', 'L', 'A', 'M', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'S', 'N', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'U', 'R', 'M', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'A', 'T', 'A', 'L', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'E', 'B', 'U', 'A', 'N', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'E', 'C', 'H', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'N', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'O', 'R', 'N', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'N', 'G', 'L', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'I', 'N', 'N', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'I', 'S', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'U', 'A', 'R', 'A', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'N', 'U', 'P', 'I', 'A', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'T', 'A', 'L', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'N', 'N', 'A', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'R', 'G', 'H', 'I', 'Z', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'R', 'U', 'N', 'D', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'N', 'K', 'A', 'N', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'U', 'R', 'D', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'T', 'V', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'I', 'N', 'G', 'A', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'C', 'H', 'A', 'M', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'K', 'O', 'N', 'D', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'T', 'E', 'S', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'P', 'U', 'C', 'H', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'R', 'A', 'T', 'H', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'U', 'N', 'D', 'A', 'N', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'C', 'C', 'I', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'S', 'S', 'E', 'T', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'U', 'N', 'J', 'A', 'B', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Q', 'U', 'E', 'C', 'H', 'U', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'U', 'S', 'S', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'B', 'U', 'R', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'R', 'B', 'I', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'S', 'O', 'T', 'H', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'S', 'W', 'A', 'T', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'P', 'A', 'N', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'A', 'H', 'I', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'W', 'E', 'D', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'G', 'A', 'L', 'O', 'G', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'S', 'A', 'W', 'A', 'Q', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'B', 'E', 'T', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'U', 'R', 'K', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'U', 'R', 'K', 'M', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'A', 'I', '_', 'V', 'A', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'O', 'L', 'A', 'P', 'U', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'A', 'N', 'G', 'B', 'E', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'I', 'D', 'D', 'I', 'S', 'H', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'O', 'R', 'M', 'A', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'M', 'A', 'S', 'K', '_', 'F', 'O', 'R', 'M', 'A', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'R', 'E', 'C', 'T', '_', 'B', 'O', 'U', 'N', 'D', 'S', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'C', 'A', 'T', '_', 'M', 'O', 'N', 'E', 'Y', 0,
    'L', 'o', 'a', 'd', 'F', 'i', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 0,
    'L', 'o', 'g', 'i', 'c', 'a', 'l', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 'X', 0,
    'L', 'o', 'g', 'i', 'c', 'a', 'l', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 'Y', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'M', 'I', 'D', 'D', 'L', 'E', 0,
    'M', 'a', 'c', 'C', 'h', 'e', 'c', 'k', 'S', 'p', 'e', 'l', 'l', 'i', 'n', 'g', 0,
    'M', 'a', 'k', 'e', 'F', 'r', 'o', 'm', 'T', 'i', 'm', 'e', 'z', 'o', 'n', 'e', 0,
    'M', 'o', 'v', 'e', 'L', 'e', 'f', 't', 'B', 'o', 't', 't', 'o', 'm', 'T', 'o', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'L', 'A', 'S', 'T', 'C', 'H', 'I', 'L', 'D', 0,
    'N', 'u', 'l', 'l', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'F', 'o', 'n', 't', 0,
    'N', 'u', 'l', 'l', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'P', 'a', 't', 'h', 0,
    'O', 'R', 'I', 'E', 'N', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'O', 'n', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 'E', 'n', 't', 'e', 'r', 0,
    'O', 'n', 'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '3', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '4', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '5', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '6', '_', 'R', 'O', 'T', 'A', 'T', 'E', 'D', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'I', 'N', 'V', 'I', 'T', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'F', 'A', 'N', 'F', 'O', 'L', 'D', '_', 'U', 'S', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'C', 'H', 'O', 'U', '3', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'C', 'H', 'O', 'U', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'K', 'A', 'K', 'U', '2', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'K', 'A', 'K', 'U', '3', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'T', 'I', 'P', 'P', 'L', 'E', 0,
    'P', 'E', 'N', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'H', 'I', 'G', 'H', 0,
    'P', 'N', 'G', '_', 'T', 'Y', 'P', 'E', '_', 'P', 'A', 'L', 'E', 'T', 'T', 'E', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'O', 'N', 'L', 'Y', 'O', 'N', 'E', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'T', 'R', 'A', 'C', 'T', 'O', 'R', 0,
    'P', 'R', 'I', 'N', 'T', 'E', 'R', '_', 'N', 'O', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'P', 'a', 'r', 's', 'e', 'I', 'S', 'O', 'C', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 0,
    'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'T', 'o', 'C', 'o', 'o', 'r', 'd', 's', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 'C', 'h', 'e', 'c', 'k', 'I', 't', 'e', 'm', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 'R', 'a', 'd', 'i', 'o', 'I', 't', 'e', 'm', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'P', 'u', 's', 'h', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'C', 'E', 'L', 'L', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'D', 'I', 'A', 'L', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'G', 'R', 'I', 'P', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'L', 'I', 'N', 'K', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'L', 'I', 'S', 'T', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'P', 'A', 'N', 'E', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'T', 'E', 'X', 'T', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'R', 'e', 's', 'e', 't', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 'C', 'a', 't', '_', 'N', 'o', 'n', 'e', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'S', 'I', 'Z', 'E', '_', 'A', 'U', 'T', 'O', '_', 'H', 'E', 'I', 'G', 'H', 'T', 0,
    'S', 'I', 'Z', 'E', '_', 'F', 'O', 'R', 'C', 'E', '_', 'E', 'V', 'E', 'N', 'T', 0,
    'S', 'P', 'L', 'I', 'T', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'S', 'T', 'O', 'C', 'K', '_', 'F', 'O', 'R', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'S', 'T', '_', 'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'E', 'N', 'D', 0,
    'S', 'T', '_', 'N', 'O', '_', 'A', 'U', 'T', 'O', 'R', 'E', 'S', 'I', 'Z', 'E', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'S', 'Y', 'S', '_', 'S', 'W', 'A', 'P', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'S', 'a', 'v', 'e', 'F', 'i', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 0,
    'S', 'c', 'a', 'l', 'e', '_', 'A', 's', 'p', 'e', 'c', 't', 'F', 'i', 'l', 'l', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'B', 'a', 'r', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 'e', 'c', 'u', 'r', 'e', 'Z', 'e', 'r', 'o', 'M', 'e', 'm', 'o', 'r', 'y', 0,
    'S', 'e', 'n', 'd', 'D', 'e', 's', 't', 'r', 'o', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'A', 'f', 'f', 'i', 'r', 'm', 'a', 't', 'i', 'v', 'e', 'I', 'd', 0,
    'S', 'e', 't', 'A', 'l', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'S', 'e', 't', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'P', 'r', 'e', 's', 's', 'e', 'd', 0,
    'S', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'B', 'i', 't', 'm', 'a', 'p', 's', 0,
    'S', 'e', 't', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'C', 'u', 's', 't', 'o', 'm', 'i', 'z', 'e', 'H', 'o', 'o', 'k', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'S', 'e', 't', 'E', 'm', 'p', 't', 'y', 'C', 'e', 'l', 'l', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'E', 'x', 'p', 'a', 'n', 'd', 'E', 'n', 'v', 'V', 'a', 'r', 's', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'P', 'i', 'x', 'e', 'l', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'I', 'n', 's', 't', 'a', 'l', 'l', 'P', 'r', 'e', 'f', 'i', 'x', 0,
    'S', 'e', 't', 'L', 'a', 'y', 'o', 'u', 't', 'A', 'd', 'a', 'p', 't', 'e', 'r', 0,
    'S', 'e', 't', 'L', 'i', 's', 't', 'S', 't', 'y', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'S', 'e', 't', 'M', 'a', 's', 'k', 'F', 'r', 'o', 'm', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'M', 'e', 'n', 'u', 'P', 'a', 't', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'N', 'u', 'm', 'e', 'r', 'i', 'c', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'M', 'i', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'Q', 'u', 'i', 'c', 'k', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'R', 'e', 'p', 'l', 'a', 'c', 'e', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 'A', 'n', 'g', 'l', 'e', 0,
    'S', 'e', 't', 'S', 'a', 's', 'h', 'I', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 'P', 'a', 'n', 'e', 0,
    'S', 'e', 't', 'S', 't', 'r', 'i', 'k', 'e', 't', 'h', 'r', 'o', 'u', 'g', 'h', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'h', 'u', 'm', 'b', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'T', 'o', 'L', 'a', 's', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'N', 'e', 'x', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'P', 'r', 'e', 'v', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'U', 's', 'e', 'B', 'e', 's', 't', 'V', 'i', 's', 'u', 'a', 'l', 0,
    'S', 'e', 't', 'W', 'h', 'e', 'e', 'l', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'h', 'o', 'w', 'A', 's', 's', 'e', 'r', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'S', 'h', 'o', 'w', 'C', 'a', 'n', 'c', 'e', 'l', 'B', 'u', 't', 't', 'o', 'n', 0,
    'S', 'h', 'o', 'w', 'D', 'e', 't', 'a', 'i', 'l', 'e', 'd', 'T', 'e', 'x', 't', 0,
    'S', 'h', 'o', 'w', 'S', 'e', 'a', 'r', 'c', 'h', 'B', 'u', 't', 't', 'o', 'n', 0,
    'S', 't', 'a', 't', 'i', 'c', 'B', 'o', 'x', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'B', 'U', 'L', 'L', 'E', 'T', 0,
    'T', 'E', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'E', 'N', 'T', 'E', 'R', 0,
    'T', 'I', 'M', 'E', 'R', '_', 'C', 'O', 'N', 'T', 'I', 'N', 'U', 'O', 'U', 'S', 0,
    'T', 'R', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'T', 'R', '_', 'L', 'I', 'N', 'E', 'S', '_', 'A', 'T', '_', 'R', 'O', 'O', 'T', 0,
    'T', 'R', '_', 'T', 'W', 'I', 'S', 'T', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', '_', 'D', 'o', 's', 0,
    'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', '_', 'M', 'a', 'c', 0,
    'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', '_', 'O', 's', '2', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'e', 'r', 'T', 'o', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'c', 'o', 'n', '_', 'M', 'a', 'x', 0,
    'U', 'n', 'r', 'e', 'g', 'i', 's', 't', 'e', 'r', 'H', 'o', 't', 'K', 'e', 'y', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'B', 'A', 'C', 'K', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'H', 'O', 'M', 'E', 0,
    'W', 'X', 'K', '_', 'B', 'R', 'O', 'W', 'S', 'E', 'R', '_', 'S', 'T', 'O', 'P', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'C', 'U', 'T', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'T', 'A', 'B', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'B', 'E', 'G', 'I', 'N', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'E', 'N', 'T', 'E', 'R', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'E', 'Q', 'U', 'A', 'L', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'S', 'P', 'A', 'C', 'E', 0,
    'W', 'X', 'K', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'S', '_', 'L', 'E', 'F', 'T', 0,
    'W', 'X', 'K', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'S', '_', 'M', 'E', 'N', 'U', 0,
    '_', 'D', 'r', 'a', 'w', 'E', 'l', 'l', 'i', 'p', 's', 'e', 'L', 'i', 's', 't', 0,
    '_', 'D', 'r', 'a', 'w', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 'L', 'i', 's', 't', 0,
    '_', 'g', 'e', 't', 'T', 'h', 'e', 'B', 'r', 'u', 's', 'h', 'L', 'i', 's', 't', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 's', 'P', 'e', 'r', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', '_', 'f', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'm', '_', 'l', 'a', 'b', 'e', 'l', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'n', 'a', 't', 'i', 'v', 'e', 'I', 'n', 'f', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'n', 'e', 'w', 'F', 'r', 'a', 'm', 'e', 'E', 'a', 'c', 'h', 'T', 'i', 'm', 'e', 0,
    'p', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'i', 'o', 'n', 'L', 'e', 'v', 'e', 'l', 0,
    't', 'e', 's', 't', 'S', 'i', 'z', 'e', 't', 'T', 'y', 'p', 'e', 'm', 'a', 'p', 0,
    'w', 'x', 'A', 'f', 'f', 'i', 'n', 'e', 'M', 'a', 't', 'r', 'i', 'x', '2', 'D', 0,
    'w', 'x', 'A', 'l', 'p', 'h', 'a', 'P', 'i', 'x', 'e', 'l', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 'b', 'a', 's', 'e', 0,
    'w', 'x', 'D', 'C', 'B', 'r', 'u', 's', 'h', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'Y', 'e', 'a', 'r', 0,
    'w', 'x', 'D', 'r', 'o', 'p', 'F', 'i', 'l', 'e', 's', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'R', 'O', 'P', '_', 'F', 'I', 'L', 'E', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'N', 'D', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'K', 'I', 'L', 'L', '_', 'F', 'O', 'C', 'U', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'O', 'N', 'G', '_', 'P', 'R', 'E', 'S', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'E', 'N', 'U', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'U', 'S', 'E', 'W', 'H', 'E', 'E', 'L', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'V', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'G', 'H', 'T', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'T', 'O', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'E', 'T', '_', 'C', 'U', 'R', 'S', 'O', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', '_', 'E', 'N', 'T', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', '_', 'P', 'A', 'S', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'O', 'L', '_', 'E', 'N', 'T', 'E', 'R', 0,
    'w', 'x', 'E', 'l', 'l', 'i', 'p', 's', 'i', 'z', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'F', 'S', 'W', 'W', 'a', 'r', 'n', 'i', 'n', 'g', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'r', 'o', 'p', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'F', 'l', 'o', 'o', 'd', 'F', 'i', 'l', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'E', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'D', 'i', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'C', 'e', 'n', 't', 'r', 'e', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'H', 'T', 'M', 'L', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'H', 'e', 'l', 'p', 'S', 'e', 'a', 'r', 'c', 'h', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'H', 'i', 's', 't', 'o', 'g', 'r', 'a', 'm', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'w', 'x', 'L', 'o', 'g', 'L', 'e', 'v', 'e', 'l', 'V', 'a', 'l', 'u', 'e', 's', 0,
    'w', 'x', 'L', 'o', 'n', 'g', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'M', 'D', 'I', 'P', 'a', 'r', 'e', 'n', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'W', 'h', 'e', 'e', 'l', 'A', 'x', 'i', 's', 0,
    'w', 'x', 'N', 'a', 't', 'i', 'v', 'e', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'N', 'o', 'n', 'O', 'w', 'n', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'P', 'r', 'o', 'g', 'r', 'e', 's', 's', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'P', 'y', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'R', 'e', 'g', 'i', 'o', 'n', 'I', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 'N', 'a', 't', 'i', 'v', 'e', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'W', 'i', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'C', 'a', 'n', 'v', 'a', 's', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'S', 'e', 't', 'C', 'u', 'r', 's', 'o', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'p', 'i', 'n', 'C', 't', 'r', 'l', 'D', 'o', 'u', 'b', 'l', 'e', 0,
    'w', 'x', 'S', 'p', 'l', 'i', 't', 't', 'e', 'r', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'S', 't', 'a', 't', 'i', 'c', 'B', 'o', 'x', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'S', 't', 'o', 'c', 'k', 'G', 'D', 'I', ':', ':', 'I', 't', 'e', 'm', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'S', 'e', 't', 't', 'i', 'n', 'g', 's', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'D', 'r', 'o', 'p', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'w', 'x', 'T', 'i', 't', 'l', 'e', 'B', 'a', 'r', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'r', 0,
    'A', 'C', 'C', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', '_', 'A', 'R', 'G', 0,
    'A', 'R', 'T', '_', 'F', 'O', 'L', 'D', 'E', 'R', '_', 'O', 'P', 'E', 'N', 0,
    'A', 'R', 'T', '_', 'F', 'U', 'L', 'L', '_', 'S', 'C', 'R', 'E', 'E', 'N', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', '_', 'F', 'O', 'L', 'D', 'E', 'R', 0,
    'A', 'R', 'T', '_', 'I', 'N', 'F', 'O', 'R', 'M', 'A', 'T', 'I', 'O', 'N', 0,
    'A', 'R', 'T', '_', 'M', 'E', 'S', 'S', 'A', 'G', 'E', '_', 'B', 'O', 'X', 0,
    'A', 'R', 'T', '_', 'N', 'O', 'R', 'M', 'A', 'L', '_', 'F', 'I', 'L', 'E', 0,
    'A', 'R', 'T', '_', 'R', 'E', 'P', 'O', 'R', 'T', '_', 'V', 'I', 'E', 'W', 0,
    'A', 'd', 'd', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'I', 't', 'e', 'm', 's', 0,
    'A', 'd', 'd', 'C', 'u', 'r', 'v', 'e', 'T', 'o', 'P', 'o', 'i', 'n', 't', 0,
    'A', 'd', 'd', 'M', 'a', 'i', 'n', 'B', 'u', 't', 't', 'o', 'n', 'I', 'd', 0,
    'A', 'd', 'd', 'P', 'e', 'n', 'd', 'i', 'n', 'g', 'E', 'v', 'e', 'n', 't', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'C', 'h', 'e', 'c', 'k', 'I', 't', 'e', 'm', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'R', 'a', 'd', 'i', 'o', 'I', 't', 'e', 'm', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'A', 's', 's', 'i', 'g', 'n', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'A', 's', 's', 'o', 'c', 'i', 'a', 't', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'B', 'G', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'B', 'G', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'A', 'N', 'I', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'A', 'N', 'Y', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'B', 'M', 'P', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'C', 'U', 'R', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'G', 'I', 'F', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'I', 'C', 'O', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'I', 'F', 'F', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'P', 'C', 'X', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'P', 'N', 'G', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'P', 'N', 'M', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'T', 'G', 'A', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'T', 'I', 'F', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'X', 'B', 'M', 0,
    'B', 'I', 'T', 'M', 'A', 'P', '_', 'T', 'Y', 'P', 'E', '_', 'X', 'P', 'M', 0,
    'B', 'I', 'T', 'N', 'E', 'S', 'S', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'L', 'I', 'G', 'H', 'T', 'G', 'R', 'E', 'Y', 0,
    'B', 'e', 'g', 'i', 'n', 'B', 'u', 's', 'y', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'C', '2', 'S', '_', 'H', 'T', 'M', 'L', '_', 'S', 'Y', 'N', 'T', 'A', 'X', 0,
    'C', 'H', 'O', 'I', 'C', 'E', 'D', 'L', 'G', '_', 'S', 'T', 'Y', 'L', 'E', 0,
    'C', 'L', 'R', 'P', '_', 'S', 'H', 'O', 'W', '_', 'A', 'L', 'P', 'H', 'A', 0,
    'C', 'L', 'R', 'P', '_', 'S', 'H', 'O', 'W', '_', 'L', 'A', 'B', 'E', 'L', 0,
    'C', 'O', 'L', '_', 'R', 'E', 'O', 'R', 'D', 'E', 'R', 'A', 'B', 'L', 'E', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'A', 'D', 'D', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'O', 'U', 'T', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'X', 'O', 'R', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'C', 'U', 'R', 'R', 'E', 'N', 'T', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'F', 'O', 'C', 'U', 'S', 'E', 'D', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'P', 'R', 'E', 'S', 'S', 'E', 'D', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'B', 'U', 'L', 'L', 'S', 'E', 'Y', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'N', 'O', '_', 'E', 'N', 'T', 'R', 'Y', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'I', 'Z', 'E', 'N', 'E', 'S', 'W', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'I', 'Z', 'E', 'N', 'W', 'S', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'P', 'R', 'A', 'Y', 'C', 'A', 'N', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'T', 'A', 'N', 'D', 'A', 'R', 'D', 0,
    'C', 'a', 'l', 'c', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'L', 'i', 'g', 'h', 't', 'n', 'e', 's', 's', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'l', 'e', 'a', 'n', 'U', 'p', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'C', 'l', 'e', 'a', 'r', 'T', 'r', 'a', 'c', 'e', 'M', 'a', 's', 'k', 's', 0,
    'C', 'o', 'm', 'b', 'o', 'B', 'o', 'x', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'o', 'n', 'c', 'a', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'Y', 'e', 'a', 'r', 'T', 'o', 'B', 'C', 0,
    'C', 'o', 'u', 'n', 't', 'r', 'y', '_', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'C', 'o', 'u', 'n', 't', 'r', 'y', '_', 'U', 'n', 'k', 'n', 'o', 'w', 'n', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'F', 'o', 'n', 't', 'A', 't', 'D', 'P', 'I', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'F', 'r', 'o', 'm', 'H', 'I', 'C', 'O', 'N', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'L', 'o', 'g', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 'u', 'b', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'S', 'i', 'z', 'e', 'r', 0,
    'D', 'I', 'A', 'L', 'O', 'G', '_', 'E', 'X', '_', 'M', 'E', 'T', 'A', 'L', 0,
    'D', 'I', 'R', 'P', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'D', 'I', 'R', 0,
    'D', 'U', 'P', 'L', 'E', 'X', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'T', 'o', 'o', 'l', 'B', 'y', 'P', 'o', 's', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'D', 'e', 'v', 'i', 'c', 'e', 'T', 'o', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'A', 'u', 't', 'o', 'S', 'a', 'v', 'e', 0,
    'D', 'i', 's', 'p', 'a', 't', 'c', 'h', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 0,
    'D', 'o', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'D', 'o', 'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'D', 'o', 'S', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'r', 'a', 'g', 'A', 'c', 'c', 'e', 'p', 't', 'F', 'i', 'l', 'e', 's', 0,
    'D', 'r', 'a', 'w', 'E', 'l', 'l', 'i', 'p', 't', 'i', 'c', 'A', 'r', 'c', 0,
    'D', 'r', 'a', 'w', 'R', 'a', 'd', 'i', 'o', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'D', 'r', 'a', 'w', 'R', 'o', 't', 'a', 't', 'e', 'd', 'T', 'e', 'x', 't', 0,
    'E', 'V', 'T', '_', 'C', 'A', 'T', 'E', 'G', 'O', 'R', 'Y', '_', 'U', 'I', 0,
    'E', 'm', 'p', 't', 'y', 'U', 'n', 'd', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'E', 'm', 'u', 'l', 'a', 't', 'e', 'K', 'e', 'y', 'P', 'r', 'e', 's', 's', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'E', 'n', 'd', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'O', 'n', 'T', 'o', 'p', 0,
    'E', 's', 'c', 'a', 'p', 'e', 'M', 'n', 'e', 'm', 'o', 'n', 'i', 'c', 's', 0,
    'E', 'v', 'e', 'n', 't', '_', 'P', 'r', 'o', 'c', 'e', 's', 's', 'e', 'd', 0,
    'F', 'A', 'L', 'L', 'B', 'A', 'C', 'K', '_', 'S', 'Y', 'S', 'T', 'E', 'M', 0,
    'F', 'C', '_', 'N', 'O', 'S', 'H', 'O', 'W', 'H', 'I', 'D', 'D', 'E', 'N', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'I', 'T', 'A', 'L', 'I', 'C', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'M', 'E', 'D', 'I', 'U', 'M', 0,
    'F', 'O', 'N', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'L', 'A', 'N', 'T', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'B', 'O', 'L', 'D', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'T', 'H', 'I', 'N', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'F', 'i', 'l', 'e', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'F', 'i', 'n', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'M', 'i', 'm', 'e', 0,
    'F', 'i', 'n', 'd', 'I', 't', 'e', 'm', 'A', 't', 'P', 'o', 'i', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'O', 'r', 'C', 'r', 'e', 'a', 't', 'e', 'P', 'e', 'n', 0,
    'F', 'r', 'o', 'm', 'S', 'V', 'G', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 0,
    'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'L', 'I', 'N', 'E', 'A', 'R', 0,
    'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'R', 'A', 'D', 'I', 'A', 'L', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'A', 'd', 'j', 'u', 's', 't', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'o', 'w', 'S', 'y', 'm', 'b', 'o', 'l', 's', 0,
    'G', 'e', 't', 'A', 'r', 'c', 'h', 'i', 't', 'e', 'c', 't', 'u', 'r', 'e', 0,
    'G', 'e', 't', 'B', 'a', 't', 't', 'e', 'r', 'y', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'N', 'o', 'r', 'm', 'a', 'l', 0,
    'G', 'e', 't', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'O', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'S', 'i', 'z', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'u', 'n', 't', 'P', 'e', 'r', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'C', 'r', 'o', 's', 's', 'P', 'r', 'o', 'd', 'u', 'c', 't', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'F', 'o', 'c', 'u', 's', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'M', 'o', 'n', 't', 'h', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'O', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'D', 'e', 't', 'a', 'i', 'l', 'e', 'd', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'D', 'e', 'v', 'i', 'c', 'e', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 's', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'D', 'r', 'o', 'p', 'd', 'o', 'w', 'n', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'E', 'm', 'a', 'i', 'l', 'A', 'd', 'd', 'r', 'e', 's', 's', 0,
    'G', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'x', 'p', 'a', 'n', 'd', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'E', 'x', 't', 'r', 'a', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'I', 'n', 'G', 'r', 'o', 'u', 'p', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'F', 'a', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 0,
    'G', 'e', 't', 'F', 'u', 'l', 'l', 'H', 'o', 's', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'H', 'e', 'l', 'p', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'M', 'o', 'n', 't', 'h', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'o', 'c', 'a', 'l', 'D', 'a', 't', 'a', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'S', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'l', 'l', 'i', 's', 'e', 'c', 'o', 'n', 'd', 's', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    'G', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 'O', 'f', 'D', 'a', 'y', 's', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'L', 'e', 'v', 'e', 'l', 0,
    'G', 'e', 't', 'O', 'u', 't', 'p', 'u', 't', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'G', 'e', 't', 'R', 'e', 'l', 'a', 't', 'i', 'o', 'n', 's', 'h', 'i', 'p', 0,
    'G', 'e', 't', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 's', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'S', 'a', 's', 'h', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'd', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'S', 'i', 'n', 'g', 'l', 'e', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'F', 'r', 'o', 'm', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'T', 'a', 'r', 'g', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 0,
    'G', 'e', 't', 'T', 'h', 'e', 'm', 'e', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'V', 'e', 'c', 't', 'o', 'r', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'B', 'e', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'W', 'a', 't', 'c', 'h', 'e', 'd', 'P', 'a', 't', 'h', 's', 0,
    'H', 'E', 'L', 'P', '_', 'S', 'E', 'A', 'R', 'C', 'H', '_', 'A', 'L', 'L', 0,
    'H', 'a', 's', 'A', 'n', 'y', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'r', 's', 0,
    'H', 'a', 's', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'H', 'a', 's', 'C', 'u', 's', 't', 'o', 'm', 'L', 'a', 'b', 'e', 'l', 's', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'F', 'a', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'H', 'a', 's', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'L', 'e', 'v', 'e', 'l', 0,
    'H', 'i', 'd', 'e', 'N', 'a', 't', 'i', 'v', 'e', 'C', 'a', 'r', 'e', 't', 0,
    'I', 'D', '_', 'A', 'U', 'T', 'O', '_', 'H', 'I', 'G', 'H', 'E', 'S', 'T', 0,
    'I', 'D', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', '_', 'H', 'E', 'L', 'P', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', '_', 'C', 'O', 'N', 'T', 'E', 'X', 'T', 0,
    'I', 'D', '_', 'J', 'U', 'S', 'T', 'I', 'F', 'Y', '_', 'F', 'I', 'L', 'L', 0,
    'I', 'D', '_', 'J', 'U', 'S', 'T', 'I', 'F', 'Y', '_', 'L', 'E', 'F', 'T', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'G', 'O', 'T', 'O', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'L', 'A', 'S', 'T', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'N', 'E', 'X', 'T', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'Z', 'O', 'O', 'M', 0,
    'I', 'D', '_', 'R', 'E', 'S', 'I', 'Z', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'O', 'L', 'O', 'R', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'D', 'E', 'T', 'A', 'I', 'L', 'S', 0,
    'I', 'n', 's', 'e', 'r', 't', 'C', 'h', 'e', 'c', 'k', 'I', 't', 'e', 'm', 0,
    'I', 'n', 's', 'e', 'r', 't', 'R', 'a', 'd', 'i', 'o', 'I', 't', 'e', 'm', 0,
    'I', 'n', 's', 'e', 'r', 't', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 'C', 'a', 'c', 'h', 'e', 0,
    'I', 's', 'A', 'u', 't', 'o', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'I', 's', 'C', 'o', 'l', 'u', 'm', 'n', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'D', 'S', 'T', 'A', 'p', 'p', 'l', 'i', 'c', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'E', 'd', 'i', 't', 'C', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd', 0,
    'I', 's', 'K', 'e', 'y', 'I', 'n', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'I', 's', 'P', 'l', 'a', 't', 'f', 'o', 'r', 'm', '6', '4', 'B', 'i', 't', 0,
    'I', 's', 'S', 'a', 's', 'h', 'I', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'S', 'h', 'o', 'w', 'n', 'O', 'n', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'I', 's', 'S', 'u', 'p', 'p', 'l', 'e', 'm', 'e', 'n', 't', 'a', 'r', 'y', 0,
    'I', 's', 'V', 'a', 'l', 'i', 'd', 'F', 'a', 'c', 'e', 'n', 'a', 'm', 'e', 0,
    'I', 's', 'W', 'h', 'e', 'e', 'l', 'I', 'n', 'v', 'e', 'r', 't', 'e', 'd', 0,
    'K', 'I', 'L', 'L', '_', 'B', 'A', 'D', '_', 'S', 'I', 'G', 'N', 'A', 'L', 0,
    'K', 'I', 'L', 'L', '_', 'N', 'O', 'C', 'H', 'I', 'L', 'D', 'R', 'E', 'N', 0,
    'K', 'I', 'L', 'L', '_', 'N', 'O', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'R', 'A', 'B', 'I', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Y', 'M', 'A', 'R', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'N', 'G', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'S', 'Q', 'U', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'I', 'H', 'A', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'R', 'E', 'T', 'O', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'A', 'K', 'M', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'A', 'N', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'I', 'V', 'E', 'H', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'W', 'O', 'N', 'D', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'R', 'E', 'N', 'C', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'E', 'R', 'M', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'E', 'B', 'R', 'E', 'W', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'B', 'I', 'B', 'I', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'B', 'Y', 'L', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'N', 'U', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'Z', 'A', 'K', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'K', 'U', 'Y', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'O', 'R', 'E', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'W', 'A', 'S', 'I', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'K', 'O', 'T', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'O', 'H', 'A', 'W', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'E', 'P', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'G', 'O', 'M', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'A', 'S', 'H', 'T', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'P', 'O', 'L', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'O', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'N', 'G', 'H', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'I', 'N', 'D', 'H', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'L', 'O', 'V', 'A', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'M', 'A', 'L', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'Y', 'R', 'I', 'A', 'C', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'E', 'L', 'U', 'G', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'S', 'O', 'N', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'I', 'G', 'H', 'U', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'A', 'L', 'S', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'O', 'R', 'U', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Z', 'H', 'U', 'A', 'N', 'G', 0,
    'L', 'I', 'S', 'T', '_', 'A', 'L', 'I', 'G', 'N', '_', 'L', 'E', 'F', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'I', 'N', 'D', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'M', 'A', 'S', 'K', '_', 'I', 'M', 'A', 'G', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'M', 'A', 'S', 'K', '_', 'S', 'T', 'A', 'T', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'M', 'A', 'S', 'K', '_', 'W', 'I', 'D', 'T', 'H', 0,
    'L', 'I', 'S', 'T', '_', 'N', 'E', 'X', 'T', '_', 'A', 'B', 'O', 'V', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'N', 'E', 'X', 'T', '_', 'B', 'E', 'L', 'O', 'W', 0,
    'L', 'I', 'S', 'T', '_', 'N', 'E', 'X', 'T', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'R', 'E', 'C', 'T', '_', 'L', 'A', 'B', 'E', 'L', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'C', 'A', 'T', '_', 'D', 'A', 'T', 'E', 0,
    'L', 'O', 'C', 'A', 'L', 'E', '_', 'T', 'I', 'M', 'E', '_', 'F', 'M', 'T', 0,
    'L', 'i', 's', 't', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'L', 'o', 'g', 'i', 'c', 'a', 'l', 'T', 'o', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'M', 'O', 'D', '_', 'R', 'A', 'W', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'M', 'a', 'k', 'e', 'S', 't', 'r', 'e', 't', 'c', 'h', 'a', 'b', 'l', 'e', 0,
    'M', 'o', 'u', 's', 'e', 'C', 'l', 'i', 'c', 'k', 'B', 'e', 'g', 'i', 'n', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'P', 'R', 'E', 'V', 'I', 'O', 'U', 'S', 0,
    'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'N', 'u', 'l', 'l', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'P', 'e', 'n', 0,
    'O', 'S', 'X', 'G', 'e', 't', 'A', 'p', 'p', 'l', 'e', 'M', 'e', 'n', 'u', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'F', 'R', 'E', 'E', 'B', 'S', 'D', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'O', 'P', 'E', 'N', 'B', 'S', 'D', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'S', 'O', 'L', 'A', 'R', 'I', 'S', 0,
    'O', 'n', 'B', 'e', 'g', 'i', 'n', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'O', 'n', 'B', 'e', 'g', 'i', 'n', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'C', 'o', 'm', 'b', 'o', 'K', 'e', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'O', 'n', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 'E', 'x', 'i', 't', 0,
    'O', 'r', 'i', 'g', 'i', 'n', '_', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'I', 'T', 'A', 'L', 'Y', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'X', 'E', 'C', 'U', 'T', 'I', 'V', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'J', 'E', 'N', 'V', '_', 'Y', 'O', 'U', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'S', 'T', 'A', 'T', 'E', 'M', 'E', 'N', 'T', 0,
    'P', 'B', '_', 'U', 'S', 'E', '_', 'T', 'E', 'X', 'T', 'C', 'T', 'R', 'L', 0,
    'P', 'D', '_', 'E', 'L', 'A', 'P', 'S', 'E', 'D', '_', 'T', 'I', 'M', 'E', 0,
    'P', 'E', 'N', '_', 'B', 'L', 'A', 'C', 'K', 'D', 'A', 'S', 'H', 'E', 'D', 0,
    'P', 'E', 'N', '_', 'Q', 'U', 'A', 'L', 'I', 'T', 'Y', '_', 'L', 'O', 'W', 0,
    'P', 'E', 'N', '_', 'T', 'R', 'A', 'N', 'S', 'P', 'A', 'R', 'E', 'N', 'T', 0,
    'P', 'N', 'G', '_', 'T', 'Y', 'P', 'E', '_', 'C', 'O', 'L', 'O', 'U', 'R', 0,
    'P', 'R', 'E', 'V', 'I', 'E', 'W', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'M', 'A', 'N', 'U', 'A', 'L', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'M', 'I', 'D', 'D', 'L', 'E', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'M', 'O', 'D', 'E', '_', 'F', 'I', 'L', 'E', 0,
    'P', 'R', 'I', 'N', 'T', '_', 'M', 'O', 'D', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'P', 'a', 'r', 's', 'e', 'R', 'f', 'c', '8', '2', '2', 'D', 'a', 't', 'e', 0,
    'P', 'o', 'p', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'L', 'e', 'f', 't', 'D', 'o', 'w', 'n', 0,
    'R', 'A', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'Y', '_', 'C', 'O', 'L', 'S', 0,
    'R', 'A', '_', 'S', 'P', 'E', 'C', 'I', 'F', 'Y', '_', 'R', 'O', 'W', 'S', 0,
    'R', 'O', 'L', 'E', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'R', 'O', 'W', 0,
    'R', 'a', 'd', 'i', 'o', 'B', 'o', 'x', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'M', 'n', 'e', 'm', 'o', 'n', 'i', 'c', 's', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'T', 'r', 'a', 'c', 'e', 'M', 'a', 's', 'k', 0,
    'R', 'e', 's', 'e', 't', 'U', 'p', 'd', 'a', 't', 'e', 'T', 'i', 'm', 'e', 0,
    'S', 'E', 'N', 'D', '_', 'E', 'V', 'E', 'N', 'T', '_', 'P', 'O', 'S', 'T', 0,
    'S', 'H', 'O', 'W', '_', 'E', 'F', 'F', 'E', 'C', 'T', '_', 'M', 'A', 'X', 0,
    'S', 'H', 'O', 'W', '_', 'S', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', '_', 'L', 'O', 'G', 'O', 'F', 'F', 0,
    'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', '_', 'R', 'E', 'B', 'O', 'O', 'T', 0,
    'S', 'I', 'Z', 'E', '_', 'A', 'U', 'T', 'O', '_', 'W', 'I', 'D', 'T', 'H', 0,
    'S', 'P', 'L', 'I', 'T', '_', 'D', 'R', 'A', 'G', '_', 'N', 'O', 'N', 'E', 0,
    'S', 'T', 'R', 'E', 'A', 'M', '_', 'N', 'O', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'S', 'Y', 'S', '_', 'C', 'O', 'L', 'O', 'U', 'R', '_', 'M', 'E', 'N', 'U', 0,
    'S', 'Y', 'S', '_', 'D', 'C', 'L', 'I', 'C', 'K', '_', 'M', 'S', 'E', 'C', 0,
    'S', 'Y', 'S', '_', 'F', 'R', 'A', 'M', 'E', 'S', 'I', 'Z', 'E', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'F', 'R', 'A', 'M', 'E', 'S', 'I', 'Z', 'E', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'T', 'I', 'N', 'Y', 0,
    'S', 'Y', 'S', '_', 'S', 'H', 'O', 'W', '_', 'S', 'O', 'U', 'N', 'D', 'S', 0,
    'S', 'Y', 'S', '_', 'S', 'M', 'A', 'L', 'L', 'I', 'C', 'O', 'N', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'S', 'M', 'A', 'L', 'L', 'I', 'C', 'O', 'N', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'F', 'O', 'N', 'T', 0,
    'S', 'Y', 'S', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'M', 'I', 'N', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'M', 'I', 'N', '_', 'Y', 0,
    'S', 'a', 'f', 'e', 'S', 'h', 'o', 'w', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'S', 'c', 'a', 'l', 'e', '_', 'A', 's', 'p', 'e', 'c', 't', 'F', 'i', 't', 0,
    'S', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'S', 'e', 't', 'A', 'l', 'l', 'o', 'w', 'S', 'y', 'm', 'b', 'o', 'l', 's', 0,
    'S', 'e', 't', 'A', 'r', 'c', 'h', 'i', 't', 'e', 'c', 't', 'u', 'r', 'e', 0,
    'S', 'e', 't', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'c', 'e', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'c', 'e', 'l', 'B', 'u', 't', 't', 'o', 'n', 0,
    'S', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'O', 'r', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'F', 'o', 'c', 'u', 's', 0,
    'S', 'e', 't', 'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'D', 'e', 'v', 'i', 'c', 'e', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'S', 'e', 't', 'D', 'r', 'o', 'p', 'd', 'o', 'w', 'n', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'E', 'v', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'F', 'o', 'c', 'u', 's', 'F', 'r', 'o', 'm', 'K', 'b', 'd', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'F', 'a', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'G', 'e', 's', 't', 'u', 'r', 'e', 'S', 't', 'a', 'r', 't', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'H', 'e', 'l', 'p', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'S', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'N', 'o', 'r', 'm', 'a', 'l', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'S', 'e', 't', 'O', 'l', 'd', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'O', 'u', 't', 'l', 'i', 'n', 'e', 'L', 'e', 'v', 'e', 'l', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'E', 'x', 't', 'e', 'n', 't', 's', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'S', 'e', 't', 'R', 'e', 'l', 'a', 't', 'i', 'o', 'n', 's', 'h', 'i', 'p', 0,
    'S', 'e', 't', 'S', 'a', 's', 'h', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'S', 'e', 'a', 'r', 'c', 'h', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'S', 't', 'y', 'l', 'e', 's', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'W', 'i', 'd', 't', 'h', 's', 0,
    'S', 'e', 't', 'S', 'y', 'm', 'b', 'o', 'l', 'i', 'c', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'T', 'a', 'r', 'g', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'T', 'h', 'e', 'm', 'e', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'S', 'e', 't', 'T', 'o', 'W', 'e', 'e', 'k', 'O', 'f', 'Y', 'e', 'a', 'r', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'V', 'e', 'c', 't', 'o', 'r', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'D', 'r', 'a', 'w', 'F', 'o', 'c', 'u', 's', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'P', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'e', 0,
    'S', 'h', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'M', 'e', 'n', 'u', 0,
    'S', 'h', 'o', 'w', 'H', 'e', 'l', 'p', 'A', 't', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'h', 'o', 'w', 'N', 'a', 't', 'i', 'v', 'e', 'C', 'a', 'r', 'e', 't', 0,
    'S', 'h', 'o', 'w', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'o', 'd', 'a', 'l', 0,
    'S', 'p', 'l', 'i', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'l', 'y', 0,
    'S', 't', 'o', 'p', 'P', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'i', 'o', 'n', 0,
    'S', 't', 'r', 'i', 'p', '_', 'M', 'n', 'e', 'm', 'o', 'n', 'i', 'c', 's', 0,
    'T', 'B', 'K', '_', 'H', 'O', 'R', 'Z', '_', 'L', 'A', 'Y', 'O', 'U', 'T', 0,
    'T', 'C', '_', 'R', 'I', 'G', 'H', 'T', 'J', 'U', 'S', 'T', 'I', 'F', 'Y', 0,
    'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'T', 'h', 'r', 'e', 'e', 'S', 't', 'a', 't', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'T', 'o', 'g', 'g', 'l', 'e', 'S', 'o', 'r', 't', 'O', 'r', 'd', 'e', 'r', 0,
    'T', 'r', 'e', 'e', 'C', 't', 'r', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'U', 'n', 'G', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'P', 'a', 't', 'h', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'I', 'f', 'D', 'e', 'l', 'e', 't', 'e', 'd', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 0,
    'V', 'L', 'i', 's', 't', 'B', 'o', 'x', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'W', 'S', '_', 'E', 'X', '_', 'T', 'R', 'A', 'N', 'S', 'I', 'E', 'N', 'T', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'A', 'P', 'P', '1', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'A', 'P', 'P', '2', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'M', 'A', 'I', 'L', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'D', 'O', 'W', 'N', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'H', 'O', 'M', 'E', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'L', 'E', 'F', 'T', 0,
    'W', 'X', 'K', '_', 'R', 'A', 'W', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', 0,
    'W', 'X', 'K', '_', 'V', 'O', 'L', 'U', 'M', 'E', '_', 'D', 'O', 'W', 'N', 0,
    'W', 'X', 'K', '_', 'V', 'O', 'L', 'U', 'M', 'E', '_', 'M', 'U', 'T', 'E', 0,
    '_', 'g', 'e', 't', 'T', 'h', 'e', 'F', 'o', 'n', 't', 'L', 'i', 's', 't', 0,
    'b', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'B', 'r', 'u', 's', 'h', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'e', 'r', 'a', 's', 'e', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'e', 'v', 'e', 'n', 't', 's', 'T', 'o', 'P', 'r', 'o', 'c', 'e', 's', 's', 0,
    'e', 'x', 't', 'e', 'n', 'd', 'e', 'd', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'e', 'x', 't', 'e', 'r', 'n', 'a', 'l', 'L', 'e', 'a', 'd', 'i', 'n', 'g', 0,
    'f', 'o', 'r', 'c', 'e', 'T', 'r', 'u', 'e', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'i', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'L', 'e', 'a', 'd', 'i', 'n', 'g', 0,
    'm', 'a', 'c', 'T', 'h', 'e', 'm', 'e', 'B', 'r', 'u', 's', 'h', 'I', 'D', 0,
    's', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 'S', 't', 'r', 'i', 'n', 'g', 0,
    's', 'o', 'l', 'i', 'd', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'w', 'x', 'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'A', 'p', 'p', 'A', 's', 's', 'e', 'r', 't', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'B', 'o', 'o', 'k', 'C', 't', 'r', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'B', 'u', 's', 'y', 'I', 'n', 'f', 'o', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'D', 'C', 'F', 'o', 'n', 't', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'D', 'i', 'r', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'X', '1', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'X', '2', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'A', 'R', '_', 'H', 'O', 'O', 'K', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'N', 'D', '_', 'N', 'E', 'X', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'S', 'W', 'A', 'T', 'C', 'H', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'I', 'B', 'E', 'R', 'N', 'A', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'J', 'O', 'Y', '_', 'Z', 'M', 'O', 'V', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'E', 'F', 'T', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'E', 'N', 'U', '_', 'O', 'P', 'E', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'I', 'D', 'D', 'L', 'E', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'C', 'R', 'O', 'L', 'L', 'B', 'A', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'E', 'T', '_', 'F', 'O', 'C', 'U', 'S', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'I', 'N', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', '_', 'C', 'O', 'P', 'Y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'U', 'P', 'D', 'A', 'T', 'E', '_', 'U', 'I', 0,
    'w', 'x', 'E', 'l', 'l', 'i', 'p', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'C', 't', 'r', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'F', 'l', 'e', 'x', 'G', 'r', 'i', 'd', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'B', 'r', 'u', 's', 'h', 0,
    'w', 'x', 'I', 't', 'e', 'm', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'w', 'x', 'J', 'o', 'y', 's', 't', 'i', 'c', 'k', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'K', 'e', 'y', 'b', 'o', 'a', 'r', 'd', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 'T', 'a', 'g', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'L', 'o', 'g', 'I', 'n', 't', 'e', 'r', 'p', 'o', 's', 'e', 'r', 0,
    'w', 'x', 'L', 'o', 'g', 'R', 'e', 'c', 'o', 'r', 'd', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'M', 'D', 'I', 'C', 'h', 'i', 'l', 'd', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'M', 'e', 's', 's', 'a', 'g', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'O', 'b', 'j', 'e', 'c', 't', 'D', 'a', 't', 'a', 'P', 't', 'r', 0,
    'w', 'x', 'P', 'i', 'x', 'e', 'l', 'D', 'a', 't', 'a', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'P', 'o', 'i', 'n', 't', '2', 'D', 'D', 'o', 'u', 'b', 'l', 'e', 0,
    'w', 'x', 'P', 'o', 'w', 'e', 'r', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 0,
    'w', 'x', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 'C', 'a', 'n', 'v', 'a', 's', 0,
    'w', 'x', 'P', 'r', 'o', 'p', 'a', 'g', 'a', 't', 'e', 'O', 'n', 'c', 'e', 0,
    'w', 'x', 'R', 'e', 'a', 'r', 'r', 'a', 'n', 'g', 'e', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'R', 'e', 'a', 'r', 'r', 'a', 'n', 'g', 'e', 'L', 'i', 's', 't', 0,
    'w', 'x', 'R', 'e', 'g', 'i', 'o', 'n', 'C', 'o', 'n', 't', 'a', 'i', 'n', 0,
    'w', 'x', 'S', 'h', 'u', 't', 'd', 'o', 'w', 'n', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'r', 'F', 'l', 'a', 'g', 'B', 'i', 't', 's', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'r', 'I', 't', 'e', 'm', 'L', 'i', 's', 't', 0,
    'w', 'x', 'S', 'p', 'l', 'i', 't', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'P', 'a', 't', 'h', 's', 0,
    'w', 'x', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 'P', 'a', 'n', 'e', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'w', 'x', 'T', 'D', 'I', 'C', 'h', 'i', 'l', 'd', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'r', 0,
    'w', 'x', 'U', 'R', 'L', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'U', 'p', 'd', 'a', 't', 'e', 'U', 'I', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'A', 'C', 'C', 'E', 'L', '_', 'R', 'A', 'W', '_', 'C', 'T', 'R', 'L', 0,
    'A', 'L', 'W', 'A', 'Y', 'S', '_', 'S', 'H', 'O', 'W', '_', 'S', 'B', 0,
    'A', 'N', 'T', 'I', 'A', 'L', 'I', 'A', 'S', '_', 'N', 'O', 'N', 'E', 0,
    'A', 'P', 'P', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'L', 'O', 'G', 0,
    'A', 'R', 'T', '_', 'C', 'M', 'N', '_', 'D', 'I', 'A', 'L', 'O', 'G', 0,
    'A', 'R', 'T', '_', 'C', 'R', 'O', 'S', 'S', '_', 'M', 'A', 'R', 'K', 0,
    'A', 'R', 'T', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'C', 'O', 'N', 0,
    'A', 'R', 'T', '_', 'G', 'O', 'T', 'O', '_', 'F', 'I', 'R', 'S', 'T', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'F', 'O', 'R', 'W', 'A', 'R', 'D', 0,
    'A', 'd', 'd', 'F', 'i', 'l', 'e', 's', 'T', 'o', 'M', 'e', 'n', 'u', 0,
    'A', 'd', 'd', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 'C', 'o', 'l', 0,
    'A', 'd', 'd', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 'R', 'o', 'w', 0,
    'A', 'd', 'd', 'L', 'i', 'n', 'e', 'T', 'o', 'P', 'o', 'i', 'n', 't', 0,
    'A', 'd', 'd', 'P', 'r', 'i', 'v', 'a', 't', 'e', 'F', 'o', 'n', 't', 0,
    'A', 'd', 'd', 'R', 'a', 'd', 'i', 'o', 'B', 'u', 't', 't', 'o', 'n', 0,
    'A', 'd', 'j', 'u', 's', 't', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 's', 0,
    'B', 'G', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'E', 'R', 'A', 'S', 'E', 0,
    'B', 'G', '_', 'S', 'T', 'Y', 'L', 'E', '_', 'P', 'A', 'I', 'N', 'T', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'B', 'l', 'u', 'r', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 0,
    'C', '2', 'S', '_', 'C', 'S', 'S', '_', 'S', 'Y', 'N', 'T', 'A', 'X', 0,
    'C', 'A', 'P', '_', 'P', 'R', 'O', 'J', 'E', 'C', 'T', 'I', 'N', 'G', 0,
    'C', 'H', 'B', '_', 'A', 'L', 'I', 'G', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'C', 'O', 'M', 'P', 'O', 'S', 'I', 'T', 'I', 'O', 'N', '_', 'I', 'N', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'C', 'a', 'n', 'A', 'c', 'c', 'e', 'p', 't', 'F', 'o', 'c', 'u', 's', 0,
    'C', 'e', 'n', 't', 'e', 'r', 'O', 'n', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'C', 'e', 'n', 't', 'e', 'r', 'O', 'n', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'C', 'e', 'n', 't', 'e', 'r', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'O', 'n', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'O', 'n', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
    'C', 'h', 'e', 'c', 'k', 'O', 'S', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'C', 'h', 'e', 'c', 'k', 'O', 's', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'C', 'l', 'i', 'e', 'n', 't', 'T', 'o', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'C', 'o', 'n', 't', 'r', 'o', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'I', 'm', 'a', 'g', 'e', 0,
    'C', 'o', 'p', 'y', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'C', 'o', 'p', 'y', 'F', 'r', 'o', 'm', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'C', 'o', 'p', 'y', 'F', 'r', 'o', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'D', 'D', '_', 'S', 'H', 'O', 'W', '_', 'H', 'I', 'D', 'D', 'E', 'N', 0,
    'D', 'F', '_', 'E', 'N', 'H', 'M', 'E', 'T', 'A', 'F', 'I', 'L', 'E', 0,
    'D', 'F', '_', 'U', 'N', 'I', 'C', 'O', 'D', 'E', 'T', 'E', 'X', 'T', 0,
    'D', 'I', 'R', 'E', 'C', 'T', 'I', 'O', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'D', 'U', 'P', 'L', 'E', 'X', '_', 'S', 'I', 'M', 'P', 'L', 'E', 'X', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'A', 'l', 'l', 'I', 't', 'e', 'm', 's', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'A', 'l', 'l', 'P', 'a', 'g', 'e', 's', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'D', 'i', 'f', 'f', 'A', 's', 'D', 'a', 't', 'e', 'S', 'p', 'a', 'n', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'A', 's', 's', 'e', 'r', 't', 's', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'S', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 's', 0,
    'D', 'r', 'a', 'g', '_', 'A', 'l', 'l', 'o', 'w', 'M', 'o', 'v', 'e', 0,
    'D', 'r', 'a', 'w', 'P', 'u', 's', 'h', 'B', 'u', 't', 't', 'o', 'n', 0,
    'E', 'L', 'L', 'I', 'P', 'S', 'I', 'Z', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'E', 'N', 'D', 'I', 'A', 'N', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'E', 'X', 'E', 'C', '_', 'N', 'O', 'D', 'I', 'S', 'A', 'B', 'L', 'E', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'A', 'u', 't', 'o', 'S', 'a', 'v', 'e', 0,
    'E', 'n', 'd', 'C', 'o', 'n', 't', 'e', 'x', 't', 'H', 'e', 'l', 'p', 0,
    'F', 'D', '_', 'S', 'H', 'O', 'W', '_', 'H', 'I', 'D', 'D', 'E', 'N', 0,
    'F', 'L', 'P', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'D', 'I', 'R', 0,
    'F', 'O', 'N', 'T', 'F', 'A', 'M', 'I', 'L', 'Y', '_', 'M', 'A', 'X', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'L', 'I', 'G', 'H', 'T', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'S', 'L', 'A', 'N', 'T', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'L', 'A', 'R', 'G', 'E', 0,
    'F', 'O', 'N', 'T', 'S', 'I', 'Z', 'E', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'F', 'O', 'N', 'T', 'W', 'E', 'I', 'G', 'H', 'T', '_', 'M', 'A', 'X', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'E', 'X', '_', 'M', 'E', 'T', 'A', 'L', 0,
    'F', 'R', '_', 'N', 'O', 'M', 'A', 'T', 'C', 'H', 'C', 'A', 'S', 'E', 0,
    'F', 'R', '_', 'N', 'O', 'W', 'H', 'O', 'L', 'E', 'W', 'O', 'R', 'D', 0,
    'F', 'U', 'L', 'L', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'A', 'L', 'L', 0,
    'F', 'i', 'l', 'e', 'L', 'a', 'y', 'o', 'u', 't', '_', 'X', 'D', 'G', 0,
    'F', 'i', 'l', 'e', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 'E', 'x', 0,
    'F', 'i', 'l', 'l', 'F', 'i', 'l', 't', 'e', 'r', 'L', 'i', 's', 't', 0,
    'F', 'i', 'n', 'd', 'F', 'i', 'l', 'e', 'I', 'n', 'P', 'a', 't', 'h', 0,
    'F', 'i', 'n', 'd', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'F', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'y', 'I', 'd', 0,
    'F', 'r', 'o', 'm', 'B', 'u', 'f', 'f', 'e', 'r', 'R', 'G', 'B', 'A', 0,
    'F', 'r', 'o', 'm', 'I', 'c', 'o', 'n', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'F', 'r', 'o', 'm', 'U', 's', 'e', 'r', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', '3', 'S', 't', 'a', 't', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'G', 'e', 't', 'A', 'l', 'p', 'h', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'G', 'e', 't', 'A', 'm', 'P', 'm', 'S', 't', 'r', 'i', 'n', 'g', 's', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'F', 'o', 'c', 'u', 's', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'H', 'o', 'v', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'B', 'i', 't', 'n', 'e', 's', 's', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'C', 'a', 'n', 'c', 'e', 'l', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'C', 'h', 'o', 'o', 's', 'e', 'A', 'l', 'p', 'h', 'a', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'p', 'p', 'i', 'n', 'g', 'B', 'o', 'x', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'O', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'Y', 'e', 'a', 'r', 0,
    'G', 'e', 't', 'D', 'I', 'P', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'E', 'd', 'i', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'P', 'a', 'p', 'e', 'r', 0,
    'G', 'e', 't', 'E', 'r', 'r', 'o', 'r', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'G', 'e', 't', 'F', 'i', 'e', 'l', 'd', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'F', 'o', 'c', 'u', 's', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'M', 'e', 't', 'r', 'i', 'c', 's', 0,
    'G', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'G', 'd', 'k', 'D', 'r', 'a', 'w', 'a', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'G', 'r', 'a', 'n', 'd', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'H', 'i', 's', 't', 'o', 'r', 'y', 'F', 'i', 'l', 'e', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'B', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'I', 'n', 'p', 'u', 't', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'I', 'n', 'G', 'r', 'o', 'u', 'p', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'i', 'c', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'G', 'e', 't', 'M', 'i', 'l', 'l', 'i', 's', 'e', 'c', 'o', 'n', 'd', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'I', 'n', 'G', 'r', 'o', 'u', 'p', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'O', 'p', 'e', 'n', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 't', 'h', 'e', 'r', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'T', 'o', 'F', 'i', 'l', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'e', 'r', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'R', 'a', 'w', 'K', 'e', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'G', 'e', 't', 'S', 'a', 's', 'h', 'G', 'r', 'a', 'v', 'i', 't', 'y', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'L', 'i', 'n', 'e', 's', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'T', 'h', 'u', 'm', 'b', 0,
    'G', 'e', 't', 'S', 't', 'a', 'r', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'S', 't', 'd', 'P', 'P', 'I', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'S', 'u', 'b', 'I', 't', 'e', 'm', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'G', 'e', 't', 'T', 'h', 'u', 'm', 'b', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'a', 'c', 'k', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'T', 'o', 't', 'a', 'l', 'M', 'o', 'n', 't', 'h', 's', 0,
    'G', 'e', 't', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'V', 'e', 'c', 't', 'o', 'r', 'A', 'n', 'g', 'l', 'e', 0,
    'G', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'W', 'a', 'r', 'n', 'i', 'n', 'g', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 'O', 'f', 'M', 'o', 'n', 't', 'h', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'Z', 'o', 'o', 'm', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'H', 'a', 's', 'B', 'u', 'l', 'l', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'H', 'a', 's', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'H', 'a', 's', 'L', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'H', 'a', 's', 'R', 'i', 'g', 'h', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'H', 'a', 's', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'H', 'i', 'd', 'e', 'W', 'i', 't', 'h', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'H', 'i', 't', 'T', 'e', 's', 't', 'S', 'u', 'b', 'I', 't', 'e', 'm', 0,
    'I', 'D', '_', 'A', 'U', 'T', 'O', '_', 'L', 'O', 'W', 'E', 'S', 'T', 0,
    'I', 'D', '_', 'C', 'L', 'O', 'S', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', '_', 'S', 'E', 'A', 'R', 'C', 'H', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'F', 'E', 'R', 'E', 'N', 'C', 'E', 'S', 0,
    'I', 'D', '_', 'P', 'R', 'I', 'N', 'T', '_', 'S', 'E', 'T', 'U', 'P', 0,
    'I', 'D', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', '_', 'A', 'L', 'L', 0,
    'I', 'D', '_', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', 'O', 'N', 'T', 0,
    'I', 'D', '_', 'S', 'P', 'E', 'L', 'L', '_', 'C', 'H', 'E', 'C', 'K', 0,
    'I', 'D', '_', 'S', 'Y', 'S', 'T', 'E', 'M', '_', 'M', 'E', 'N', 'U', 0,
    'I', 'T', 'E', 'M', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', 0,
    'I', 'n', 'f', 'o', 'M', 'e', 's', 's', 'a', 'g', 'e', 'B', 'o', 'x', 0,
    'I', 's', 'B', 'e', 'i', 'n', 'g', 'D', 'e', 'l', 'e', 't', 'e', 'd', 0,
    'I', 's', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'I', 's', 'D', 'r', 'a', 'g', 'R', 'e', 's', 'u', 'l', 't', 'O', 'k', 0,
    'I', 's', 'G', 'e', 's', 't', 'u', 'r', 'e', 'S', 't', 'a', 'r', 't', 0,
    'I', 's', 'L', 'e', 'v', 'e', 'l', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'I', 's', 'M', 'a', 'i', 'n', 'B', 'u', 't', 't', 'o', 'n', 'I', 'd', 0,
    'I', 's', 'N', 'o', 'd', 'e', 'E', 'x', 'p', 'a', 'n', 'd', 'e', 'd', 0,
    'I', 's', 'W', 'i', 'n', 'd', 'o', 'w', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '_', 'A', 'N', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'G', 'H', 'E', 'M', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'Z', 'E', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'F', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'A', 'S', 'A', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'M', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'H', 'I', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'C', 'Z', 'E', 'C', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'A', 'L', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'U', 'T', 'C', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'A', 'R', 'S', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'U', 'L', 'A', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'A', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'R', 'E', 'E', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'G', 'U', 'S', 'I', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'A', 'U', 'S', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'H', 'I', 'N', 'D', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'R', 'I', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'M', 'B', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'H', 'M', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'I', 'C', 'H', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'N', 'G', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'A', 'T', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'Y', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'L', 'A', 'Y', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'O', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'S', 'A', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'A', 'U', 'R', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'R', 'I', 'Y', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'R', 'O', 'M', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'O', 'M', 'B', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'K', 'H', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'N', 'G', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'H', 'O', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'I', 'T', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'J', 'I', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'M', 'I', 'L', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'A', 'T', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'I', 'G', 'R', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'O', 'N', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'Z', 'B', 'E', 'K', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'E', 'N', 'D', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'U', 'N', 'J', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'E', 'L', 'S', 'H', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'W', 'O', 'L', 'O', 'F', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'X', 'H', 'O', 'S', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Z', 'A', 'R', 'M', 'A', 0,
    'L', 'C', '_', 'A', 'U', 'T', 'O', 'A', 'R', 'R', 'A', 'N', 'G', 'E', 0,
    'L', 'C', '_', 'E', 'D', 'I', 'T', '_', 'L', 'A', 'B', 'E', 'L', 'S', 0,
    'L', 'I', 'S', 'T', '_', 'A', 'L', 'I', 'G', 'N', '_', 'T', 'O', 'P', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'I', 'N', 'D', '_', 'D', 'O', 'W', 'N', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'I', 'N', 'D', '_', 'L', 'E', 'F', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'M', 'A', 'S', 'K', '_', 'D', 'A', 'T', 'A', 0,
    'L', 'I', 'S', 'T', '_', 'M', 'A', 'S', 'K', '_', 'T', 'E', 'X', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'N', 'E', 'X', 'T', '_', 'L', 'E', 'F', 'T', 0,
    'L', 'I', 'S', 'T', '_', 'R', 'E', 'C', 'T', '_', 'I', 'C', 'O', 'N', 0,
    'L', 'I', 'S', 'T', '_', 'S', 'T', 'A', 'T', 'E', '_', 'C', 'U', 'T', 0,
    'L', 'O', 'G', '_', 'F', 'a', 't', 'a', 'l', 'E', 'r', 'r', 'o', 'r', 0,
    'L', 'a', 'y', 'o', 'u', 't', '_', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'L', 'i', 'n', 'e', 'a', 'r', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'A', 'U', 'X', '1', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'A', 'U', 'X', '2', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'L', 'E', 'F', 'T', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'N', 'O', 'N', 'E', 0,
    'M', 'S', 'W', 'G', 'e', 't', 'S', 'h', 'e', 'l', 'l', 'D', 'i', 'r', 0,
    'M', 'S', 'W', 'S', 'e', 't', 'T', 'a', 'b', 'S', 't', 'o', 'p', 's', 0,
    'M', 'a', 'c', 'T', 'h', 'e', 'm', 'e', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'M', 'a', 'k', 'e', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'r', 'a', 'g', 'B', 'e', 'g', 'i', 'n', 0,
    'M', 'o', 'v', 'e', 'R', 'i', 'g', 'h', 't', 'T', 'o', 'p', 'T', 'o', 0,
    'N', 'B', '_', 'N', 'O', 'P', 'A', 'G', 'E', 'T', 'H', 'E', 'M', 'E', 0,
    'N', 'e', 'w', 'C', 'l', 'o', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'N', 'e', 'w', 'F', 'r', 'o', 'm', 'P', 'N', 'G', 'D', 'a', 't', 'a', 0,
    'N', 'u', 'l', 'l', 'I', 'c', 'o', 'n', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'S', 'I', 'Z', 'E', 'G', 'R', 'I', 'P', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'T', 'I', 'T', 'L', 'E', 'B', 'A', 'R', 0,
    'O', 'S', 'X', 'S', 'e', 't', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'N', 'E', 'T', 'B', 'S', 'D', 0,
    'O', 'n', 'C', 'o', 'm', 'p', 'a', 'r', 'e', 'I', 't', 'e', 'm', 's', 0,
    'O', 'n', 'C', 'r', 'e', 'a', 't', 'e', 'C', 'l', 'i', 'e', 'n', 't', 0,
    'O', 'n', 'F', 'o', 'n', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'I', 'm', 'a', 'g', 'e', 0,
    'O', 'n', 'G', 'e', 't', 'R', 'o', 'w', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'O', 'n', 'I', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'I', 'd', 'l', 'e', 0,
    'O', 'r', 'i', 'g', 'i', 'n', '_', 'U', 'n', 'k', 'n', 'o', 'w', 'n', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '3', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '4', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '5', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '5', '_', 'E', 'X', 'T', 'R', 'A', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'S', 'O', 'L', 'I', 'D', 0,
    'P', 'E', 'N', '_', 'M', 'E', 'D', 'I', 'U', 'M', 'G', 'R', 'E', 'Y', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'L', 'O', 'W', 'E', 'R', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'P', 'u', 's', 'h', 'S', 't', 'a', 't', 'u', 's', 'T', 'e', 'x', 't', 0,
    'R', 'A', '_', 'L', 'E', 'F', 'T', 'T', 'O', 'R', 'I', 'G', 'H', 'T', 0,
    'R', 'A', '_', 'T', 'O', 'P', 'T', 'O', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'N', 'U', 'M', 'B', 'E', 'R', 0,
    'R', 'a', 'd', 'i', 'a', 'l', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 0,
    'R', 'e', 'a', 's', 'o', 'n', '_', 'U', 'n', 'k', 'n', 'o', 'w', 'n', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'R', 'e', 'g', 'i', 's', 't', 'e', 'r', 'H', 'o', 't', 'K', 'e', 'y', 0,
    'S', 'H', 'O', 'W', '_', 'S', 'B', '_', 'A', 'L', 'W', 'A', 'Y', 'S', 0,
    'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', '_', 'F', 'O', 'R', 'C', 'E', 0,
    'S', 'L', '_', 'V', 'A', 'L', 'U', 'E', '_', 'L', 'A', 'B', 'E', 'L', 0,
    'S', 'P', 'L', 'I', 'T', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'S', 'P', '_', 'L', 'I', 'V', 'E', '_', 'U', 'P', 'D', 'A', 'T', 'E', 0,
    'S', 'P', '_', 'N', 'O', '_', 'X', 'P', '_', 'T', 'H', 'E', 'M', 'E', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'P', 'D', 'A', 0,
    'S', 'a', 'f', 'e', 'M', 'e', 's', 's', 'a', 'g', 'e', 'B', 'o', 'x', 0,
    'S', 'c', 'r', 'e', 'e', 'n', 'T', 'o', 'C', 'l', 'i', 'e', 'n', 't', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'R', 'o', 'w', 'P', 'a', 'g', 'e', 's', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'S', 'e', 'n', 'd', 'I', 'd', 'l', 'e', 'E', 'v', 'e', 'n', 't', 's', 0,
    'S', 'e', 't', '3', 'S', 't', 'a', 't', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'S', 'e', 't', 'A', 'l', 'p', 'h', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'F', 'o', 'c', 'u', 's', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'C', 'h', 'o', 'o', 's', 'e', 'A', 'l', 'p', 'h', 'a', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'S', 'e', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'I', 'n', 'f', 'o', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'I', 't', 'e', 'm', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'a', 't', 'h', 0,
    'S', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 'T', 'i', 't', 'l', 'e', 0,
    'S', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'E', 'v', 'e', 'n', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'S', 'e', 't', 'F', 'i', 'e', 'l', 'd', 's', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'S', 'e', 't', 'F', 'o', 'c', 'u', 's', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'S', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'S', 'e', 't', 'L', 'a', 'b', 'e', 'l', 'M', 'a', 'r', 'k', 'u', 'p', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'e', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'M', 'a', 'i', 'n', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'M', 'e', 'n', 'u', 'S', 't', 'r', 'i', 'n', 'g', 's', 0,
    'S', 'e', 't', 'M', 'i', 'l', 'l', 'i', 's', 'e', 'c', 'o', 'n', 'd', 0,
    'S', 'e', 't', 'N', 'a', 't', 'i', 'v', 'e', 'T', 'h', 'e', 'm', 'e', 0,
    'S', 'e', 't', 'N', 'e', 'x', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'S', 'e', 't', 'O', 'p', 'e', 'n', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'S', 'e', 't', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'P', 'o', 'p', 'u', 'p', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'T', 'o', 'F', 'i', 'l', 'e', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'e', 'r', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'R', 'a', 'w', 'K', 'e', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'R', 'e', 'o', 'r', 'd', 'e', 'r', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'R', 'i', 'g', 'h', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'S', 'e', 't', 'R', 'i', 'g', 'h', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'S', 'e', 't', 'S', 'a', 's', 'h', 'G', 'r', 'a', 'v', 'i', 't', 'y', 0,
    'S', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'S', 'e', 't', 'S', 'i', 'n', 'g', 'l', 'e', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'S', 'i', 'z', 'e', 'r', 'A', 'n', 'd', 'F', 'i', 't', 0,
    'S', 'e', 't', 'S', 'm', 'a', 'l', 'l', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'S', 'e', 't', 'S', 't', 'a', 'r', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 'V', 'a', 'l', 'u', 'e', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'S', 'e', 't', 'T', 'h', 'u', 'm', 'b', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'a', 'c', 'k', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'u', 'e', 'B', 'y', 'U', 's', 'e', 'r', 0,
    'S', 'e', 't', 'V', 'e', 'c', 't', 'o', 'r', 'A', 'n', 'g', 'l', 'e', 0,
    'S', 'e', 't', 'V', 'i', 'r', 't', 'u', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'Y', 'e', 's', 'N', 'o', 'L', 'a', 'b', 'e', 'l', 's', 0,
    'S', 'e', 't', 'Z', 'o', 'o', 'm', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'S', 'h', 'o', 'w', 'F', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'S', 'h', 'o', 'w', 'W', 'i', 't', 'h', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'S', 't', 'r', 'i', 'p', 'M', 'e', 'n', 'u', 'C', 'o', 'd', 'e', 's', 0,
    'S', 'y', 's', 'E', 'r', 'r', 'o', 'r', 'M', 's', 'g', 'S', 't', 'r', 0,
    'T', 'B', '_', 'H', 'O', 'R', 'Z', '_', 'L', 'A', 'Y', 'O', 'U', 'T', 0,
    'T', 'B', '_', 'N', 'O', '_', 'T', 'O', 'O', 'L', 'T', 'I', 'P', 'S', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'F', 'O', 'N', 'T', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'T', 'A', 'B', 'S', 0,
    'T', 'E', '_', 'P', 'R', 'O', 'C', 'E', 'S', 'S', '_', 'T', 'A', 'B', 0,
    'T', 'I', 'M', 'E', 'R', '_', 'O', 'N', 'E', '_', 'S', 'H', 'O', 'T', 0,
    'T', 'R', '_', 'E', 'D', 'I', 'T', '_', 'L', 'A', 'B', 'E', 'L', 'S', 0,
    'T', 'R', '_', 'H', 'A', 'S', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'T', 'o', 'o', 'l', 'B', 'a', 'r', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'P', 'o', 'i', 'n', 't', 0,
    'U', 'P', 'D', 'A', 'T', 'E', '_', 'U', 'I', '_', 'N', 'O', 'N', 'E', 0,
    'U', 'n', 's', 'e', 't', 'A', 's', 'S', 'o', 'r', 't', 'K', 'e', 'y', 0,
    'V', 'i', 'r', 't', 'u', 'a', 'l', 'H', 'i', 't', 'T', 'e', 's', 't', 0,
    'W', 'X', 'K', '_', 'M', 'E', 'D', 'I', 'A', '_', 'S', 'T', 'O', 'P', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'A', 'D', 'D', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'E', 'N', 'D', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'T', 'A', 'B', 0,
    '_', 'D', 'r', 'a', 'w', 'P', 'o', 'i', 'n', 't', 'L', 'i', 's', 't', 0,
    '_', 'g', 'e', 't', 'T', 'h', 'e', 'P', 'e', 'n', 'L', 'i', 's', 't', 0,
    'b', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 'L', 'i', 's', 't', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 'i', 'n', 'p', 'i', 'x', 'e', 'l', 's', 0,
    'b', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'd', 'e', 'l', 'a', 'y', 'M', 'i', 'l', 'l', 'i', 'S', 'e', 'c', 's', 0,
    'd', 'e', 'l', 'e', 't', 'e', '_', 'w', 'i', 'n', 'd', 'o', 'w', 's', 0,
    'd', 'i', 's', 'c', 'a', 'r', 'd', 'C', 'h', 'a', 'n', 'g', 'e', 's', 0,
    'f', 'i', 'x', 'e', 'd', 'W', 'i', 'd', 't', 'h', 'O', 'n', 'l', 'y', 0,
    'f', 'n', 'S', 'o', 'r', 't', 'C', 'a', 'l', 'l', 'B', 'a', 'c', 'k', 0,
    'f', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 'L', 'i', 's', 't', 0,
    'g', 'l', 'o', 'b', 'a', 'l', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'i', 's', 'H', 'o', 't', 'S', 'e', 'n', 's', 'i', 't', 'i', 'v', 'e', 0,
    'l', 'i', 'n', 'e', 's', 'P', 'e', 'r', 'A', 'c', 't', 'i', 'o', 'n', 0,
    'l', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'm', 'a', 'j', 'o', 'r', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'm', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'p', 'i', 'x', 'e', 'l', 's', 'P', 'e', 'r', 'U', 'n', 'i', 't', 'X', 0,
    'p', 'i', 'x', 'e', 'l', 's', 'P', 'e', 'r', 'U', 'n', 'i', 't', 'Y', 0,
    'r', 'a', 'w', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'D', 'o', 'w', 'n', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 'N', 'a', 't', 'i', 'v', 'e', 0,
    'r', 'o', 't', 'a', 't', 'i', 'o', 'n', 'C', 'e', 'n', 't', 'r', 'e', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'v', 'i', 'r', 't', 'u', 'a', 'l', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'w', 'x', 'A', 'r', 'c', 'h', 'i', 't', 'e', 'c', 't', 'u', 'r', 'e', 0,
    'w', 'x', 'B', 'a', 't', 't', 'e', 'r', 'y', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'B', 'o', 'o', 'k', 'C', 't', 'r', 'l', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'C', 'A', 'r', 'r', 'a', 'y', 'H', 'o', 'l', 'd', 'e', 'r', 0,
    'w', 'x', 'C', 'h', 'e', 'c', 'k', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'D', 'C', 'P', 'e', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 'r', 0,
    'w', 'x', 'D', 'a', 't', 'a', 'F', 'o', 'r', 'm', 'a', 't', 'I', 'd', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'T', 'Z', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', ':', ':', 'T', 'm', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'C', 'T', 'I', 'V', 'A', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'E', 'C', 'K', 'B', 'O', 'X', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'O', 'M', 'B', 'O', 'B', 'O', 'X', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'J', 'O', 'Y', '_', 'M', 'O', 'V', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'K', 'E', 'Y', '_', 'D', 'O', 'W', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'A', 'X', 'I', 'M', 'I', 'Z', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'V', 'E', '_', 'E', 'N', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'N', 'C', '_', 'P', 'A', 'I', 'N', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'A', 'D', 'I', 'O', 'B', 'O', 'X', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'R', 'I', 'G', 'H', 'T', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'I', 'N', 'C', 'T', 'R', 'L', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', '_', 'C', 'U', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', '_', 'U', 'R', 'L', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 'B', 'l', 'o', 'c', 'k', 'e', 'r', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'w', 'x', 'G', 'U', 'I', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 0,
    'w', 'x', 'G', 'e', 's', 't', 'u', 'r', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'G', 'r', 'a', 'd', 'i', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'F', 'o', 'n', 't', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'P', 'a', 't', 'h', 0,
    'w', 'x', 'G', 'r', 'i', 'd', 'B', 'a', 'g', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'w', 'x', 'H', 'e', 'l', 'p', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'w', 'x', 'I', 'c', 'o', 'n', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'I', 'c', 'o', 'n', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'P', 'N', 'G', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'L', 'o', 'g', 'F', 'o', 'r', 'm', 'a', 't', 't', 'e', 'r', 0,
    'w', 'x', 'M', 'e', 'm', 'o', 'r', 'y', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 'L', 'i', 's', 't', 0,
    'w', 'x', 'O', 'u', 't', 'p', 'u', 't', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'w', 'x', 'P', 'l', 'a', 't', 'f', 'o', 'r', 'm', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'P', 'o', 's', 't', 'S', 'c', 'r', 'i', 'p', 't', 'D', 'C', 0,
    'w', 'x', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'e', 'r', 'E', 'r', 'r', 'o', 'r', 0,
    'w', 'x', 'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'R', 'e', 'c', 't', '2', 'D', 'D', 'o', 'u', 'b', 'l', 'e', 0,
    'w', 'x', 'R', 'e', 'l', 'a', 't', 'i', 'o', 'n', 's', 'h', 'i', 'p', 0,
    'w', 'x', 'S', 't', 'a', 't', 'i', 'c', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'M', 'e', 't', 'r', 'i', 'c', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'U', 'r', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'T', 'o', 'g', 'g', 'l', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'i', 'o', 'n', 's', 0,
    'w', 'x', 'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'c', 'o', 'n', 0,
    'w', 'x', 'U', 'p', 'd', 'a', 't', 'e', 'U', 'I', 'M', 'o', 'd', 'e', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'A', 'R', 'T', '_', 'F', 'I', 'L', 'E', '_', 'O', 'P', 'E', 'N', 0,
    'A', 'R', 'T', '_', 'F', 'I', 'L', 'E', '_', 'S', 'A', 'V', 'E', 0,
    'A', 'R', 'T', '_', 'G', 'O', 'T', 'O', '_', 'L', 'A', 'S', 'T', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'D', 'I', 'R', '_', 'U', 'P', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', '_', 'B', 'O', 'O', 'K', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', '_', 'P', 'A', 'G', 'E', 0,
    'A', 'R', 'T', '_', 'L', 'I', 'S', 'T', '_', 'V', 'I', 'E', 'W', 0,
    'A', 'R', 'T', '_', 'R', 'E', 'M', 'O', 'V', 'A', 'B', 'L', 'E', 0,
    'A', 'R', 'T', '_', 'T', 'I', 'C', 'K', '_', 'M', 'A', 'R', 'K', 0,
    'A', 'd', 'd', 'A', 'r', 'c', 'T', 'o', 'P', 'o', 'i', 'n', 't', 0,
    'A', 'd', 'd', 'E', 'x', 't', 'r', 'a', 'A', 'c', 'c', 'e', 'l', 0,
    'A', 'd', 'd', 'S', 't', 'a', 't', 'i', 'c', 'T', 'e', 'x', 't', 0,
    'A', 'd', 'd', 'S', 't', 'd', 'C', 'a', 't', 'a', 'l', 'o', 'g', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'S', 'u', 'b', 'M', 'e', 'n', 'u', 0,
    'B', 'K', '_', 'A', 'L', 'I', 'G', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'B', 'M', 'P', '_', '8', 'B', 'P', 'P', '_', 'G', 'R', 'A', 'Y', 0,
    'B', 'M', 'P', '_', '8', 'B', 'P', 'P', '_', 'G', 'R', 'E', 'Y', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'D', 'O', 'U', 'B', 'L', 'E', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'R', 'A', 'I', 'S', 'E', 'D', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'S', 'I', 'M', 'P', 'L', 'E', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'S', 'T', 'A', 'T', 'I', 'C', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'S', 'U', 'N', 'K', 'E', 'N', 0,
    'B', 'U', '_', 'A', 'L', 'I', 'G', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'B', 'u', 't', 't', 'o', 'n', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'C', 'C', '_', 'S', 'T', 'D', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'C', 'H', 'K', '_', 'U', 'N', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'C', 'H', 'O', 'I', 'C', 'E', '_', 'H', 'E', 'I', 'G', 'H', 'T', 0,
    'C', 'L', 'I', 'P', '_', 'C', 'H', 'I', 'L', 'D', 'R', 'E', 'N', 0,
    'C', 'L', 'I', 'P', '_', 'S', 'I', 'B', 'L', 'I', 'N', 'G', 'S', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'Y', 'E', 'L', 'L', 'O', 'W', 0,
    'C', 'O', 'L', '_', 'R', 'E', 'S', 'I', 'Z', 'A', 'B', 'L', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'P', 'E', 'N', 'C', 'I', 'L', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'I', 'Z', 'E', 'N', 'S', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'I', 'Z', 'E', 'W', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'S', 'I', 'Z', 'I', 'N', 'G', 0,
    'C', 'a', 'c', 'h', 'e', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'C', 'a', 'n', 'D', 'r', 'a', 'w', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'C', 'h', 'o', 'i', 'c', 'e', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'C', 'l', 'e', 'a', 'r', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'C', 'o', 'l', 'o', 'u', 'r', 'D', 'i', 's', 'p', 'l', 'a', 'y', 0,
    'C', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'M', 'o', 'n', 'o', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'u', 't', 't', 'o', 'n', 's', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'D', 'D', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'D', 'I', 'R', 0,
    'D', 'O', 'U', 'B', 'L', 'E', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', '_', 'F', 'i', 'r', 's', 't', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 's', 0,
    'D', 'i', 'r', '_', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 's', 0,
    'D', 'i', 'r', '_', 'D', 'o', 'w', 'n', 'l', 'o', 'a', 'd', 's', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    'D', 'o', 'G', 'e', 't', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'G', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'D', 'r', 'a', 'g', '_', 'C', 'o', 'p', 'y', 'O', 'n', 'l', 'y', 0,
    'D', 'r', 'a', 'w', 'C', 'h', 'e', 'c', 'k', 'M', 'a', 'r', 'k', 0,
    'D', 'r', 'a', 'w', 'D', 'r', 'o', 'p', 'A', 'r', 'r', 'o', 'w', 0,
    'D', 'r', 'a', 'w', 'F', 'o', 'c', 'u', 's', 'R', 'e', 'c', 't', 0,
    'D', 'r', 'a', 'w', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'l', 'e', 0,
    'E', 'N', 'D', 'I', 'A', 'N', '_', 'L', 'I', 'T', 'T', 'L', 'E', 0,
    'E', 'X', 'E', 'C', '_', 'N', 'O', 'E', 'V', 'E', 'N', 'T', 'S', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'L', 'o', 'g', 'g', 'i', 'n', 'g', 0,
    'E', 'n', 'd', 'B', 'u', 's', 'y', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'E', 'n', 's', 'u', 'r', 'e', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'E', 'x', 'p', 'a', 'n', 'd', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'F', 'A', 'L', 'L', 'B', 'A', 'C', 'K', '_', 'N', 'O', 'N', 'E', 0,
    'F', 'D', '_', 'C', 'H', 'A', 'N', 'G', 'E', '_', 'D', 'I', 'R', 0,
    'F', 'I', 'X', 'E', 'D', '_', 'M', 'I', 'N', 'S', 'I', 'Z', 'E', 0,
    'F', 'L', 'O', 'O', 'D', '_', 'S', 'U', 'R', 'F', 'A', 'C', 'E', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'B', 'O', 'L', 'D', 0,
    'F', 'O', 'N', 'T', 'F', 'L', 'A', 'G', '_', 'M', 'A', 'S', 'K', 0,
    'F', 'O', 'N', 'T', 'S', 'T', 'Y', 'L', 'E', '_', 'M', 'A', 'X', 0,
    'F', 'S', 'W', '_', 'E', 'V', 'E', 'N', 'T', '_', 'A', 'L', 'L', 0,
    'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 'T', 'o', 'U', 'R', 'L', 0,
    'F', 'i', 'n', 'd', 'C', 'h', 'i', 'l', 'd', 'I', 't', 'e', 'm', 0,
    'F', 'o', 'r', 'm', 'a', 't', 'I', 'S', 'O', 'D', 'a', 't', 'e', 0,
    'F', 'o', 'r', 'm', 'a', 't', 'I', 'S', 'O', 'T', 'i', 'm', 'e', 0,
    'F', 'o', 'r', 'm', 'a', 't', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 0,
    'F', 'r', 'o', 'm', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 's', 0,
    'G', 'A', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'G', 'R', 'A', 'D', 'I', 'E', 'N', 'T', '_', 'N', 'O', 'N', 'E', 0,
    'G', 'e', 't', 'A', 'c', 'c', 'e', 's', 's', 'i', 'b', 'l', 'e', 0,
    'G', 'e', 't', 'A', 'p', 'p', 'e', 'a', 'r', 'a', 'n', 'c', 'e', 0,
    'G', 'e', 't', 'A', 's', 's', 'e', 'r', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'A', 'u', 't', 'h', 'N', 'e', 'e', 'd', 'e', 'd', 0,
    'G', 'e', 't', 'A', 'u', 't', 'o', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'G', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'G', 'e', 't', 'B', 'e', 's', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'L', 'e', 'f', 't', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'n', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'h', 'o', 'i', 'c', 'e', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'C', 'h', 'o', 'o', 's', 'e', 'F', 'u', 'l', 'l', 0,
    'G', 'e', 't', 'C', 'h', 'o', 's', 'e', 'n', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'c', 'k', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'A', 'r', 'e', 'a', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'G', 'e', 't', 'D', 'i', 's', 'p', 'l', 'a', 'y', 'P', 'P', 'I', 0,
    'G', 'e', 't', 'D', 'o', 't', 'P', 'r', 'o', 'd', 'u', 'c', 't', 0,
    'G', 'e', 't', 'D', 'r', 'o', 'p', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'i', 'a', 'n', 'n', 'e', 's', 's', 0,
    'G', 'e', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'E', 'x', 't', 'r', 'a', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'G', 'e', 't', 'F', 'i', 'n', 'd', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'E', 'n', 't', 'r', 'y', 0,
    'G', 'e', 't', 'F', 'i', 'r', 's', 't', 'G', 'r', 'o', 'u', 'p', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'F', 'a', 'm', 'i', 'l', 'y', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'I', 'c', 'o', 'n', 0,
    'G', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'H', 'i', 'd', 'e', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'L', 'o', 'c', 'a', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'g', 'i', 'n', 'g', 'O', 'f', 'f', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'G', 'e', 't', 'M', 'o', 'u', 's', 'e', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'P', 'P', 'I', 'P', 'r', 'i', 'n', 't', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 'M', 'M', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'a', 'm', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'P', 'l', 'u', 'g', 'i', 'n', 's', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'P', 'o', 'r', 't', 'I', 'd', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'R', 'a', 'w', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'R', 'e', 't', 'u', 'r', 'n', 'C', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'R', 'o', 'w', 'H', 'e', 'i', 'g', 'h', 't', 's', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'd', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'e', 'e', 'n', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'e', 'e', 'n', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'G', 'e', 't', 'S', 'e', 't', 'C', 'h', 'e', 'c', 'k', 'e', 'd', 0,
    'G', 'e', 't', 'S', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'w', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'S', 't', 'o', 'c', 'k', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'T', 'a', 'r', 'g', 'e', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 's', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'T', 'r', 'a', 'c', 'e', 'M', 'a', 's', 'k', 's', 0,
    'G', 'e', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'G', 'e', 't', 'U', 'n', 'i', 'c', 'o', 'd', 'e', 'K', 'e', 'y', 0,
    'G', 'e', 't', 'V', 'e', 'n', 'd', 'o', 'r', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'E', 'n', 'd', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 'O', 'f', 'Y', 'e', 'a', 'r', 0,
    'G', 'e', 't', 'W', 'h', 'e', 'e', 'l', 'D', 'e', 'l', 't', 'a', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'Z', 'o', 'o', 'm', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'H', 'D', '_', 'A', 'L', 'L', 'O', 'W', '_', 'H', 'I', 'D', 'E', 0,
    'H', 'E', 'L', 'P', '_', 'N', 'E', 'T', 'S', 'C', 'A', 'P', 'E', 0,
    'H', 'a', 's', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'H', 'a', 's', 'B', 'u', 'l', 'l', 'e', 't', 'T', 'e', 'x', 't', 0,
    'H', 'a', 's', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'e', 's', 0,
    'H', 'a', 's', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'H', 'a', 's', 'E', 'x', 't', 'r', 'a', 'S', 't', 'y', 'l', 'e', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'F', 'a', 'm', 'i', 'l', 'y', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'I', 't', 'a', 'l', 'i', 'c', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'H', 'a', 's', 'L', 'e', 'f', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'H', 'a', 's', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'H', 'a', 'v', 'e', 'E', 'q', 'u', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'H', 'i', 'g', 'h', 'S', 'u', 'r', 'r', 'o', 'g', 'a', 't', 'e', 0,
    'I', 'C', 'O', 'N', '_', 'A', 'S', 'T', 'E', 'R', 'I', 'S', 'K', 0,
    'I', 'C', 'O', 'N', '_', 'Q', 'U', 'E', 'S', 'T', 'I', 'O', 'N', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', '_', 'I', 'N', 'D', 'E', 'X', 0,
    'I', 'D', '_', 'M', 'O', 'V', 'E', '_', 'F', 'R', 'A', 'M', 'E', 0,
    'I', 'D', '_', 'P', 'A', 'G', 'E', '_', 'S', 'E', 'T', 'U', 'P', 0,
    'I', 'D', '_', 'P', 'R', 'O', 'P', 'E', 'R', 'T', 'I', 'E', 'S', 0,
    'I', 'T', 'E', 'M', '_', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 0,
    'I', 'n', 's', 'e', 'r', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'I', 'n', 's', 'e', 'r', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'I', 'n', 's', 'e', 'r', 't', 'S', 'u', 'b', 'P', 'a', 'g', 'e', 0,
    'I', 'n', 't', 'e', 'r', 's', 'e', 'c', 't', 'R', 'e', 'c', 't', 0,
    'I', 's', 'C', 'o', 'l', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'E', 'a', 'r', 'l', 'i', 'e', 'r', 'T', 'h', 'a', 'n', 0,
    'I', 's', 'I', 'n', 'p', 'u', 't', 'O', 'p', 'e', 'n', 'e', 'd', 0,
    'I', 's', 'I', 't', 'e', 'm', 'C', 'h', 'e', 'c', 'k', 'e', 'd', 0,
    'I', 's', 'I', 't', 'e', 'm', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'I', 's', 'R', 'e', 'o', 'r', 'd', 'e', 'r', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'R', 'o', 'w', 'G', 'r', 'o', 'w', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'S', 'h', 'o', 'r', 't', 'e', 'r', 'T', 'h', 'a', 'n', 0,
    'I', 's', 'S', 't', 'r', 'e', 't', 'c', 'h', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'T', 'h', 'i', 's', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'I', 's', 'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 't', 0,
    'K', 'I', 'L', 'L', '_', 'C', 'H', 'I', 'L', 'D', 'R', 'E', 'N', 0,
    'K', 'e', 'y', 'w', 'o', 'r', 'd', 'S', 'e', 'a', 'r', 'c', 'h', 0,
    'K', 'i', 'n', 'd', '_', 'A', 'd', 'v', 'a', 'n', 'c', 'e', 'd', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'F', 'A', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'K', 'A', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'E', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'L', 'I', 'N', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'B', 'O', 'D', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'D', 'A', 'R', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'M', 'B', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'F', 'I', 'J', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'I', 'G', 'B', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'K', 'A', 'K', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'A', 'N', 'X', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'E', 'R', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'M', 'E', 'T', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'A', 'M', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'U', 'E', 'R', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'O', 'D', 'I', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'H', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'A', 'M', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'E', 'N', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'S', 'O', 'G', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'E', 'S', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'H', 'A', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'U', 'R', 'D', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Z', 'U', 'L', 'U', 0,
    'L', 'B', '_', 'A', 'L', 'I', 'G', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'L', 'B', '_', 'I', 'N', 'T', '_', 'H', 'E', 'I', 'G', 'H', 'T', 0,
    'L', 'C', '_', 'A', 'L', 'I', 'G', 'N', '_', 'L', 'E', 'F', 'T', 0,
    'L', 'C', '_', 'M', 'A', 'S', 'K', '_', 'A', 'L', 'I', 'G', 'N', 0,
    'L', 'C', '_', 'S', 'I', 'N', 'G', 'L', 'E', '_', 'S', 'E', 'L', 0,
    'L', 'C', '_', 'S', 'M', 'A', 'L', 'L', '_', 'I', 'C', 'O', 'N', 0,
    'L', 'I', 'S', 'T', '_', 'A', 'U', 'T', 'O', 'S', 'I', 'Z', 'E', 0,
    'L', 'I', 'S', 'T', '_', 'N', 'E', 'X', 'T', '_', 'A', 'L', 'L', 0,
    'L', 'I', 'S', 'T', '_', 'S', 'E', 'T', '_', 'I', 'T', 'E', 'M', 0,
    'L', 'I', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'L', 'o', 'g', 'F', 'a', 't', 'a', 'l', 'E', 'r', 'r', 'o', 'r', 0,
    'M', 'A', 'J', 'O', 'R', '_', 'V', 'E', 'R', 'S', 'I', 'O', 'N', 0,
    'M', 'I', 'N', 'O', 'R', '_', 'V', 'E', 'R', 'S', 'I', 'O', 'N', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'A', 'N', 'Y', 0,
    'M', 'O', 'U', 'S', 'E', '_', 'B', 'T', 'N', '_', 'M', 'A', 'X', 0,
    'M', 'o', 'r', 'e', 'R', 'e', 'q', 'u', 'e', 's', 't', 'e', 'd', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'b', 'l', 'C', 'l', 'i', 'c', 'k', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'r', 'a', 'g', 'D', 'r', 'o', 'p', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'r', 'a', 'g', 'g', 'i', 'n', 'g', 0,
    'M', 'o', 'v', 'a', 'b', 'l', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'M', 'o', 'v', 'e', 'L', 'e', 'f', 't', 'T', 'o', 'p', 'T', 'o', 0,
    'N', 'B', '_', 'F', 'I', 'X', 'E', 'D', 'W', 'I', 'D', 'T', 'H', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'H', 'S', 'C', 'R', 'O', 'L', 'L', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'S', 'Y', 'S', 'M', 'E', 'N', 'U', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'V', 'S', 'C', 'R', 'O', 'L', 'L', 0,
    'O', 'S', 'X', 'I', 's', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'L', 'I', 'N', 'U', 'X', 0,
    'O', 'S', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'S', '_', 'N', 'T', 0,
    'O', 'f', 'f', 's', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'O', 'n', 'B', 'u', 't', 't', 'o', 'n', 'C', 'l', 'i', 'c', 'k', 0,
    'O', 'n', 'C', 'l', 'o', 's', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'O', 'n', 'E', 'n', 'd', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'O', 'n', 'E', 'n', 'd', 'P', 'r', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'A', 't', 't', 'r', 0,
    'O', 'n', 'G', 'e', 't', 'I', 't', 'e', 'm', 'T', 'e', 'x', 't', 0,
    'O', 'n', 'G', 'e', 't', 'U', 'n', 'i', 't', 'S', 'i', 'z', 'e', 0,
    'O', 'n', 'M', 'e', 'a', 's', 'u', 'r', 'e', 'I', 't', 'e', 'm', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '4', 'S', 'M', 'A', 'L', 'L', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '4', '_', 'P', 'L', 'U', 'S', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'C', '6', '5', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', '3', '2', 'K', 'B', 'I', 'G', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '1', '0', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'T', 'A', 'B', 'L', 'O', 'I', 'D', 0,
    'P', 'E', 'N', '_', 'L', 'I', 'G', 'H', 'T', 'G', 'R', 'E', 'Y', 0,
    'P', 'N', 'G', '_', 'T', 'Y', 'P', 'E', '_', 'G', 'R', 'E', 'Y', 0,
    'P', 'O', 'W', 'E', 'R', '_', 'B', 'A', 'T', 'T', 'E', 'R', 'Y', 0,
    'P', 'O', 'W', 'E', 'R', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'A', 'U', 'T', 'O', 0,
    'P', 'R', 'I', 'N', 'T', 'B', 'I', 'N', '_', 'U', 'S', 'E', 'R', 0,
    'P', 'R', 'I', 'N', 'T', 'E', 'R', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'P', 'a', 'i', 'n', 't', 'W', 'r', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'P', 'a', 'r', 's', 'e', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 0,
    'P', 'o', 'p', 'S', 't', 'a', 't', 'u', 's', 'T', 'e', 'x', 't', 0,
    'P', 'o', 's', 't', 'S', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'R', 'A', 'I', 'S', 'E', 'D', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'R', 'A', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'R', 'E', 'S', 'I', 'Z', 'E', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'R', 'e', 'p', 'l', 'a', 'c', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'B', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'S', 'H', 'O', 'W', '_', 'S', 'B', '_', 'N', 'E', 'V', 'E', 'R', 0,
    'S', 'I', 'M', 'P', 'L', 'E', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'L', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'S', 'P', '_', 'A', 'R', 'R', 'O', 'W', '_', 'K', 'E', 'Y', 'S', 0,
    'S', 'P', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'S', 'T', 'A', 'T', 'I', 'C', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'T', 'B', '_', 'S', 'H', 'O', 'W', '_', 'T', 'I', 'P', 'S', 0,
    'S', 'T', 'O', 'C', 'K', '_', 'N', 'O', 'F', 'L', 'A', 'G', 'S', 0,
    'S', 'U', 'N', 'K', 'E', 'N', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'Y', 'S', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'H', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'V', 'S', 'C', 'R', 'O', 'L', 'L', '_', 'X', 0,
    'S', 'a', 'v', 'e', 'A', 'n', 'i', 'm', 'a', 't', 'i', 'o', 'n', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'S', 'e', 'n', 'd', 'S', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'e', 't', 'A', 'c', 'c', 'e', 's', 's', 'i', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'A', 's', 's', 'e', 'r', 't', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'A', 'u', 't', 'h', 'N', 'e', 'e', 'd', 'e', 'd', 0,
    'S', 'e', 't', 'A', 'u', 't', 'o', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'S', 'e', 't', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'S', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 'L', 'e', 'f', 't', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'B', 'u', 'l', 'l', 'e', 't', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'C', 'h', 'o', 'o', 's', 'e', 'F', 'u', 'l', 'l', 0,
    'S', 'e', 't', 'C', 'h', 'o', 's', 'e', 'n', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'C', 'o', 'n', 'f', 'i', 'g', 'P', 'a', 't', 'h', 0,
    'S', 'e', 't', 'D', 'a', 't', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'S', 'e', 't', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'S', 'e', 't', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'S', 'e', 't', 'D', 'r', 'o', 'p', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'S', 'e', 't', 'E', 'n', 'd', 'i', 'a', 'n', 'n', 'e', 's', 's', 0,
    'S', 'e', 't', 'E', 'x', 't', 'r', 'a', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'F', 'i', 'l', 'e', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'S', 'e', 't', 'F', 'i', 'n', 'd', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'F', 'a', 'm', 'i', 'l', 'y', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'I', 'c', 'o', 'n', 0,
    'S', 'e', 't', 'F', 'o', 'o', 't', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'G', 'e', 's', 't', 'u', 'r', 'e', 'E', 'n', 'd', 0,
    'S', 'e', 't', 'H', 'e', 'a', 'd', 'e', 'r', 'A', 't', 't', 'r', 0,
    'S', 'e', 't', 'H', 'e', 'l', 'p', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'L', 'e', 'f', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'S', 'e', 't', 'L', 'e', 'f', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'S', 'e', 't', 'L', 'o', 'g', 'g', 'i', 'n', 'g', 'O', 'f', 'f', 0,
    'S', 'e', 't', 'M', 'a', 's', 'k', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'M', 'i', 'd', 'd', 'l', 'e', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'P', 'i', 'c', 'k', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'S', 'e', 't', 'P', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'R', 'a', 'w', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'R', 'e', 's', 'i', 'z', 'e', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'R', 'e', 't', 'u', 'r', 'n', 'C', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'R', 'a', 't', 'e', 0,
    'S', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 's', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'T', 'a', 'r', 'g', 'e', 't', 'R', 'e', 'c', 't', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'U', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'S', 'e', 't', 'U', 'n', 'i', 'c', 'o', 'd', 'e', 'K', 'e', 'y', 0,
    'S', 'e', 't', 'V', 'e', 'n', 'd', 'o', 'r', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'W', 'h', 'e', 'e', 'l', 'D', 'e', 'l', 't', 'a', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'Z', 'o', 'o', 'm', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'S', 'l', 'i', 'd', 'e', 'r', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'T', 'A', 'B', '_', 'T', 'R', 'A', 'V', 'E', 'R', 'S', 'A', 'L', 0,
    'T', 'B', 'K', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'B', 'A', 'R', 0,
    'T', 'B', '_', 'H', 'O', 'R', 'I', 'Z', 'O', 'N', 'T', 'A', 'L', 0,
    'T', 'C', '_', 'F', 'I', 'X', 'E', 'D', 'W', 'I', 'D', 'T', 'H', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'A', 'L', 'L', 0,
    'T', 'E', 'X', 'T', '_', 'A', 'T', 'T', 'R', '_', 'U', 'R', 'L', 0,
    'T', 'E', 'X', 'T', '_', 'T', 'Y', 'P', 'E', '_', 'A', 'N', 'Y', 0,
    'T', 'E', '_', 'H', 'T', '_', 'O', 'N', '_', 'T', 'E', 'X', 'T', 0,
    'T', 'E', '_', 'H', 'T', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', 0,
    'T', 'E', '_', 'N', 'O', '_', 'V', 'S', 'C', 'R', 'O', 'L', 'L', 0,
    'T', 'R', '_', 'N', 'O', '_', 'B', 'U', 'T', 'T', 'O', 'N', 'S', 0,
    'U', 'R', 'L', 'T', 'o', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'U', 'S', 'E', '_', 'F', 'S', 'W', 'A', 'T', 'C', 'H', 'E', 'R', 0,
    'U', 'n', 'c', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 'e', 'd', 0,
    'U', 's', 'e', 's', 'E', 'v', 'e', 'n', 't', 'L', 'o', 'o', 'p', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'A', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'B', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'C', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'D', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'E', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'F', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'G', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'H', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'I', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'J', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'K', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'L', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'M', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'N', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'O', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'P', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'Q', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'R', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'S', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'T', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'U', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'V', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'W', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'X', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'Y', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'Z', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'F', '1', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'F', '2', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'F', '3', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'F', '4', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '_', 'U', 'P', 0,
    'W', 'X', 'K', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '0', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '1', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '2', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '3', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '4', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '5', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '6', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '7', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '8', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', '9', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '2', '0', 0,
    'W', 'X', 'K', '_', 'V', 'O', 'L', 'U', 'M', 'E', '_', 'U', 'P', 0,
    '_', 'B', 'o', 'o', 't', 's', 't', 'r', 'a', 'p', 'A', 'p', 'p', 0,
    '_', 'D', 'r', 'a', 'w', 'L', 'i', 'n', 'e', 'L', 'i', 's', 't', 0,
    '_', 'D', 'r', 'a', 'w', 'T', 'e', 'x', 't', 'L', 'i', 's', 't', 0,
    'c', 'a', 's', 'e', 'S', 'e', 'n', 's', 'i', 't', 'i', 'v', 'e', 0,
    'c', 'u', 's', 't', 'o', 'm', 'i', 'z', 'e', 'H', 'o', 'o', 'k', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', '_', 'v', 'a', 'l', 'u', 'e', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'd', 'e', 's', 'i', 'r', 'e', 'd', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'd', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'T', 'i', 't', 'l', 'e', 0,
    'e', 'l', 'l', 'i', 'p', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    'g', 'a', 'i', 'n', 'e', 'd', 'C', 'a', 'p', 't', 'u', 'r', 'e', 0,
    'g', 'e', 'n', 'e', 'r', 'a', 't', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'd', 'C', 'o', 'l', 'u', 'm', 'n', 's', 'B', 'a', 's', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'i', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'n', 'g', 0,
    'i', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'i', 'o', 'n', 0,
    'l', 'o', 'c', 'a', 'l', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'm', '_', 'a', 'r', 'r', 'o', 'w', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'm', '_', 'l', 'a', 'b', 'e', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'm', '_', 'l', 'a', 'b', 'e', 'l', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'm', 's', 'g', 'I', 'd', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'p', 'a', 'g', 'e', 'S', 'e', 't', 'u', 'p', 'D', 'a', 't', 'a', 0,
    'q', 'u', 'i', 'c', 'k', 'B', 'e', 's', 't', 'S', 'i', 'z', 'e', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'r', 'e', 'p', 'e', 't', 'C', 'o', 'u', 'n', 't', 'i', 'n', 'g', 0,
    'r', 'o', 't', 'a', 't', 'i', 'o', 'n', 'A', 'n', 'g', 'l', 'e', 0,
    's', 't', 'i', 'p', 'p', 'l', 'e', 'B', 'i', 't', 'm', 'a', 'p', 0,
    's', 't', 'r', 'i', 'k', 'e', 't', 'h', 'r', 'o', 'u', 'g', 'h', 0,
    'w', 'h', 'e', 'e', 'l', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'A', 'r', 'r', 'a', 'y', 'D', 'o', 'u', 'b', 'l', 'e', 0,
    'w', 'x', 'A', 'r', 'r', 'a', 'y', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'w', 'x', 'A', 'r', 't', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'w', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 'L', 'i', 's', 't', 0,
    'w', 'x', 'C', 'o', 'n', 't', 'e', 'x', 't', 'H', 'e', 'l', 'p', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'X', '1', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'U', 'X', '2', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'D', 'E', 'S', 'T', 'R', 'O', 'Y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'I', 'C', 'O', 'N', 'I', 'Z', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'E', 'F', 'T', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'L', 'I', 'S', 'T', 'B', 'O', 'X', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'A', 'G', 'N', 'I', 'F', 'Y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'I', 'N', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'H', 'i', 's', 't', 'o', 'r', 'y', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'M', 'e', 't', 'r', 'i', 'c', 's', 0,
    'w', 'x', 'G', 'B', 'S', 'i', 'z', 'e', 'r', 'I', 't', 'e', 'm', 0,
    'w', 'x', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'P', 'e', 'n', 0,
    'w', 'x', 'I', 'n', 'p', 'u', 't', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'w', 'x', 'J', 'P', 'E', 'G', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'K', 'e', 'y', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'r', 0,
    'w', 'x', 'L', 'o', 'g', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'M', 'a', 'p', 'p', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'N', 'o', 't', 'i', 'f', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'O', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'P', 'o', 'p', 'u', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'R', 'a', 'd', 'i', 'o', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 't', 'o', 'c', 'k', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'w', 'x', 'S', 't', 'r', 'e', 'a', 'm', 'E', 'r', 'r', 'o', 'r', 0,
    'w', 'x', 'T', 'I', 'F', 'F', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'T', 'h', 'r', 'e', 'a', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'T', 'i', 'm', 'e', 'r', 'R', 'u', 'n', 'n', 'e', 'r', 0,
    'w', 'x', 'V', 'a', 'r', 'i', 'a', 'n', 't', 'L', 'i', 's', 't', 0,
    'w', 'x', 'V', 'e', 'r', 's', 'i', 'o', 'n', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'I', 'D', 'R', 'e', 'f', 0,
    'A', 'C', 'C', 'E', 'L', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', '_', 'N', 'O', 'N', 'E', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'A', 'R', 'C', 'H', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'A', 'R', 'T', '_', 'H', 'A', 'R', 'D', 'D', 'I', 'S', 'K', 0,
    'A', 'R', 'T', '_', 'Q', 'U', 'E', 'S', 'T', 'I', 'O', 'N', 0,
    'A', 'c', 'c', 'e', 'p', 't', 's', 'F', 'o', 'c', 'u', 's', 0,
    'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 'N', 'e', 'x', 't', 0,
    'A', 'd', 'd', 'C', 'h', 'e', 'c', 'k', 'T', 'o', 'o', 'l', 0,
    'A', 'd', 'd', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'A', 'd', 'd', 'F', 'a', 'l', 'l', 'b', 'a', 'c', 'k', 's', 0,
    'A', 'd', 'd', 'R', 'a', 'd', 'i', 'o', 'T', 'o', 'o', 'l', 0,
    'A', 'd', 'd', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'l', 'e', 0,
    'A', 'd', 'd', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'A', 'd', 'd', 'T', 'r', 'a', 'c', 'e', 'M', 'a', 's', 'k', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'A', 'r', 'e', 'S', 'a', 't', 'i', 's', 'f', 'i', 'e', 'd', 0,
    'A', 'r', 'r', 'a', 'n', 'g', 'e', 'I', 'c', 'o', 'n', 's', 0,
    'A', 's', 's', 'i', 'g', 'n', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'A', 's', 's', 'i', 'g', 'n', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'A', 'u', 't', 'o', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'B', 'A', 'C', 'K', 'I', 'N', 'G', 'S', 'T', 'O', 'R', 'E', 0,
    'B', 'M', 'P', '_', '8', 'B', 'P', 'P', '_', 'R', 'E', 'D', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'T', 'H', 'E', 'M', 'E', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'Y', 'E', 'L', 'L', 'O', 'W', 0,
    'B', 'l', 'u', 'r', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
    'B', 'u', 't', 't', 'o', 'n', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'B', 'u', 't', 't', 'o', 'n', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'C', 'H', 'O', 'I', 'C', 'E', '_', 'W', 'I', 'D', 'T', 'H', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'L', 'A', 'C', 'K', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'G', 'R', 'E', 'E', 'N', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'W', 'H', 'I', 'T', 'E', 0,
    'C', 'O', 'L', '_', 'S', 'O', 'R', 'T', 'A', 'B', 'L', 'E', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'C', 'E', 'L', 'L', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'F', 'L', 'A', 'T', 0,
    'C', 'O', 'N', 'T', 'R', 'O', 'L', '_', 'N', 'O', 'N', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'A', 'R', 'R', 'O', 'W', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'B', 'L', 'A', 'N', 'K', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'C', 'R', 'O', 'S', 'S', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'I', 'B', 'E', 'A', 'M', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'W', 'A', 'T', 'C', 'H', 0,
    'C', 'a', 'n', 'B', 'e', 'T', 'o', 'g', 'g', 'l', 'e', 'd', 0,
    'C', 'a', 'n', 'o', 'n', 'i', 'c', 'a', 'l', 'R', 'e', 'f', 0,
    'C', 'a', 'p', 't', 'u', 'r', 'e', 'M', 'o', 'u', 's', 'e', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'P', 'a', 't', 'h', 'T', 'o', 0,
    'C', 'l', 'o', 's', 'e', 'S', 'u', 'b', 'p', 'a', 't', 'h', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'N', 'o', 'd', 'e', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'P', 'a', 't', 'h', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'T', 'r', 'e', 'e', 0,
    'C', 'o', 'p', 'y', 'F', 'r', 'o', 'm', 'I', 'c', 'o', 'n', 0,
    'C', 'o', 'p', 'y', 'T', 'o', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'a', 'n', 'v', 'a', 's', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'S', 'c', 'a', 'l', 'e', 'd', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'C', 'o', 'o', 'r', 'd', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'P', 'o', 'p', 'u', 'p', 0,
    'D', 'e', 't', 'a', 'c', 'h', 'O', 'l', 'd', 'L', 'o', 'g', 0,
    'D', 'e', 't', 'a', 'c', 'h', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'D', 'i', 'r', '_', 'P', 'i', 'c', 't', 'u', 'r', 'e', 's', 0,
    'D', 'i', 's', 'c', 'a', 'r', 'd', 'E', 'd', 'i', 't', 's', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'B', 'l', 'o', 'c', 'k', 0,
    'D', 'i', 's', 'p', 'l', 'a', 'y', 'D', 'e', 'p', 't', 'h', 0,
    'D', 'o', 'M', 'o', 'v', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'D', 'o', 'u', 'b', 'l', 'e', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'D', 'r', 'a', 'w', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 0,
    'D', 'r', 'a', 'w', 'C', 'o', 'm', 'b', 'o', 'B', 'o', 'x', 0,
    'D', 'r', 'a', 'w', 'I', 't', 'e', 'm', 'T', 'e', 'x', 't', 0,
    'D', 'r', 'a', 'w', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    'E', 'n', 'd', 'E', 'd', 'i', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'E', 'v', 'e', 'n', 't', '_', 'I', 'g', 'n', 'o', 'r', 'e', 0,
    'E', 'x', 'i', 't', 'M', 'a', 'i', 'n', 'L', 'o', 'o', 'p', 0,
    'F', 'D', '_', 'N', 'O', '_', 'F', 'O', 'L', 'L', 'O', 'W', 0,
    'F', 'I', 'X', 'E', 'D', '_', 'L', 'E', 'N', 'G', 'T', 'H', 0,
    'F', 'L', 'O', 'O', 'D', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'D', 'R', 'A', 'W', 'E', 'R', 0,
    'F', 'R', 'A', 'M', 'E', '_', 'S', 'H', 'A', 'P', 'E', 'D', 0,
    'F', 'R', '_', 'M', 'A', 'T', 'C', 'H', 'C', 'A', 'S', 'E', 0,
    'F', 'R', '_', 'W', 'H', 'O', 'L', 'E', 'W', 'O', 'R', 'D', 0,
    'F', 'i', 'n', 'd', 'I', 't', 'e', 'm', 'B', 'y', 'I', 'd', 0,
    'F', 'i', 'n', 'd', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 0,
    'F', 'i', 'x', 'e', 'd', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'F', 'r', 'a', 'm', 'e', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'G', 'a', 'u', 'g', 'e', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'G', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'G', 'e', 't', 'B', 'e', 's', 't', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 'F', 'o', 'r', 0,
    'G', 'e', 't', 'B', 'l', 'i', 'n', 'k', 'T', 'i', 'm', 'e', 0,
    'G', 'e', 't', 'C', 'G', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'G', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'F', 'r', 'o', 'm', 0,
    'G', 'e', 't', 'C', 'h', 'a', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'C', 'l', 'a', 's', 's', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'C', 'l', 'a', 's', 's', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'W', 'i', 'd', 't', 'h', 's', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'd', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'P', 'o', 's', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'b', 'o', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'C', 'o', 'n', 'f', 'i', 'g', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'p', 'y', 'r', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'D', 'a', 'y', 'O', 'f', 'Y', 'e', 'a', 'r', 0,
    'G', 'e', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'G', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 's', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'E', 'n', 't', 'r', 'y', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'E', 'x', 't', 'r', 'a', 'L', 'o', 'n', 'g', 0,
    'G', 'e', 't', 'F', 'a', 'c', 'e', 'n', 'a', 'm', 'e', 's', 0,
    'G', 'e', 't', 'F', 'i', 'e', 'l', 'd', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'P', 'a', 't', 'h', 's', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 's', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'G', 't', 'k', 'W', 'i', 'd', 'g', 'e', 't', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'I', 'n', 'c', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'L', 'a', 'b', 'e', 'l', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'L', 'a', 'r', 'g', 'e', 'I', 'c', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'L', 'a', 's', 't', 'E', 'r', 'r', 'o', 'r', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'L', 'o', 'a', 'd', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'L', 'u', 'm', 'i', 'n', 'a', 'n', 'c', 'e', 0,
    'G', 'e', 't', 'M', 'D', 'I', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'M', 'a', 's', 'k', 'G', 'r', 'e', 'e', 'n', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 's', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 's', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'r', 's', 0,
    'G', 'e', 't', 'M', 'o', 'n', 't', 'h', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'E', 'n', 't', 'r', 'y', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'G', 'r', 'o', 'u', 'p', 0,
    'G', 'e', 't', 'O', 'p', 't', 'i', 'o', 'n', 'I', 'n', 't', 0,
    'G', 'e', 't', 'O', 's', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 't', 'h', 'e', 'r', 'E', 'd', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'P', 'I', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'p', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'P', 'a', 'p', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'P', 'i', 'x', 'e', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'P', 'o', 'w', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'P', 'r', 'o', 'c', 'e', 's', 's', 'I', 'd', 0,
    'G', 'e', 't', 'R', 'o', 'w', 'S', 't', 'r', 'i', 'd', 'e', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'P', 'o', 's', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'r', 't', 'D', 'e', 's', 'c', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'S', 'p', 'l', 'i', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'i', 'c', 'B', 'o', 'x', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'G', 'e', 't', 'S', 'u', 'b', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'T', 'h', 'u', 'm', 'b', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'T', 'i', 'm', 'e', 's', 't', 'a', 'm', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'y', 'P', 'o', 's', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'e', 't', 'T', 'o', 't', 'a', 'l', 'D', 'a', 'y', 's', 0,
    'G', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'S', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'G', 'e', 't', 'V', 'i', 'e', 'w', 'S', 't', 'a', 'r', 't', 0,
    'G', 'e', 't', 'W', 'h', 'e', 'e', 'l', 'A', 'x', 'i', 's', 0,
    'G', 'e', 't', 'Z', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'G', 'i', 'v', 'e', 'F', 'e', 'e', 'd', 'b', 'a', 'c', 'k', 0,
    'H', 'a', 's', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'H', 'a', 's', 'C', 'o', 'p', 'y', 'r', 'i', 'g', 'h', 't', 0,
    'H', 'a', 's', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'r', 's', 0,
    'H', 'a', 's', 'P', 'a', 'g', 'e', 'B', 'r', 'e', 'a', 'k', 0,
    'H', 'a', 's', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 0,
    'I', 'C', 'O', 'N', '_', 'W', 'A', 'R', 'N', 'I', 'N', 'G', 0,
    'I', 'D', '_', 'C', 'L', 'O', 'S', 'E', '_', 'A', 'L', 'L', 0,
    'I', 'D', '_', 'D', 'U', 'P', 'L', 'I', 'C', 'A', 'T', 'E', 0,
    'I', 'D', '_', 'S', 'E', 'L', 'E', 'C', 'T', 'A', 'L', 'L', 0,
    'I', 'D', '_', 'S', 'E', 'P', 'A', 'R', 'A', 'T', 'O', 'R', 0,
    'I', 'D', '_', 'U', 'N', 'D', 'E', 'R', 'L', 'I', 'N', 'E', 0,
    'I', 'D', '_', 'V', 'I', 'E', 'W', '_', 'L', 'I', 'S', 'T', 0,
    'I', 'n', 'R', 'e', 'p', 'o', 'r', 't', 'V', 'i', 'e', 'w', 0,
    'I', 'n', 'i', 't', 'F', 'r', 'o', 'm', 'F', 'o', 'n', 't', 0,
    'I', 'n', 's', 'e', 'r', 't', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'I', 'n', 's', 'e', 'r', 't', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'I', 's', 'A', 'u', 't', 'o', 'R', 'e', 'p', 'e', 'a', 't', 0,
    'I', 's', 'C', 'o', 'm', 'p', 'a', 't', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'D', 'e', 's', 'c', 'e', 'n', 'd', 'a', 'n', 't', 0,
    'I', 's', 'E', 'l', 'l', 'i', 'p', 's', 'i', 'z', 'e', 'd', 0,
    'I', 's', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 'T', 'o', 'p', 0,
    'I', 's', 'F', 'i', 'x', 'e', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'I', 's', 'F', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'I', 's', 'G', 'e', 's', 't', 'u', 'r', 'e', 'E', 'n', 'd', 0,
    'I', 's', 'L', 'o', 'n', 'g', 'e', 'r', 'T', 'h', 'a', 'n', 0,
    'I', 's', 'M', 'a', 'i', 'n', 'T', 'h', 'r', 'e', 'a', 'd', 0,
    'I', 's', 'P', 'a', 'g', 'e', 'S', 'c', 'r', 'o', 'l', 'l', 0,
    'I', 's', 'P', 'o', 'p', 'u', 'p', 'S', 'h', 'o', 'w', 'n', 0,
    'I', 's', 'R', 'e', 's', 'i', 'z', 'e', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'R', 'o', 'w', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'S', 'i', 'n', 'g', 'l', 'e', 'L', 'i', 'n', 'e', 0,
    'J', 'O', 'I', 'N', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'K', 'i', 'n', 'd', '_', 'G', 'e', 'n', 'e', 'r', 'a', 'l', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'A', 'S', 'U', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'D', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'E', 'W', 'E', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'L', 'U', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'N', 'K', 'O', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'R', 'W', 'A', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'T', 'W', 'I', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'V', 'A', 'I', 0,
    'L', 'B', '_', 'A', 'L', 'W', 'A', 'Y', 'S', '_', 'S', 'B', 0,
    'L', 'B', '_', 'N', 'E', 'E', 'D', 'E', 'D', '_', 'S', 'B', 0,
    'L', 'B', '_', 'O', 'W', 'N', 'E', 'R', 'D', 'R', 'A', 'W', 0,
    'L', 'C', '_', 'A', 'L', 'I', 'G', 'N', '_', 'T', 'O', 'P', 0,
    'L', 'C', '_', 'M', 'A', 'S', 'K', '_', 'S', 'O', 'R', 'T', 0,
    'L', 'C', '_', 'M', 'A', 'S', 'K', '_', 'T', 'Y', 'P', 'E', 0,
    'L', 'C', '_', 'N', 'O', '_', 'H', 'E', 'A', 'D', 'E', 'R', 0,
    'L', 'I', 'S', 'T', '_', 'F', 'I', 'N', 'D', '_', 'U', 'P', 0,
    'L', 'O', 'G', '_', 'P', 'r', 'o', 'g', 'r', 'e', 's', 's', 0,
    'L', 'o', 'w', 'S', 'u', 'r', 'r', 'o', 'g', 'a', 't', 'e', 0,
    'M', 'A', 'X', 'I', 'M', 'I', 'Z', 'E', '_', 'B', 'O', 'X', 0,
    'M', 'E', 'N', 'U', '_', 'T', 'E', 'A', 'R', 'O', 'F', 'F', 0,
    'M', 'I', 'N', 'I', 'M', 'I', 'Z', 'E', '_', 'B', 'O', 'X', 0,
    'M', 'a', 'c', 'O', 'p', 'e', 'n', 'F', 'i', 'l', 'e', 's', 0,
    'M', 'a', 'c', 'P', 'r', 'i', 'n', 't', 'F', 'i', 'l', 'e', 0,
    'M', 'a', 'c', 'R', 'e', 'o', 'p', 'e', 'n', 'A', 'p', 'p', 0,
    'M', 'a', 'k', 'e', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 0,
    'M', 'a', 'k', 'e', 'T', 'i', 'm', 'e', 'z', 'o', 'n', 'e', 0,
    'M', 'i', 'd', 'd', 'l', 'e', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'M', 'i', 'd', 'd', 'l', 'e', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'M', 'o', 'n', 'd', 'a', 'y', '_', 'F', 'i', 'r', 's', 't', 0,
    'M', 'o', 'u', 's', 'e', 'C', 'l', 'i', 'c', 'k', 'e', 'd', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'r', 'a', 'g', 'E', 'n', 'd', 0,
    'M', 'o', 'u', 's', 'e', 'H', 'i', 't', 'T', 'e', 's', 't', 0,
    'M', 'o', 'v', 'e', 'B', 'o', 't', 't', 'o', 'm', 'T', 'o', 0,
    'M', 'o', 'v', 'e', 'C', 'e', 'n', 't', 'r', 'e', 'T', 'o', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'N', 'B', '_', 'M', 'U', 'L', 'T', 'I', 'L', 'I', 'N', 'E', 0,
    'N', 'e', 'w', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'I', 'd', 0,
    'N', 'e', 'w', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'C', 'L', 'I', 'E', 'N', 'T', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'C', 'U', 'R', 'S', 'O', 'R', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'O', 'D', 'D', 'E', 'V', 'E', 'N', '_', 'R', 'U', 'L', 'E', 0,
    'O', 'S', 'X', 'G', 'e', 't', 'C', 'G', 'F', 'o', 'n', 't', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'H', 'P', 'U', 'X', 0,
    'O', 'n', 'F', 'r', 'a', 'm', 'e', 'C', 'l', 'o', 's', 'e', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '_', 'P', 'L', 'U', 'S', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '6', '_', 'J', 'I', 'S', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '_', 'P', 'L', 'U', 'S', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'C', 'S', 'H', 'E', 'E', 'T', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'D', 'S', 'H', 'E', 'E', 'T', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', '1', '0', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', '1', '1', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', '1', '2', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', '1', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'B', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'B', '5', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'B', '6', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'C', '3', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'C', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'C', '5', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'C', '6', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', 'D', 'L', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'S', 'H', 'E', 'E', 'T', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'I', 'S', 'O', '_', 'B', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'D', 'G', 'E', 'R', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'T', 'T', 'E', 'R', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '1', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '2', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '3', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '5', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '6', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '7', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '8', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', 'E', 'N', 'V', '_', '9', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'Q', 'U', 'A', 'R', 'T', 'O', 0,
    'P', 'D', '_', 'A', 'P', 'P', '_', 'M', 'O', 'D', 'A', 'L', 0,
    'P', 'D', '_', 'A', 'U', 'T', 'O', '_', 'H', 'I', 'D', 'E', 0,
    'P', 'D', '_', 'C', 'A', 'N', '_', 'A', 'B', 'O', 'R', 'T', 0,
    'P', 'E', 'N', 'S', 'T', 'Y', 'L', 'E', '_', 'D', 'O', 'T', 0,
    'P', 'O', 'P', 'U', 'P', '_', 'W', 'I', 'N', 'D', 'O', 'W', 0,
    'P', 'O', 'R', 'T', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', 0,
    'P', 'O', 'W', 'E', 'R', '_', 'S', 'O', 'C', 'K', 'E', 'T', 0,
    'P', 'a', 'i', 'n', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'P', 'a', 'n', 'e', 'l', 'N', 'a', 'm', 'e', 'S', 't', 'r', 0,
    'P', 'a', 'r', 's', 'e', 'I', 'S', 'O', 'D', 'a', 't', 'e', 0,
    'P', 'a', 'r', 's', 'e', 'I', 'S', 'O', 'T', 'i', 'm', 'e', 0,
    'P', 'a', 's', 's', 'M', 'e', 's', 's', 'a', 'g', 'e', 's', 0,
    'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 'T', 'o', 'X', 'Y', 0,
    'P', 'o', 's', 't', 'C', 'r', 'e', 'a', 't', 'i', 'o', 'n', 0,
    'R', 'e', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'r', 'e', 'e', 0,
    'R', 'e', 'a', 'd', 'L', 'o', 'n', 'g', 'L', 'o', 'n', 'g', 0,
    'R', 'e', 'a', 's', 'o', 'n', '_', 'M', 'o', 'u', 's', 'e', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'I', 't', 'e', 'm', 's', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'L', 'i', 'n', 'e', 's', 0,
    'R', 'e', 'l', 'e', 'a', 's', 'e', 'M', 'o', 'u', 's', 'e', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'B', 'u', 't', 't', 'o', 'n', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'S', 'L', '_', 'A', 'U', 'T', 'O', 'T', 'I', 'C', 'K', 'S', 0,
    'S', 'P', '_', 'T', 'H', 'I', 'N', '_', 'S', 'A', 'S', 'H', 0,
    'S', 'T', 'B', '_', 'S', 'I', 'Z', 'E', 'G', 'R', 'I', 'P', 0,
    'S', 'T', 'R', 'E', 'T', 'C', 'H', '_', 'M', 'A', 'S', 'K', 0,
    'S', 'Y', 'S', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'B', 'O', 'R', 'D', 'E', 'R', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'C', 'U', 'R', 'S', 'O', 'R', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'C', 'U', 'R', 'S', 'O', 'R', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'D', 'C', 'L', 'I', 'C', 'K', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'D', 'C', 'L', 'I', 'C', 'K', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'H', 'T', 'H', 'U', 'M', 'B', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'S', 'C', 'R', 'E', 'E', 'N', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'V', 'T', 'H', 'U', 'M', 'B', '_', 'Y', 0,
    'S', 'a', 'f', 'e', 'Y', 'i', 'e', 'l', 'd', 'F', 'o', 'r', 0,
    'S', 'a', 'v', 'e', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'S', 'c', 'h', 'e', 'd', 'u', 'l', 'e', 'E', 'x', 'i', 't', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'L', 'i', 'n', 'e', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'S', 'e', 't', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'S', 'e', 't', 'B', 'l', 'i', 'n', 'k', 'T', 'i', 'm', 'e', 0,
    'S', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'F', 'r', 'o', 'm', 0,
    'S', 'e', 't', 'C', 'l', 'a', 's', 's', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'C', 'l', 'i', 'p', 'b', 'o', 'a', 'r', 'd', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'd', 0,
    'S', 'e', 't', 'D', 'i', 'm', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'D', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'S', 'e', 't', 'E', 'n', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'E', 'x', 't', 'r', 'a', 'L', 'o', 'n', 'g', 0,
    'S', 'e', 't', 'F', 'i', 'r', 's', 't', 'I', 't', 'e', 'm', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 't', 'e', 'r', 0,
    'S', 'e', 't', 'H', 'e', 'l', 'p', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'S', 'e', 't', 'I', 'n', 'c', 'r', 'e', 'm', 'e', 'n', 't', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'S', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'L', 'a', 'b', 'e', 'l', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'L', 'o', 'a', 'd', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'S', 'e', 't', 'M', 'e', 'n', 'u', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'O', 'S', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'B', 'r', 'e', 'a', 'k', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'P', 'a', 'p', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'P', 'i', 'x', 'e', 'l', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'P', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'R', 'i', 'g', 'h', 't', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'P', 'o', 's', 0,
    'S', 'e', 't', 'S', 'c', 'r', 'o', 'l', 'l', 'b', 'a', 'r', 0,
    'S', 'e', 't', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'S', 'h', 'i', 'f', 't', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'r', 't', 'D', 'e', 's', 'c', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'S', 'o', 'r', 't', 'O', 'r', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'S', 'p', 'l', 'i', 't', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'e', 'M', 'a', 's', 'k', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'S', 'e', 't', 'T', 'i', 'm', 'e', 's', 't', 'a', 'm', 'p', 0,
    'S', 'e', 't', 'T', 'o', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'S', 'e', 't', 'T', 'o', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'Y', 'e', 'a', 'r', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'T', 'o', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'S', 'e', 't', 'U', 's', 'e', 'r', 'S', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'S', 'e', 't', 'W', 'h', 'e', 'e', 'l', 'A', 'x', 'i', 's', 0,
    'S', 'h', 'o', 'u', 'l', 'd', 'O', 'f', 'f', 's', 'e', 't', 0,
    'S', 'h', 'o', 'w', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 0,
    'S', 'h', 'o', 'w', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'h', 'o', 'w', 'n', 'M', 'o', 'd', 'a', 'l', 'l', 'y', 0,
    'S', 'o', 'r', 't', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'S', 'u', 'n', 'd', 'a', 'y', '_', 'F', 'i', 'r', 's', 't', 0,
    'S', 'y', 's', 'E', 'r', 'r', 'o', 'r', 'C', 'o', 'd', 'e', 0,
    'T', 'B', '_', 'H', 'O', 'R', 'Z', '_', 'T', 'E', 'X', 'T', 0,
    'T', 'B', '_', 'N', 'O', 'D', 'I', 'V', 'I', 'D', 'E', 'R', 0,
    'T', 'C', '_', 'M', 'U', 'L', 'T', 'I', 'L', 'I', 'N', 'E', 0,
    'T', 'C', '_', 'O', 'W', 'N', 'E', 'R', 'D', 'R', 'A', 'W', 0,
    'T', 'E', '_', 'H', 'T', '_', 'B', 'E', 'F', 'O', 'R', 'E', 0,
    'T', 'E', '_', 'H', 'T', '_', 'B', 'E', 'Y', 'O', 'N', 'D', 0,
    'T', 'E', '_', 'M', 'U', 'L', 'T', 'I', 'L', 'I', 'N', 'E', 0,
    'T', 'E', '_', 'N', 'O', 'H', 'I', 'D', 'E', 'S', 'E', 'L', 0,
    'T', 'I', 'N', 'Y', '_', 'C', 'A', 'P', 'T', 'I', 'O', 'N', 0,
    'T', 'R', '_', 'H', 'I', 'D', 'E', '_', 'R', 'O', 'O', 'T', 0,
    'T', 'R', '_', 'R', 'O', 'W', '_', 'L', 'I', 'N', 'E', 'S', 0,
    'T', 'o', 'U', 's', 'e', 'r', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'T', 'r', 'a', 'n', 's', 'p', 'a', 'r', 'e', 'n', 'c', 'y', 0,
    'T', 'r', 'i', 'p', 'l', 'e', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'T', 'y', 'p', 'e', '_', 'B', 'o', 'o', 'l', 'e', 'a', 'n', 0,
    'T', 'y', 'p', 'e', '_', 'I', 'n', 't', 'e', 'g', 'e', 'r', 0,
    'T', 'y', 'p', 'e', '_', 'U', 'n', 'k', 'n', 'o', 'w', 'n', 0,
    'U', 'n', 's', 'e', 'l', 'e', 'c', 't', 'I', 't', 'e', 'm', 0,
    'U', 'n', 's', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'W', 'I', 'N', 'D', 'I', 'N', 'G', '_', 'R', 'U', 'L', 'E', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '0', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '1', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '2', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '3', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '4', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '5', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '6', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '7', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '8', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', '9', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'A', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'B', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'C', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'D', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'E', 0,
    'W', 'X', 'K', '_', 'L', 'A', 'U', 'N', 'C', 'H', '_', 'F', 0,
    'W', 'X', 'K', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'Y', 0,
    'W', 'X', 'K', '_', 'P', 'A', 'G', 'E', 'D', 'O', 'W', 'N', 0,
    'W', 'X', 'K', '_', 'S', 'N', 'A', 'P', 'S', 'H', 'O', 'T', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '1', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '2', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '3', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '4', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '5', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '6', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '7', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '8', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'E', 'C', 'I', 'A', 'L', '9', 0,
    'W', 'X', 'K', '_', 'S', 'U', 'B', 'T', 'R', 'A', 'C', 'T', 0,
    'W', 'a', 's', 'C', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd', 0,
    'X', 'Y', 'T', 'o', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    '_', '_', 'c', 'o', 'n', 't', 'a', 'i', 'n', 's', '_', '_', 0,
    '_', '_', 'i', 't', 'r', 'u', 'e', 'd', 'i', 'v', '_', '_', 0,
    '_', 'c', 'p', 'p', '_', 'R', 'e', 'a', 'd', 'I', 'n', 't', 0,
    '_', 'g', 'e', 't', 'A', 't', 't', 'r', 'D', 'i', 'c', 't', 0,
    '_', 'w', 'x', 'P', 'y', 'C', 'l', 'e', 'a', 'n', 'u', 'p', 0,
    'a', 'l', 'l', 'o', 'w', 'S', 'y', 'm', 'b', 'o', 'l', 's', 0,
    'a', 'l', 't', '_', 'e', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'a', 'v', 'e', 'r', 'a', 'g', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'b', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'O', 'n', 'l', 'y', 0,
    'b', 'L', 'o', 'a', 'd', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'c', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 'T', 'e', 'x', 't', 0,
    'c', 'i', 'r', 'c', 'l', 'e', 'C', 'e', 'n', 't', 'e', 'r', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'F', 'o', 'c', 'u', 's', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', '_', 'n', 'a', 'm', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', '_', 'p', 'a', 't', 'h', 0,
    'd', 'e', 's', 'i', 'r', 'e', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'e', 't', 'a', 'i', 'l', 'e', 'd', 'T', 'e', 'x', 't', 0,
    'f', 'a', 'c', 't', 'o', 'r', '_', 'a', 'l', 'p', 'h', 'a', 0,
    'f', 'a', 'c', 't', 'o', 'r', '_', 'g', 'r', 'e', 'e', 'n', 0,
    'f', 'u', 'l', 'l', 'p', 'a', 't', 'h', 'n', 'a', 'm', 'e', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'f', 'a', 'c', 't', 'o', 'r', 0,
    'h', 'e', 'l', 'p', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'h', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'l', 'y', 0,
    'i', 'n', 'c', 'l', 'u', 'd', 'e', 'A', 'l', 'p', 'h', 'a', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'C', 'o', 'u', 'n', 't', 0,
    'k', 'e', 'y', 'E', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'l', 'o', 'g', 'i', 'c', 'a', 'l', 'S', 'c', 'a', 'l', 'e', 0,
    'm', 'i', 'c', 'r', 'o', 's', 'e', 'c', 'o', 'n', 'd', 's', 0,
    'm', 'i', 'd', 'd', 'l', 'e', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'm', 'i', 'l', 'l', 'i', 's', 'e', 'c', 'o', 'n', 'd', 's', 0,
    'm', 's', 'g', 'I', 'd', 'C', 'h', 'a', 'r', 's', 'e', 't', 0,
    'o', 'n', 'l', 'y', 'I', 'f', 'N', 'e', 'e', 'd', 'e', 'd', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'p', 'a', 's', 's', 'M', 'e', 's', 's', 'a', 'g', 'e', 's', 0,
    'p', 'u', 's', 'h', 'B', 'u', 't', 't', 'o', 'n', 'B', 'g', 0,
    's', 'a', 's', 'h', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    's', 'i', 'z', 'e', 'I', 'n', 'P', 'i', 'x', 'e', 'l', 's', 0,
    't', 'e', 's', 't', 'C', 'p', 'p', 'C', 'l', 'o', 'n', 'e', 0,
    't', 'h', 'e', 'm', 'e', 'B', 'r', 'u', 's', 'h', 'I', 'D', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'w', 'x', 'A', 'c', 'c', 'e', 's', 's', 'i', 'b', 'l', 'e', 0,
    'w', 'x', 'A', 'p', 'p', 'C', 'o', 'n', 's', 'o', 'l', 'e', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'B', 'r', 'u', 's', 'h', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'B', 'u', 'f', 'f', 'e', 'r', 'e', 'd', 'D', 'C', 0,
    'w', 'x', 'B', 'u', 's', 'y', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'w', 'x', 'C', 'h', 'a', 'r', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'w', 'x', 'C', 'h', 'o', 'i', 'c', 'e', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'C', 'l', 'o', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'C', 'o', 'm', 'b', 'o', 'P', 'o', 'p', 'u', 'p', 0,
    'w', 'x', 'C', 'o', 'n', 'f', 'i', 'g', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'D', 'a', 't', 'a', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'w', 'x', 'D', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'D', 'r', 'a', 'g', 'R', 'e', 's', 'u', 'l', 't', 0,
    'w', 'x', 'D', 'r', 'o', 'p', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'w', 'x', 'D', 'r', 'o', 'p', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'w', 'x', 'D', 'u', 'p', 'l', 'e', 'x', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'O', 'I', 'C', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'R', 'E', 'A', 'T', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'O', 'T', 'K', 'E', 'Y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'K', 'E', 'Y', '_', 'U', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'T', 'I', 'O', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'V', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'E', 'A', 'R', 'C', 'H', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'I', 'Z', 'I', 'N', 'G', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'L', 'I', 'D', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'H', 'R', 'E', 'A', 'D', 0,
    'w', 'x', 'E', 'n', 'd', 'i', 'a', 'n', 'n', 'e', 's', 's', 0,
    'w', 'x', 'E', 'r', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'E', 'v', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'E', 'x', 'e', 'c', 'u', 't', 'e', 'E', 'n', 'v', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'C', 'o', 'n', 'f', 'i', 'g', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'S', 'y', 's', 't', 'e', 'm', 0,
    'w', 'x', 'F', 'o', 'c', 'u', 's', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'F', 'a', 'm', 'i', 'l', 'y', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'M', 'a', 'p', 'p', 'e', 'r', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'w', 'x', 'G', 'B', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'G', 'I', 'F', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'H', 'e', 'a', 'd', 'e', 'r', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'I', 'F', 'F', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'I', 'c', 'o', 'n', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'A', 'r', 'r', 'a', 'y', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 'F', 'o', 'r', 'm', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'w', 'x', 'M', 'e', 't', 'a', 'f', 'i', 'l', 'e', 'D', 'C', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'M', 'o', 'u', 's', 'e', 'S', 't', 'a', 't', 'e', 0,
    'w', 'x', 'M', 's', 'g', 'C', 'a', 't', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'P', 'C', 'X', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'P', 'N', 'G', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'P', 'N', 'M', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'P', 'a', 'i', 'n', 't', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'e', 'n', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'w', 'x', 'P', 'i', 'c', 'k', 'e', 'r', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'P', 'l', 'a', 't', 'f', 'o', 'r', 'm', 'I', 'd', 0,
    'w', 'x', 'P', 'o', 'w', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'y', 'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'R', 'e', 'f', 'C', 'o', 'u', 'n', 't', 'e', 'r', 0,
    'w', 'x', 'S', 'e', 'a', 'r', 'c', 'h', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'S', 'h', 'o', 'w', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'w', 'x', 'S', 'i', 'm', 'p', 'l', 'e', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'r', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'S', 'p', 'i', 'n', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'I', 'D', 0,
    'w', 'x', 'S', 't', 'a', 't', 'i', 'c', 'L', 'i', 'n', 'e', 0,
    'w', 'x', 'S', 't', 'a', 't', 'i', 'c', 'T', 'e', 'x', 't', 0,
    'w', 'x', 'S', 't', 'r', 'e', 'a', 'm', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'S', 'y', 's', 't', 'e', 'm', 'F', 'o', 'n', 't', 0,
    'w', 'x', 'T', 'G', 'A', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'w', 'x', 'T', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'T', 'r', 'e', 'e', 'I', 't', 'e', 'm', 'I', 'd', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'B', 'a', 's', 'e', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'L', 'i', 's', 't', 0,
    'w', 'x', 'W', 'i', 't', 'h', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'w', 'x', 'X', 'P', 'M', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'A', 'C', 'C', 'E', 'L', '_', 'S', 'H', 'I', 'F', 'T', 0,
    'A', 'N', 'D', '_', 'R', 'E', 'V', 'E', 'R', 'S', 'E', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'B', 'A', 'C', 'K', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'D', 'O', 'W', 'N', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'H', 'O', 'M', 'E', 0,
    'A', 'R', 'T', '_', 'N', 'E', 'W', '_', 'D', 'I', 'R', 0,
    'A', 'R', 'T', '_', 'T', 'O', 'O', 'L', 'B', 'A', 'R', 0,
    'A', 'R', 'T', '_', 'W', 'A', 'R', 'N', 'I', 'N', 'G', 0,
    'A', 'R', 'T', '_', 'W', 'X', '_', 'L', 'O', 'G', 'O', 0,
    'A', 'd', 'd', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 0,
    'A', 'd', 'd', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'A', 'd', 'd', 'S', 'h', 'o', 'r', 't', 'c', 'u', 't', 0,
    'A', 'd', 'd', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'A', 'n', 'i', 'm', 'a', 't', 'e', 'S', 'h', 'o', 'w', 0,
    'A', 'n', 't', 'i', 'A', 'l', 'i', 'a', 's', 'e', 'd', 0,
    'A', 's', 's', 'i', 'g', 'n', 'S', 'i', 'z', 'e', 'r', 0,
    'B', 'I', 'T', 'N', 'E', 'S', 'S', '_', 'M', 'A', 'X', 0,
    'B', 'M', 'P', '_', '1', 'B', 'P', 'P', '_', 'B', 'W', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'M', 'A', 'S', 'K', 0,
    'B', 'O', 'R', 'D', 'E', 'R', '_', 'N', 'O', 'N', 'E', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'B', 'L', 'A', 'C', 'K', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'G', 'R', 'E', 'E', 'N', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'W', 'H', 'I', 'T', 'E', 0,
    'B', 'U', '_', 'A', 'U', 'T', 'O', 'D', 'R', 'A', 'W', 0,
    'B', 'U', '_', 'E', 'X', 'A', 'C', 'T', 'F', 'I', 'T', 0,
    'C', 'A', 'P', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'C', 'B', '_', 'D', 'R', 'O', 'P', 'D', 'O', 'W', 'N', 0,
    'C', 'B', '_', 'R', 'E', 'A', 'D', 'O', 'N', 'L', 'Y', 0,
    'C', 'H', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'C', 'H', 'K', '_', 'C', 'H', 'E', 'C', 'K', 'E', 'D', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'B', 'L', 'U', 'E', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'C', 'Y', 'A', 'N', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'C', 'H', 'A', 'R', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'H', 'A', 'N', 'D', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'N', 'O', 'N', 'E', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'W', 'A', 'I', 'T', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'C', 'l', 'o', 's', 'e', 'O', 'u', 't', 'p', 'u', 't', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'A', 'l', 'l', 0,
    'C', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 'T', 'o', 0,
    'C', 'o', 'u', 'n', 't', 'r', 'y', '_', 'E', 'E', 'C', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'U', 'n', 'i', 'o', 'n', 0,
    'D', 'D', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'D', 'F', '_', 'F', 'I', 'L', 'E', 'N', 'A', 'M', 'E', 0,
    'D', 'F', '_', 'M', 'E', 'T', 'A', 'F', 'I', 'L', 'E', 0,
    'D', 'e', 'f', 'a', 'u', 'l', 't', 'S', 'p', 'a', 'n', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'E', 'n', 't', 'r', 'y', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'G', 'r', 'o', 'u', 'p', 0,
    'D', 'e', 's', 'e', 'l', 'e', 'c', 't', 'A', 'l', 'l', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 'I', 't', 'e', 'm', 0,
    'D', 'e', 't', 'a', 'c', 'h', 'S', 'i', 'z', 'e', 'r', 0,
    'D', 'i', 'r', 'S', 'e', 'l', 'e', 'c', 't', 'o', 'r', 0,
    'D', 'i', 'r', '_', 'D', 'e', 's', 'k', 't', 'o', 'p', 0,
    'D', 'o', 'D', 'r', 'a', 'w', 'I', 'm', 'a', 'g', 'e', 0,
    'D', 'o', 'L', 'o', 'g', 'R', 'e', 'c', 'o', 'r', 'd', 0,
    'D', 'o', 'P', 'r', 'e', 'p', 'a', 'r', 'e', 'D', 'C', 0,
    'D', 'o', 'S', 'h', 'o', 'w', 'P', 'o', 'p', 'u', 'p', 0,
    'D', 'r', 'a', 'w', 'E', 'l', 'l', 'i', 'p', 's', 'e', 0,
    'D', 'r', 'a', 'w', 'P', 'o', 'l', 'y', 'g', 'o', 'n', 0,
    'F', 'C', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'F', 'D', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'F', 'O', 'N', 'T', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'F', 'R', '_', 'N', 'O', 'U', 'P', 'D', 'O', 'W', 'N', 0,
    'F', 'S', '_', 'S', 'E', 'E', 'K', 'A', 'B', 'L', 'E', 0,
    'F', 'i', 'l', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'F', 'i', 'n', 'd', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'F', 'i', 'n', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'F', 'l', 'u', 's', 'h', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'F', 'r', 'o', 'm', 'B', 'i', 't', 'm', 'a', 'p', 's', 0,
    'F', 'r', 'o', 'm', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'F', 'r', 'o', 'm', 'S', 'V', 'G', 'F', 'i', 'l', 'e', 0,
    'G', 'A', '_', 'P', 'R', 'O', 'G', 'R', 'E', 'S', 'S', 0,
    'G', 'A', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'G', 'e', 't', 'A', 'l', 'l', 'P', 'a', 'g', 'e', 's', 0,
    'G', 'e', 't', 'A', 'r', 'c', 'h', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'A', 's', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'A', 's', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'B', 'e', 'g', 'i', 'n', 'D', 'S', 'T', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 'I', 'd', 0,
    'G', 'e', 't', 'C', 'e', 'l', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 'A', 't', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'H', 'e', 'r', 'e', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'D', 'a', 't', 'e', 'O', 'n', 'l', 'y', 0,
    'G', 'e', 't', 'D', 'i', 's', 't', 'a', 'n', 'c', 'e', 0,
    'G', 'e', 't', 'E', 'd', 'i', 't', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'E', 's', 'c', 'a', 'p', 'e', 'I', 'd', 0,
    'G', 'e', 't', 'E', 'x', 'i', 't', 'C', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'F', 'a', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'F', 'e', 'a', 't', 'u', 'r', 'e', 's', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'F', 'r', 'o', 'm', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'H', 'o', 's', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'F', 'i', 'l', 'e', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'I', 'n', 's', 't', 'a', 'n', 'c', 'e', 0,
    'G', 'e', 't', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'B', 'y', 'I', 'd', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 'S', 'p', 'a', 'n', 0,
    'G', 'e', 't', 'J', 'o', 'y', 's', 't', 'i', 'c', 'k', 0,
    'G', 'e', 't', 'K', 'e', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'G', 'e', 't', 'K', 'e', 'y', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'L', 'i', 'n', 'e', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'L', 'i', 's', 't', 'V', 'i', 'e', 'w', 0,
    'G', 'e', 't', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'L', 'o', 'g', 'L', 'e', 'v', 'e', 'l', 0,
    'G', 'e', 't', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'M', 'a', 'i', 'n', 'L', 'o', 'o', 'p', 0,
    'G', 'e', 't', 'M', 'a', 's', 'k', 'B', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'F', 'i', 'l', 'e', 's', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'N', 'e', 'w', 'O', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'N', 'o', 'C', 'o', 'p', 'i', 'e', 's', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'o', 'u', 't', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'v', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'P', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'G', 'e', 't', 'R', 'e', 'f', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'G', 'e', 't', 'R', 'e', 'v', 'i', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 'T', 'o', 'p', 0,
    'G', 'e', 't', 'R', 'o', 'o', 't', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'R', 'o', 'w', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'S', 'a', 's', 'h', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'S', 't', 'a', 'r', 't', 0,
    'G', 'e', 't', 'S', 'e', 't', 'S', 'h', 'o', 'w', 'n', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'w', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'G', 'e', 't', 'S', 'u', 'b', 'I', 'm', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'T', 'i', 'c', 'k', 'F', 'r', 'e', 'q', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'R', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'T', 'r', 'e', 'e', 'C', 't', 'r', 'l', 0,
    'G', 'e', 't', 'U', 'R', 'L', 'S', 't', 'a', 'r', 't', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'H', 'o', 'm', 'e', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'V', 'i', 'e', 'w', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'W', 'i', 'l', 'd', 'c', 'a', 'r', 'd', 0,
    'G', 'e', 't', 'Y', 'e', 's', 'L', 'a', 'b', 'e', 'l', 0,
    'H', 'a', 's', 'B', 'u', 't', 't', 'o', 'n', 'I', 'd', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'H', 'a', 's', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'H', 'i', 'g', 'h', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'I', 'D', '_', 'B', 'A', 'C', 'K', 'W', 'A', 'R', 'D', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', 'C', 'T', 'R', 'L', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', 'D', 'L', 'G', 'G', 0,
    'I', 'D', '_', 'H', 'A', 'R', 'D', 'D', 'I', 'S', 'K', 0,
    'I', 'D', '_', 'U', 'N', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'I', 'D', '_', 'U', 'N', 'I', 'N', 'D', 'E', 'N', 'T', 0,
    'I', 'D', '_', 'Y', 'E', 'S', 'T', 'O', 'A', 'L', 'L', 0,
    'I', 'D', '_', 'Z', 'O', 'O', 'M', '_', '1', '0', '0', 0,
    'I', 'D', '_', 'Z', 'O', 'O', 'M', '_', 'F', 'I', 'T', 0,
    'I', 'D', '_', 'Z', 'O', 'O', 'M', '_', 'O', 'U', 'T', 0,
    'I', 'T', 'E', 'M', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'I', 'n', 's', 'e', 'r', 't', 'I', 't', 'e', 'm', 's', 0,
    'I', 'n', 't', 'e', 'r', 'p', 'o', 'l', 'a', 't', 'e', 0,
    'I', 'n', 'v', '_', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'I', 's', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'C', 'h', 'e', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'd', 0,
    'I', 's', 'E', 'q', 'u', 'a', 'l', 'U', 'p', 'T', 'o', 0,
    'I', 's', 'F', 'o', 'c', 'u', 's', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'I', 't', 'e', 'm', 'S', 'h', 'o', 'w', 'n', 0,
    'I', 's', 'L', 'a', 't', 'e', 'r', 'T', 'h', 'a', 'n', 0,
    'I', 's', 'L', 'i', 's', 't', 'E', 'm', 'p', 't', 'y', 0,
    'I', 's', 'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 'd', 0,
    'I', 's', 'M', 'u', 'l', 't', 'i', 'L', 'i', 'n', 'e', 0,
    'I', 's', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'I', 's', 'S', 'e', 'p', 'a', 'r', 'a', 't', 'o', 'r', 0,
    'I', 's', 'S', 'p', 'a', 'c', 'e', 'I', 't', 'e', 'm', 0,
    'I', 's', 'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 0,
    'I', 's', 'T', 'e', 'x', 't', 'E', 'm', 'p', 't', 'y', 0,
    'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '1', 0,
    'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '2', 0,
    'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '3', 0,
    'J', 'O', 'Y', '_', 'B', 'U', 'T', 'T', 'O', 'N', '4', 0,
    'L', 'A', 'N', 'G', 'U', 'A', 'G', 'E', '_', 'Y', 'I', 0,
    'L', 'B', '_', 'E', 'X', 'T', 'E', 'N', 'D', 'E', 'D', 0,
    'L', 'B', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'L', 'I', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'L', 'O', 'G', '_', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'L', 'O', 'G', '_', 'W', 'a', 'r', 'n', 'i', 'n', 'g', 0,
    'L', 'o', 'a', 'd', 'C', 'a', 't', 'a', 'l', 'o', 'g', 0,
    'L', 'o', 'g', 'S', 'y', 's', 'E', 'r', 'r', 'o', 'r', 0,
    'M', 'B', '_', 'D', 'O', 'C', 'K', 'A', 'B', 'L', 'E', 0,
    'M', 'M', '_', 'L', 'O', 'M', 'E', 'T', 'R', 'I', 'C', 0,
    'M', 'O', 'D', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', 0,
    'M', 'a', 'c', 'O', 'p', 'e', 'n', 'F', 'i', 'l', 'e', 0,
    'M', 'a', 'c', 'S', 'e', 't', 'T', 'h', 'e', 'm', 'e', 0,
    'M', 'a', 'k', 'e', 'S', 'm', 'a', 'l', 'l', 'e', 'r', 0,
    'M', 'a', 'r', 'k', 'A', 's', 'S', 'a', 'v', 'e', 'd', 0,
    'M', 'o', 'v', 'e', 'R', 'i', 'g', 'h', 't', 'T', 'o', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'P', 'o', 'i', 'n', 't', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'D', 'O', 'W', 'N', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'L', 'E', 'F', 'T', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'N', 'E', 'X', 'T', 0,
    'N', 'u', 'l', 'l', 'P', 'a', 'l', 'e', 't', 't', 'e', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'A', 'L', 'E', 'R', 'T', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'C', 'A', 'R', 'E', 'T', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'S', 'O', 'U', 'N', 'D', 0,
    'O', 'S', 'X', 'M', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', '_', 'A', 'I', 'X', 0,
    'O', 'n', 'D', 'r', 'o', 'p', 'F', 'i', 'l', 'e', 's', 0,
    'O', 'n', 'P', 'r', 'i', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'O', 'n', 'T', 'e', 'r', 'm', 'i', 'n', 'a', 't', 'e', 0,
    'P', 'A', 'P', 'E', 'R', '_', '1', '0', 'X', '1', '1', 0,
    'P', 'A', 'P', 'E', 'R', '_', '1', '0', 'X', '1', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', '1', '1', 'X', '1', '7', 0,
    'P', 'A', 'P', 'E', 'R', '_', '1', '2', 'X', '1', '1', 0,
    'P', 'A', 'P', 'E', 'R', '_', '1', '5', 'X', '1', '1', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'E', 'N', 'V', '_', '9', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'F', 'O', 'L', 'I', 'O', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'L', 'E', 'G', 'A', 'L', 0,
    'P', 'D', '_', 'C', 'A', 'N', '_', 'S', 'K', 'I', 'P', 0,
    'P', 'a', 'r', 's', 'e', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 'I', 't', 'e', 'm', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'I', 'd', 'l', 'e', 0,
    'R', 'A', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'R', 'e', 'c', 'a', 'l', 'c', 'S', 'i', 'z', 'e', 's', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'I', 't', 'e', 'm', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'L', 'i', 'n', 'e', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'e', 'c', 't', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 's', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'R', 'e', 'n', 'a', 'm', 'e', 'E', 'n', 't', 'r', 'y', 0,
    'R', 'e', 'n', 'a', 'm', 'e', 'G', 'r', 'o', 'u', 'p', 0,
    'R', 'e', 'p', 'o', 'r', 't', 'E', 'r', 'r', 'o', 'r', 0,
    'R', 'e', 'q', 'u', 'e', 's', 't', 'M', 'o', 'r', 'e', 0,
    'R', 'i', 'g', 'h', 't', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'R', 'i', 'g', 'h', 't', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'S', 'B', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'S', 'L', '_', 'S', 'E', 'L', 'R', 'A', 'N', 'G', 'E', 0,
    'S', 'L', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'S', 'P', '_', '3', 'D', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'P', '_', 'N', 'O', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'P', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'S', 'T', 'A', 'Y', '_', 'O', 'N', '_', 'T', 'O', 'P', 0,
    'S', 'T', 'R', 'E', 'T', 'C', 'H', '_', 'N', 'O', 'T', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'P', 'a', 'g', 'e', 's', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 'R', 'o', 'w', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'P', 'a', 't', 'h', 's', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'R', 'a', 'n', 'g', 'e', 0,
    'S', 'e', 't', 'A', 'u', 'x', '1', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'A', 'u', 'x', '2', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 's', 0,
    'S', 'e', 't', 'E', 'd', 'i', 't', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'E', 'd', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'E', 's', 'c', 'a', 'p', 'e', 'I', 'd', 0,
    'S', 'e', 't', 'F', 'a', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'F', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'F', 'r', 'o', 'm', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'H', 'e', 'l', 'p', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'I', 'n', 'i', 't', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'I', 'n', 's', 't', 'a', 'n', 'c', 'e', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'B', 'o', 'l', 'd', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'S', 'p', 'a', 'n', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'L', 'e', 'f', 't', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'L', 'i', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'L', 'o', 'g', 'L', 'e', 'v', 'e', 'l', 0,
    'S', 'e', 't', 'L', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'M', 'e', 't', 'a', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'M', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'N', 'e', 'w', 'O', 'r', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'N', 'o', 'C', 'o', 'p', 'i', 'e', 's', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'P', 'a', 'g', 'e', 'T', 'e', 'x', 't', 0,
    'S', 'e', 't', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'n', 't', 'o', 'u', 't', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'o', 'r', 'i', 't', 'y', 0,
    'S', 'e', 't', 'P', 'r', 'i', 'v', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'P', 'r', 'o', 'g', 'r', 'e', 's', 's', 0,
    'S', 'e', 't', 'R', 'i', 'g', 'h', 't', 'T', 'o', 'p', 0,
    'S', 'e', 't', 'R', 'o', 'w', 'C', 'o', 'u', 'n', 't', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'w', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'S', 'o', 'r', 't', 'a', 'b', 'l', 'e', 0,
    'S', 'e', 't', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'S', 'e', 't', 'T', 'i', 'c', 'k', 'F', 'r', 'e', 'q', 0,
    'S', 'e', 't', 'T', 'o', 'p', 'R', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'U', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'W', 'i', 'l', 'd', 'c', 'a', 'r', 'd', 0,
    'S', 'h', 'o', 'w', 'N', 'e', 'w', 'P', 'a', 'g', 'e', 0,
    'S', 't', 'r', 'e', 't', 'c', 'h', 'B', 'l', 'i', 't', 0,
    'S', 't', 'r', 'i', 'p', '_', 'A', 'c', 'c', 'e', 'l', 0,
    'S', 't', 'r', 'o', 'k', 'e', 'L', 'i', 'n', 'e', 's', 0,
    'S', 'y', 's', 'E', 'r', 'r', 'o', 'r', 'M', 's', 'g', 0,
    'T', 'B', '_', 'D', 'O', 'C', 'K', 'A', 'B', 'L', 'E', 0,
    'T', 'B', '_', 'V', 'E', 'R', 'T', 'I', 'C', 'A', 'L', 0,
    'T', 'E', '_', 'A', 'U', 'T', 'O', '_', 'U', 'R', 'L', 0,
    'T', 'E', '_', 'B', 'E', 'S', 'T', 'W', 'R', 'A', 'P', 0,
    'T', 'E', '_', 'C', 'H', 'A', 'R', 'W', 'R', 'A', 'P', 0,
    'T', 'E', '_', 'D', 'O', 'N', 'T', 'W', 'R', 'A', 'P', 0,
    'T', 'E', '_', 'H', 'T', '_', 'B', 'E', 'L', 'O', 'W', 0,
    'T', 'E', '_', 'P', 'A', 'S', 'S', 'W', 'O', 'R', 'D', 0,
    'T', 'E', '_', 'R', 'E', 'A', 'D', 'O', 'N', 'L', 'Y', 0,
    'T', 'E', '_', 'W', 'O', 'R', 'D', 'W', 'R', 'A', 'P', 0,
    'T', 'R', '_', 'M', 'U', 'L', 'T', 'I', 'P', 'L', 'E', 0,
    'T', 'R', '_', 'N', 'O', '_', 'L', 'I', 'N', 'E', 'S', 0,
    'T', 'i', 'm', 'e', 'I', 'n', 'M', 'i', 'c', 'r', 'o', 0,
    'T', 'o', 'R', 'a', 'w', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'T', 'y', 'p', 'e', '_', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'U', 'n', 'a', 's', 's', 'o', 'c', 'i', 'a', 't', 'e', 0,
    'U', 'n', 'r', 'e', 's', 'e', 'r', 'v', 'e', 'I', 'd', 0,
    'U', 'n', 's', 'e', 'l', 'e', 'c', 't', 'A', 'l', 'l', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'L', 'a', 'b', 'e', 'l', 0,
    'W', 'A', 'N', 'T', 'S', '_', 'C', 'H', 'A', 'R', 'S', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'P', 'I', 'T', 'A', 'L', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'M', 'M', 'A', 'N', 'D', 0,
    'W', 'X', 'K', '_', 'C', 'O', 'N', 'T', 'R', 'O', 'L', 0,
    'W', 'X', 'K', '_', 'D', 'E', 'C', 'I', 'M', 'A', 'L', 0,
    'W', 'X', 'K', '_', 'E', 'X', 'E', 'C', 'U', 'T', 'E', 0,
    'W', 'X', 'K', '_', 'L', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'W', 'X', 'K', '_', 'M', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'L', 'O', 'C', 'K', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '0', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '1', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '2', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '3', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '4', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '5', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '6', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '7', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '8', 0,
    'W', 'X', 'K', '_', 'N', 'U', 'M', 'P', 'A', 'D', '9', 0,
    'W', 'X', 'K', '_', 'R', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'W', 'a', 'r', 'p', 'P', 'o', 'i', 'n', 't', 'e', 'r', 0,
    'Y', 'E', 'S', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    '_', '_', 'd', 'e', 'l', 'a', 't', 't', 'r', '_', '_', 0,
    '_', '_', 'g', 'e', 't', 'a', 't', 't', 'r', '_', '_', 0,
    '_', '_', 'g', 'e', 't', 'i', 't', 'e', 'm', '_', '_', 0,
    '_', '_', 'n', 'o', 'n', 'z', 'e', 'r', 'o', '_', '_', 0,
    '_', '_', 's', 'e', 't', 'a', 't', 't', 'r', '_', '_', 0,
    '_', '_', 't', 'r', 'u', 'e', 'd', 'i', 'v', '_', '_', 0,
    'a', 'S', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    'a', 'n', 't', 'i', 'A', 'l', 'i', 'a', 's', 'e', 'd', 0,
    'a', 'u', 't', 'o', 'P', 'a', 'i', 'n', 't', 'D', 'C', 0,
    'b', 'e', 'g', 'i', 'n', 'P', 'o', 'i', 'n', 't', 's', 0,
    'b', 'm', 'p', 'D', 'i', 's', 'a', 'b', 'l', 'e', 'd', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 'O', 't', 'h', 'e', 'r', 0,
    'b', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    'c', 'h', 'i', 'l', 'd', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 'T', 'y', 'p', 'e', 0,
    'c', 'o', 'm', 'p', 'a', 'r', 'e', 'W', 'i', 't', 'h', 0,
    'c', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 's', 0,
    'c', 'o', 'n', 't', 'r', 'o', 'l', 'D', 'o', 'w', 'n', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'C', 'o', 'p', 'y', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'F', 'i', 'l', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'a', 't', 'h', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'e', 'x', 'c', 'l', 'u', 'd', 'e', 'I', 't', 'e', 'm', 0,
    'f', 'a', 'c', 't', 'o', 'r', '_', 'b', 'l', 'u', 'e', 0,
    'f', 'i', 'l', 't', 'e', 'r', 'I', 'n', 'd', 'e', 'x', 0,
    'h', 'a', 's', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 0,
    'h', 'i', 'd', 'e', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'i', 'n', 't', 'e', 'r', 'a', 'c', 't', 'i', 'v', 'e', 0,
    'l', 'i', 's', 't', 'O', 'f', 'B', 'y', 't', 'e', 's', 0,
    'l', 'o', 'g', 'i', 'c', 'a', 'l', 'F', 'u', 'n', 'c', 0,
    'm', '_', 'l', 'a', 'b', 'e', 'l', 'F', 'o', 'n', 't', 0,
    'm', '_', 'l', 'a', 'b', 'e', 'l', 'T', 'e', 'x', 't', 0,
    'm', 'a', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'm', 'i', 'l', 'l', 'i', 's', 'e', 'c', 'o', 'n', 'd', 0,
    'o', 'r', 'i', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'o', 'r', 'i', 'g', 'S', 't', 'r', 'i', 'n', 'g', '2', 0,
    'p', 'r', 'i', 'n', 't', 'e', 'r', 'N', 'a', 'm', 'e', 0,
    'r', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 'l', 'y', 0,
    'r', 'e', 'o', 'r', 'd', 'e', 'r', 'a', 'b', 'l', 'e', 0,
    'r', 'i', 'g', 'h', 't', 'I', 's', 'D', 'o', 'w', 'n', 0,
    's', 'e', 'l', 'e', 'c', 't', 'F', 'l', 'a', 'g', 's', 0,
    's', 'e', 't', 'f', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 0,
    's', 'h', 'o', 'w', 'T', 'i', 'm', 'e', 'o', 'u', 't', 0,
    's', 'i', 'z', 'e', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    't', 'i', 'm', 'e', 's', 't', 'a', 'm', 'p', 'M', 'S', 0,
    't', 'i', 't', 'l', 'e', 'F', 'o', 'r', 'm', 'a', 't', 0,
    't', 'o', 't', 'a', 'l', 'C', 'o', 'p', 'i', 'e', 's', 0,
    't', 'r', 'a', 'n', 's', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'w', 'a', 'r', 'n', 'i', 'n', 'g', 'T', 'y', 'p', 'e', 0,
    'w', 'i', 'd', 't', 'h', 'f', 'a', 'c', 't', 'o', 'r', 0,
    'w', 'i', 'n', 'T', 'o', 'S', 'c', 'r', 'o', 'l', 'l', 0,
    'w', 'x', 'A', 'c', 'c', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'A', 'c', 'c', 'S', 't', 'a', 't', 'u', 's', 0,
    'w', 'x', 'A', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'w', 'x', 'A', 'n', 'y', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'A', 'p', 'p', 'T', 'r', 'a', 'i', 't', 's', 0,
    'w', 'x', 'B', 'r', 'u', 's', 'h', 'L', 'i', 's', 't', 0,
    'w', 'x', 'C', 'l', 'a', 's', 's', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'C', 'l', 'i', 'p', 'b', 'o', 'a', 'r', 'd', 0,
    'w', 'x', 'C', 'o', 'm', 'b', 'o', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'D', 'C', 'C', 'l', 'i', 'p', 'p', 'e', 'r', 0,
    'w', 'x', 'D', 'C', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    'w', 'x', 'D', 'i', 'r', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'D', 'r', 'a', 'g', 'I', 'm', 'a', 'g', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'P', 'A', 'I', 'N', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'I', 'M', 'E', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'V', 'L', 'B', 'O', 'X', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'G', 'D', 'I', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'G', 'r', 'i', 'd', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'H', 'e', 'l', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'I', 'd', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'w', 'x', 'I', 'd', 'l', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'w', 'x', 'K', 'i', 'l', 'l', 'E', 'r', 'r', 'o', 'r', 0,
    'w', 'x', 'K', 'i', 'l', 'l', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'L', 'i', 's', 't', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'L', 'o', 'g', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'w', 'x', 'L', 'o', 'g', 'S', 't', 'd', 'e', 'r', 'r', 0,
    'w', 'x', 'L', 'o', 'g', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'M', 'i', 'n', 'i', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'P', 'a', 'p', 'e', 'r', 'S', 'i', 'z', 'e', 0,
    'w', 'x', 'P', 'o', 'i', 'n', 't', 'L', 'i', 's', 't', 0,
    'w', 'x', 'P', 'o', 'w', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'e', 'r', 'D', 'C', 0,
    'w', 'x', 'R', 'e', 'a', 'l', 'P', 'o', 'i', 'n', 't', 0,
    'w', 'x', 'S', 'V', 'G', 'F', 'i', 'l', 'e', 'D', 'C', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'B', 'a', 'r', 0,
    'w', 'x', 'S', 'h', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'r', 'I', 't', 'e', 'm', 0,
    'w', 'x', 'S', 'p', 'i', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 'p', 'l', 'i', 't', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'S', 't', 'a', 't', 'i', 'c', 'B', 'o', 'x', 0,
    'w', 'x', 'S', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    'w', 'x', 'S', 't', 'o', 'p', 'W', 'a', 't', 'c', 'h', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'E', 'n', 't', 'r', 'y', 0,
    'w', 'x', 'T', 'i', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'T', 'r', 'a', 'c', 'k', 'a', 'b', 'l', 'e', 0,
    'w', 'x', 'T', 'r', 'e', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'U', 'L', 'o', 'n', 'g', 'L', 'o', 'n', 'g', 0,
    'w', 'x', 'V', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'w', 'x', 'V', 'i', 'd', 'e', 'o', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'W', 'r', 'a', 'p', 'S', 'i', 'z', 'e', 'r', 0,
    'A', 'C', 'C', 'E', 'L', '_', 'C', 'T', 'R', 'L', 0,
    'A', 'N', 'D', '_', 'I', 'N', 'V', 'E', 'R', 'T', 0,
    'A', 'R', 'T', '_', 'B', 'U', 'T', 'T', 'O', 'N', 0,
    'A', 'R', 'T', '_', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'A', 'R', 'T', '_', 'F', 'L', 'O', 'P', 'P', 'Y', 0,
    'A', 'R', 'T', '_', 'F', 'O', 'L', 'D', 'E', 'R', 0,
    'A', 'd', 'd', 'C', 'a', 't', 'a', 'l', 'o', 'g', 0,
    'A', 'd', 'd', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'A', 'd', 'd', 'E', 'l', 'l', 'i', 'p', 's', 'e', 0,
    'A', 'd', 'd', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'A', 'd', 'd', 'S', 'u', 'b', 'P', 'a', 'g', 'e', 0,
    'A', 'l', 'p', 'h', 'a', 'B', 'l', 'e', 'n', 'd', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'I', 't', 'e', 'm', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 'T', 'e', 'x', 't', 0,
    'A', 'u', 'x', '1', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'A', 'u', 'x', '1', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'A', 'u', 'x', '2', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'A', 'u', 'x', '2', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'B', 'I', 'T', 'N', 'E', 'S', 'S', '_', '3', '2', 0,
    'B', 'I', 'T', 'N', 'E', 'S', 'S', '_', '6', '4', 0,
    'B', 'K', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'B', 'L', 'U', 'E', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'C', 'Y', 'A', 'N', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'G', 'R', 'E', 'Y', 0,
    'B', 'e', 'g', 'i', 'n', 'L', 'a', 'y', 'e', 'r', 0,
    'B', 'o', 'r', 'd', 'e', 'r', 'l', 'e', 's', 's', 0,
    'B', 'u', 't', 't', 'o', 'n', 'D', 'o', 'w', 'n', 0,
    'C', 'H', 'B', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'C', 'H', 'K', '_', '2', 'S', 'T', 'A', 'T', 'E', 0,
    'C', 'H', 'K', '_', '3', 'S', 'T', 'A', 'T', 'E', 0,
    'C', 'O', 'L', 'O', 'U', 'R', '_', 'R', 'E', 'D', 0,
    'C', 'O', 'L', '_', 'H', 'I', 'D', 'D', 'E', 'N', 0,
    'C', 'U', 'R', 'S', 'O', 'R', '_', 'M', 'A', 'X', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'F', 'l', 'a', 'g', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'M', 'o', 'd', 'e', 0,
    'C', 'l', 'e', 'a', 'r', 'A', 'l', 'p', 'h', 'a', 0,
    'C', 'l', 'e', 'a', 'r', 'T', 'i', 'c', 'k', 's', 0,
    'C', 'l', 'e', 'a', 'r', 'T', 'o', 'o', 'l', 's', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'B', 'a', 's', 'e', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'P', 'a', 't', 'h', 0,
    'C', 'r', 'e', 'a', 't', 'e', 'T', 'o', 'o', 'l', 0,
    'D', 'F', '_', 'I', 'N', 'V', 'A', 'L', 'I', 'D', 0,
    'D', 'F', '_', 'O', 'E', 'M', 'T', 'E', 'X', 'T', 0,
    'D', 'F', '_', 'P', 'A', 'L', 'E', 'T', 'T', 'E', 0,
    'D', 'F', '_', 'P', 'E', 'N', 'D', 'A', 'T', 'A', 0,
    'D', 'F', '_', 'P', 'R', 'I', 'V', 'A', 'T', 'E', 0,
    'D', 'I', 'R', 'P', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'I', 't', 'e', 'm', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'P', 'a', 'g', 'e', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'T', 'o', 'o', 'l', 0,
    'D', 'i', 'r', '_', 'V', 'i', 'd', 'e', 'o', 's', 0,
    'D', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 0,
    'D', 'o', 'D', 'r', 'a', 'g', 'D', 'r', 'o', 'p', 0,
    'D', 'o', 'G', 'i', 'v', 'e', 'H', 'e', 'l', 'p', 0,
    'D', 'r', 'a', 'g', 'C', 'a', 'n', 'c', 'e', 'l', 0,
    'D', 'r', 'a', 'w', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'D', 'r', 'a', 'w', 'C', 'i', 'r', 'c', 'l', 'e', 0,
    'D', 'r', 'a', 'w', 'S', 'p', 'l', 'i', 'n', 'e', 0,
    'D', 'u', 'm', 'p', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'E', 'N', 'D', 'I', 'A', 'N', '_', 'B', 'I', 'G', 0,
    'E', 'N', 'D', 'I', 'A', 'N', '_', 'M', 'A', 'X', 0,
    'E', 'N', 'D', 'I', 'A', 'N', '_', 'P', 'D', 'P', 0,
    'E', 'X', 'E', 'C', '_', 'A', 'S', 'Y', 'N', 'C', 0,
    'E', 'X', 'E', 'C', '_', 'B', 'L', 'O', 'C', 'K', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'I', 't', 'e', 'm', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'P', 'a', 'g', 'e', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'T', 'o', 'o', 'l', 0,
    'E', 'v', 'e', 'n', 't', '_', 'S', 'k', 'i', 'p', 0,
    'E', 'x', 'p', 'a', 'n', 'd', 'N', 'o', 'd', 'e', 0,
    'E', 'x', 'p', 'a', 'n', 'd', 'P', 'a', 't', 'h', 0,
    'F', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', 0,
    'F', 'O', 'N', 'T', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'F', 'O', 'N', 'T', '_', 'S', 'W', 'I', 'S', 'S', 0,
    'F', 'i', 'n', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'F', 'o', 'r', 'c', 'e', 'U', 'p', 'p', 'e', 'r', 0,
    'F', 'o', 'r', 'm', 'a', 't', 'D', 'a', 't', 'e', 0,
    'F', 'o', 'r', 'm', 'a', 't', 'T', 'i', 'm', 'e', 0,
    'F', 'r', 'o', 'm', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'A', 'p', 'p', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'B', 'i', 't', 'n', 'e', 's', 's', 0,
    'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 's', 0,
    'G', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'T', 'o', 0,
    'G', 'e', 't', 'C', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'a', 'p', 't', 'u', 'r', 'e', 0,
    'G', 'e', 't', 'C', 'e', 'n', 't', 'u', 'r', 'y', 0,
    'G', 'e', 't', 'C', 'h', 'e', 'c', 'k', 'e', 'd', 0,
    'G', 'e', 't', 'C', 'l', 'i', 'p', 'B', 'o', 'x', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'l', 'a', 't', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'l', 's', 'p', 'a', 'n', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'G', 'e', 't', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'G', 'e', 't', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'G', 'e', 't', 'C', 'o', 'u', 'n', 't', 'r', 'y', 0,
    'G', 'e', 't', 'D', 'I', 'P', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'G', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'G', 'e', 't', 'G', 'B', 'S', 'i', 'z', 'e', 'r', 0,
    'G', 'e', 't', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 0,
    'G', 'e', 't', 'H', 'o', 'm', 'e', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'H', 'o', 't', 'S', 'p', 'o', 't', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 'F', 'o', 'r', 0,
    'G', 'e', 't', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 'T', 'o', 'p', 0,
    'G', 'e', 't', 'M', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'G', 'e', 't', 'M', 'a', 's', 'k', 'R', 'e', 'd', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'G', 'e', 't', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'u', 't', 'e', 's', 0,
    'G', 'e', 't', 'N', 'e', 'w', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'N', 'o', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'O', 'K', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'S', 'i', 'z', 'e', 0,
    'G', 'e', 't', 'O', 'u', 't', 'C', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'O', 'u', 't', 'c', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'l', 'e', 't', 't', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'p', 'e', 'r', 'I', 'd', 0,
    'G', 'e', 't', 'P', 'e', 'r', 'c', 'e', 'n', 't', 0,
    'G', 'e', 't', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'G', 'e', 't', 'P', 'r', 'i', 'n', 't', 'D', 'C', 0,
    'G', 'e', 't', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'G', 'e', 't', 'R', 'a', 't', 'a', 'D', 'i', 'e', 0,
    'G', 'e', 't', 'R', 'e', 'f', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'R', 'o', 'u', 'n', 'd', 'e', 'd', 0,
    'G', 'e', 't', 'R', 'o', 'w', 's', 'p', 'a', 'n', 0,
    'G', 'e', 't', 'S', 'e', 'c', 'o', 'n', 'd', 's', 0,
    'G', 'e', 't', 'S', 'e', 't', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'S', 'k', 'i', 'p', 'p', 'e', 'd', 0,
    'G', 'e', 't', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'S', 't', 'i', 'p', 'p', 'l', 'e', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 's', 0,
    'G', 'e', 't', 'S', 'u', 'b', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'S', 'y', 's', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'T', 'e', 'm', 'p', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'T', 'i', 'm', 'e', 'N', 'o', 'w', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'P', 'o', 's', 0,
    'G', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'D', 'i', 'r', 0,
    'G', 'e', 't', 'V', 'e', 'r', 'b', 'o', 's', 'e', 0,
    'G', 'e', 't', 'V', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', '1', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', '2', 0,
    'G', 'e', 't', 'Y', 'e', 'a', 'r', 'D', 'a', 'y', 0,
    'H', 'T', '_', 'N', 'O', 'W', 'H', 'E', 'R', 'E', 0,
    'H', 'a', 's', 'C', 'a', 'p', 't', 'u', 'r', 'e', 0,
    'H', 'a', 's', 'C', 'o', 'l', 'o', 'u', 'r', 's', 0,
    'H', 'a', 's', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'H', 'i', 'd', 'e', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'H', 'i', 't', 'T', 'e', 's', 't', 'P', 'o', 's', 0,
    'I', 'C', 'O', 'N', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'I', 'D', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', 0,
    'I', 'D', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'I', 'D', '_', 'E', 'X', 'E', 'C', 'U', 'T', 'E', 0,
    'I', 'D', '_', 'F', 'O', 'R', 'W', 'A', 'R', 'D', 0,
    'I', 'D', '_', 'H', 'I', 'G', 'H', 'E', 'S', 'T', 0,
    'I', 'D', '_', 'J', 'U', 'M', 'P', '_', 'T', 'O', 0,
    'I', 'D', '_', 'N', 'E', 'T', 'W', 'O', 'R', 'K', 0,
    'I', 'D', '_', 'N', 'O', 'T', 'O', 'A', 'L', 'L', 0,
    'I', 'D', '_', 'P', 'R', 'E', 'V', 'I', 'E', 'W', 0,
    'I', 'D', '_', 'R', 'E', 'F', 'R', 'E', 'S', 'H', 0,
    'I', 'D', '_', 'R', 'E', 'P', 'L', 'A', 'C', 'E', 0,
    'I', 'D', '_', 'Z', 'O', 'O', 'M', '_', 'I', 'N', 0,
    'I', 'T', 'E', 'M', '_', 'C', 'H', 'E', 'C', 'K', 0,
    'I', 'T', 'E', 'M', '_', 'R', 'A', 'D', 'I', 'O', 0,
    'I', 'n', 'i', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'I', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 0,
    'I', 'n', 's', 'e', 'r', 't', 'I', 't', 'e', 'm', 0,
    'I', 'n', 's', 'e', 'r', 't', 'P', 'a', 'g', 'e', 0,
    'I', 'n', 's', 'e', 'r', 't', 'T', 'o', 'o', 'l', 0,
    'I', 'n', 't', 'e', 'r', 's', 'e', 'c', 't', 's', 0,
    'I', 's', 'A', 't', 't', 'a', 'c', 'h', 'e', 'd', 0,
    'I', 's', 'B', 'a', 'c', 'k', 'w', 'a', 'r', 'd', 0,
    'I', 's', 'E', 'd', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'E', 'x', 'p', 'a', 'n', 'd', 'e', 'd', 0,
    'I', 's', 'I', 'c', 'o', 'n', 'i', 'z', 'e', 'd', 0,
    'I', 's', 'I', 'd', 'e', 'n', 't', 'i', 't', 'y', 0,
    'I', 's', 'I', 'n', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'I', 's', 'L', 'e', 'a', 'p', 'Y', 'e', 'a', 'r', 0,
    'I', 's', 'N', 'e', 'g', 'a', 't', 'i', 'v', 'e', 0,
    'I', 's', 'P', 'o', 's', 'i', 't', 'i', 'v', 'e', 0,
    'I', 's', 'R', 'e', 't', 'a', 'i', 'n', 'e', 'd', 0,
    'I', 's', 'S', 'a', 'm', 'e', 'D', 'a', 't', 'e', 0,
    'I', 's', 'S', 'a', 'm', 'e', 'T', 'i', 'm', 'e', 0,
    'I', 's', 'S', 'e', 'e', 'k', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'S', 'e', 'l', 'e', 'c', 't', 'e', 'd', 0,
    'I', 's', 'S', 'o', 'r', 't', 'a', 'b', 'l', 'e', 0,
    'I', 's', 'T', 'o', 'p', 'L', 'e', 'v', 'e', 'l', 0,
    'I', 's', 'U', 'n', 'l', 'i', 'n', 'k', 'e', 'd', 0,
    'I', 's', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 0,
    'I', 's', 'Y', 'i', 'e', 'l', 'd', 'i', 'n', 'g', 0,
    'J', 'O', 'I', 'N', '_', 'B', 'E', 'V', 'E', 'L', 0,
    'J', 'O', 'I', 'N', '_', 'M', 'I', 'T', 'E', 'R', 0,
    'J', 'O', 'I', 'N', '_', 'R', 'O', 'U', 'N', 'D', 0,
    'K', 'I', 'L', 'L', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'L', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'L', 'B', '_', 'H', 'S', 'C', 'R', 'O', 'L', 'L', 0,
    'L', 'C', '_', 'V', 'I', 'R', 'T', 'U', 'A', 'L', 0,
    'L', 'O', 'G', '_', 'S', 't', 'a', 't', 'u', 's', 0,
    'L', 'a', 'z', 'y', 'C', 'r', 'e', 'a', 't', 'e', 0,
    'L', 'e', 'f', 't', 'D', 'C', 'l', 'i', 'c', 'k', 0,
    'L', 'e', 'f', 't', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'L', 'o', 'g', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 0,
    'L', 'o', 'g', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'L', 'o', 'g', 'V', 'e', 'r', 'b', 'o', 's', 'e', 0,
    'L', 'o', 'g', 'W', 'a', 'r', 'n', 'i', 'n', 'g', 0,
    'L', 'o', 'w', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'M', 'a', 'c', 'H', 'i', 'd', 'e', 'A', 'p', 'p', 0,
    'M', 'a', 'c', 'N', 'e', 'w', 'F', 'i', 'l', 'e', 0,
    'M', 'a', 'c', 'O', 'p', 'e', 'n', 'U', 'R', 'L', 0,
    'M', 'a', 'k', 'e', 'I', 't', 'a', 'l', 'i', 'c', 0,
    'M', 'a', 'k', 'e', 'L', 'a', 'r', 'g', 'e', 'r', 0,
    'M', 'i', 'c', 'r', 'o', 'S', 'l', 'e', 'e', 'p', 0,
    'M', 'i', 'l', 'l', 'i', 'S', 'l', 'e', 'e', 'p', 0,
    'M', 'o', 'u', 's', 'e', 'C', 'l', 'i', 'c', 'k', 0,
    'M', 'o', 'v', 'e', 'L', 'e', 'f', 't', 'T', 'o', 0,
    'N', 'B', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'N', 'O', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'N', 'U', 'M', '_', 'C', 'U', 'S', 'T', 'O', 'M', 0,
    'N', 'a', 'v', 'i', 'g', 'a', 't', 'e', 'I', 'n', 0,
    'N', 'u', 'l', 'l', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'N', 'u', 'l', 'l', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'N', 'u', 'l', 'l', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'O', 'B', 'J', 'I', 'D', '_', 'M', 'E', 'N', 'U', 0,
    'O', 'K', '_', 'D', 'E', 'F', 'A', 'U', 'L', 'T', 0,
    'O', 'R', '_', 'R', 'E', 'V', 'E', 'R', 'S', 'E', 0,
    'O', 'S', '_', 'U', 'N', 'K', 'N', 'O', 'W', 'N', 0,
    'O', 'S', '_', 'W', 'I', 'N', 'D', 'O', 'W', 'S', 0,
    'O', 'n', 'D', 'r', 'a', 'g', 'O', 'v', 'e', 'r', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 'I', 't', 'e', 'm', 0,
    'O', 'n', 'D', 'r', 'o', 'p', 'T', 'e', 'x', 't', 0,
    'O', 'n', 'F', 'a', 'c', 'e', 'n', 'a', 'm', 'e', 0,
    'P', 'A', 'P', 'E', 'R', '_', '9', 'X', '1', '1', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'N', 'O', 'N', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'N', 'O', 'T', 'E', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', '1', '6', 'K', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'P', '3', '2', 'K', 0,
    'P', 'E', 'N', '_', 'Y', 'E', 'L', 'L', 'O', 'W', 0,
    'P', 'O', 'R', 'T', '_', 'C', 'O', 'C', 'O', 'A', 0,
    'P', 'O', 'R', 'T', '_', 'M', 'O', 'T', 'I', 'F', 0,
    'P', 'a', 'r', 't', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'Q', 'u', 'e', 'u', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'R', 'e', 'a', 'd', 'D', 'o', 'u', 'b', 'l', 'e', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'A', 'l', 'l', 0,
    'R', 'e', 'f', 'r', 'e', 's', 'h', 'R', 'o', 'w', 0,
    'R', 'e', 'g', 'i', 's', 't', 'e', 'r', 'I', 'd', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'F', 'i', 'l', 'e', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'H', 'e', 'l', 'p', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'M', 'e', 'n', 'u', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'P', 'a', 'g', 'e', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'T', 'o', 'o', 'l', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'T', 'r', 'e', 'e', 0,
    'R', 'e', 'n', 'd', 'e', 'r', 'P', 'a', 'g', 'e', 0,
    'R', 'e', 's', 'e', 't', 'A', 'l', 'p', 'h', 'a', 0,
    'R', 'e', 's', 'e', 't', 'I', 'f', 'W', 'i', 'n', 0,
    'S', 'I', 'Z', 'E', '_', 'F', 'O', 'R', 'C', 'E', 0,
    'S', 'L', '_', 'I', 'N', 'V', 'E', 'R', 'S', 'E', 0,
    'S', 'R', 'C', '_', 'I', 'N', 'V', 'E', 'R', 'T', 0,
    'S', 'T', 'R', 'E', 'A', 'M', '_', 'E', 'O', 'F', 0,
    'S', 'Y', 'S', '_', 'D', 'R', 'A', 'G', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'D', 'R', 'A', 'G', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'E', 'D', 'G', 'E', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'E', 'D', 'G', 'E', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'I', 'C', 'O', 'N', '_', 'X', 0,
    'S', 'Y', 'S', '_', 'I', 'C', 'O', 'N', '_', 'Y', 0,
    'S', 'Y', 'S', '_', 'M', 'E', 'N', 'U', '_', 'Y', 0,
    'S', 'c', 'a', 'l', 'e', '_', 'F', 'i', 'l', 'l', 0,
    'S', 'c', 'a', 'l', 'e', '_', 'N', 'o', 'n', 'e', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'L', 'i', 's', 't', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'R', 'o', 'w', 's', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'I', 't', 'e', 'm', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'N', 'o', 'n', 'e', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'P', 'a', 't', 'h', 0,
    'S', 'e', 't', 'A', 'l', 't', 'D', 'o', 'w', 'n', 0,
    'S', 'e', 't', 'A', 'p', 'p', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'A', 'u', 't', 'o', 'P', 'o', 'p', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 's', 0,
    'S', 'e', 't', 'B', 'i', 't', 'n', 'e', 's', 's', 0,
    'S', 'e', 't', 'C', 'L', 'o', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'C', 'a', 'c', 'h', 'e', 'T', 'o', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'V', 'e', 't', 'o', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'l', 'a', 't', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'l', 's', 'p', 'a', 'n', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'S', 'e', 't', 'C', 'o', 'u', 'n', 't', 'r', 'y', 0,
    'S', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'S', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 's', 0,
    'S', 'e', 't', 'F', 'r', 'o', 'm', 'D', 'O', 'S', 0,
    'S', 'e', 't', 'F', 'r', 'o', 'm', 'T', 'a', 'b', 0,
    'S', 'e', 't', 'G', 'B', 'S', 'i', 'z', 'e', 'r', 0,
    'S', 'e', 't', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'L', 'e', 'f', 't', 'T', 'o', 'p', 0,
    'S', 'e', 't', 'M', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 's', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'M', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'S', 'e', 't', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'S', 'e', 't', 'O', 'K', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'O', 'w', 'n', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'P', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'P', 'a', 'l', 'e', 't', 't', 'e', 0,
    'S', 'e', 't', 'P', 'a', 'p', 'e', 'r', 'I', 'd', 0,
    'S', 'e', 't', 'Q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'S', 'e', 't', 'R', 'e', 'f', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'R', 'o', 'w', 's', 'p', 'a', 'n', 0,
    'S', 'e', 't', 'S', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'S', 't', 'i', 'p', 'p', 'l', 'e', 0,
    'S', 'e', 't', 'S', 'u', 'b', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'S', 'e', 't', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'S', 'e', 't', 'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'S', 'e', 't', 'V', 'e', 'r', 'b', 'o', 's', 'e', 0,
    'S', 'h', 'o', 'w', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'S', 'h', 'o', 'w', 'H', 'i', 'd', 'd', 'e', 'n', 0,
    'S', 't', 'r', 'i', 'p', '_', 'M', 'e', 'n', 'u', 0,
    'S', 't', 'r', 'o', 'k', 'e', 'L', 'i', 'n', 'e', 0,
    'S', 't', 'r', 'o', 'k', 'e', 'P', 'a', 't', 'h', 0,
    'T', 'B', '_', 'N', 'O', 'A', 'L', 'I', 'G', 'N', 0,
    'T', 'B', '_', 'N', 'O', 'I', 'C', 'O', 'N', 'S', 0,
    'T', 'O', 'U', 'C', 'H', '_', 'N', 'O', 'N', 'E', 0,
    'T', 'e', 'x', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'T', 'o', 'T', 'i', 'm', 'e', 'z', 'o', 'n', 'e', 0,
    'T', 'o', 'g', 'g', 'l', 'e', 'F', 'l', 'a', 'g', 0,
    'T', 'o', 'g', 'g', 'l', 'e', 'T', 'o', 'o', 'l', 0,
    'T', 'y', 'p', 'e', '_', 'F', 'l', 'o', 'a', 't', 0,
    'U', 'I', 'N', 'T', '1', '6', '_', 'M', 'A', 'X', 0,
    'U', 'I', 'N', 'T', '3', '2', '_', 'M', 'A', 'X', 0,
    'U', 'I', 'N', 'T', '6', '4', '_', 'M', 'A', 'X', 0,
    'U', 'n', 'r', 'e', 'g', 'i', 's', 't', 'e', 'r', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'S', 'i', 'z', 'e', 0,
    'U', 'p', 'd', 'a', 't', 'e', 'T', 'e', 'x', 't', 0,
    'U', 's', 'e', 'A', 'p', 'p', 'I', 'n', 'f', 'o', 0,
    'W', 'X', 'K', '_', 'C', 'A', 'N', 'C', 'E', 'L', 0,
    'W', 'X', 'K', '_', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'W', 'X', 'K', '_', 'D', 'I', 'V', 'I', 'D', 'E', 0,
    'W', 'X', 'K', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
    'W', 'X', 'K', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
    'W', 'X', 'K', '_', 'P', 'A', 'G', 'E', 'U', 'P', 0,
    'W', 'X', 'K', '_', 'R', 'E', 'T', 'U', 'R', 'N', 0,
    'W', 'X', 'K', '_', 'S', 'C', 'R', 'O', 'L', 'L', 0,
    'W', 'X', 'K', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
    'W', 'a', 'k', 'e', 'U', 'p', 'I', 'd', 'l', 'e', 0,
    'W', 'a', 's', 'S', 'k', 'i', 'p', 'p', 'e', 'd', 0,
    'W', 'r', 'i', 't', 'e', 'F', 'l', 'o', 'a', 't', 0,
    'a', 'c', 'c', 'e', 's', 's', 'i', 'b', 'l', 'e', 0,
    'a', 'c', 't', 'i', 'o', 'n', 'N', 'a', 'm', 'e', 0,
    'a', 'l', 'p', 'h', 'a', 'B', 'l', 'e', 'n', 'd', 0,
    'a', 'n', 'c', 'h', 'o', 'r', 'S', 'i', 'd', 'e', 0,
    'a', 'u', 't', 'o', 'L', 'a', 'y', 'o', 'u', 't', 0,
    'a', 'u', 'x', '1', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'a', 'u', 'x', '2', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'b', 'R', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 0,
    'b', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'b', 'i', 'n', 'a', 'r', 'y', 'd', 'a', 't', 'a', 0,
    'b', 'l', 'u', 'r', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'b', 'm', 'p', 'P', 'r', 'e', 's', 's', 'e', 'd', 0,
    'b', 'o', 't', 't', 'o', 'm', 'L', 'e', 'f', 't', 0,
    'b', 'r', 'i', 'g', 'h', 't', 'n', 'e', 's', 's', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'c', 'h', 'i', 'l', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'c', 'l', 'i', 'e', 'n', 't', 'D', 'a', 't', 'a', 0,
    'c', 'o', 'l', 'o', 'u', 'r', 'N', 'a', 'm', 'e', 0,
    'c', 'u', 'r', 's', 'o', 'r', 'N', 'a', 'm', 'e', 0,
    'c', 'u', 's', 't', 'o', 'm', 'i', 'z', 'e', 'r', 0,
    'd', 'a', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'D', 'i', 'r', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'V', 'a', 'l', 0,
    'd', 'e', 's', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'd', 'i', 'a', 'l', 'o', 'g', 'D', 'a', 't', 'a', 0,
    'e', 'v', 'e', 'n', 't', 's', 'M', 'a', 's', 'k', 0,
    'e', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'f', 'a', 'c', 't', 'o', 'r', '_', 'r', 'e', 'd', 0,
    'f', 'i', 'l', 'l', '_', 's', 't', 'y', 'l', 'e', 0,
    'f', 'o', 'n', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'f', 'o', 'o', 't', 'e', 'r', 'T', 'e', 'x', 't', 0,
    'f', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'f', 'o', 'r', 'm', 'a', 't', 'N', 'a', 'm', 'e', 0,
    'f', 'r', 'o', 'm', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'f', 'u', 'l', 'l', 'S', 'c', 'r', 'e', 'e', 'n', 0,
    'f', 'u', 'l', 'l', 's', 'c', 'r', 'e', 'e', 'n', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'L', 'i', 'n', 'e', 0,
    'h', 'e', 'l', 'p', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'h', 'i', 'd', 'e', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'h', 's', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'i', 'c', 'o', 'n', 'B', 'u', 'n', 'd', 'l', 'e', 0,
    'i', 'm', 'a', 'g', 'e', 'I', 'n', 'd', 'e', 'x', 0,
    'i', 'n', 'd', 'e', 'x', 'A', 'c', 'c', 'e', 'l', 0,
    'i', 't', 'e', 'm', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'j', 'o', 'i', 'n', '_', 's', 't', 'y', 'l', 'e', 0,
    'l', 'e', 'f', 't', 'I', 's', 'D', 'o', 'w', 'n', 0,
    'l', 'o', 'g', 'g', 'i', 'n', 'g', 'O', 'f', 'f', 0,
    'm', 'a', 's', 'k', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'm', 'e', 'n', 'u', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'm', 'e', 't', 'a', 'F', 'i', 'l', 'e', 'D', 'C', 0,
    'n', 'D', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'n', 'a', 't', 'i', 'v', 'e', 'I', 'n', 'f', 'o', 0,
    'n', 'e', 'w', '_', 'h', 'e', 'i', 'g', 'h', 't', 0,
    'o', 'b', 'j', 'e', 'c', 't', 'T', 'y', 'p', 'e', 0,
    'o', 'r', 'i', 'g', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'p', 'C', 'o', 'n', 't', 'a', 'i', 'n', 'e', 'r', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'M', 'e', 'n', 'u', 0,
    'p', 'o', 'i', 'n', 't', '_', 's', 'i', 'z', 'e', 0,
    'p', 'r', 'e', 'f', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'p', 'r', 'o', 'p', 'o', 'r', 't', 'i', 'o', 'n', 0,
    'r', 'a', 'w', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    's', 'a', 't', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 's', 0,
    's', 'e', 'p', 'a', 'r', 'a', 't', 'i', 'o', 'n', 0,
    's', 'h', 'o', 'w', 'E', 'f', 'f', 'e', 'c', 't', 0,
    's', 'i', 'z', 'e', 'N', 'e', 'e', 'd', 'e', 'd', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'R', 'e', 'c', 't', 0,
    's', 't', 'a', 'r', 't', 'A', 'n', 'g', 'l', 'e', 0,
    's', 't', 'r', 'e', 'a', 'm', '_', 'o', 'u', 't', 0,
    't', 'o', 't', 'a', 'l', 'P', 'a', 'g', 'e', 's', 0,
    'u', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 'd', 0,
    'v', 'e', 'n', 'd', 'o', 'r', 'N', 'a', 'm', 'e', 0,
    'v', 's', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'w', 'h', 'e', 'e', 'l', 'D', 'e', 'l', 't', 'a', 0,
    'w', 'i', 'd', 't', 'h', 'S', 'a', 's', 'h', '_', 0,
    'w', 'i', 'd', 't', 'h', 'T', 'i', 't', 'l', 'e', 0,
    'w', 'i', 'd', 't', 'h', 'T', 'o', 't', 'a', 'l', 0,
    'w', 'i', 'n', 'T', 'o', 'S', 'k', 'i', 'p', '2', 0,
    'w', 'x', 'A', 'r', 'r', 'a', 'y', 'I', 'n', 't', 0,
    'w', 'x', 'B', 'o', 'x', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'B', 'u', 's', 'y', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'C', 'h', 'e', 'c', 'k', 'B', 'o', 'x', 0,
    'w', 'x', 'C', 'l', 'i', 'e', 'n', 't', 'D', 'C', 0,
    'w', 'x', 'C', 'o', 'm', 'b', 'o', 'B', 'o', 'x', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'S', 'p', 'a', 'n', 0,
    'w', 'x', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'C', 'H', 'A', 'R', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'F', 'I', 'N', 'D', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'H', 'E', 'L', 'P', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'I', 'D', 'L', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'E', 'N', 'U', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'M', 'O', 'V', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'N', 'U', 'L', 'L', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'H', 'O', 'W', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'I', 'Z', 'E', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'S', 'P', 'I', 'N', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'E', 'X', 'T', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'T', 'O', 'O', 'L', 0,
    'w', 'x', 'F', 'S', 'W', 'F', 'l', 'a', 'g', 's', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'w', 'x', 'F', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'D', 'a', 't', 'a', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'F', 'l', 'a', 'g', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'F', 'o', 'n', 't', 'L', 'i', 's', 't', 0,
    'w', 'x', 'I', 'd', 'l', 'e', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'I', 't', 'e', 'm', 'A', 't', 't', 'r', 0,
    'w', 'x', 'I', 't', 'e', 'm', 'K', 'i', 'n', 'd', 0,
    'w', 'x', 'K', 'e', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'L', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'w', 'x', 'L', 'i', 's', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'L', 'i', 's', 't', 'I', 't', 'e', 'm', 0,
    'w', 'x', 'L', 'i', 's', 't', 'V', 'i', 'e', 'w', 0,
    'w', 'x', 'L', 'i', 's', 't', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'L', 'o', 'g', 'C', 'h', 'a', 'i', 'n', 0,
    'w', 'x', 'L', 'o', 'n', 'g', 'L', 'o', 'n', 'g', 0,
    'w', 'x', 'M', 'a', 't', 'r', 'i', 'x', '2', 'D', 0,
    'w', 'x', 'M', 'e', 'm', 'o', 'r', 'y', 'D', 'C', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'I', 't', 'e', 'm', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'L', 'i', 's', 't', 0,
    'w', 'x', 'M', 'e', 't', 'a', 'f', 'i', 'l', 'e', 0,
    'w', 'x', 'M', 'i', 'r', 'r', 'o', 'r', 'D', 'C', 0,
    'w', 'x', 'N', 'o', 't', 'e', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'P', 'e', 'n', 'S', 't', 'y', 'l', 'e', 0,
    'w', 'x', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'B', 'i', 'n', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'o', 'u', 't', 0,
    'w', 'x', 'P', 'y', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'w', 'x', 'R', 'a', 'd', 'i', 'o', 'B', 'o', 'x', 0,
    'w', 'x', 'S', 'c', 'r', 'e', 'e', 'n', 'D', 'C', 0,
    'w', 'x', 'S', 'c', 'r', 'o', 'l', 'l', 'e', 'd', 0,
    'w', 'x', 'S', 'e', 'e', 'k', 'M', 'o', 'd', 'e', 0,
    'w', 'x', 'S', 'p', 'i', 'n', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'S', 't', 'o', 'c', 'k', 'G', 'D', 'I', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'A', 't', 't', 'r', 0,
    'w', 'x', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'T', 'i', 'm', 'e', 'S', 'p', 'a', 'n', 0,
    'w', 'x', 'T', 'o', 'o', 'l', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'T', 'r', 'e', 'e', 'C', 't', 'r', 'l', 0,
    'w', 'x', 'T', 'r', 'e', 'e', 'b', 'o', 'o', 'k', 0,
    'w', 'x', 'U', 'p', 'd', 'a', 't', 'e', 'U', 'I', 0,
    'w', 'x', 'V', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 'D', 'C', 0,
    'x', 'L', 'e', 'f', 't', 'R', 'i', 'g', 'h', 't', 0,
    'x', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'y', 'S', 'c', 'r', 'o', 'l', 'l', 'i', 'n', 'g', 0,
    'z', 'o', 'o', 'm', 'F', 'a', 'c', 't', 'o', 'r', 0,
    'A', 'C', 'C', 'E', 'L', '_', 'A', 'L', 'T', 0,
    'A', 'C', 'C', 'E', 'L', '_', 'C', 'M', 'D', 0,
    'A', 'C', 'C', '_', 'F', 'A', 'L', 'S', 'E', 0,
    'A', 'L', 'I', 'G', 'N', '_', 'N', 'O', 'T', 0,
    'A', 'R', 'T', '_', 'C', 'D', 'R', 'O', 'M', 0,
    'A', 'R', 'T', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'A', 'R', 'T', '_', 'E', 'R', 'R', 'O', 'R', 0,
    'A', 'R', 'T', '_', 'G', 'O', '_', 'U', 'P', 0,
    'A', 'R', 'T', '_', 'M', 'I', 'N', 'U', 'S', 0,
    'A', 'R', 'T', '_', 'O', 'T', 'H', 'E', 'R', 0,
    'A', 'R', 'T', '_', 'P', 'A', 'S', 'T', 'E', 0,
    'A', 'R', 'T', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'A', 'd', 'd', 'B', 'u', 't', 't', 'o', 'n', 0,
    'A', 'd', 'd', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'A', 'd', 'd', 'C', 'i', 'r', 'c', 'l', 'e', 0,
    'A', 'd', 'd', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'A', 'd', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'A', 'd', 'd', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'A', 's', 's', 'o', 'c', 'i', 'a', 't', 'e', 0,
    'B', 'I', '_', 'E', 'X', 'P', 'A', 'N', 'D', 0,
    'B', 'K', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'B', 'M', 'P', '_', '2', '4', 'B', 'P', 'P', 0,
    'B', 'R', 'U', 'S', 'H', '_', 'R', 'E', 'D', 0,
    'B', 'U', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'B', 'U', '_', 'N', 'O', 'T', 'E', 'X', 'T', 0,
    'B', 'e', 'g', 'i', 'n', 'D', 'r', 'a', 'g', 0,
    'C', 'A', 'P', '_', 'R', 'O', 'U', 'N', 'D', 0,
    'C', 'B', '_', 'S', 'I', 'M', 'P', 'L', 'E', 0,
    'C', 'H', 'B', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'C', 'L', 'O', 'S', 'E', '_', 'B', 'O', 'X', 0,
    'C', 'a', 'n', 'S', 'c', 'r', 'o', 'l', 'l', 0,
    'C', 'a', 'n', 'U', 'p', 'd', 'a', 't', 'e', 0,
    'C', 'h', 'a', 'n', 'g', 'e', 'H', 'S', 'V', 0,
    'C', 'l', 'e', 'a', 'r', 'F', 'l', 'a', 'g', 0,
    'C', 'r', 'o', 's', 's', 'H', 'a', 'i', 'r', 0,
    'D', 'F', '_', 'B', 'I', 'T', 'M', 'A', 'P', 0,
    'D', 'F', '_', 'L', 'O', 'C', 'A', 'L', 'E', 0,
    'D', 'e', 'l', 'e', 't', 'e', 'A', 'l', 'l', 0,
    'D', 'i', 'r', '_', 'C', 'a', 'c', 'h', 'e', 0,
    'D', 'i', 'r', '_', 'M', 'u', 's', 'i', 'c', 0,
    'D', 'o', 'C', 'a', 'n', 'R', 'e', 'a', 'd', 0,
    'D', 'o', 'G', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'o', 'L', 'o', 'g', 'T', 'e', 'x', 't', 0,
    'D', 'o', 'S', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'D', 'r', 'a', 'g', 'E', 'r', 'r', 'o', 'r', 0,
    'D', 'r', 'a', 'w', 'G', 'a', 'u', 'g', 'e', 0,
    'D', 'r', 'a', 'w', 'L', 'a', 'b', 'e', 'l', 0,
    'D', 'r', 'a', 'w', 'L', 'i', 'n', 'e', 's', 0,
    'D', 'r', 'a', 'w', 'P', 'o', 'i', 'n', 't', 0,
    'E', 'X', 'E', 'C', '_', 'S', 'Y', 'N', 'C', 0,
    'E', 'l', 'l', 'i', 'p', 's', 'i', 'z', 'e', 0,
    'E', 'n', 'a', 'b', 'l', 'e', 'T', 'o', 'p', 0,
    'E', 'q', 'P', 'a', 'r', 't', 'i', 'a', 'l', 0,
    'E', 'x', 'p', 'a', 'n', 'd', 'A', 'l', 'l', 0,
    'F', 'L', 'P', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'F', 'i', 'n', 'd', 'C', 'l', 'a', 's', 's', 0,
    'F', 'i', 'n', 'd', 'F', 'i', 'r', 's', 't', 0,
    'F', 'i', 'n', 'd', 'F', 'o', 'c', 'u', 's', 0,
    'F', 'i', 't', 'I', 'n', 's', 'i', 'd', 'e', 0,
    'F', 'l', 'o', 'o', 'd', 'F', 'i', 'l', 'l', 0,
    'F', 'r', 'o', 'm', 'F', 'i', 'l', 'e', 's', 0,
    'F', 'r', 'o', 'm', 'S', 't', 'a', 'r', 't', 0,
    'F', 'r', 'o', 'm', 'T', 'i', 'm', 'e', 'T', 0,
    'G', 'A', '_', 'S', 'M', 'O', 'O', 'T', 'H', 0,
    'G', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'G', 'e', 't', 'A', 'n', 'c', 'h', 'o', 'r', 0,
    'G', 'e', 't', 'A', 's', 'C', 'h', 'a', 'r', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 'I', 'd', 0,
    'G', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'G', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'G', 'e', 't', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'G', 'e', 't', 'B', 'u', 't', 't', 'o', 'n', 0,
    'G', 'e', 't', 'C', 'a', 'n', 'v', 'a', 's', 0,
    'G', 'e', 't', 'C', 'e', 'n', 't', 'r', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'G', 'e', 't', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'G', 'e', 't', 'D', 'a', 's', 'h', 'e', 's', 0,
    'G', 'e', 't', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'G', 'e', 't', 'D', 'i', 'g', 'i', 't', 's', 0,
    'G', 'e', 't', 'D', 'u', 'p', 'l', 'e', 'x', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'D', 'S', 'T', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'P', 'o', 's', 0,
    'G', 'e', 't', 'F', 'a', 'm', 'i', 'l', 'y', 0,
    'G', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'G', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'G', 'e', 't', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'G', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'G', 'e', 't', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'G', 'e', 't', 'L', 'o', 'c', 'a', 'l', 'e', 0,
    'G', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 'I', 'd', 0,
    'G', 'e', 't', 'M', 'e', 't', 'r', 'i', 'c', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'u', 't', 'e', 0,
    'G', 'e', 't', 'M', 'o', 'n', 't', 'h', 's', 0,
    'G', 'e', 't', 'M', 'y', 'E', 'd', 'g', 'e', 0,
    'G', 'e', 't', 'N', 'e', 'w', 'D', 'P', 'I', 0,
    'G', 'e', 't', 'O', 'S', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'G', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'D', 'P', 'I', 0,
    'G', 'e', 't', 'O', 'l', 'd', 'L', 'o', 'g', 0,
    'G', 'e', 't', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'G', 'e', 't', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'G', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'G', 'e', 't', 'P', 'i', 'x', 'e', 'l', 's', 0,
    'G', 'e', 't', 'P', 'o', 'r', 't', 'I', 'd', 0,
    'G', 'e', 't', 'R', 'a', 'd', 'i', 'u', 's', 0,
    'G', 'e', 't', 'R', 'o', 'o', 't', 'I', 'd', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'X', 0,
    'G', 'e', 't', 'S', 'c', 'a', 'l', 'e', 'Y', 0,
    'G', 'e', 't', 'S', 'e', 'c', 'o', 'n', 'd', 0,
    'G', 'e', 't', 'S', 'e', 'l', 'E', 'n', 'd', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'M', 'M', 0,
    'G', 'e', 't', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'G', 'e', 't', 'S', 't', 'a', 'r', 't', 'X', 0,
    'G', 'e', 't', 'S', 't', 'a', 'r', 't', 'Y', 0,
    'G', 'e', 't', 'S', 't', 'd', 'P', 'P', 'I', 0,
    'G', 'e', 't', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'G', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'G', 'e', 't', 'T', 'o', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'T', 'r', 'a', 'i', 't', 's', 0,
    'G', 'e', 't', 'U', 'R', 'L', 'E', 'n', 'd', 0,
    'G', 'e', 't', 'U', 's', 'e', 'r', 'I', 'd', 0,
    'G', 'e', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'G', 'r', 'e', 'g', 'o', 'r', 'i', 'a', 'n', 0,
    'H', 'a', 's', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'H', 'a', 's', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'H', 'a', 's', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'H', 'a', 's', 'S', 't', 'd', 'e', 'r', 'r', 0,
    'H', 'a', 'v', 'e', 'R', 'e', 'c', 't', 's', 0,
    'H', 'i', 'd', 'e', 'P', 'o', 'p', 'u', 'p', 0,
    'I', 'C', 'O', 'N', '_', 'H', 'A', 'N', 'D', 0,
    'I', 'C', 'O', 'N', '_', 'M', 'A', 'S', 'K', 0,
    'I', 'C', 'O', 'N', '_', 'S', 'T', 'O', 'P', 0,
    'I', 'D', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'I', 'D', '_', 'C', 'A', 'N', 'C', 'E', 'L', 0,
    'I', 'D', '_', 'D', 'E', 'L', 'E', 'T', 'E', 0,
    'I', 'D', '_', 'F', 'L', 'O', 'P', 'P', 'Y', 0,
    'I', 'D', '_', 'I', 'G', 'N', 'O', 'R', 'E', 0,
    'I', 'D', '_', 'I', 'N', 'D', 'E', 'N', 'T', 0,
    'I', 'D', '_', 'I', 'T', 'A', 'L', 'I', 'C', 0,
    'I', 'D', '_', 'L', 'O', 'W', 'E', 'S', 'T', 0,
    'I', 'D', '_', 'R', 'E', 'M', 'O', 'V', 'E', 0,
    'I', 'D', '_', 'R', 'E', 'V', 'E', 'R', 'T', 0,
    'I', 'D', '_', 'S', 'A', 'V', 'E', 'A', 'S', 0,
    'I', 'D', '_', 'S', 'T', 'A', 'T', 'I', 'C', 0,
    'I', 'N', 'T', '1', '6', '_', 'M', 'I', 'N', 0,
    'I', 'N', 'T', '3', '2', '_', 'M', 'I', 'N', 0,
    'I', 'N', 'T', '6', '4', '_', 'M', 'I', 'N', 0,
    'I', 'n', 'i', 't', 'A', 'l', 'p', 'h', 'a', 0,
    'I', 'n', 't', 'e', 'r', 's', 'e', 'c', 't', 0,
    'I', 'n', 'v', '_', 'M', 'o', 'n', 't', 'h', 0,
    'I', 's', 'A', 'l', 'l', 'o', 'w', 'e', 'd', 0,
    'I', 's', 'B', 'e', 't', 'w', 'e', 'e', 'n', 0,
    'I', 's', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'I', 's', 'C', 'r', 'e', 'a', 't', 'e', 'd', 0,
    'I', 's', 'C', 'u', 'r', 'r', 'e', 'n', 't', 0,
    'I', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 0,
    'I', 's', 'D', 'y', 'n', 'a', 'm', 'i', 'c', 0,
    'I', 's', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'I', 's', 'E', 'q', 'u', 'a', 'l', 'T', 'o', 0,
    'I', 's', 'E', 'x', 'p', 'o', 's', 'e', 'd', 0,
    'I', 's', 'F', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'I', 's', 'F', 'r', 'o', 'm', 'T', 'a', 'b', 0,
    'I', 's', 'O', 'n', 'e', 'S', 'h', 'o', 't', 0,
    'I', 's', 'P', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'I', 's', 'P', 'r', 'i', 'm', 'a', 'r', 'y', 0,
    'I', 's', 'R', 'u', 'n', 'n', 'i', 'n', 'g', 0,
    'I', 's', 'S', 'o', 'r', 't', 'K', 'e', 'y', 0,
    'I', 's', 'S', 'u', 'b', 'M', 'e', 'n', 'u', 0,
    'I', 's', 'T', 'o', 'g', 'g', 'l', 'e', 'd', 0,
    'I', 's', 'V', 'i', 'r', 't', 'u', 'a', 'l', 0,
    'I', 's', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'I', 's', 'W', 'o', 'r', 'k', 'D', 'a', 'y', 0,
    'J', 'O', 'Y', 'S', 'T', 'I', 'C', 'K', '1', 0,
    'J', 'O', 'Y', 'S', 'T', 'I', 'C', 'K', '2', 0,
    'L', 'A', 'N', 'D', 'S', 'C', 'A', 'P', 'E', 0,
    'L', 'B', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'L', 'B', '_', 'S', 'I', 'N', 'G', 'L', 'E', 0,
    'L', 'C', '_', 'H', 'R', 'U', 'L', 'E', 'S', 0,
    'L', 'C', '_', 'R', 'E', 'P', 'O', 'R', 'T', 0,
    'L', 'C', '_', 'V', 'R', 'U', 'L', 'E', 'S', 0,
    'L', 'O', 'G', '_', 'D', 'e', 'b', 'u', 'g', 0,
    'L', 'O', 'G', '_', 'E', 'r', 'r', 'o', 'r', 0,
    'L', 'O', 'G', '_', 'T', 'r', 'a', 'c', 'e', 0,
    'L', 'a', 's', 't', 'W', 'r', 'i', 't', 'e', 0,
    'L', 'o', 'c', 'a', 'l', 'e', 'T', 'a', 'g', 0,
    'L', 'o', 'g', 'S', 't', 'a', 't', 'u', 's', 0,
    'M', 'M', '_', 'M', 'E', 'T', 'R', 'I', 'C', 0,
    'M', 'M', '_', 'P', 'O', 'I', 'N', 'T', 'S', 0,
    'M', 'O', 'D', '_', 'A', 'L', 'T', 'G', 'R', 0,
    'M', 'O', 'D', '_', 'S', 'H', 'I', 'F', 'T', 0,
    'M', 'a', 'r', 'k', 'D', 'i', 'r', 't', 'y', 0,
    'M', 'o', 'u', 's', 'e', 'D', 'o', 'w', 'n', 0,
    'M', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 'p', 'T', 'o', 0,
    'N', 'A', 'V', 'D', 'I', 'R', '_', 'U', 'P', 0,
    'N', 'B', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'N', 'O', 'T', '_', 'F', 'O', 'U', 'N', 'D', 0,
    'N', 'O', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'N', 'a', 'm', 'e', '_', 'A', 'b', 'b', 'r', 0,
    'N', 'a', 'm', 'e', '_', 'F', 'u', 'l', 'l', 0,
    'N', 'o', 'r', 'm', 'a', 'l', 'i', 'z', 'e', 0,
    'N', 'u', 'l', 'l', 'B', 'r', 'u', 's', 'h', 0,
    'N', 'u', 'l', 'l', 'I', 'm', 'a', 'g', 'e', 0,
    'O', 'R', '_', 'I', 'N', 'V', 'E', 'R', 'T', 0,
    'O', 'S', '_', 'M', 'A', 'C', '_', 'O', 'S', 0,
    'O', 'n', 'D', 'i', 's', 'm', 'i', 's', 's', 0,
    'O', 'n', 'I', 'n', 'i', 't', 'G', 'u', 'i', 0,
    'O', 'n', 'P', 'r', 'e', 'I', 'n', 'i', 't', 0,
    'O', 'u', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'O', 'u', 't', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'P', 'D', '_', 'S', 'M', 'O', 'O', 'T', 'H', 0,
    'P', 'E', 'N', '_', 'B', 'L', 'A', 'C', 'K', 0,
    'P', 'E', 'N', '_', 'G', 'R', 'E', 'E', 'N', 0,
    'P', 'E', 'N', '_', 'W', 'H', 'I', 'T', 'E', 0,
    'P', 'O', 'R', 'T', '_', 'B', 'A', 'S', 'E', 0,
    'P', 'a', 'i', 'n', 't', 'P', 'a', 'g', 'e', 0,
    'P', 'a', 'r', 's', 'e', 'D', 'a', 't', 'e', 0,
    'P', 'a', 'r', 's', 'e', 'T', 'i', 'm', 'e', 0,
    'P', 'e', 'r', 'c', 'e', 'n', 't', 'O', 'f', 0,
    'P', 'o', 'p', 'u', 'p', 'M', 'e', 'n', 'u', 0,
    'P', 'o', 's', 't', 'E', 'v', 'e', 'n', 't', 0,
    'P', 'u', 's', 'h', 'S', 't', 'a', 't', 'e', 0,
    'R', 'B', '_', 'S', 'I', 'N', 'G', 'L', 'E', 0,
    'R', 'O', 'L', 'E', '_', 'N', 'O', 'N', 'E', 0,
    'R', 'e', 'a', 'd', 'F', 'l', 'o', 'a', 't', 0,
    'R', 'e', 'm', 'o', 'v', 'e', 'A', 'l', 'l', 0,
    'R', 'e', 's', 'e', 'r', 'v', 'e', 'I', 'd', 0,
    'R', 'e', 's', 'e', 't', 'C', 'l', 'i', 'p', 0,
    'R', 'e', 's', 'e', 't', 'T', 'i', 'm', 'e', 0,
    'R', 'o', 't', 'a', 't', 'e', '1', '8', '0', 0,
    'R', 'o', 't', 'a', 't', 'e', 'H', 'u', 'e', 0,
    'S', 'B', '_', 'N', 'O', 'R', 'M', 'A', 'L', 0,
    'S', 'B', '_', 'R', 'A', 'I', 'S', 'E', 'D', 0,
    'S', 'B', '_', 'S', 'U', 'N', 'K', 'E', 'N', 0,
    'S', 'I', 'Z', 'E', '_', 'A', 'U', 'T', 'O', 0,
    'S', 'L', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'S', 'L', '_', 'L', 'A', 'B', 'E', 'L', 'S', 0,
    'S', 'P', '_', '3', 'D', 'S', 'A', 'S', 'H', 0,
    'S', 'P', '_', 'B', 'O', 'R', 'D', 'E', 'R', 0,
    'S', 'P', '_', 'N', 'O', 'S', 'A', 'S', 'H', 0,
    'S', 'a', 'f', 'e', 'Y', 'i', 'e', 'l', 'd', 0,
    'S', 'e', 'l', 'e', 'c', 't', 'A', 'l', 'l', 0,
    'S', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'S', 'e', 't', 'B', 'a', 's', 'e', 'I', 'd', 0,
    'S', 'e', 't', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'S', 'e', 't', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'B', 'o', 't', 't', 'o', 'm', 0,
    'S', 'e', 't', 'C', 'a', 'n', 'v', 'a', 's', 0,
    'S', 'e', 't', 'C', 'e', 'n', 't', 'r', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'S', 'e', 't', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'S', 'e', 't', 'D', 'a', 's', 'h', 'e', 's', 0,
    'S', 'e', 't', 'D', 'i', 'g', 'i', 't', 's', 0,
    'S', 'e', 't', 'D', 'u', 'p', 'l', 'e', 'x', 0,
    'S', 'e', 't', 'E', 'f', 'f', 'e', 'c', 't', 0,
    'S', 'e', 't', 'F', 'a', 'm', 'i', 'l', 'y', 0,
    'S', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'S', 'e', 't', 'F', 'o', 'r', 'm', 'a', 't', 0,
    'S', 'e', 't', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'S', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'H', 'i', 'd', 'd', 'e', 'n', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 's', 0,
    'S', 'e', 't', 'I', 'n', 'd', 'e', 'n', 't', 0,
    'S', 'e', 't', 'L', 'o', 'a', 'd', 'e', 'r', 0,
    'S', 'e', 't', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'M', 'i', 'n', 'u', 't', 'e', 0,
    'S', 'e', 't', 'M', 'o', 'n', 't', 'h', 's', 0,
    'S', 'e', 't', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'S', 'e', 't', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'S', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'S', 'e', 't', 'P', 'o', 'r', 't', 'I', 'd', 0,
    'S', 'e', 't', 'R', 'e', 's', 'h', 'o', 'w', 0,
    'S', 'e', 't', 'S', 'e', 'c', 'o', 'n', 'd', 0,
    'S', 'e', 't', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'S', 'e', 't', 'T', 'o', 'P', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'T', 'o', 'g', 'g', 'l', 'e', 0,
    'S', 'e', 't', 'V', 'i', 'e', 'w', 'e', 'r', 0,
    'S', 'e', 't', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'S', 'e', 't', 'l', 'o', 'c', 'a', 'l', 'e', 0,
    'S', 'h', 'o', 'w', 'I', 't', 'e', 'm', 's', 0,
    'S', 'h', 'o', 'w', 'M', 'o', 'd', 'a', 'l', 0,
    'S', 'o', 'r', 't', 'I', 't', 'e', 'm', 's', 0,
    'S', 't', 'a', 'r', 't', 'O', 'n', 'c', 'e', 0,
    'S', 't', 'a', 'r', 't', 'P', 'a', 'g', 'e', 0,
    'S', 't', 'r', 'i', 'p', '_', 'A', 'l', 'l', 0,
    'T', 'B', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'T', 'C', '_', 'B', 'O', 'T', 'T', 'O', 'M', 0,
    'T', 'E', '_', 'C', 'E', 'N', 'T', 'E', 'R', 0,
    'T', 'E', '_', 'C', 'E', 'N', 'T', 'R', 'E', 0,
    'T', 'R', '_', 'S', 'I', 'N', 'G', 'L', 'E', 0,
    'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'e', 0,
    'T', 'r', 'y', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'U', 'I', 'N', 'T', '8', '_', 'M', 'A', 'X', 0,
    'W', 'X', 'K', '_', 'C', 'L', 'E', 'A', 'R', 0,
    'W', 'X', 'K', '_', 'P', 'A', 'U', 'S', 'E', 0,
    'W', 'X', 'K', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'W', 'X', 'K', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'W', 'X', 'K', '_', 'S', 'H', 'I', 'F', 'T', 0,
    'W', 'X', 'K', '_', 'S', 'P', 'A', 'C', 'E', 0,
    'W', 'X', 'K', '_', 'S', 'T', 'A', 'R', 'T', 0,
    'W', 'i', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'W', 'r', 'i', 't', 'e', 'B', 'o', 'o', 'l', 0,
    'W', 'r', 'i', 't', 'e', 'T', 'e', 'x', 't', 0,
    '_', '_', 'i', 'n', 'd', 'e', 'x', '_', '_', 0,
    '_', 'c', 'o', 'p', 'y', 'F', 'r', 'o', 'm', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'a', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 0,
    'a', 's', 'c', 'e', 'n', 'd', 'i', 'n', 'g', 0,
    'b', 'm', 'p', 'N', 'o', 'r', 'm', 'a', 'l', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 'T', 'o', 'p', 0,
    'c', 'a', 'c', 'h', 'e', 'F', 'r', 'o', 'm', 0,
    'c', 'l', 'a', 's', 's', 'N', 'a', 'm', 'e', 0,
    'c', 'l', 'o', 'c', 'k', 'w', 'i', 's', 'e', 0,
    'c', 'o', 'l', 'l', 'a', 'p', 's', 'e', 'd', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'a', 'x', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'M', 'i', 'n', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 'I', 'd', 0,
    'c', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'r', 0,
    'c', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'I', 'd', 0,
    'c', 'o', 'p', 'y', 'r', 'i', 'g', 'h', 't', 0,
    'd', 'e', 'f', 'R', 'e', 's', 'u', 'l', 't', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'O', 'l', 'd', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'd', 's', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'I', 'd', 0,
    'e', 'n', 'd', 'P', 'o', 'i', 'n', 't', 's', 0,
    'e', 'v', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'e', 'v', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'e', 'x', 't', 'r', 'a', 'L', 'o', 'n', 'g', 0,
    'f', 'a', 'c', 'e', 'n', 'a', 'm', 'e', 's', 0,
    'f', 'a', 'l', 'l', 'b', 'a', 'c', 'k', 's', 0,
    'f', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 's', 0,
    'f', 'i', 'l', 'e', 'n', 'a', 'm', 'e', 's', 0,
    'f', 'i', 'l', 'l', 'S', 't', 'y', 'l', 'e', 0,
    'f', 'o', 'n', 't', 'S', 't', 'y', 'l', 'e', 0,
    'f', 'o', 'r', 'm', 'a', 't', 't', 'e', 'r', 0,
    'g', 'e', 'n', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'h', 'i', 'g', 'h', 'l', 'i', 'g', 'h', 't', 0,
    'h', 'i', 's', 't', 'o', 'g', 'r', 'a', 'm', 0,
    'i', 'c', 'o', 'n', 'I', 'n', 'd', 'e', 'x', 0,
    'i', 'm', 'a', 'g', 'e', 'L', 'i', 's', 't', 0,
    'i', 'm', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'i', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'i', 'n', 'v', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'l', 'o', 'g', 't', 'a', 'r', 'g', 'e', 't', 0,
    'm', 'a', 'x', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'm', 'a', 'x', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'm', 'e', 'n', 'u', 'I', 'n', 'd', 'e', 'x', 0,
    'm', 'o', 'd', 'i', 'f', 'i', 'e', 'r', 's', 0,
    'n', 'e', 'w', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'n', 'e', 'w', '_', 'w', 'i', 'd', 't', 'h', 0,
    'n', 'e', 'x', 't', 'P', 'i', 'x', 'e', 'l', 0,
    'n', 'o', 'C', 'h', 'a', 'n', 'g', 'e', 's', 0,
    'n', 'o', 'R', 'e', 'f', 'r', 'e', 's', 'h', 0,
    'n', 'u', 'm', 'W', 'e', 'i', 'g', 'h', 't', 0,
    'o', 't', 'h', 'e', 'r', 'R', 'e', 'c', 't', 0,
    'p', 'T', 'e', 'x', 't', 'C', 't', 'r', 'l', 0,
    'p', 'a', 'g', 'e', 'B', 'r', 'e', 'a', 'k', 0,
    'p', 'a', 's', 's', 'T', 'o', 'O', 'l', 'd', 0,
    'p', 'i', 'x', 'e', 'l', 'S', 'i', 'z', 'e', 0,
    'p', 'o', 'i', 'n', 't', 'S', 'i', 'z', 'e', 0,
    'p', 'o', 'i', 'n', 't', 's', 'i', 'z', 'e', 0,
    'p', 'r', 'e', 'f', 'e', 'r', 'r', 'e', 'd', 0,
    'p', 'r', 'i', 'n', 't', 'D', 'a', 't', 'a', 0,
    'p', 'r', 'i', 'n', 't', 'M', 'o', 'd', 'e', 0,
    'p', 'r', 'i', 'n', 't', 'e', 'r', 'D', 'C', 0,
    'p', 'y', 'B', 'r', 'u', 's', 'h', 'e', 's', 0,
    'r', 'e', 'a', 'd', 'l', 'i', 'n', 'e', 's', 0,
    'r', 'e', 'c', 't', 'B', 'o', 'u', 'n', 'd', 0,
    'r', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 0,
    'r', 'e', 's', 'i', 'z', 'a', 'b', 'l', 'e', 0,
    's', 'c', 'a', 'l', 'e', 'M', 'o', 'd', 'e', 0,
    's', 'e', 'c', 't', 'i', 'o', 'n', 'N', 'o', 0,
    's', 'e', 'l', 'e', 'c', 't', 'i', 'o', 'n', 0,
    's', 'h', 'i', 'f', 't', 'D', 'o', 'w', 'n', 0,
    's', 'h', 'o', 'r', 't', 'D', 'e', 's', 'c', 0,
    's', 'h', 'o', 'r', 't', 'H', 'e', 'l', 'p', 0,
    's', 'h', 'o', 'r', 't', 'N', 'a', 'm', 'e', 0,
    's', 'i', 'z', 'e', 'P', 'o', 'p', 'u', 'p', 0,
    's', 'o', 'r', 't', 'A', 'r', 'r', 'o', 'w', 0,
    's', 'o', 'r', 't', 'O', 'r', 'd', 'e', 'r', 0,
    's', 'r', 'c', 'H', 'e', 'i', 'g', 'h', 't', 0,
    's', 't', 'a', 'r', 't', 'P', 'a', 'g', 'e', 0,
    's', 't', 'a', 't', 'e', 'M', 'a', 's', 'k', 0,
    's', 't', 'a', 't', 'u', 's', 'B', 'a', 'r', 0,
    's', 't', 'r', 'e', 'a', 'm', '_', 'i', 'n', 0,
    's', 'u', 'b', 'I', 'n', 'd', 'e', 'n', 't', 0,
    't', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 0,
    't', 'h', 'u', 'm', 'b', 'S', 'i', 'z', 'e', 0,
    't', 'i', 'm', 'e', 'S', 't', 'a', 'm', 'p', 0,
    't', 'i', 'm', 'e', 's', 't', 'a', 'm', 'p', 0,
    't', 'i', 'p', 'S', 't', 'r', 'i', 'n', 'g', 0,
    't', 'o', 'l', 'e', 'r', 'a', 'n', 'c', 'e', 0,
    'u', 'n', 'c', 'h', 'e', 'c', 'k', 'e', 'd', 0,
    'u', 'n', 'd', 'e', 'r', 'l', 'i', 'n', 'e', 0,
    'v', 'a', 'l', 'i', 'd', 'a', 't', 'o', 'r', 0,
    'v', 'i', 'e', 'w', 'S', 't', 'a', 'r', 't', 0,
    'w', 'h', 'e', 'e', 'l', 'A', 'x', 'i', 's', 0,
    'w', 'i', 'd', 't', 'h', 'S', 'a', 's', 'h', 0,
    'w', 'i', 'n', 'T', 'o', 'S', 'k', 'i', 'p', 0,
    'w', 'x', 'A', 'c', 'c', 'R', 'o', 'l', 'e', 0,
    'w', 'x', 'B', 'i', 't', 'n', 'e', 's', 's', 0,
    'w', 'x', 'C', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'w', 'x', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'w', 'x', 'D', 'i', 's', 'p', 'l', 'a', 'y', 0,
    'w', 'x', 'E', 'V', 'T', '_', 'A', 'N', 'Y', 0,
    'w', 'x', 'H', 'i', 't', 'T', 'e', 's', 't', 0,
    'w', 'x', 'I', 'n', 'f', 'o', 'B', 'a', 'r', 0,
    'w', 'x', 'K', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'w', 'x', 'L', 'i', 's', 't', 'B', 'o', 'x', 0,
    'w', 'x', 'L', 'o', 'g', 'N', 'u', 'l', 'l', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'w', 'x', 'O', 'u', 't', 'C', 'o', 'd', 'e', 0,
    'w', 'x', 'O', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    'w', 'x', 'P', 'a', 'i', 'n', 't', 'D', 'C', 0,
    'w', 'x', 'P', 'a', 'l', 'e', 't', 't', 'e', 0,
    'w', 'x', 'P', 'e', 'n', 'I', 'n', 'f', 'o', 0,
    'w', 'x', 'P', 'e', 'n', 'J', 'o', 'i', 'n', 0,
    'w', 'x', 'P', 'e', 'n', 'L', 'i', 's', 't', 0,
    'w', 'x', 'P', 'r', 'i', 'n', 't', 'e', 'r', 0,
    'w', 'x', 'P', 'r', 'o', 'c', 'e', 's', 's', 0,
    'w', 'x', 'P', 'y', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'S', 't', 'r', 'e', 't', 'c', 'h', 0,
    'w', 'x', 'T', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    'w', 'x', 'T', 'o', 'o', 'l', 'T', 'i', 'p', 0,
    'w', 'x', 'U', 'I', 'n', 't', 'P', 't', 'r', 0,
    'w', 'x', 'U', 'n', 'i', 'C', 'h', 'a', 'r', 0,
    'w', 'x', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'y', 'B', 'o', 't', 't', 'o', 'm', 'U', 'p', 0,
    'A', 'C', 'C', '_', 'F', 'A', 'I', 'L', 0,
    'A', 'C', 'C', '_', 'S', 'E', 'L', 'F', 0,
    'A', 'R', 'C', 'H', '_', 'M', 'A', 'X', 0,
    'A', 'R', 'T', '_', 'C', 'O', 'P', 'Y', 0,
    'A', 'R', 'T', '_', 'E', 'D', 'I', 'T', 0,
    'A', 'R', 'T', '_', 'F', 'I', 'N', 'D', 0,
    'A', 'R', 'T', '_', 'H', 'E', 'L', 'P', 0,
    'A', 'R', 'T', '_', 'L', 'I', 'S', 'T', 0,
    'A', 'R', 'T', '_', 'M', 'E', 'N', 'U', 0,
    'A', 'R', 'T', '_', 'P', 'L', 'U', 'S', 0,
    'A', 'R', 'T', '_', 'Q', 'U', 'I', 'T', 0,
    'A', 'R', 'T', '_', 'R', 'E', 'D', 'O', 0,
    'A', 'R', 'T', '_', 'U', 'N', 'D', 'O', 0,
    'A', 'b', 's', 'o', 'l', 'u', 't', 'e', 0,
    'A', 'c', 't', 'i', 'v', 'a', 't', 'e', 0,
    'A', 'd', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    'A', 'l', 'l', 'F', 'l', 'a', 'g', 's', 0,
    'B', 'K', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'B', 'M', 'P', '_', '1', 'B', 'P', 'P', 0,
    'B', 'M', 'P', '_', '4', 'B', 'P', 'P', 0,
    'B', 'M', 'P', '_', '8', 'B', 'P', 'P', 0,
    'B', 'U', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'B', 'u', 't', 't', 'o', 'n', 'U', 'p', 0,
    'C', '2', 'S', '_', 'N', 'A', 'M', 'E', 0,
    'C', 'A', 'P', '_', 'B', 'U', 'T', 'T', 0,
    'C', 'H', 'B', '_', 'L', 'E', 'F', 'T', 0,
    'C', 'O', 'L', 'O', 'U', 'R', 'E', 'D', 0,
    'C', 'a', 'n', 'P', 'a', 's', 't', 'e', 0,
    'C', 'e', 'n', 't', 'e', 'r', 'I', 'n', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'I', 'n', 0,
    'C', 'l', 'e', 'a', 'r', 'A', 'l', 'l', 0,
    'C', 'l', 'e', 'a', 'r', 'S', 'e', 'l', 0,
    'C', 'o', 'd', 'e', 'N', 'a', 'm', 'e', 0,
    'C', 'o', 'l', 'l', 'a', 'p', 's', 'e', 0,
    'C', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    'D', 'e', 'c', 'T', 'o', 'H', 'e', 'x', 0,
    'D', 'e', 's', 'e', 'l', 'e', 'c', 't', 0,
    'D', 'i', 's', 'p', 'a', 't', 'c', 'h', 0,
    'D', 'o', 'E', 'n', 'a', 'b', 'l', 'e', 0,
    'D', 'o', 'F', 'r', 'e', 'e', 'z', 'e', 0,
    'D', 'r', 'a', 'g', 'C', 'o', 'p', 'y', 0,
    'D', 'r', 'a', 'g', 'L', 'i', 'n', 'k', 0,
    'D', 'r', 'a', 'g', 'M', 'o', 'v', 'e', 0,
    'D', 'r', 'a', 'g', 'N', 'o', 'n', 'e', 0,
    'D', 'r', 'a', 'w', 'I', 'c', 'o', 'n', 0,
    'D', 'r', 'a', 'w', 'L', 'i', 'n', 'e', 0,
    'D', 'r', 'a', 'w', 'P', 'a', 't', 'h', 0,
    'D', 'r', 'a', 'w', 'T', 'e', 'x', 't', 0,
    'E', 'n', 'd', 'L', 'a', 'y', 'e', 'r', 0,
    'E', 'n', 'd', 'M', 'o', 'd', 'a', 'l', 0,
    'E', 'n', 't', 'e', 'r', 'i', 'n', 'g', 0,
    'F', 'L', 'P', '_', 'O', 'P', 'E', 'N', 0,
    'F', 'L', 'P', '_', 'S', 'A', 'V', 'E', 0,
    'F', 'i', 'l', 'l', 'P', 'a', 't', 'h', 0,
    'F', 'i', 'n', 'd', 'B', 'y', 'I', 'd', 0,
    'F', 'i', 'n', 'd', 'I', 't', 'e', 'm', 0,
    'F', 'i', 'n', 'd', 'M', 'e', 'n', 'u', 0,
    'F', 'i', 'n', 'd', 'N', 'a', 'm', 'e', 0,
    'F', 'i', 'n', 'd', 'N', 'e', 'x', 't', 0,
    'F', 'i', 'n', 'd', 'P', 'a', 'g', 'e', 0,
    'F', 'r', 'o', 'm', 'I', 'm', 'p', 'l', 0,
    'F', 'r', 'o', 'm', 'P', 'h', 'y', 's', 0,
    'F', 'r', 'o', 'm', 'R', 'G', 'B', 'A', 0,
    'G', 'e', 't', 'A', 'b', 'o', 'r', 't', 0,
    'G', 'e', 't', 'A', 'c', 'c', 'e', 'l', 0,
    'G', 'e', 't', 'A', 'l', 'i', 'g', 'n', 0,
    'G', 'e', 't', 'A', 'l', 'p', 'h', 'a', 0,
    'G', 'e', 't', 'A', 's', 'D', 'O', 'S', 0,
    'G', 'e', 't', 'B', 'r', 'u', 's', 'h', 0,
    'G', 'e', 't', 'C', 'a', 'r', 'e', 't', 0,
    'G', 'e', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'G', 'e', 't', 'C', 'o', 'u', 'n', 't', 0,
    'G', 'e', 't', 'D', 'e', 'l', 't', 'a', 0,
    'G', 'e', 't', 'D', 'e', 'p', 't', 'h', 0,
    'G', 'e', 't', 'F', 'i', 'e', 'l', 'd', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 's', 0,
    'G', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    'G', 'e', 't', 'F', 'l', 'o', 'o', 'r', 0,
    'G', 'e', 't', 'F', 'o', 'c', 'u', 's', 0,
    'G', 'e', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'G', 'r', 'e', 'e', 'n', 0,
    'G', 'e', 't', 'H', 'F', 'O', 'N', 'T', 0,
    'G', 'e', 't', 'H', 'o', 'u', 'r', 's', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 's', 0,
    'G', 'e', 't', 'I', 'm', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'I', 'n', 'd', 'e', 'x', 0,
    'G', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'G', 'e', 't', 'M', 'a', 'j', 'o', 'r', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 's', 0,
    'G', 'e', 't', 'M', 'i', 'c', 'r', 'o', 0,
    'G', 'e', 't', 'M', 'i', 'n', 'o', 'r', 0,
    'G', 'e', 't', 'M', 'o', 'd', 'e', 's', 0,
    'G', 'e', 't', 'M', 'o', 'n', 't', 'h', 0,
    'G', 'e', 't', 'O', 'r', 'd', 'e', 'r', 0,
    'G', 'e', 't', 'O', 'w', 'n', 'e', 'r', 0,
    'G', 'e', 't', 'P', 'a', 't', 'h', 's', 0,
    'G', 'e', 't', 'P', 'i', 'x', 'e', 'l', 0,
    'G', 'e', 't', 'P', 'o', 'i', 'n', 't', 0,
    'G', 'e', 't', 'R', 'a', 'n', 'g', 'e', 0,
    'G', 'e', 't', 'R', 'a', 't', 'i', 'o', 0,
    'G', 'e', 't', 'R', 'i', 'g', 'h', 't', 0,
    'G', 'e', 't', 'S', 'h', 'o', 'w', 'n', 0,
    'G', 'e', 't', 'S', 'i', 'z', 'e', 'r', 0,
    'G', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'G', 'e', 't', 'S', 't', 'o', 'p', 's', 0,
    'G', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'G', 'e', 't', 'T', 'i', 'c', 'k', 's', 0,
    'G', 'e', 't', 'T', 'i', 'm', 'e', 'r', 0,
    'G', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'G', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'W', 'e', 'e', 'k', 's', 0,
    'G', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'G', 'e', 't', 'Y', 'e', 'a', 'r', 's', 0,
    'H', 'S', 'V', 't', 'o', 'R', 'G', 'B', 0,
    'H', 'a', 's', 'A', 'l', 'p', 'h', 'a', 0,
    'H', 'a', 's', 'E', 'n', 't', 'r', 'y', 0,
    'H', 'a', 's', 'F', 'o', 'c', 'u', 's', 0,
    'H', 'a', 's', 'G', 'r', 'o', 'u', 'p', 0,
    'H', 'e', 'x', 'T', 'o', 'D', 'e', 'c', 0,
    'I', 'D', '_', 'A', 'B', 'O', 'R', 'T', 0,
    'I', 'D', '_', 'A', 'B', 'O', 'U', 'T', 0,
    'I', 'D', '_', 'A', 'P', 'P', 'L', 'Y', 0,
    'I', 'D', '_', 'C', 'D', 'R', 'O', 'M', 0,
    'I', 'D', '_', 'C', 'L', 'E', 'A', 'R', 0,
    'I', 'D', '_', 'C', 'L', 'O', 'S', 'E', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '1', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '2', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '3', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '4', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '5', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '6', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '7', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '8', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', '9', 0,
    'I', 'D', '_', 'F', 'I', 'R', 'S', 'T', 0,
    'I', 'D', '_', 'I', 'N', 'D', 'E', 'X', 0,
    'I', 'D', '_', 'P', 'A', 'S', 'T', 'E', 0,
    'I', 'D', '_', 'P', 'R', 'I', 'N', 'T', 0,
    'I', 'D', '_', 'R', 'E', 'S', 'E', 'T', 0,
    'I', 'D', '_', 'R', 'E', 'T', 'R', 'Y', 0,
    'I', 'D', '_', 'S', 'E', 'T', 'U', 'P', 0,
    'I', 'N', 'T', '8', '_', 'M', 'I', 'N', 0,
    'I', 'T', 'E', 'M', '_', 'M', 'A', 'X', 0,
    'I', 'n', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'I', 'n', 'v', '_', 'Y', 'e', 'a', 'r', 0,
    'I', 's', '3', 'S', 't', 'a', 't', 'e', 0,
    'I', 's', 'A', 'c', 't', 'i', 'v', 'e', 0,
    'I', 's', 'B', 'u', 't', 't', 'o', 'n', 0,
    'I', 's', 'F', 'r', 'o', 'z', 'e', 'n', 0,
    'I', 's', 'H', 'i', 'd', 'd', 'e', 'n', 0,
    'I', 's', 'K', 'i', 'n', 'd', 'O', 'f', 0,
    'I', 's', 'L', 'o', 'a', 'd', 'e', 'd', 0,
    'I', 's', 'O', 'f', 'T', 'y', 'p', 'e', 0,
    'I', 's', 'O', 'p', 'e', 'n', 'e', 'd', 0,
    'I', 's', 'S', 'a', 'm', 'e', 'A', 's', 0,
    'I', 's', 'S', 'i', 'l', 'e', 'n', 't', 0,
    'I', 's', 'S', 'o', 'r', 't', 'e', 'd', 0,
    'I', 's', 'S', 'p', 'a', 'c', 'e', 'r', 0,
    'I', 's', 'V', 'e', 't', 'o', 'e', 'd', 0,
    'I', 's', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'L', 'B', '_', 'N', 'O', '_', 'S', 'B', 0,
    'L', 'B', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'L', 'O', 'G', '_', 'I', 'n', 'f', 'o', 0,
    'L', 'O', 'G', '_', 'U', 's', 'e', 'r', 0,
    'L', 'a', 's', 't', 'R', 'e', 'a', 'd', 0,
    'L', 'i', 'n', 'e', 'D', 'o', 'w', 'n', 0,
    'L', 'o', 'a', 'd', 'F', 'i', 'l', 'e', 0,
    'L', 'o', 'g', 'D', 'e', 'b', 'u', 'g', 0,
    'L', 'o', 'g', 'E', 'r', 'r', 'o', 'r', 0,
    'M', 'I', 'N', 'I', 'M', 'I', 'Z', 'E', 0,
    'M', 'M', '_', 'T', 'W', 'I', 'P', 'S', 0,
    'M', 'O', 'D', '_', 'M', 'E', 'T', 'A', 0,
    'M', 'O', 'D', '_', 'N', 'O', 'N', 'E', 0,
    'M', 'a', 'k', 'e', 'B', 'o', 'l', 'd', 0,
    'M', 'a', 'k', 'e', 'G', 'r', 'e', 'y', 0,
    'M', 'a', 'k', 'e', 'M', 'o', 'n', 'o', 0,
    'M', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 0,
    'M', 'i', 'd', 'd', 'l', 'e', 'U', 'p', 0,
    'M', 'u', 'l', 't', 'i', 'p', 'l', 'y', 0,
    'N', 'B', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'N', 'O', '_', 'I', 'M', 'A', 'G', 'E', 0,
    'N', 'a', 'v', 'i', 'g', 'a', 't', 'e', 0,
    'N', 'u', 'l', 'l', 'F', 'o', 'n', 't', 0,
    'N', 'u', 'l', 'l', 'I', 'c', 'o', 'n', 0,
    'O', 'u', 't', 'R', 'i', 'g', 'h', 't', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '2', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '3', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '5', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'A', '6', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '4', 0,
    'P', 'A', 'P', 'E', 'R', '_', 'B', '5', 0,
    'P', 'B', '_', 'S', 'M', 'A', 'L', 'L', 0,
    'P', 'E', 'N', '_', 'B', 'L', 'U', 'E', 0,
    'P', 'E', 'N', '_', 'C', 'Y', 'A', 'N', 0,
    'P', 'E', 'N', '_', 'G', 'R', 'E', 'Y', 0,
    'P', 'O', 'R', 'T', 'R', 'A', 'I', 'T', 0,
    'P', 'O', 'R', 'T', '_', 'D', 'F', 'B', 0,
    'P', 'O', 'R', 'T', '_', 'G', 'T', 'K', 0,
    'P', 'O', 'R', 'T', '_', 'M', 'A', 'C', 0,
    'P', 'O', 'R', 'T', '_', 'M', 'S', 'W', 0,
    'P', 'O', 'R', 'T', '_', 'X', '1', '1', 0,
    'P', 'a', 'g', 'e', 'D', 'o', 'w', 'n', 0,
    'P', 'o', 'p', 'S', 't', 'a', 't', 'e', 0,
    'P', 'u', 's', 'h', 'B', 'a', 'c', 'k', 0,
    'R', 'B', '_', 'G', 'R', 'O', 'U', 'P', 0,
    'R', 'E', 'T', 'A', 'I', 'N', 'E', 'D', 0,
    'R', 'G', 'B', 't', 'o', 'H', 'S', 'V', 0,
    'R', 'e', 'a', 'd', 'B', 'o', 'o', 'l', 0,
    'R', 'e', 'a', 'd', 'L', 'o', 'n', 'g', 0,
    'R', 'e', 'd', 'i', 'r', 'e', 'c', 't', 0,
    'R', 'e', 'g', 'i', 's', 't', 'e', 'r', 0,
    'R', 'e', 'p', 'a', 'r', 'e', 'n', 't', 0,
    'R', 'o', 't', 'a', 't', 'e', '9', '0', 0,
    'S', 'L', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'S', 'L', '_', 'T', 'I', 'C', 'K', 'S', 0,
    'S', 'a', 'v', 'e', 'F', 'i', 'l', 'e', 0,
    'S', 'c', 'r', 'o', 'l', 'l', 'T', 'o', 0,
    'S', 'e', 't', 'A', 'c', 'c', 'e', 'l', 0,
    'S', 'e', 't', 'A', 'l', 'i', 'g', 'n', 0,
    'S', 'e', 't', 'A', 'l', 'p', 'h', 'a', 0,
    'S', 'e', 't', 'B', 'r', 'u', 's', 'h', 0,
    'S', 'e', 't', 'C', 'a', 'r', 'e', 't', 0,
    'S', 'e', 't', 'D', 'e', 'l', 'a', 'y', 0,
    'S', 'e', 't', 'D', 'e', 'l', 't', 'a', 0,
    'S', 'e', 't', 'D', 'e', 'p', 't', 'h', 0,
    'S', 'e', 't', 'F', 'i', 'l', 'e', 's', 0,
    'S', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'e', 't', 'F', 'o', 'c', 'u', 's', 0,
    'S', 'e', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'I', 'c', 'o', 'n', 's', 0,
    'S', 'e', 't', 'I', 'm', 'a', 'g', 'e', 0,
    'S', 'e', 't', 'I', 'n', 'd', 'e', 'x', 0,
    'S', 'e', 't', 'L', 'a', 'b', 'e', 'l', 0,
    'S', 'e', 't', 'M', 'o', 'n', 't', 'h', 0,
    'S', 'e', 't', 'O', 'w', 'n', 'e', 'r', 0,
    'S', 'e', 't', 'P', 'o', 'i', 'n', 't', 0,
    'S', 'e', 't', 'R', 'a', 'n', 'g', 'e', 0,
    'S', 'e', 't', 'R', 'a', 't', 'i', 'o', 0,
    'S', 'e', 't', 'R', 'i', 'g', 'h', 't', 0,
    'S', 'e', 't', 'S', 'c', 'a', 'l', 'e', 0,
    'S', 'e', 't', 'S', 'h', 'a', 'p', 'e', 0,
    'S', 'e', 't', 'S', 'i', 'z', 'e', 'r', 0,
    'S', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'S', 'e', 't', 'S', 't', 'y', 'l', 'e', 0,
    'S', 'e', 't', 'T', 'i', 'm', 'e', 'T', 0,
    'S', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'S', 'e', 't', 'U', 'm', 'a', 's', 'k', 0,
    'S', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'S', 'e', 't', 'W', 'e', 'e', 'k', 's', 0,
    'S', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'S', 'e', 't', 'Y', 'e', 'a', 'r', 's', 0,
    'S', 'h', 'o', 'w', 'I', 't', 'e', 'm', 0,
    'S', 'h', 'u', 't', 'd', 'o', 'w', 'n', 0,
    'S', 't', 'a', 'r', 't', 'D', 'o', 'c', 0,
    'S', 'u', 'b', 't', 'r', 'a', 'c', 't', 0,
    'T', 'B', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'C', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'E', '_', 'R', 'I', 'C', 'H', '2', 0,
    'T', 'E', '_', 'R', 'I', 'G', 'H', 'T', 0,
    'T', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'T', 'r', 'y', 'A', 'f', 't', 'e', 'r', 0,
    'U', 'n', 's', 'e', 'l', 'e', 'c', 't', 0,
    'U', 's', 'e', 'A', 'l', 'p', 'h', 'a', 0,
    'U', 's', 'e', 'B', 'g', 'C', 'o', 'l', 0,
    'V', 'a', 'l', 'i', 'd', 'a', 't', 'e', 0,
    'W', 'X', 'K', '_', 'B', 'A', 'C', 'K', 0,
    'W', 'X', 'K', '_', 'D', 'O', 'W', 'N', 0,
    'W', 'X', 'K', '_', 'H', 'E', 'L', 'P', 0,
    'W', 'X', 'K', '_', 'H', 'O', 'M', 'E', 0,
    'W', 'X', 'K', '_', 'L', 'E', 'F', 'T', 0,
    'W', 'X', 'K', '_', 'M', 'E', 'N', 'U', 0,
    'W', 'X', 'K', '_', 'N', 'O', 'N', 'E', 0,
    'W', 'r', 'i', 't', 'e', 'A', 'l', 'l', 0,
    'W', 'r', 'i', 't', 'e', 'I', 'n', 't', 0,
    '_', '_', 'b', 'o', 'o', 'l', '_', '_', 0,
    '_', '_', 'i', 'a', 'd', 'd', '_', '_', 0,
    '_', '_', 'i', 'm', 'u', 'l', '_', '_', 0,
    '_', '_', 'i', 's', 'u', 'b', '_', '_', 0,
    '_', '_', 'i', 't', 'e', 'r', '_', '_', 0,
    '_', '_', 'n', 'e', 'x', 't', '_', '_', 0,
    'a', 'C', 'h', 'o', 'i', 'c', 'e', 's', 0,
    'b', 'a', 's', 'e', 'n', 'a', 'm', 'e', 0,
    'b', 'm', 'p', 'H', 'o', 'v', 'e', 'r', 0,
    'c', 'R', 'a', 'd', 'i', 'a', 'n', 's', 0,
    'c', 'a', 'l', 'l', 'b', 'a', 'c', 'k', 0,
    'c', 'a', 'n', 'F', 'o', 'c', 'u', 's', 0,
    'c', 'a', 'p', 'S', 't', 'y', 'l', 'e', 0,
    'c', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'c', 'o', 'l', 'l', 'a', 'p', 's', 'e', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 's', 0,
    'c', 'u', 'r', 's', 'o', 'r', 'I', 'd', 0,
    'd', 'a', 't', 'e', 't', 'i', 'm', 'e', 0,
    'd', 'e', 's', 't', 'R', 'e', 'c', 't', 0,
    'd', 'i', 's', 'a', 'b', 'l', 'e', 'd', 0,
    'd', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'd', 's', 't', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'e', 'd', 'i', 't', 'a', 'b', 'l', 'e', 0,
    'e', 'n', 'd', 'A', 'n', 'g', 'l', 'e', 0,
    'e', 'r', 'r', 'o', 'r', 'M', 's', 'g', 0,
    'e', 'v', 't', 'M', 'o', 'u', 's', 'e', 0,
    'e', 'x', 'i', 't', 'c', 'o', 'd', 'e', 0,
    'e', 'x', 't', 'R', 'i', 'g', 'h', 't', 0,
    'f', 'a', 'c', 'e', 'N', 'a', 'm', 'e', 0,
    'f', 'a', 'c', 'e', 'n', 'a', 'm', 'e', 0,
    'f', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'f', 'i', 'l', 'e', 'T', 'y', 'p', 'e', 0,
    'f', 'i', 'r', 's', 't', 'D', 'a', 'y', 0,
    'f', 'o', 'n', 't', 'I', 'n', 'f', 'o', 0,
    'f', 'o', 'n', 't', 'I', 'n', 'i', 't', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'g', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'h', 'e', 'l', 'p', 'T', 'e', 'x', 't', 0,
    'h', 'e', 'l', 'p', 't', 'e', 'x', 't', 0,
    'h', 'o', 't', 'S', 'p', 'o', 't', 'X', 0,
    'h', 'o', 't', 'S', 'p', 'o', 't', 'Y', 0,
    'h', 'o', 't', 'k', 'e', 'y', 'I', 'd', 0,
    'i', 'c', 'o', 'n', 'F', 'i', 'l', 'e', 0,
    'i', 'c', 'o', 'n', 'i', 'z', 'e', 'd', 0,
    'i', 'n', 's', 't', 'a', 'n', 'c', 'e', 0,
    'i', 't', 'e', 'm', 'F', 'r', 'o', 'm', 0,
    'j', 'o', 'y', 's', 't', 'i', 'c', 'k', 0,
    'l', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 0,
    'l', 'i', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'l', 'i', 's', 't', 'C', 't', 'r', 'l', 0,
    'l', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'l', 'o', 'g', 'L', 'e', 'v', 'e', 'l', 0,
    'l', 'o', 'n', 'g', 'H', 'e', 'l', 'p', 0,
    'm', 'a', 'j', 'o', 'r', 'V', 's', 'n', 0,
    'm', 'a', 'x', 'F', 'i', 'l', 'e', 's', 0,
    'm', 'a', 'x', 'V', 'a', 'l', 'u', 'e', 0,
    'm', 'a', 'x', 'W', 'i', 'd', 't', 'h', 0,
    'm', 'a', 'x', 'i', 'm', 'i', 'z', 'e', 0,
    'm', 'e', 'm', 'o', 'r', 'y', 'D', 'C', 0,
    'm', 'e', 'n', 'u', 'I', 't', 'e', 'm', 0,
    'm', 'e', 't', 'a', 'D', 'o', 'w', 'n', 0,
    'm', 'i', 'c', 'r', 'o', 'V', 's', 'n', 0,
    'm', 'i', 'l', 'l', 'i', 's', 'e', 'c', 0,
    'm', 'i', 'm', 'e', 'T', 'y', 'p', 'e', 0,
    'm', 'i', 'm', 'e', 't', 'y', 'p', 'e', 0,
    'm', 'i', 'n', 'V', 'a', 'l', 'u', 'e', 0,
    'm', 'i', 'n', 'W', 'i', 'd', 't', 'h', 0,
    'm', 'i', 'n', 'o', 'r', 'V', 's', 'n', 0,
    'm', 'o', 'd', 'i', 'f', 'i', 'e', 'd', 0,
    'n', 'e', 'e', 'd', 'M', 'o', 'r', 'e', 0,
    'n', 'o', 'U', 'n', 'i', 't', 's', 'X', 0,
    'n', 'o', 'U', 'n', 'i', 't', 's', 'Y', 0,
    'o', 'b', 'j', 'e', 'c', 't', 'I', 'd', 0,
    'p', 'a', 'g', 'e', 'F', 'r', 'o', 'm', 0,
    'p', 'a', 'g', 'e', 'S', 'i', 'z', 'e', 0,
    'p', 'a', 'n', 'e', 'S', 'i', 'z', 'e', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 0,
    'p', 'r', 'i', 'n', 't', 'C', 'm', 'd', 0,
    'p', 'r', 'i', 'n', 't', 'o', 'u', 't', 0,
    'p', 'r', 'i', 'o', 'r', 'i', 't', 'y', 0,
    'p', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'p', 't', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'p', 'y', 'C', 'o', 'o', 'r', 'd', 's', 0,
    'p', 'y', 'P', 'o', 'i', 'n', 't', 's', 0,
    'r', 'a', 'w', 'F', 'l', 'a', 'g', 's', 0,
    'r', 'e', 'a', 'd', 'l', 'i', 'n', 'e', 0,
    'r', 'e', 'a', 'l', 'i', 'z', 'e', 'd', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'r', 'e', 'v', 'i', 's', 'i', 'o', 'n', 0,
    'r', 'o', 'w', 'C', 'o', 'u', 'n', 't', 0,
    's', 'e', 'l', 'I', 'm', 'a', 'g', 'e', 0,
    's', 'h', 'o', 'r', 't', 'c', 'u', 't', 0,
    's', 'h', 'o', 'w', 'H', 'e', 'l', 'p', 0,
    's', 'i', 'z', 'e', 'h', 'i', 'n', 't', 0,
    's', 'o', 'r', 't', 'a', 'b', 'l', 'e', 0,
    's', 'p', 'a', 'c', 'i', 'n', 'g', 'X', 0,
    's', 'p', 'l', 'i', 't', 't', 'e', 'r', 0,
    's', 'r', 'c', 'W', 'i', 'd', 't', 'h', 0,
    's', 't', 'a', 'r', 't', 'C', 'o', 'l', 0,
    's', 't', 'a', 'r', 't', 'P', 'o', 's', 0,
    's', 't', 'r', 'E', 'n', 't', 'r', 'y', 0,
    's', 't', 'r', 'V', 'a', 'l', 'u', 'e', 0,
    's', 'u', 'p', 'p', 'r', 'e', 's', 's', 0,
    't', 'a', 'b', 'S', 't', 'o', 'p', 's', 0,
    't', 'e', 'x', 't', 'L', 'i', 's', 't', 0,
    't', 'e', 'x', 't', 'O', 'n', 'l', 'y', 0,
    't', 'e', 'x', 't', 'd', 'a', 't', 'a', 0,
    't', 'o', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    't', 'o', 'O', 'b', 'j', 'e', 'c', 't', 0,
    't', 'o', 'R', 'e', 'm', 'o', 'v', 'e', 0,
    't', 'o', 'p', 'R', 'i', 'g', 'h', 't', 0,
    't', 'r', 'e', 'e', 'C', 't', 'r', 'l', 0,
    't', 'r', 'u', 'e', 'I', 't', 'e', 'm', 0,
    'u', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'v', 'e', 'r', 's', 'i', 'o', 'n', '_', 0,
    'w', 'e', 'a', 'k', 'T', 'e', 's', 't', 0,
    'w', 'e', 'i', 'g', 'h', 't', '_', 'b', 0,
    'w', 'e', 'i', 'g', 'h', 't', '_', 'g', 0,
    'w', 'e', 'i', 'g', 'h', 't', '_', 'r', 0,
    'w', 'i', 'd', 't', 'h', 'M', 'a', 'x', 0,
    'w', 'i', 'l', 'd', 'C', 'a', 'r', 'd', 0,
    'w', 'i', 'l', 'd', 'c', 'a', 'r', 'd', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'D', 'C', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'I', 'd', 0,
    'w', 'x', '.', '_', 'c', 'o', 'r', 'e', 0,
    'w', 'x', 'B', 'i', 't', 'm', 'a', 'p', 0,
    'w', 'x', 'B', 'o', 'r', 'd', 'e', 'r', 0,
    'w', 'x', 'B', 'u', 't', 't', 'o', 'n', 0,
    'w', 'x', 'C', 'h', 'o', 'i', 'c', 'e', 0,
    'w', 'x', 'C', 'o', 'l', 'o', 'u', 'r', 0,
    'w', 'x', 'C', 'o', 'n', 'f', 'i', 'g', 0,
    'w', 'x', 'C', 'u', 'r', 's', 'o', 'r', 0,
    'w', 'x', 'D', 'i', 'a', 'l', 'o', 'g', 0,
    'w', 'x', 'F', 'S', 'F', 'i', 'l', 'e', 0,
    'w', 'x', 'G', 'B', 'S', 'p', 'a', 'n', 0,
    'w', 'x', 'I', 'n', 't', 'P', 't', 'r', 0,
    'w', 'x', 'L', 'o', 'c', 'a', 'l', 'e', 0,
    'w', 'x', 'L', 'o', 'g', 'G', 'u', 'i', 0,
    'w', 'x', 'N', 'a', 'v', 'D', 'i', 'r', 0,
    'w', 'x', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'w', 'x', 'P', 'e', 'n', 'C', 'a', 'p', 0,
    'w', 'x', 'P', 'o', 'r', 't', 'I', 'd', 0,
    'w', 'x', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    'w', 'x', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'w', 'x', 'S', 'l', 'i', 'd', 'e', 'r', 0,
    'w', 'x', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'w', 'x', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'x', 's', 'r', 'c', 'M', 'a', 's', 'k', 0,
    'y', 's', 'r', 'c', 'M', 'a', 's', 'k', 0,
    'A', 'R', 'C', 'H', '_', '3', '2', 0,
    'A', 'R', 'C', 'H', '_', '6', '4', 0,
    'A', 'R', 'T', '_', 'C', 'U', 'T', 0,
    'A', 'R', 'T', '_', 'N', 'E', 'W', 0,
    'A', 'R', 'T', '_', 'T', 'I', 'P', 0,
    'A', 'c', 'q', 'u', 'i', 'r', 'e', 0,
    'A', 'd', 'd', 'D', 'a', 't', 'a', 0,
    'A', 'd', 'd', 'F', 'i', 'l', 'e', 0,
    'A', 'd', 'd', 'H', 'e', 'l', 'p', 0,
    'A', 'd', 'd', 'I', 'c', 'o', 'n', 0,
    'A', 'd', 'd', 'P', 'a', 'g', 'e', 0,
    'A', 'd', 'd', 'P', 'a', 't', 'h', 0,
    'A', 'd', 'd', 'R', 'o', 'o', 't', 0,
    'A', 'd', 'd', 'T', 'o', 'o', 'l', 0,
    'A', 'd', 'd', 'T', 'r', 'e', 'e', 0,
    'A', 'r', 'r', 'a', 'n', 'g', 'e', 0,
    'B', 'K', '_', 'L', 'E', 'F', 'T', 0,
    'B', 'U', '_', 'L', 'E', 'F', 'T', 0,
    'C', 'B', '_', 'S', 'O', 'R', 'T', 0,
    'C', 'H', 'B', '_', 'T', 'O', 'P', 0,
    'C', 'a', 'l', 'c', 'M', 'i', 'n', 0,
    'C', 'a', 'n', 'C', 'o', 'p', 'y', 0,
    'C', 'a', 'n', 'O', 'p', 'e', 'n', 0,
    'C', 'a', 'n', 'R', 'e', 'd', 'o', 0,
    'C', 'a', 'n', 'U', 'n', 'd', 'o', 0,
    'C', 'a', 's', 'c', 'a', 'd', 'e', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'X', 0,
    'C', 'e', 'n', 't', 'r', 'e', 'Y', 0,
    'C', 'm', 'd', 'D', 'o', 'w', 'n', 0,
    'C', 'o', 'n', 'n', 'e', 'c', 't', 0,
    'D', 'F', '_', 'H', 'T', 'M', 'L', 0,
    'D', 'F', '_', 'R', 'I', 'F', 'F', 0,
    'D', 'F', '_', 'S', 'Y', 'L', 'K', 0,
    'D', 'F', '_', 'T', 'E', 'X', 'T', 0,
    'D', 'F', '_', 'T', 'I', 'F', 'F', 0,
    'D', 'F', '_', 'W', 'A', 'V', 'E', 0,
    'D', 'e', 'f', 'l', 'a', 't', 'e', 0,
    'D', 'e', 's', 't', 'r', 'o', 'y', 0,
    'D', 'i', 's', 'a', 'b', 'l', 'e', 0,
    'D', 'r', 'a', 'w', 'A', 'r', 'c', 0,
    'E', 'n', 'd', 'D', 'r', 'a', 'g', 0,
    'E', 'n', 'd', 'P', 'a', 'g', 'e', 0,
    'E', 'x', 'e', 'c', 'u', 't', 'e', 0,
    'F', 'C', '_', 'O', 'P', 'E', 'N', 0,
    'F', 'C', '_', 'S', 'A', 'V', 'E', 0,
    'F', 'D', '_', 'O', 'P', 'E', 'N', 0,
    'F', 'D', '_', 'S', 'A', 'V', 'E', 0,
    'F', 'R', '_', 'D', 'O', 'W', 'N', 0,
    'F', 'S', '_', 'R', 'E', 'A', 'D', 0,
    'F', 'r', 'o', 'm', 'D', 'I', 'P', 0,
    'F', 'r', 'o', 'm', 'D', 'M', 'Y', 0,
    'F', 'r', 'o', 'm', 'E', 'n', 'd', 0,
    'F', 'r', 'o', 'm', 'H', 'M', 'S', 0,
    'F', 'r', 'o', 'm', 'J', 'D', 'N', 0,
    'F', 'r', 'o', 'm', 'S', 'V', 'G', 0,
    'G', 'A', '_', 'T', 'E', 'X', 'T', 0,
    'G', 'e', 'r', 'm', 'a', 'n', 'y', 0,
    'G', 'e', 't', 'A', 'r', 'c', 'h', 0,
    'G', 'e', 't', 'B', 'a', 's', 'e', 0,
    'G', 'e', 't', 'B', 'l', 'u', 'e', 0,
    'G', 'e', 't', 'C', 'o', 'l', 's', 0,
    'G', 'e', 't', 'D', 'a', 't', 'a', 0,
    'G', 'e', 't', 'D', 'a', 'y', 's', 0,
    'G', 'e', 't', 'D', 'o', 'n', 'e', 0,
    'G', 'e', 't', 'E', 'd', 'g', 'e', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'X', 0,
    'G', 'e', 't', 'E', 'n', 'd', 'Y', 0,
    'G', 'e', 't', 'F', 'i', 'l', 'e', 0,
    'G', 'e', 't', 'F', 'l', 'a', 'g', 0,
    'G', 'e', 't', 'F', 'o', 'n', 't', 0,
    'G', 'e', 't', 'H', 'G', 'a', 'p', 0,
    'G', 'e', 't', 'H', 'T', 'M', 'L', 0,
    'G', 'e', 't', 'H', 'e', 'l', 'p', 0,
    'G', 'e', 't', 'H', 'i', 'n', 't', 0,
    'G', 'e', 't', 'H', 'o', 'u', 'r', 0,
    'G', 'e', 't', 'I', 'c', 'o', 'n', 0,
    'G', 'e', 't', 'I', 'n', 'f', 'o', 0,
    'G', 'e', 't', 'I', 't', 'e', 'm', 0,
    'G', 'e', 't', 'J', 'o', 'i', 'n', 0,
    'G', 'e', 't', 'K', 'i', 'n', 'd', 0,
    'G', 'e', 't', 'L', 'e', 'f', 't', 0,
    'G', 'e', 't', 'L', 'i', 's', 't', 0,
    'G', 'e', 't', 'M', 'a', 's', 'k', 0,
    'G', 'e', 't', 'M', 'e', 'n', 'u', 0,
    'G', 'e', 't', 'M', 'o', 'd', 'e', 0,
    'G', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'G', 'e', 't', 'N', 'e', 'x', 't', 0,
    'G', 'e', 't', 'P', 'a', 'g', 'e', 0,
    'G', 'e', 't', 'P', 'a', 'n', 'e', 0,
    'G', 'e', 't', 'P', 'a', 't', 'h', 0,
    'G', 'e', 't', 'R', 'G', 'B', 'A', 0,
    'G', 'e', 't', 'R', 'e', 'c', 't', 0,
    'G', 'e', 't', 'R', 'o', 'l', 'e', 0,
    'G', 'e', 't', 'R', 'o', 'w', 's', 0,
    'G', 'e', 't', 'S', 'p', 'a', 'n', 0,
    'G', 'e', 't', 'T', 'a', 'b', 's', 0,
    'G', 'e', 't', 'T', 'e', 'x', 't', 0,
    'G', 'e', 't', 'T', 'y', 'p', 'e', 0,
    'G', 'e', 't', 'V', 'G', 'a', 'p', 0,
    'G', 'e', 't', 'V', 'e', 't', 'o', 0,
    'G', 'e', 't', 'Y', 'e', 'a', 'r', 0,
    'H', 'a', 's', 'F', 'l', 'a', 'g', 0,
    'H', 'a', 's', 'F', 'o', 'n', 't', 0,
    'H', 'a', 's', 'M', 'a', 's', 'k', 0,
    'H', 'a', 's', 'P', 'a', 'g', 'e', 0,
    'H', 'a', 's', 'T', 'a', 'b', 's', 0,
    'I', 'D', '_', 'B', 'O', 'L', 'D', 0,
    'I', 'D', '_', 'C', 'O', 'P', 'Y', 0,
    'I', 'D', '_', 'D', 'O', 'W', 'N', 0,
    'I', 'D', '_', 'E', 'D', 'I', 'T', 0,
    'I', 'D', '_', 'E', 'X', 'I', 'T', 0,
    'I', 'D', '_', 'F', 'I', 'L', 'E', 0,
    'I', 'D', '_', 'F', 'I', 'N', 'D', 0,
    'I', 'D', '_', 'H', 'E', 'L', 'P', 0,
    'I', 'D', '_', 'H', 'O', 'M', 'E', 0,
    'I', 'D', '_', 'I', 'N', 'F', 'O', 0,
    'I', 'D', '_', 'L', 'A', 'S', 'T', 0,
    'I', 'D', '_', 'M', 'O', 'R', 'E', 0,
    'I', 'D', '_', 'N', 'O', 'N', 'E', 0,
    'I', 'D', '_', 'O', 'P', 'E', 'N', 0,
    'I', 'D', '_', 'R', 'E', 'D', 'O', 0,
    'I', 'D', '_', 'S', 'A', 'V', 'E', 0,
    'I', 'D', '_', 'S', 'T', 'O', 'P', 0,
    'I', 'D', '_', 'U', 'N', 'D', 'O', 0,
    'I', 'c', 'o', 'n', 'i', 'z', 'e', 0,
    'I', 'n', 'f', 'l', 'a', 't', 'e', 0,
    'I', 's', 'A', 's', 'c', 'i', 'i', 0,
    'I', 's', 'C', 'h', 'e', 'c', 'k', 0,
    'I', 's', 'D', 'i', 'r', 't', 'y', 0,
    'I', 's', 'E', 'm', 'p', 't', 'y', 0,
    'I', 's', 'E', 'q', 'u', 'a', 'l', 0,
    'I', 's', 'E', 'r', 'r', 'o', 'r', 0,
    'I', 's', 'F', 'a', 'l', 's', 'e', 0,
    'I', 's', 'H', 'a', 't', 'c', 'h', 0,
    'I', 's', 'L', 'o', 'c', 'a', 'l', 0,
    'I', 's', 'M', 'o', 'd', 'a', 'l', 0,
    'I', 's', 'P', 'o', 'p', 'u', 'p', 0,
    'I', 's', 'R', 'a', 'd', 'i', 'o', 0,
    'I', 's', 'S', 'h', 'o', 'w', 'n', 0,
    'I', 's', 'S', 'i', 'z', 'e', 'r', 0,
    'I', 's', 'S', 'o', 'l', 'i', 'd', 0,
    'I', 's', 'S', 'p', 'l', 'i', 't', 0,
    'I', 's', 'V', 'a', 'l', 'i', 'd', 0,
    'I', 's', 'Z', 'M', 'o', 'v', 'e', 0,
    'K', 'I', 'L', 'L', '_', 'O', 'K', 0,
    'K', 'e', 'y', 'D', 'o', 'w', 'n', 0,
    'L', 'B', '_', 'L', 'E', 'F', 'T', 0,
    'L', 'B', '_', 'S', 'O', 'R', 'T', 0,
    'L', 'C', '_', 'I', 'C', 'O', 'N', 0,
    'L', 'C', '_', 'L', 'I', 'S', 'T', 0,
    'L', 'O', 'G', '_', 'M', 'a', 'x', 0,
    'L', 'e', 'a', 'v', 'i', 'n', 'g', 0,
    'L', 'o', 'g', 'I', 'n', 'f', 'o', 0,
    'M', 'M', '_', 'T', 'E', 'X', 'T', 0,
    'M', 'O', 'D', '_', 'A', 'L', 'L', 0,
    'M', 'O', 'D', '_', 'A', 'L', 'T', 0,
    'M', 'O', 'D', '_', 'C', 'M', 'D', 0,
    'M', 'O', 'D', '_', 'W', 'I', 'N', 0,
    'M', 'a', 'g', 'n', 'i', 'f', 'y', 0,
    'M', 'a', 'k', 'e', 'K', 'e', 'y', 0,
    'M', 'a', 'k', 'e', 'U', 'T', 'C', 0,
    'M', 'a', 't', 'c', 'h', 'e', 's', 0,
    'M', 'o', 'u', 's', 'e', 'U', 'p', 0,
    'N', 'B', '_', 'L', 'E', 'F', 'T', 0,
    'N', 'u', 'l', 'l', 'P', 'e', 'n', 0,
    'O', 'S', '_', 'U', 'N', 'I', 'X', 0,
    'O', 'f', 'f', 's', 'e', 't', 'X', 0,
    'O', 'f', 'f', 's', 'e', 't', 'Y', 0,
    'O', 'n', 'E', 'n', 't', 'e', 'r', 0,
    'O', 'n', 'L', 'e', 'a', 'v', 'e', 0,
    'O', 'n', 'P', 'a', 'i', 'n', 't', 0,
    'O', 'n', 'P', 'o', 'p', 'u', 'p', 0,
    'O', 'u', 't', 'L', 'e', 'f', 't', 0,
    'P', 'E', 'N', '_', 'R', 'E', 'D', 0,
    'P', 'O', 'R', 'T', '_', 'Q', 'T', 0,
    'P', 'e', 'n', 'd', 'i', 'n', 'g', 0,
    'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'P', 'r', 'e', 'p', 'e', 'n', 'd', 0,
    'R', 'e', 'a', 'd', 'A', 'l', 'l', 0,
    'R', 'e', 'a', 'l', 'i', 'z', 'e', 0,
    'R', 'e', 'l', 'e', 'a', 's', 'e', 0,
    'R', 'e', 'p', 'l', 'a', 'c', 'e', 0,
    'R', 'e', 's', 'c', 'a', 'l', 'e', 0,
    'R', 'e', 's', 't', 'o', 'r', 'e', 0,
    'R', 'i', 'g', 'h', 't', 'O', 'f', 0,
    'R', 'i', 'g', 'h', 't', 'U', 'p', 0,
    'S', 'B', '_', 'F', 'L', 'A', 'T', 0,
    'S', 'I', 'G', 'A', 'B', 'R', 'T', 0,
    'S', 'I', 'G', 'A', 'L', 'R', 'M', 0,
    'S', 'I', 'G', 'K', 'I', 'L', 'L', 0,
    'S', 'I', 'G', 'N', 'O', 'N', 'E', 0,
    'S', 'I', 'G', 'P', 'I', 'P', 'E', 0,
    'S', 'I', 'G', 'Q', 'U', 'I', 'T', 0,
    'S', 'I', 'G', 'S', 'E', 'G', 'V', 0,
    'S', 'I', 'G', 'T', 'E', 'R', 'M', 0,
    'S', 'I', 'G', 'T', 'R', 'A', 'P', 0,
    'S', 'L', '_', 'B', 'O', 'T', 'H', 0,
    'S', 'L', '_', 'L', 'E', 'F', 'T', 0,
    'S', 'P', '_', 'W', 'R', 'A', 'P', 0,
    'S', 'e', 't', 'B', 'a', 's', 'e', 0,
    'S', 'e', 't', 'C', 'o', 'l', 's', 0,
    'S', 'e', 't', 'D', 'a', 't', 'a', 0,
    'S', 'e', 't', 'D', 'a', 'y', 's', 0,
    'S', 'e', 't', 'D', 'o', 'n', 'e', 0,
    'S', 'e', 't', 'E', 'd', 'g', 'e', 0,
    'S', 'e', 't', 'F', 'l', 'a', 'g', 0,
    'S', 'e', 't', 'F', 'o', 'n', 't', 0,
    'S', 'e', 't', 'H', 'G', 'a', 'p', 0,
    'S', 'e', 't', 'H', 'T', 'M', 'L', 0,
    'S', 'e', 't', 'H', 'e', 'l', 'p', 0,
    'S', 'e', 't', 'H', 'i', 'n', 't', 0,
    'S', 'e', 't', 'H', 'o', 'u', 'r', 0,
    'S', 'e', 't', 'I', 'c', 'o', 'n', 0,
    'S', 'e', 't', 'I', 't', 'e', 'm', 0,
    'S', 'e', 't', 'J', 'o', 'i', 'n', 0,
    'S', 'e', 't', 'L', 'e', 'f', 't', 0,
    'S', 'e', 't', 'M', 'a', 's', 'k', 0,
    'S', 'e', 't', 'M', 'e', 'n', 'u', 0,
    'S', 'e', 't', 'M', 'o', 'd', 'e', 0,
    'S', 'e', 't', 'N', 'a', 'm', 'e', 0,
    'S', 'e', 't', 'P', 'a', 't', 'h', 0,
    'S', 'e', 't', 'R', 'G', 'B', 'A', 0,
    'S', 'e', 't', 'R', 'e', 'c', 't', 0,
    'S', 'e', 't', 'R', 'o', 'w', 's', 0,
    'S', 'e', 't', 'S', 'h', 'o', 'w', 0,
    'S', 'e', 't', 'S', 'p', 'a', 'n', 0,
    'S', 'e', 't', 'T', 'a', 'b', 's', 0,
    'S', 'e', 't', 'T', 'i', 'c', 'k', 0,
    'S', 'e', 't', 'T', 'y', 'p', 'e', 0,
    'S', 'e', 't', 'V', 'G', 'a', 'p', 0,
    'S', 'e', 't', 'Y', 'e', 'a', 'r', 0,
    'S', 'e', 't', 'Z', 'o', 'o', 'm', 0,
    'S', 'u', 's', 'p', 'e', 'n', 'd', 0,
    'T', 'B', '_', 'F', 'L', 'A', 'T', 0,
    'T', 'B', '_', 'L', 'E', 'F', 'T', 0,
    'T', 'B', '_', 'T', 'E', 'X', 'T', 0,
    'T', 'C', '_', 'L', 'E', 'F', 'T', 0,
    'T', 'E', '_', 'L', 'E', 'F', 'T', 0,
    'T', 'E', '_', 'R', 'I', 'C', 'H', 0,
    'U', 'n', 'S', 'h', 'a', 'r', 'e', 0,
    'U', 'n', 'g', 'e', 't', 'c', 'h', 0,
    'U', 'n', 's', 'p', 'l', 'i', 't', 0,
    'U', 's', 'e', 'M', 'e', 'n', 'u', 0,
    'W', 'X', 'K', '_', 'A', 'D', 'D', 0,
    'W', 'X', 'K', '_', 'A', 'L', 'T', 0,
    'W', 'X', 'K', '_', 'E', 'N', 'D', 0,
    'W', 'X', 'K', '_', 'F', '1', '0', 0,
    'W', 'X', 'K', '_', 'F', '1', '1', 0,
    'W', 'X', 'K', '_', 'F', '1', '2', 0,
    'W', 'X', 'K', '_', 'F', '1', '3', 0,
    'W', 'X', 'K', '_', 'F', '1', '4', 0,
    'W', 'X', 'K', '_', 'F', '1', '5', 0,
    'W', 'X', 'K', '_', 'F', '1', '6', 0,
    'W', 'X', 'K', '_', 'F', '1', '7', 0,
    'W', 'X', 'K', '_', 'F', '1', '8', 0,
    'W', 'X', 'K', '_', 'F', '1', '9', 0,
    'W', 'X', 'K', '_', 'F', '2', '0', 0,
    'W', 'X', 'K', '_', 'F', '2', '1', 0,
    'W', 'X', 'K', '_', 'F', '2', '2', 0,
    'W', 'X', 'K', '_', 'F', '2', '3', 0,
    'W', 'X', 'K', '_', 'F', '2', '4', 0,
    'W', 'X', 'K', '_', 'T', 'A', 'B', 0,
    '_', '_', 'a', 'd', 'd', '_', '_', 0,
    '_', '_', 'i', 'n', 't', '_', '_', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    '_', '_', 'm', 'u', 'l', '_', '_', 0,
    '_', '_', 'n', 'e', 'g', '_', '_', 0,
    '_', '_', 's', 't', 'r', '_', '_', 0,
    '_', '_', 's', 'u', 'b', '_', '_', 0,
    'a', 'd', 'a', 'p', 't', 'e', 'r', 0,
    'a', 'l', 't', 'D', 'o', 'w', 'n', 0,
    'a', 'p', 'p', 'N', 'a', 'm', 'e', 0,
    'b', 'S', 'e', 'l', 'e', 'c', 't', 0,
    'b', 'i', 't', 'm', 'a', 'p', '1', 0,
    'b', 'i', 't', 'm', 'a', 'p', '2', 0,
    'b', 'i', 't', 'm', 'a', 'p', 's', 0,
    'b', 'i', 't', 'n', 'e', 's', 's', 0,
    'b', 'l', 'o', 'c', 'k', 'N', 'o', 0,
    'b', 'o', 'r', 'd', 'e', 'r', '_', 0,
    'b', 'u', 't', 't', 'o', 'n', 's', 0,
    'c', 'a', 'c', 'h', 'e', 'T', 'o', 0,
    'c', 'a', 'n', 'U', 'n', 'd', 'o', 0,
    'c', 'a', 'n', 'V', 'e', 't', 'o', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'c', 'e', 'n', 't', 'r', 'e', 'X', 0,
    'c', 'e', 'n', 't', 'r', 'e', 'Y', 0,
    'c', 'h', 'a', 'r', 's', 'e', 't', 0,
    'c', 'h', 'i', 'l', 'd', 'I', 'd', 0,
    'c', 'h', 'o', 'i', 'c', 'e', 's', 0,
    'c', 'm', 'd', 'D', 'o', 'w', 'n', 0,
    'c', 'o', 'l', 'B', 'a', 'c', 'k', 0,
    'c', 'o', 'l', 'I', 'n', 'i', 't', 0,
    'c', 'o', 'l', 'R', 'G', 'B', 'A', 0,
    'c', 'o', 'l', 'T', 'e', 'x', 't', 0,
    'c', 'o', 'l', 'n', 'a', 'm', 'e', 0,
    'c', 'o', 'l', 's', 'p', 'a', 'n', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 's', 0,
    'c', 'o', 'm', 'm', 'a', 'n', 'd', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 0,
    'c', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'c', 'o', 'u', 'n', 't', 'r', 'y', 0,
    'd', 'a', 't', 'e', 'D', 'e', 'f', 0,
    'd', 'e', 'g', 'r', 'e', 'e', 's', 0,
    'd', 'e', 's', 'c', 'e', 'n', 't', 0,
    'd', 'i', 'r', 'n', 'a', 'm', 'e', 0,
    'd', 'i', 's', 'a', 'b', 'l', 'e', 0,
    'e', 'f', 'f', 'e', 'c', 't', 's', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'e', 'n', 'd', 'P', 'a', 'g', 'e', 0,
    'e', 'n', 't', 'r', 'i', 'e', 's', 0,
    'e', 'r', 'r', 'C', 'o', 'd', 'e', 0,
    'e', 'v', 't', 'T', 'y', 'p', 'e', 0,
    'e', 'x', 'S', 't', 'y', 'l', 'e', 0,
    'e', 'x', 't', 'L', 'e', 'f', 't', 0,
    'f', 'a', 'c', 't', 'o', 'r', 'S', 0,
    'f', 'a', 'c', 't', 'o', 'r', 'V', 0,
    'f', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'f', 'r', 'o', 'm', 'R', 'o', 'w', 0,
    'f', 'r', 'o', 'm', 'T', 'a', 'b', 0,
    'g', 'r', 'a', 'v', 'i', 't', 'y', 0,
    'h', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'h', 'a', 's', 'M', 'a', 's', 'k', 0,
    'h', 'e', 'a', 'd', 'i', 'n', 'g', 0,
    'h', 'o', 't', 's', 'p', 'o', 't', 0,
    'i', 'c', 'o', 'n', 'i', 'z', 'e', 0,
    'i', 'm', 'a', 'g', 'e', 'I', 'd', 0,
    'i', 'n', 'c', 'S', 'i', 'z', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 0,
    'i', 's', 'S', 'e', 'n', 's', '_', 0,
    'i', 's', 'S', 't', 'a', 'r', 't', 0,
    'i', 't', 'e', 'm', 'I', 'd', 'x', 0,
    'k', 'e', 'y', 'C', 'o', 'd', 'e', 0,
    'k', 'e', 'y', 'W', 'o', 'r', 'd', 0,
    'k', 'e', 'y', 'c', 'o', 'd', 'e', 0,
    'm', 'a', 'x', 'P', 'a', 'g', 'e', 0,
    'm', 'a', 'x', 'S', 'i', 'z', 'e', 0,
    'm', 'a', 'x', 'i', 'm', 'u', 'm', 0,
    'm', 'e', 'n', 'u', 'B', 'a', 'r', 0,
    'm', 'e', 'n', 'u', 'b', 'a', 'r', 0,
    'm', 'e', 's', 's', 'a', 'g', 'e', 0,
    'm', 'i', 'n', 'P', 'a', 'g', 'e', 0,
    'm', 'i', 'n', 'S', 'i', 'z', 'e', 0,
    'n', 'e', 'w', 'N', 'a', 'm', 'e', 0,
    'n', 'e', 'w', 'P', 'a', 't', 'h', 0,
    'n', 'e', 'w', 'S', 'i', 'z', 'e', 0,
    'n', 'e', 'w', 'i', 't', 'e', 'm', 0,
    'n', 'o', 'F', 'i', 'l', 'e', 's', 0,
    'n', 'u', 'm', 'W', 'e', 'e', 'k', 0,
    'o', 'l', 'd', 'N', 'a', 'm', 'e', 0,
    'o', 'l', 'd', 'S', 'i', 'z', 'e', 0,
    'o', 'n', 'e', 'S', 'h', 'o', 't', 0,
    'o', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'o', 'p', 'e', 'n', 'C', 'm', 'd', 0,
    'o', 's', 'M', 'a', 'j', 'o', 'r', 0,
    'o', 's', 'M', 'i', 'n', 'o', 'r', 0,
    'o', 'v', 'e', 'r', 'l', 'a', 'y', 0,
    'p', 'C', 'o', 'n', 'f', 'i', 'g', 0,
    'p', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'p', 'a', 'c', 'k', 'i', 'n', 'g', 0,
    'p', 'a', 'd', 'd', 'i', 'n', 'g', 0,
    'p', 'a', 'g', 'e', 'N', 'u', 'm', 0,
    'p', 'a', 'g', 'e', 'P', 'o', 's', 0,
    'p', 'a', 'l', 'e', 't', 't', 'e', 0,
    'p', 'a', 'p', 'e', 'r', 'I', 'd', 0,
    'p', 'a', 'r', 't', 'i', 'a', 'l', 0,
    'p', 'e', 'r', 'c', 'e', 'n', 't', 0,
    'p', 'r', 'e', 'v', 'i', 'e', 'w', 0,
    'p', 'r', 'i', 'm', 'a', 'r', 'y', 0,
    'p', 't', 'S', 't', 'a', 'r', 't', 0,
    'q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'r', 'e', 'f', 'r', 'e', 's', 'h', 0,
    'r', 'e', 'l', 'e', 'a', 's', 'e', 0,
    'r', 'e', 't', 'C', 'o', 'd', 'e', 0,
    'r', 'o', 'w', 's', 'p', 'a', 'n', 0,
    's', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    's', 'i', 'z', 'e', 'D', 'e', 'f', 0,
    's', 'p', 'a', 'c', 'i', 'n', 'g', 0,
    's', 't', 'i', 'p', 'p', 'l', 'e', 0,
    's', 't', 'o', 'r', 'e', 'I', 't', 0,
    's', 't', 'r', 'N', 'a', 'm', 'e', 0,
    's', 't', 'r', 'P', 'a', 't', 'h', 0,
    's', 't', 'r', 'T', 'e', 'x', 't', 0,
    's', 't', 'r', 'i', 'n', 'g', 's', 0,
    's', 'u', 'b', 'I', 't', 'e', 'm', 0,
    's', 'u', 'b', 'M', 'e', 'n', 'u', 0,
    's', 'u', 'b', 'm', 'e', 'n', 'u', 0,
    's', 'u', 'b', 'r', 'e', 'c', 't', 0,
    's', 'z', 'T', 'i', 't', 'l', 'e', 0,
    't', 'h', 'i', 's', 'W', 'i', 'n', 0,
    't', 'i', 'c', 'k', 'P', 'o', 's', 0,
    't', 'i', 'm', 'e', 'o', 'u', 't', 0,
    't', 'k', 'M', 'a', 'j', 'o', 'r', 0,
    't', 'k', 'M', 'i', 'n', 'o', 'r', 0,
    't', 'o', 'o', 'l', 'B', 'a', 'r', 0,
    't', 'o', 'o', 'l', 't', 'i', 'p', 0,
    't', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'u', 'n', 'i', 'C', 'h', 'a', 'r', 0,
    'u', 'n', 'i', 't', 'M', 'a', 'x', 0,
    'u', 'n', 'i', 't', 'M', 'i', 'n', 0,
    'u', 's', 'e', 'M', 'a', 's', 'k', 0,
    'u', 's', 'e', 'r', 'D', 'i', 'r', 0,
    'v', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'v', 'e', 'r', 'b', 'o', 's', 'e', 0,
    'v', 'e', 'r', 's', 'i', 'o', 'n', 0,
    'w', 'a', 't', 'c', 'h', 'i', 'd', 0,
    'w', 'e', 'e', 'k', 'd', 'a', 'y', 0,
    'w', 'i', 'n', 'd', 'o', 'w', '1', 0,
    'w', 'i', 'n', 'd', 'o', 'w', '2', 0,
    'w', 'x', 'B', 'r', 'u', 's', 'h', 0,
    'w', 'x', 'C', 'a', 'r', 'e', 't', 0,
    'w', 'x', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'x', 'F', 'r', 'a', 'm', 'e', 0,
    'w', 'x', 'G', 'a', 'u', 'g', 'e', 0,
    'w', 'x', 'I', 'm', 'a', 'g', 'e', 0,
    'w', 'x', 'P', 'a', 'n', 'e', 'l', 0,
    'w', 'x', 'P', 'o', 'i', 'n', 't', 0,
    'w', 'x', 'P', 'y', 'A', 'p', 'p', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 'r', 0,
    'w', 'x', 'T', 'i', 'm', 'e', 'r', 0,
    'x', 'o', 'f', 'f', 's', 'e', 't', 0,
    'y', 'o', 'f', 'f', 's', 'e', 't', 0,
    'A', 'C', 'C', '_', 'O', 'K', 0,
    'A', '_', 'E', 'S', 'S', 'T', 0,
    'A', 'd', 'd', 'A', 'r', 'c', 0,
    'A', 'p', 'p', 'e', 'n', 'd', 0,
    'A', 't', 't', 'a', 'c', 'h', 0,
    'A', 'u', 'x', '1', 'U', 'p', 0,
    'A', 'u', 'x', '2', 'U', 'p', 0,
    'B', 'K', '_', 'T', 'O', 'P', 0,
    'B', 'U', '_', 'T', 'O', 'P', 0,
    'C', 'a', 'n', 'C', 'u', 't', 0,
    'C', 'o', 'n', 'c', 'a', 't', 0,
    'D', 'F', '_', 'D', 'I', 'B', 0,
    'D', 'F', '_', 'D', 'I', 'F', 0,
    'D', 'F', '_', 'M', 'A', 'X', 0,
    'D', 'F', '_', 'P', 'N', 'G', 0,
    'D', 'e', 'c', 'R', 'e', 'f', 0,
    'D', 'e', 't', 'a', 'c', 'h', 0,
    'D', 'o', 'T', 'h', 'a', 'w', 0,
    'E', 'n', 'd', 'D', 'o', 'c', 0,
    'E', 'x', 'i', 's', 't', 's', 0,
    'E', 'x', 'p', 'a', 'n', 'd', 0,
    'F', 'r', 'a', 'n', 'c', 'e', 0,
    'G', 'M', 'T', '_', '1', '0', 0,
    'G', 'M', 'T', '_', '1', '1', 0,
    'G', 'M', 'T', '_', '1', '2', 0,
    'G', 'e', 't', 'A', 'p', 'p', 0,
    'G', 'e', 't', 'B', 'i', 'n', 0,
    'G', 'e', 't', 'B', 'o', 'x', 0,
    'G', 'e', 't', 'C', 'a', 'p', 0,
    'G', 'e', 't', 'C', 'o', 'l', 0,
    'G', 'e', 't', 'D', 'P', 'I', 0,
    'G', 'e', 't', 'D', 'a', 'y', 0,
    'G', 'e', 't', 'H', 'D', 'C', 0,
    'G', 'e', 't', 'I', 'n', 't', 0,
    'G', 'e', 't', 'J', 'D', 'N', 0,
    'G', 'e', 't', 'M', 'J', 'D', 0,
    'G', 'e', 't', 'M', 'a', 'x', 0,
    'G', 'e', 't', 'M', 'i', 'n', 0,
    'G', 'e', 't', 'P', 'P', 'I', 0,
    'G', 'e', 't', 'P', 'e', 'n', 0,
    'G', 'e', 't', 'P', 'i', 'd', 0,
    'G', 'e', 't', 'P', 'o', 's', 0,
    'G', 'e', 't', 'R', 'G', 'B', 0,
    'G', 'e', 't', 'R', 'e', 'd', 0,
    'G', 'e', 't', 'R', 'o', 'w', 0,
    'G', 'e', 't', 'T', 'i', 'p', 0,
    'G', 'e', 't', 'T', 'o', 'p', 0,
    'G', 'e', 't', 'U', 'R', 'L', 0,
    'H', 'a', 's', 'U', 'R', 'L', 0,
    'I', 'D', '_', 'A', 'D', 'D', 0,
    'I', 'D', '_', 'A', 'N', 'Y', 0,
    'I', 'D', '_', 'C', 'U', 'T', 0,
    'I', 'D', '_', 'N', 'E', 'W', 0,
    'I', 'D', '_', 'T', 'O', 'P', 0,
    'I', 'D', '_', 'Y', 'E', 'S', 0,
    'I', 'n', 'c', 'R', 'e', 'f', 0,
    'I', 'n', 's', 'e', 'r', 't', 0,
    'I', 'n', 'v', 'e', 'r', 't', 0,
    'I', 's', 'B', 'o', 'l', 'd', 0,
    'I', 's', 'B', 'u', 's', 'y', 0,
    'I', 's', 'D', 'a', 'r', 'k', 0,
    'I', 's', 'M', 'a', 'i', 'n', 0,
    'I', 's', 'M', 'o', 'v', 'e', 0,
    'I', 's', 'N', 'u', 'l', 'l', 0,
    'J', 'u', 'l', 'i', 'a', 'n', 0,
    'L', 'B', '_', 'T', 'O', 'P', 0,
    'L', 'e', 'f', 't', 'O', 'f', 0,
    'L', 'e', 'f', 't', 'U', 'p', 0,
    'L', 'i', 'n', 'e', 'U', 'p', 0,
    'M', 'i', 'r', 'r', 'o', 'r', 0,
    'M', 'o', 'v', 'e', 'T', 'o', 0,
    'M', 'o', 'v', 'i', 'n', 'g', 0,
    'N', 'B', '_', 'T', 'O', 'P', 0,
    'N', 'e', 'g', 'a', 't', 'e', 0,
    'N', 'o', 't', 'i', 'f', 'y', 0,
    'O', 'S', '_', 'M', 'A', 'C', 0,
    'O', 'n', 'D', 'a', 't', 'a', 0,
    'O', 'n', 'D', 'r', 'a', 'w', 0,
    'O', 'n', 'D', 'r', 'o', 'p', 0,
    'O', 'n', 'E', 'x', 'i', 't', 0,
    'O', 'n', 'I', 'n', 'i', 't', 0,
    'O', 'n', 'Q', 'u', 'i', 't', 0,
    'O', 'u', 't', 'T', 'o', 'p', 0,
    'P', 'a', 'g', 'e', 'U', 'p', 0,
    'R', 'e', 'c', 't', '2', 'D', 0,
    'R', 'e', 's', 'i', 'z', 'e', 0,
    'R', 'e', 's', 'u', 'm', 'e', 0,
    'R', 'o', 't', 'a', 't', 'e', 0,
    'R', 'u', 's', 's', 'i', 'a', 0,
    'S', 'H', 'R', 'I', 'N', 'K', 0,
    'S', 'I', 'G', 'B', 'U', 'S', 0,
    'S', 'I', 'G', 'E', 'M', 'T', 0,
    'S', 'I', 'G', 'F', 'P', 'E', 0,
    'S', 'I', 'G', 'H', 'U', 'P', 0,
    'S', 'I', 'G', 'I', 'L', 'L', 0,
    'S', 'I', 'G', 'I', 'N', 'T', 0,
    'S', 'I', 'G', 'S', 'Y', 'S', 0,
    'S', 'L', '_', 'T', 'O', 'P', 0,
    'S', 'e', 't', 'B', 'i', 'n', 0,
    'S', 'e', 't', 'C', 'a', 'p', 0,
    'S', 'e', 't', 'C', 'o', 'l', 0,
    'S', 'e', 't', 'D', 'a', 'y', 0,
    'S', 'e', 't', 'H', 'M', 'S', 0,
    'S', 'e', 't', 'I', 'n', 't', 0,
    'S', 'e', 't', 'J', 'D', 'N', 0,
    'S', 'e', 't', 'L', 'o', 'g', 0,
    'S', 'e', 't', 'M', 'a', 'x', 0,
    'S', 'e', 't', 'M', 'i', 'n', 0,
    'S', 'e', 't', 'P', 'e', 'n', 0,
    'S', 'e', 't', 'P', 'o', 's', 0,
    'S', 'e', 't', 'R', 'G', 'B', 0,
    'S', 'e', 't', 'R', 'o', 'w', 0,
    'S', 'e', 't', 'T', 'i', 'p', 0,
    'S', 'e', 't', 'T', 'o', 'p', 0,
    'S', 'e', 't', 'U', 'R', 'L', 0,
    'S', 'h', 'a', 'p', 'e', 'd', 0,
    'S', 'u', 'b', 'm', 'i', 't', 0,
    'T', 'B', '_', 'T', 'O', 'P', 0,
    'T', 'C', '_', 'T', 'O', 'P', 0,
    'T', 'o', 'P', 'h', 'y', 's', 0,
    'U', 'n', 'M', 'a', 's', 'k', 0,
    'U', 'n', 'l', 'i', 'n', 'k', 0,
    'W', 'X', 'K', '_', 'F', '1', 0,
    'W', 'X', 'K', '_', 'F', '2', 0,
    'W', 'X', 'K', '_', 'F', '3', 0,
    'W', 'X', 'K', '_', 'F', '4', 0,
    'W', 'X', 'K', '_', 'F', '5', 0,
    'W', 'X', 'K', '_', 'F', '6', 0,
    'W', 'X', 'K', '_', 'F', '7', 0,
    'W', 'X', 'K', '_', 'F', '8', 0,
    'W', 'X', 'K', '_', 'F', '9', 0,
    'W', 'X', 'K', '_', 'U', 'P', 0,
    'W', 'a', 'k', 'e', 'U', 'p', 0,
    'Y', 'E', 'S', '_', 'N', 'O', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    '_', '_', 'g', 'e', '_', '_', 0,
    '_', '_', 'g', 't', '_', '_', 0,
    '_', '_', 'l', 'e', '_', '_', 0,
    '_', '_', 'l', 't', '_', '_', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    'a', 'c', 'c', 'e', 'p', 't', 0,
    'a', 'c', 't', 'i', 'o', 'n', 0,
    'a', 'n', 'c', 'h', 'o', 'r', 0,
    'a', 'n', 'g', 'l', 'e', 'H', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 0,
    'a', 's', 'c', 'e', 'n', 't', 0,
    'b', 'a', 's', 'e', 'I', 'd', 0,
    'b', 'i', 't', 'm', 'a', 'p', 0,
    'b', 'o', 'r', 'd', 'e', 'r', 0,
    'b', 'o', 't', 't', 'o', 'm', 0,
    'b', 'u', 'f', 'f', 'e', 'r', 0,
    'b', 'u', 't', 't', 'o', 'n', 0,
    'c', 'C', 'o', 'l', 'o', 'r', 0,
    'c', 'a', 'n', 'c', 'e', 'l', 0,
    'c', 'a', 'n', 'v', 'a', 's', 0,
    'c', 'e', 'n', 't', 'r', 'e', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 0,
    'c', 'l', 'i', 'e', 'n', 't', 0,
    'c', 'o', 'l', 'R', 'G', 'B', 0,
    'c', 'o', 'l', 'o', 'u', 'r', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'c', 'o', 'n', 'f', 'i', 'g', 0,
    'c', 'o', 'o', 'k', 'i', 'e', 0,
    'c', 'u', 'r', 's', 'o', 'r', 0,
    'd', 'a', 's', 'h', 'e', 's', 0,
    'd', 'e', 's', 't', 'D', 'C', 0,
    'd', 'i', 'a', 'l', 'o', 'g', 0,
    'd', 'i', 'g', 'i', 't', 's', 0,
    'd', 'o', 'm', 'a', 'i', 'n', 0,
    'e', 'f', 'f', 'e', 'c', 't', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 0,
    'e', 'n', 'd', 'C', 'o', 'l', 0,
    'e', 'n', 'd', 'P', 'o', 's', 0,
    'e', 'n', 'd', 'i', 'a', 'n', 0,
    'e', 'v', 'e', 'n', 't', 's', 0,
    'e', 'x', 'F', 'l', 'a', 'g', 0,
    'e', 'x', 'p', 'a', 'n', 'd', 0,
    'e', 'x', 't', 'e', 'n', 'd', 0,
    'f', 'a', 'm', 'i', 'l', 'y', 0,
    'f', 'i', 'l', 't', 'e', 'r', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'f', 'r', 'o', 'm', 'I', 'd', 0,
    'f', 't', 'I', 'n', 'f', 'o', 0,
    'h', 'a', 'n', 'd', 'l', 'e', 0,
    'h', 'e', 'a', 'd', 'e', 'r', 0,
    'h', 'i', 'd', 'd', 'e', 'n', 0,
    'i', 'a', 'l', 'p', 'h', 'a', 0,
    'i', 'd', 'B', 'a', 's', 'e', 0,
    'i', 'm', 'a', 'g', 'e', 's', 0,
    'i', 'n', 'd', 'e', 'n', 't', 0,
    'i', 's', '_', 'd', 'i', 'r', 0,
    'i', 't', 'a', 'l', 'i', 'c', 0,
    'i', 't', 'e', 'm', 'I', 'd', 0,
    'i', 't', 'e', 'm', 'T', 'o', 0,
    'l', 'a', 's', 't', 'I', 'd', 0,
    'l', 'a', 'y', 'o', 'u', 't', 0,
    'l', 'e', 'n', 'g', 't', 'h', 0,
    'l', 'i', 'n', 'e', 'N', 'o', 0,
    'l', 'o', 'a', 'd', 'e', 'r', 0,
    'l', 'o', 'g', 'g', 'e', 'r', 0,
    'm', 'a', 'p', 'p', 'e', 'r', 0,
    'm', 'a', 'r', 'g', 'i', 'n', 0,
    'm', 'a', 'r', 'k', 'u', 'p', 0,
    'm', 'a', 't', 'r', 'i', 'x', 0,
    'm', 'a', 'x', 'V', 'a', 'l', 0,
    'm', 'i', 'n', 'V', 'a', 'l', 0,
    'm', 'i', 'n', 'u', 't', 'e', 0,
    'm', 'i', 'r', 'r', 'o', 'r', 0,
    'm', 'o', 'n', 't', 'h', 's', 0,
    'n', 'a', 'v', 'D', 'i', 'r', 0,
    'n', 'e', 'e', 'd', 'e', 'd', 0,
    'n', 'e', 'w', 'm', 's', 'g', 0,
    'n', 'e', 'w', 'w', 'i', 'n', 0,
    'n', 'u', 'm', 'b', 'e', 'r', 0,
    'o', 'C', 'o', 'l', 'o', 'r', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'o', 'l', 'd', 'S', 'e', 'l', 0,
    'o', 'l', 'd', 'w', 'i', 'n', 0,
    'o', 'r', 'i', 'e', 'n', 't', 0,
    'o', 'r', 'i', 'g', 'i', 'n', 0,
    'o', 't', 'h', 'e', 'r', 'E', 0,
    'o', 't', 'h', 'e', 'r', 'W', 0,
    'p', 'a', 'g', 'e', 'I', 'd', 0,
    'p', 'a', 'g', 'e', 'T', 'o', 0,
    'p', 'a', 'r', 'a', 'm', 's', 0,
    'p', 'i', 'c', 'k', 'e', 'r', 0,
    'p', 'l', 'u', 'r', 'a', 'l', 0,
    'p', 'o', 'i', 'n', 't', 's', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    'p', 'r', 'o', 'm', 'p', 't', 0,
    'p', 'y', 'B', 'u', 'f', 'f', 0,
    'p', 'y', 'P', 'e', 'n', 's', 0,
    'r', 'a', 'd', 'i', 'u', 's', 0,
    'r', 'e', 'a', 's', 'o', 'n', 0,
    'r', 'e', 'd', 'r', 'a', 'w', 0,
    'r', 'e', 'g', 'i', 'o', 'n', 0,
    'r', 'o', 'w', 'M', 'a', 'x', 0,
    'r', 'o', 'w', 'M', 'i', 'n', 0,
    's', 'A', 'r', 'r', 'a', 'y', 0,
    's', 't', 'a', 'r', 't', 'B', 0,
    's', 't', 'a', 'r', 't', 'G', 0,
    's', 't', 'a', 'r', 't', 'R', 0,
    's', 't', 'a', 'r', 't', 'X', 0,
    's', 't', 'a', 'r', 't', 'Y', 0,
    's', 't', 'a', 't', 'u', 's', 0,
    's', 't', 'r', 'e', 'a', 'm', 0,
    's', 't', 'r', 'i', 'd', 'e', 0,
    's', 't', 'r', 'i', 'n', 'g', 0,
    's', 't', 'y', 'l', 'e', 's', 0,
    's', 'z', 'F', 'i', 'l', 'e', 0,
    't', 'o', 'c', 'o', 'p', 'y', 0,
    't', 'o', 'g', 'g', 'l', 'e', 0,
    't', 'o', 'o', 'l', 'I', 'd', 0,
    't', 'o', 'o', 'l', 'i', 'd', 0,
    'v', 'i', 'e', 'w', 'e', 'r', 0,
    'w', 'e', 'i', 'g', 'h', 't', 0,
    'w', 'h', 'e', 'n', 'c', 'e', 0,
    'w', 'i', 'd', 't', 'h', 's', 0,
    'w', 'i', 'n', 'N', 'e', 'w', 0,
    'w', 'i', 'n', 'O', 'l', 'd', 0,
    'w', 'i', 'n', 'd', 'i', 'd', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 0,
    'w', 'x', 'E', 'd', 'g', 'e', 0,
    'w', 'x', 'F', 'o', 'n', 't', 0,
    'w', 'x', 'G', 'C', 'D', 'C', 0,
    'w', 'x', 'I', 'c', 'o', 'n', 0,
    'w', 'x', 'M', 'a', 's', 'k', 0,
    'w', 'x', 'M', 'e', 'n', 'u', 0,
    'w', 'x', 'R', 'e', 'c', 't', 0,
    'w', 'x', 'S', 'i', 'z', 'e', 0,
    'x', 'S', 'c', 'a', 'l', 'e', 0,
    'x', 'S', 't', 'a', 'r', 't', 0,
    'x', 's', 'c', 'a', 'l', 'e', 0,
    'y', 'S', 'c', 'a', 'l', 'e', 0,
    'y', 'S', 't', 'a', 'r', 't', 0,
    'A', '_', 'C', 'S', 'T', 0,
    'A', '_', 'E', 'S', 'T', 0,
    'A', '_', 'W', 'S', 'T', 0,
    'A', 'b', 'o', 'v', 'e', 0,
    'A', 'l', 'l', 'o', 'w', 0,
    'A', 'p', 'p', 'l', 'y', 0,
    'B', 'e', 'l', 'o', 'w', 0,
    'C', 'l', 'e', 'a', 'r', 0,
    'D', 'e', 'c', 'B', 'y', 0,
    'D', 'e', 'c', 'T', 'o', 0,
    'E', 'Q', 'U', 'I', 'V', 0,
    'F', 'F', 'o', 'n', 't', 0,
    'F', 'l', 'u', 's', 'h', 0,
    'G', 'M', 'T', '1', '0', 0,
    'G', 'M', 'T', '1', '1', 0,
    'G', 'M', 'T', '1', '2', 0,
    'G', 'M', 'T', '1', '3', 0,
    'G', 'M', 'T', '_', '1', 0,
    'G', 'M', 'T', '_', '2', 0,
    'G', 'M', 'T', '_', '3', 0,
    'G', 'M', 'T', '_', '4', 0,
    'G', 'M', 'T', '_', '5', 0,
    'G', 'M', 'T', '_', '6', 0,
    'G', 'M', 'T', '_', '7', 0,
    'G', 'M', 'T', '_', '8', 0,
    'G', 'M', 'T', '_', '9', 0,
    'G', 'e', 't', 'D', 'C', 0,
    'G', 'e', 't', 'I', 'D', 0,
    'G', 'e', 't', 'I', 'd', 0,
    'G', 'e', 't', 'T', 'm', 0,
    'G', 'e', 't', 'X', '1', 0,
    'G', 'e', 't', 'X', '2', 0,
    'G', 'e', 't', 'Y', '1', 0,
    'G', 'e', 't', 'Y', '2', 0,
    'I', 'D', '_', 'N', 'O', 0,
    'I', 'D', '_', 'O', 'K', 0,
    'I', 'D', '_', 'U', 'P', 0,
    'I', 'n', 'c', 'B', 'y', 0,
    'I', 'n', 'c', 'T', 'o', 0,
    'I', 'n', 's', 'e', 't', 0,
    'I', 's', 'B', 'M', 'P', 0,
    'I', 's', 'D', 'S', 'T', 0,
    'I', 's', 'T', 'D', 'I', 0,
    'K', 'e', 'y', 'U', 'p', 0,
    'L', 'i', 'g', 'h', 't', 0,
    'L', 'o', 'w', 'e', 'r', 0,
    'M', 'e', 'r', 'g', 'e', 0,
    'N', 'O', 'R', 'T', 'H', 0,
    'N', 'O', '_', 'O', 'P', 0,
    'N', 'e', 'w', 'I', 'd', 0,
    'O', 'n', 'R', 'u', 'n', 0,
    'P', 'a', 'u', 's', 'e', 0,
    'P', 'r', 'i', 'n', 't', 0,
    'P', 'u', 'l', 's', 'e', 0,
    'R', 'a', 'i', 's', 'e', 0,
    'S', 'O', 'U', 'T', 'H', 0,
    'S', 'P', '_', '3', 'D', 0,
    'S', 'e', 'e', 'k', 'I', 0,
    'S', 'e', 'e', 'k', 'O', 0,
    'S', 'e', 't', 'I', 'd', 0,
    'S', 'e', 't', 'T', 'm', 0,
    'S', 'e', 't', 'u', 'p', 0,
    'S', 'h', 'e', 'l', 'l', 0,
    'S', 'l', 'a', 'n', 't', 0,
    'S', 't', 'o', 'r', 'e', 0,
    'T', 'e', 'l', 'l', 'I', 0,
    'T', 'e', 'l', 'l', 'O', 0,
    'T', 'o', 'D', 'I', 'P', 0,
    'T', 'o', 'U', 'T', 'C', 0,
    'T', 'o', 'd', 'a', 'y', 0,
    'U', 'n', 'R', 'e', 'f', 0,
    'U', 'n', 's', 'e', 't', 0,
    'a', 'c', 'c', 'e', 'l', 0,
    'a', 'l', 'i', 'g', 'n', 0,
    'b', 'C', 'a', 's', 'e', 0,
    'b', 'D', 'o', 'I', 't', 0,
    'b', 'r', 'u', 's', 'h', 0,
    'b', 't', 'n', 'i', 'd', 0,
    'c', 'a', 'r', 'e', 't', 0,
    'c', 'h', 'e', 'c', 'k', 0,
    'c', 'h', 'i', 'l', 'd', 0,
    'c', 'l', 'e', 'a', 'r', 0,
    'c', 'l', 'o', 'n', 'e', 0,
    'c', 'l', 'o', 's', 'e', 0,
    'c', 'o', 'l', 'B', 'g', 0,
    'c', 'o', 'l', 'F', 'g', 0,
    'c', 'o', 'o', 'r', 'd', 0,
    'c', 'o', 'u', 'n', 't', 0,
    'c', 's', 'i', 'd', 'l', 0,
    'd', 'e', 'l', 't', 'a', 0,
    'd', 'e', 'n', 'u', 'm', 0,
    'd', 'e', 'p', 't', 'h', 0,
    'd', 'o', 'N', 'o', 'w', 0,
    'e', 'n', 't', 'r', 'y', 0,
    'e', 'r', 'r', 'o', 'r', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'f', 'i', 'e', 'l', 'd', 0,
    'f', 'i', 'l', 'e', 's', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'f', 'l', 'u', 's', 'h', 0,
    'f', 'o', 'c', 'u', 's', 0,
    'f', 'o', 'r', 'c', 'e', 0,
    'f', 'r', 'a', 'm', 'e', 0,
    'f', 'r', 'o', 'm', '_', 0,
    'h', 'f', 'l', 'a', 'g', 0,
    'h', 'i', 'c', 'o', 'n', 0,
    'h', 'o', 'u', 'r', 's', 0,
    'i', 'c', 'o', 'n', 's', 0,
    'i', 'd', 'r', 'e', 'f', 0,
    'i', 'm', 'a', 'g', 'e', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'i', 's', 'E', 'n', 'd', 0,
    'i', 't', 'e', 'm', '1', 0,
    'i', 't', 'e', 'm', '2', 0,
    'i', 't', 'e', 'm', 's', 0,
    'l', 'a', 'b', 'e', 'l', 0,
    'l', 'e', 'v', 'e', 'l', 0,
    'm', 'a', 'j', 'o', 'r', 0,
    'm', 'a', 't', '2', 'D', 0,
    'm', 'i', 'c', 'r', 'o', 0,
    'm', 'i', 'l', 'l', 'i', 0,
    'm', 'i', 'n', 'o', 'r', 0,
    'm', 'o', 'd', 'i', 'f', 0,
    'm', 'o', 'n', 't', 'h', 0,
    'm', 's', 'e', 'c', 's', 0,
    'n', 'e', 'w', 's', 'z', 0,
    'n', 'o', 'D', 'S', 'T', 0,
    'o', 'l', 'd', 's', 'z', 0,
    'o', 't', 'h', 'e', 'r', 0,
    'o', 'w', 'n', 'e', 'r', 0,
    'p', 'a', 'g', 'e', 's', 0,
    'p', 'a', 't', 'h', 's', 0,
    'p', 'i', 'x', 'e', 'l', 0,
    'p', 'o', 'i', 'n', 't', 0,
    'p', 'o', 'p', 'u', 'p', 0,
    'p', 't', 'E', 'n', 'd', 0,
    'r', 'a', 't', 'i', 'o', 0,
    'r', 'e', 's', 'e', 't', 0,
    's', 'i', 'z', 'e', 'r', 0,
    's', 'l', 'a', 'n', 't', 0,
    's', 't', 'a', 'r', 't', 0,
    's', 't', 'a', 't', 'e', 0,
    's', 't', 'o', 'p', 's', 0,
    't', 'h', 'e', 'm', 'e', 0,
    't', 'i', 'm', 'e', 'r', 0,
    't', 'i', 'm', 'e', 't', 0,
    't', 'i', 't', 'l', 'e', 0,
    't', 'o', 'R', 'o', 'w', 0,
    'v', 'e', 'r', 'b', 's', 0,
    'v', 'f', 'l', 'a', 'g', 0,
    'w', 'e', 'e', 'k', 's', 0,
    'w', 'h', 'i', 'c', 'h', 0,
    'w', 'i', 'n', 'i', 'd', 0,
    'w', 'r', 'i', 't', 'e', 0,
    'w', 'x', 'L', 'o', 'g', 0,
    'w', 'x', 'P', 'e', 'n', 0,
    'x', 'U', 'n', 'i', 't', 0,
    'x', 'd', 'e', 's', 't', 0,
    'x', 's', 't', 'e', 'p', 0,
    'y', 'U', 'n', 'i', 't', 0,
    'y', 'd', 'e', 's', 't', 0,
    'y', 'e', 'a', 'r', 's', 0,
    'y', 's', 't', 'e', 'p', 0,
    'A', 'K', 'D', 'T', 0,
    'A', 'K', 'S', 'T', 0,
    'A', 's', 'I', 's', 0,
    'B', 'e', 'l', 'l', 0,
    'B', 'l', 'u', 'r', 0,
    'B', 'o', 't', 'h', 0,
    'C', 'E', 'S', 'T', 0,
    'E', 'A', 'S', 'T', 0,
    'E', 'E', 'S', 'T', 0,
    'F', 'i', 'n', 'd', 0,
    'G', 'M', 'T', '0', 0,
    'G', 'M', 'T', '1', 0,
    'G', 'M', 'T', '2', 0,
    'G', 'M', 'T', '3', 0,
    'G', 'M', 'T', '4', 0,
    'G', 'M', 'T', '5', 0,
    'G', 'M', 'T', '6', 0,
    'G', 'M', 'T', '7', 0,
    'G', 'M', 'T', '8', 0,
    'G', 'M', 'T', '9', 0,
    'G', 'R', 'O', 'W', 0,
    'G', 'e', 't', 'C', 0,
    'G', 'e', 't', 'H', 0,
    'G', 'e', 't', 'W', 0,
    'G', 'e', 't', 'X', 0,
    'G', 'e', 't', 'Y', 0,
    'H', 'i', 'd', 'e', 0,
    'I', 's', 'O', 'k', 0,
    'K', 'i', 'l', 'l', 0,
    'L', 'o', 'a', 'd', 0,
    'M', 'a', 'k', 'e', 0,
    'M', 'a', 'x', 'X', 0,
    'M', 'a', 'x', 'Y', 0,
    'M', 'i', 'n', 'X', 0,
    'M', 'i', 'n', 'Y', 0,
    'N', 'A', 'N', 'D', 0,
    'N', 'Z', 'D', 'T', 0,
    'N', 'Z', 'S', 'T', 0,
    'P', 'e', 'e', 'k', 0,
    'P', 'l', 'a', 'y', 0,
    'P', 'u', 's', 'h', 0,
    'P', 'u', 't', 'C', 0,
    'S', 'e', 't', 'X', 0,
    'S', 'e', 't', 'Y', 0,
    'T', 'I', 'L', 'E', 0,
    'T', 'i', 'l', 'e', 0,
    'T', 'r', 'a', 'p', 0,
    'U', 'N', 'o', 'w', 0,
    'W', 'r', 'a', 'p', 0,
    'a', 'g', 'e', '_', 0,
    'a', 'r', 'e', 'a', 0,
    'a', 't', 't', 'r', 0,
    'b', 'i', 't', 's', 0,
    'b', 'o', 'l', 'd', 0,
    'c', 'o', 'l', 's', 0,
    'c', 'o', 'n', 'v', 0,
    'd', 'a', 'y', 's', 0,
    'd', 'e', 's', 'c', 0,
    'd', 'i', 'f', 'f', 0,
    'd', 'o', 'I', 't', 0,
    'd', 'o', 'n', 'e', 0,
    'd', 'p', 'i', 'X', 0,
    'd', 'p', 'i', 'Y', 0,
    'e', 'd', 'g', 'e', 0,
    'e', 'n', 'd', 'X', 0,
    'e', 'n', 'd', 'Y', 0,
    'f', 'o', 'n', 't', 0,
    'f', 'r', 'e', 'q', 0,
    'f', 'r', 'o', 'm', 0,
    'f', 'u', 'n', 'c', 0,
    'g', 'r', 'o', 'w', 0,
    'h', 'e', 'l', 'p', 0,
    'h', 'g', 'a', 'p', 0,
    'h', 'o', 'r', 'z', 0,
    'h', 'o', 'u', 'r', 0,
    'h', 't', 'm', 'l', 0,
    'i', 'm', 'p', 'l', 0,
    'i', 'n', 'c', 'H', 0,
    'i', 'n', 'c', 'W', 0,
    'i', 'n', 'f', 'o', 0,
    'j', 'o', 'i', 'n', 0,
    'k', 'i', 'n', 'd', 0,
    'l', 'a', 'n', 'g', 0,
    'l', 'e', 'f', 't', 0,
    'l', 'o', 'o', 'p', 0,
    'm', '_', '1', '1', 0,
    'm', '_', '1', '2', 0,
    'm', '_', '2', '1', 0,
    'm', '_', '2', '2', 0,
    'm', 'a', 'x', 'H', 0,
    'm', 'a', 'x', 'W', 0,
    'm', 'd', 'a', 'y', 0,
    'm', 'i', 'n', 'H', 0,
    'm', 'i', 'n', 'W', 0,
    'm', 'o', 'd', 'e', 0,
    'm', 's', 'e', 'c', 0,
    'p', 'S', 't', 'r', 0,
    'p', 'a', 'g', 'e', 0,
    'p', 'r', 'o', 'p', 0,
    'r', 'o', 'l', 'e', 0,
    'r', 'o', 'w', 's', 0,
    's', 'e', 'e', 'k', 0,
    's', 'k', 'i', 'p', 0,
    's', 'p', 'e', 'c', 0,
    's', 'r', 'c', '1', 0,
    's', 'r', 'c', '2', 0,
    's', 't', 'o', 'p', 0,
    't', 'a', 'b', 's', 0,
    't', 'b', 'a', 'r', 0,
    't', 'e', 'l', 'l', 0,
    't', 'o', 'I', 'd', 0,
    't', 'o', 'o', 'l', 0,
    't', 'r', 'e', 'e', 0,
    'u', 'n', 'i', 't', 0,
    'u', 's', 'e', 'r', 0,
    'v', 'e', 'r', 'b', 0,
    'v', 'e', 't', 'o', 0,
    'v', 'g', 'a', 'p', 0,
    'w', 'h', 'a', 't', 0,
    'w', 'x', 'D', 'C', 0,
    'x', 'E', 'n', 'd', 0,
    'x', 'P', 'o', 's', 0,
    'x', 'l', 'e', 'n', 0,
    'x', 'o', 'f', 'f', 0,
    'x', 's', 'r', 'c', 0,
    'y', 'E', 'n', 'd', 0,
    'y', 'd', 'a', 'y', 0,
    'y', 'e', 'a', 'r', 0,
    'y', 'l', 'e', 'n', 0,
    'y', 'o', 'f', 'f', 0,
    'y', 's', 'r', 'c', 0,
    'A', 'D', 'T', 0,
    'A', 'b', 's', 0,
    'A', 'd', 'd', 0,
    'A', 'p', 'r', 0,
    'A', 'u', 'g', 0,
    'C', 'D', 'T', 0,
    'C', 'E', 'T', 0,
    'E', 'D', 'T', 0,
    'E', 'o', 'f', 0,
    'F', 'e', 'b', 0,
    'F', 'r', 'i', 0,
    'G', 'e', 't', 0,
    'H', 'S', 'T', 0,
    'J', 'a', 'n', 0,
    'J', 'u', 'l', 0,
    'J', 'u', 'n', 0,
    'M', 'D', 'T', 0,
    'M', 'S', 'D', 0,
    'M', 'S', 'K', 0,
    'M', 'S', 'T', 0,
    'M', 'a', 'r', 0,
    'M', 'a', 'y', 0,
    'M', 'o', 'n', 0,
    'N', 'O', 'R', 0,
    'N', 'e', 'g', 0,
    'N', 'o', 'v', 0,
    'O', 'c', 't', 0,
    'P', 'D', 'T', 0,
    'P', 'S', 'T', 0,
    'S', 'a', 't', 0,
    'S', 'e', 'p', 0,
    'S', 'e', 't', 0,
    'S', 'u', 'n', 0,
    'T', 'h', 'u', 0,
    'T', 'u', 'e', 0,
    'W', 'E', 'T', 0,
    'W', 'e', 'd', 0,
    'X', 'o', 'r', 0,
    'a', 'd', 'd', 0,
    'a', 'p', 'p', 0,
    'a', 'r', 'r', 0,
    'b', 'm', 'p', 0,
    'b', 'o', 'x', 0,
    'b', 'p', 'p', 0,
    'b', 'u', 'f', 0,
    'b', 'u', 't', 0,
    'c', 'a', 'p', 0,
    'c', 'h', '1', 0,
    'c', 'h', '2', 0,
    'c', 'm', 'd', 0,
    'c', 't', 'x', 0,
    'c', 'x', '1', 0,
    'c', 'x', '2', 0,
    'c', 'y', '1', 0,
    'c', 'y', '2', 0,
    'd', 'd', 't', 0,
    'd', 'e', 'c', 0,
    'd', 'e', 'f', 0,
    'd', 'i', 'm', 0,
    'd', 'p', 'i', 0,
    'e', 'n', 'v', 0,
    'e', 'o', 'f', 0,
    'e', 'v', 't', 0,
    'f', 'r', 'm', 0,
    'h', 's', 'v', 0,
    'h', 'u', 'e', 0,
    'i', 'd', 'x', 0,
    'i', 'm', 'g', 0,
    'i', 'n', 'c', 0,
    'j', 'd', 'n', 0,
    'k', 'e', 'y', 0,
    'l', 'o', 'c', 0,
    'm', 'a', 'x', 0,
    'm', 'i', 'n', 0,
    'm', 'o', 'n', 0,
    'o', 'b', 'j', 0,
    'p', 'a', 'l', 0,
    'p', 'i', 'd', 0,
    'p', 'o', 's', 0,
    'p', 't', '1', 0,
    'p', 't', '2', 0,
    'p', 't', 'r', 0,
    'r', 'e', 'l', 0,
    'r', 'g', 'b', 0,
    's', 'e', 'l', 0,
    's', 'e', 'p', 0,
    's', 'i', 'g', 0,
    's', 't', 'r', 0,
    't', 'o', '_', 0,
    'u', 'r', 'l', 0,
    'v', '1', '1', 0,
    'v', '1', '2', 0,
    'v', '2', '1', 0,
    'v', '2', '2', 0,
    'v', 'a', 'r', 0,
    'v', 'e', 'c', 0,
    'y', 'e', 's', 0,
    'D', 'o', 0,
    'b', '1', 0,
    'b', '2', 0,
    'b', 'g', 0,
    'c', 'x', 0,
    'd', 'c', 0,
    'd', 'i', 0,
    'd', 'y', 0,
    'f', 'g', 0,
    'f', 's', 0,
    'g', '1', 0,
    'h', 'c', 0,
    'm', 'r', 0,
    'p', 'm', 0,
    'r', '1', 0,
    'r', '2', 0,
    's', 'a', 0,
    's', 'b', 0,
    't', 'm', 0,
    't', 'z', 0,
    'w', 'h', 0,
    'x', '3', 0,
    'x', 'c', 0,
    'x', 's', 0,
    'x', 'x', 0,
    'y', '3', 0,
    'y', 'c', 0,
    'y', 'y', 0,
};
size_t testSizetTypemap(size_t value)
{
    size_t local = value;
    return local;
}

wxIntPtr testIntPtrTypemap(wxIntPtr value)
{
    wxIntPtr local = value;
    return local;
}

wxUIntPtr testUIntPtrTypemap(wxUIntPtr value)
{
    wxUIntPtr local = value;
    return local;
}

        #include <wx/version.h>
        const int MAJOR_VERSION = wxMAJOR_VERSION;
        const int MINOR_VERSION = wxMINOR_VERSION;
        const int RELEASE_NUMBER = wxRELEASE_NUMBER;
// wxPython's API helper and utility functions

//--------------------------------------------------------------------------
// wxString conversion

// See also the wxString MappedType.  This code is similar, but doesn't
// allocate a new wxString instance on the heap, is able to convert
// non-string/unicode objects to unicode, and won't raise exceptions
static wxString i_Py2wxString(PyObject* source)
{
#if wxUSE_UNICODE_WCHAR == 0
#error wxString conversion can only handle WCHAR wxStrings currently
#endif
    PyErr_Clear();
    PyObject* uni = source;
    if (PyBytes_Check(source)) {
        // if it's a string object convert it to unicode first, assumes utf-8
        uni = PyUnicode_FromEncodedObject(source, "utf-8", "strict");
        if (PyErr_Occurred()) {
            PyErr_Clear();
            return wxEmptyString;
        }
    }
    else if (!PyUnicode_Check(source)) {
#if PY_MAJOR_VERSION >= 3
        uni = PyObject_Str(source);
#else
        uni = PyObject_Unicode(source);
#endif
        if (PyErr_Occurred()) {
            PyErr_Clear();
            return wxEmptyString;
        }
    }
    wxString target;
    size_t len = PyUnicode_GET_LENGTH(uni);
    if (len) {
        wxPyUnicode_AsWideChar(uni, wxStringBuffer(target, len), len);
    }
    if (!PyUnicode_Check(source))
        Py_DECREF(uni);  // release the temporary Unicode object we created
    return target;
}


// TODO:  This might be a good way to share the string conversion code here and in string.sip...
// A function to convert a Python string or unicode object to a wxString
// NOTE that it is inline so it should go in the header section
//inline wxString Py2wxString(PyObject* obj, bool setException=false, int& isErr=0) {
//    wxString str;
//    PyObject* uni = obj;
//    if (PyBytes_Check(obj)) {
//        // if it's a string object convert it to unicode first, assuming utf-8
//        uni = PyUnicode_FromEncodedObject(sipPy, "utf-8", "strict");
//        if (PyErr_Occurred()) {
//            if (setException) {
//                isErr = 1;
//            }
//            else {
//                PyErr_Clear();
//            }
//            return wxEmptyString;
//        }
//    }
//    // TODO: Coerce non-unicode types to unicode here?  (Classic does)
//    size_t len = PyUnicode_GET_LENGTH(uni);
//    if (len) {
//        wxPyUnicode_AsWideChar(uni, wxStringBuffer(str, len), len);
//    }
//    if (obj != uni)
//        Py_DECREF(uni) // release the temporary Unicode object we may have created
//    return str;
//}

//--------------------------------------------------------------------------
// Wrapped object checks and converters
//
// TODO: Add some versions of these helpers that take a sipTypeDef
// instead of a name? They're accessible everywhere we need them, and
// it may be enough of an efficiency boost to make it worth it.

// Create a PyObject of the requested type from a void* and a class name.
static PyObject* i_wxPyConstructObject(void* ptr,
                                       const wxString& className,
                                       bool setThisOwn)
{
    wxString name = className;
    wxString nsDelimiter = "::";
    int pos = name.Find(nsDelimiter);
    if (pos != wxNOT_FOUND)
        name = name.Mid(pos + nsDelimiter.Len());

    const sipTypeDef* td = sipFindType(name.c_str());
    if (!td)
        return NULL;
    PyObject* transferObj = setThisOwn ? Py_None : NULL;
    return sipConvertFromType(ptr, td, transferObj);
}


// Check if a PyObject is a wrapped type
static bool i_wxPyWrappedPtr_Check(PyObject* obj)
{
    return PyObject_TypeCheck(obj, sipWrapper_Type);
}


// Check if a PyObject is a specific wrapped class or subclass
static bool i_wxPyWrappedPtr_TypeCheck(PyObject* obj, const wxString& className)
{
    const sipTypeDef* td = sipFindType(className.c_str());
    if (!td)
        return false;
    return sipCanConvertToType(obj, td, SIP_NO_CONVERTORS);
}


// Convert a wrapped SIP object to its C++ pointer, ensuring that it is of the expected type
static bool i_wxPyConvertWrappedPtr(PyObject* obj, void **ptr, const wxString& className)
{
    const sipTypeDef* td = sipFindType(className.c_str());
    if (!td)
        return false;
    if (! sipCanConvertToType(obj, td, SIP_NO_CONVERTORS))
        return false;
    int sipIsErr = 0;
    *ptr = sipConvertToType(obj, td, NULL, SIP_NO_CONVERTORS, 0, &sipIsErr);
    return true;
}


//--------------------------------------------------------------------------
// Deal with the GIL

// Calls from wxWindows back to Python code, or even any PyObject
// manipulations, PyDECREF's and etc. should be wrapped in calls to these functions:
static wxPyBlock_t i_wxPyBeginBlockThreads()
{
    if (! Py_IsInitialized()) {
        return (wxPyBlock_t)0;
    }
    PyGILState_STATE state = PyGILState_Ensure();
    return state;
}

static void i_wxPyEndBlockThreads(wxPyBlock_t blocked)
{
    if (! Py_IsInitialized()) {
        return;
    }
    PyGILState_Release(blocked);
}

//--------------------------------------------------------------------------
// Commonly used helpers for converting small sequences of numbers
// TODO: Are these still needed?

// A helper for converting a 2 element sequence to a pair of integers
static bool i_wxPy2int_seq_helper(PyObject* source, int* i1, int* i2)
{
    bool isFast = PyList_Check(source) || PyTuple_Check(source);
    PyObject *o1, *o2;

    if (!PySequence_Check(source) || PySequence_Length(source) != 2)
        return false;

    if (isFast) {
        o1 = PySequence_Fast_GET_ITEM(source, 0);
        o2 = PySequence_Fast_GET_ITEM(source, 1);
    }
    else {
        o1 = PySequence_GetItem(source, 0);
        o2 = PySequence_GetItem(source, 1);
    }

    *i1 = wxPyInt_AsLong(o1);
    *i2 = wxPyInt_AsLong(o2);

    if (! isFast) {
        Py_DECREF(o1);
        Py_DECREF(o2);
    }
    return true;
}

// A helper for converting a 4 element sequence to a set of integers
static bool i_wxPy4int_seq_helper(PyObject* source, int* i1, int* i2, int* i3, int* i4)
{
    bool isFast = PyList_Check(source) || PyTuple_Check(source);
    PyObject *o1, *o2, *o3, *o4;

    if (!PySequence_Check(source) || PySequence_Length(source) != 4)
        return false;

    if (isFast) {
        o1 = PySequence_Fast_GET_ITEM(source, 0);
        o2 = PySequence_Fast_GET_ITEM(source, 1);
        o3 = PySequence_Fast_GET_ITEM(source, 2);
        o4 = PySequence_Fast_GET_ITEM(source, 3);
    }
    else {
        o1 = PySequence_GetItem(source, 0);
        o2 = PySequence_GetItem(source, 1);
        o3 = PySequence_GetItem(source, 2);
        o4 = PySequence_GetItem(source, 3);
    }

    *i1 = wxPyInt_AsLong(o1);
    *i2 = wxPyInt_AsLong(o2);
    *i3 = wxPyInt_AsLong(o3);
    *i4 = wxPyInt_AsLong(o4);

    if (! isFast) {
        Py_DECREF(o1);
        Py_DECREF(o2);
        Py_DECREF(o3);
        Py_DECREF(o4);
    }
    return true;
}


//--------------------------------------------------------------------------
// wxVariant helpers


// A wxVariantData class that can hold a PyObject
class wxVariantDataPyObject : public wxPyUserDataHelper<wxVariantData>
{
public:
    explicit wxVariantDataPyObject(PyObject* obj = 0)
        : wxPyUserDataHelper<wxVariantData>(obj) {}

    virtual bool Eq(wxVariantData& data) const;

    virtual wxString GetType() const { return wxT("PyObject"); }
    wxVariantData* Clone() const { return new wxVariantDataPyObject(BorrowData()); }
};

bool wxVariantDataPyObject::Eq(wxVariantData& data) const
{
    wxASSERT_MSG( (data.GetType() == wxT("PyObject")),
                  wxT("wxVariantDataPyObject::Eq: argument mismatch") );
    wxVariantDataPyObject& otherData = (wxVariantDataPyObject&) data;

    wxPyThreadBlocker blocker;
    return PyObject_RichCompareBool(BorrowData(), otherData.BorrowData(), Py_EQ);
}




// Helper functions for the wxVariant mapped type. For the basic types that
// wxVariant knows about we will try to store/fetch natively, otherwise we'll
// just carry the PyObject through.
//
// These functions are here in the API so they can be used by both the
// wxVariant MappedType and by other classes or types that want to add support
// for additional kinds of natively supported types (see dataview for example.)

// PyObject --> wxVariant
wxVariant i_wxVariant_in_helper(PyObject* obj)
{
    wxVariant value;

    PyErr_Clear();

    if (PyBytes_Check(obj) || PyUnicode_Check(obj))
        value = Py2wxString(obj);

    else if (PyBool_Check(obj))
        value = (obj == Py_True);

    else if (wxPyInt_Check(obj))
        value = (long)wxPyInt_AS_LONG(obj);

    else if (PyLong_Check(obj))
        value = (long)PyLong_AsLong(obj);

    else if (PyFloat_Check(obj))
        value = PyFloat_AS_DOUBLE(obj);

    else if (obj == Py_None)
        value.MakeNull();

    else if (sipCanConvertToType(obj, sipType_wxDateTime, 0)) {
        wxDateTime* ptr;
        int state = 0;
        int isErr = 0;
        ptr = (wxDateTime*)sipConvertToType(obj, sipType_wxDateTime, NULL, 0, &state, &isErr);
        if (!isErr) {
            value = *ptr;
            sipReleaseType(ptr, sipType_wxDateTime, state);
        }
    }

    else if (wxPyWrappedPtr_TypeCheck(obj, wxT("wxBitmap"))) {
        wxBitmap* ptr;
        wxPyConvertWrappedPtr(obj, (void**)&ptr, wxT("wxBitmap"));
        value << *ptr;
    }

    else if (wxPyWrappedPtr_TypeCheck(obj, wxT("wxImage"))) {
        wxImage* ptr;
        wxPyConvertWrappedPtr(obj, (void**)&ptr, wxT("wxImage"));
        value << *ptr;
    }

    else if (wxPyWrappedPtr_TypeCheck(obj, wxT("wxIcon"))) {
        wxIcon* ptr;
        wxPyConvertWrappedPtr(obj, (void**)&ptr, wxT("wxIcon"));
        value << *ptr;
    }

    else if (wxPyWrappedPtr_TypeCheck(obj, wxT("wxColour"))) {
        wxColour* ptr;
        wxPyConvertWrappedPtr(obj, (void**)&ptr, wxT("wxColour"));
        value << *ptr;
    }

    else if (wxPyCheckStringSequence(obj)) {
        wxArrayString* ptr;
        int state = 0;
        int isErr = 0;
        ptr = (wxArrayString*)sipConvertToType(obj, sipType_wxArrayString, NULL, 0, &state, &isErr);
        if (!isErr) {
            value = *ptr;
            sipReleaseType(ptr, sipType_wxArrayString, state);
        }
    }

    else {
        // Just use the PyObject itself
        PyErr_Clear();
        value = new wxVariantDataPyObject(obj);
    }

    return value;
}


// wxVariant --> PyObject
PyObject* i_wxVariant_out_helper(const wxVariant& value)
{
    PyObject* obj;

    if (value.IsNull()) {
        obj = Py_None;
        Py_INCREF(obj);
    }

    else if (value.IsType("string"))
        obj = wx2PyString(value.GetString());

    else if (value.IsType("bool"))
        obj = PyBool_FromLong((long)value.GetBool());

    else if (value.IsType("long"))
        obj = PyLong_FromLong(value.GetLong());

    else if (value.IsType("longlong"))
        obj = PyLong_FromLongLong(value.GetLongLong().GetValue());

    else if (value.IsType("ulonglong"))
        obj = PyLong_FromUnsignedLongLong(value.GetULongLong().GetValue());

    else if (value.IsType("double"))
        obj = PyFloat_FromDouble(value.GetDouble());

    else if ( value.IsType("datetime") ) {
        wxDateTime val = value.GetDateTime();
        obj = wxPyConstructObject(new wxDateTime(val), "wxDateTime", true);
    }

    else if ( value.IsType("wxBitmap") ) {
        wxBitmap val;
        val << value;
        obj = wxPyConstructObject(new wxBitmap(val), "wxBitmap", true);
    }

    else if ( value.IsType("wxImage") ) {
        wxImage val;
        val << value;
        obj = wxPyConstructObject(new wxImage(val), "wxImage", true);
    }

    else if ( value.IsType("wxIcon") ) {
        wxIcon val;
        val << value;
        obj = wxPyConstructObject(new wxIcon(val), "wxIcon", true);
    }

    else if ( value.IsType("wxColour") ) {
        wxColour val;
        val << value;
        obj = wxPyConstructObject(new wxColour(val), "wxColour", true);
    }

    else if ( value.IsType("arrstring") ) {
        wxArrayString arr = value.GetArrayString();
        obj = sipConvertFromType(&arr, sipType_wxArrayString, NULL);
    }

    else if ( value.IsType("PyObject") ) {
        wxVariantDataPyObject* data = (wxVariantDataPyObject*)value.GetData();
        obj = data->GetData();
    }

    else {
        wxString msg = "Unexpected type (\"" + value.GetType() + "\") in wxVariant.";
        wxPyErr_SetString(PyExc_TypeError, msg.mb_str());
        obj = NULL;
    }

    return obj;
}


//--------------------------------------------------------------------------
// Check if the app object has been created. Raises an exception if not.

// Exception for when the wx.App hasn't been created yet
// (Initialized in wxPyCoreModuleInject)
PyObject* wxPyNoAppError = NULL;

bool i_wxPyCheckForApp(bool raiseException) {
    if (wxApp::GetInstance() != NULL)
        return true;
    else {
        if (raiseException)
            PyErr_SetString(wxPyNoAppError, "The wx.App object must be created first!");
        return false;
    }
}

//--------------------------------------------------------------------------
// Make a memory view object from a C buffer and size.

PyObject* i_wxPyMakeBuffer(void* ptr, Py_ssize_t len, bool readOnly=false) {
    wxPyThreadBlocker blocker;
    if (ptr && len) {
        Py_buffer view;
        int flags = PyBUF_FORMAT|PyBUF_ND;
        if (!readOnly)
            flags |= PyBUF_WRITABLE;
        PyBuffer_FillInfo(&view, NULL, ptr, len, readOnly ? 1:0, flags);
        return PyMemoryView_FromBuffer(&view);
    } else {
        Py_INCREF(Py_None); return Py_None;
        // return PyBytes_FromString("");    TODO: None or an empty string?
    }

//    // TODO: Consider using a sip.array object instead, like this:
//    // Create a sip.array of bytes, and then convert to a memoryview which is
//    // basically the same thing but is a documented built-in Python type
//    int flags = 0;
//    if (readOnly)
//        flags |= SIP_READ_ONLY;
//    PyObject* array = sipConvertToArray(ptr, "B", len, flags);
//    return array;
}


//--------------------------------------------------------------------------
// Check if an object is suitable for conversion to various "value" types that
// can be created from a sequence of numbers, such as wx.Point, wx.Colour,
// wx.Rect, etc.

bool i_wxPyNumberSequenceCheck(PyObject* obj, int reqLength=-1) {
    // Used in the various places where a sequence of numbers can be converted
    // to a wx type, like wxPoint, wxSize, wxColour, etc. Returns true if the
    // object is a Tuple, List or numpy Array of the proper length.

    // See also i_wxPyCheckNumberSequence below which can be used in more
    // general purpose situations and for sequences of any length.

    // tuples or lists are easy
    bool isFast = (PyTuple_Check(obj) || PyList_Check(obj));

    if (!isFast ) {
        // If it's not one of those, then check for an array.
        // It's probably not a good idea to do it this way, but this allows us
        // to check if the object is a numpy array without requiring that
        // numpy be imported even for those applications that are not using it.
        if (strcmp(obj->ob_type->tp_name, "numpy.ndarray") != 0)
            return false;
    }

    // Bail out here if the length isn't given
    if (reqLength == -1)
        return true;

    // Now check that the length matches the expected length
    if (PySequence_Length(obj) != reqLength)
        return false;

    // Check that each item is a number
    for (int i=0; i<reqLength; i+=1) {
        PyObject* item;
        if (isFast)
            item = PySequence_Fast_GET_ITEM(obj, i);
        else
            item = PySequence_ITEM(obj, i);
        bool isNum = PyNumber_Check(item);
        if (!isFast)
            Py_DECREF(item);
        if (!isNum)
            return false;
    }
    return true;
}


//--------------------------------------------------------------------------
// Get the pointer to the C++ object out of the sipSimpleWrapper structure.
// Yes, it's super unsafe and probably stupid, but here it is...

void* i_wxPyGetCppPtr(sipSimpleWrapper* sipPyObj) {
    return sipPyObj->data;
}

//--------------------------------------------------------------------------
// Call the PyMethod_Self API, which is not available when the Python
// limited API is activated.

inline PyObject* i_wxPyMethod_Self(PyObject* method) {
    return PyMethod_Self(method);
}



//--------------------------------------------------------------------------
// Cleanup and reinitialize the wxModules. This is needed because sometimes an
// Extension module will first be imported *after* the wx.App has been
// created, so the wxModules in that extension will not have been registered
// and initialized because they were not yet in memory.

void i_wxPyReinitializeModules() {
    if (i_wxPyCheckForApp(false)) {
        // NOTE: We are intentionally NOT calling wxModule::CleanUpModules
        // here because that could clear some things that will not be reset
        // when used again, leading to crashes. For example, in
        // wxMSWDCImpl::DoGradientFillLinear it is saving a pointer to an API
        // function in a dyn-loaded DLL. When modules are cleaned up then that
        // DLL will be unloaded, leaving a dangling function pointer.  We'll
        // likely end up with multiple instances of some things, but that is
        // better than the alternative currently.
        //wxModule::CleanUpModules();

        wxModule::RegisterModules();
        wxModule::InitializeModules();

        // And since we're not calling CleanUpModules there is no longer any
        // need to re-init the image handlers.
        //wxInitAllImageHandlers();
    }
}

//--------------------------------------------------------------------------
// Route the various usages of the PyDate_ APIs through our API, so we only
// have to worry about PyDateTime_IMPORT being needed in one compilation unit.

int i_wxPyDateTime_Check(PyObject *obj) {
    return PyDateTime_Check(obj);
}

int i_wxPyDate_Check(PyObject *obj) {
    return PyDate_Check(obj);
}

wxDateTime* i_wxPyDateTime_ToWxDateTime(PyObject *obj) {
    return new wxDateTime(PyDateTime_GET_DAY(obj),
                          (wxDateTime::Month)(PyDateTime_GET_MONTH(obj)-1),
                          PyDateTime_GET_YEAR(obj),
                          PyDateTime_DATE_GET_HOUR(obj),
                          PyDateTime_DATE_GET_MINUTE(obj),
                          PyDateTime_DATE_GET_SECOND(obj),
                          PyDateTime_DATE_GET_MICROSECOND(obj)/1000); // micro to milli
}

wxDateTime* i_wxPyDate_ToWxDateTime(PyObject *obj) {
    return new wxDateTime(PyDateTime_GET_DAY(obj),
                          (wxDateTime::Month)(PyDateTime_GET_MONTH(obj)-1),
                          PyDateTime_GET_YEAR(obj));
}

//--------------------------------------------------------------------------

bool i_wxPyCheckNumberSequence(PyObject *obj)
{
    if (PySequence_Check(obj) &&
            !(PyBytes_Check(obj) || PyUnicode_Check(obj))) {

        Py_ssize_t i, len = PySequence_Length(obj);
        bool failed;
        for (i=0; i<len; i++) {
            PyObject* item = PySequence_GetItem(obj, i);
            failed = !PyNumber_Check(item);
            Py_DECREF(item);
            if (failed)
                return false;
        }
        return true;
    }
    return false;
}

bool i_wxPyCheckStringSequence(PyObject *obj)
{
    if (PySequence_Check(obj) &&
            !(PyBytes_Check(obj) || PyUnicode_Check(obj))) {

        Py_ssize_t i, len = PySequence_Length(obj);
        bool failed;
        for (i=0; i<len; i++) {
            PyObject* item = PySequence_GetItem(obj, i);
            failed = !PyBytes_Check(item) && !PyUnicode_Check(item);
            Py_DECREF(item);
            if (failed)
                return false;
        }
        return true;
    }
    return false;
}

//--------------------------------------------------------------------------
// An instance of the API structure
static wxPyAPI  API = {
    i_Py2wxString,
    i_wxPyConstructObject,
    i_wxPyBeginBlockThreads,
    i_wxPyEndBlockThreads,
    i_wxPyWrappedPtr_Check,
    i_wxPyConvertWrappedPtr,
    i_wxPy2int_seq_helper,
    i_wxPy4int_seq_helper,
    i_wxPyWrappedPtr_TypeCheck,
    i_wxVariant_in_helper,
    i_wxVariant_out_helper,
    i_wxPyCheckForApp,
    i_wxPyMakeBuffer,
    i_wxPyNumberSequenceCheck,
    i_wxPyGetCppPtr,
    i_wxPyMethod_Self,
    i_wxPyReinitializeModules,
    i_wxPyDateTime_Check,
    i_wxPyDate_Check,
    i_wxPyDateTime_ToWxDateTime,
    i_wxPyDate_ToWxDateTime,
    i_wxPyCheckNumberSequence,
    i_wxPyCheckStringSequence
};
wxString testStringTypemap(const wxString& str)
{
    wxString local = str;
    return local;
}
wxArrayString testArrayStringTypemap(const wxArrayString& arr)
{
    wxArrayString local = arr;  // force a copy
    return local;
}
wxArrayInt testArrayIntTypemap(const wxArrayInt& arr)
{
    wxArrayInt local = arr;  // force a copy
    return local;
}
wxArrayDouble testArrayDoubleTypemap(const wxArrayDouble& arr)
{
    wxArrayDouble local = arr;  // force a copy
    return local;
}
    #if !defined(__WXMAC__)
    #define wxCURSOR_COPY_ARROW wxCURSOR_ARROW
    #endif
PyObject* _IntersectRect_function(wxRect* r1, wxRect* r2)
{
    wxRegion  reg1(*r1);
    wxRegion  reg2(*r2);
    wxRect    dest(0,0,0,0);
    PyObject* obj;
    
    reg1.Intersect(reg2);
    dest = reg1.GetBox();
    
    wxPyThreadBlocker blocker;
    if (dest != wxRect(0,0,0,0)) {
        wxRect* newRect = new wxRect(dest);
        obj = wxPyConstructObject((void*)newRect, wxT("wxRect"), true);
        return obj;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
    #ifdef __WXMAC__
    #include <wx/osx/private.h>
    #endif
    
    #undef wxTransparentColour
    wxColour wxTransparentColour(0, 0, 0, wxALPHA_TRANSPARENT);
    
    wxColour testColourTypeMap(const wxColour& c)
    {
        return c;
    }
wxColour* _MacThemeColour_function(int themeBrushID)
{
    #ifdef __WXMAC__
        return new wxColour(wxMacCreateCGColorFromHITheme(themeBrushID));
    #else
        wxPyRaiseNotImplemented();
        return NULL;
    #endif
}
wxFont* _FFont_function(int pointSize, wxFontFamily family, int flags, const wxString* faceName, wxFontEncoding encoding)
{
    wxFont* font = wxFont::New(pointSize, family, flags, *faceName, encoding);
    return font;
}
wxVariant testVariantTypemap(const wxVariant& var)
{
    wxVariant local = var;  // force a copy
    return local;
}

wxString testVariantTypeName(const wxVariant& var)
{
    return var.GetType();
}

    #if !wxUSE_HOTKEY
    #define wxEVT_HOTKEY 0
    #endif
        wxEvent* testCppClone(wxEvent& evt) {
            return evt.Clone();
        }
bool _wxHandleFatalExceptions_function(bool doIt)
{
    #if wxUSE_ON_FATAL_EXCEPTION
        return wxHandleFatalExceptions(doIt);
    #else
        wxLogInfo("This build of wxWidgets does not support wxHandleFatalExceptions.");
        return false;
    #endif
}
wxWindowList* _GetTopLevelWindows_function()
{
    return &wxTopLevelWindows;
}
wxWindow* _FindWindowById_function(long id, const wxWindow* parent)
{
    return wxWindow::FindWindowById(id, parent);
}
wxWindow* _FindWindowByName_function(const wxString* name, const wxWindow* parent)
{
    return wxWindow::FindWindowByName(*name, parent);
}
wxWindow* _FindWindowByLabel_function(const wxString* label, const wxWindow* parent)
{
    return wxWindow::FindWindowByLabel(*label, parent);
}
#define NO_IMAGE wxWithImages::NO_IMAGE
#include <wx/popupwin.h>
#if !wxUSE_FSWATCHER
wxEventType wxEVT_FSWATCHER;
#endif //!wxUSE_FSWATCHER

#ifdef __WXMSW__             // If building for Windows...

#include <wx/msw/private.h>
#include <wx/msw/winundef.h>
#include <wx/msw/msvcrt.h>

//----------------------------------------------------------------------
// Use an ActivationContext to ensure that the new (themed) version of
// the comctl32 DLL is loaded.
//----------------------------------------------------------------------

// Note that the use of the ISOLATION_AWARE_ENABLED define replaces the
// activation context APIs with wrappers that dynamically load the API
// pointers from the kernel32 DLL so we don't have to do that ourselves.
// Using ISOLATION_AWARE_ENABLED also causes the manifest resource to be put
// in slot #2 as expected for DLLs. (See wx/msw/wx.rc)

#ifdef ISOLATION_AWARE_ENABLED

static ULONG_PTR wxPySetActivationContext()
{

    OSVERSIONINFO info;
    wxZeroMemory(info);
    info.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
    GetVersionEx(&info);
    if (info.dwMajorVersion < 5)
        return 0;

    ULONG_PTR cookie = 0;
    HANDLE h;
    ACTCTX actctx;
    TCHAR modulename[MAX_PATH];

    GetModuleFileName(wxGetInstance(), modulename, MAX_PATH);
    wxZeroMemory(actctx);
    actctx.cbSize = sizeof(actctx);
    actctx.lpSource = modulename;
    actctx.lpResourceName = MAKEINTRESOURCE(2);
    actctx.hModule = wxGetInstance();
    actctx.dwFlags = ACTCTX_FLAG_HMODULE_VALID | ACTCTX_FLAG_RESOURCE_NAME_VALID;

    h = CreateActCtx(&actctx);
    if (h == INVALID_HANDLE_VALUE) {
        wxLogLastError(wxT("CreateActCtx"));
        return 0;
    }

    if (! ActivateActCtx(h, &cookie))
        wxLogLastError(wxT("ActivateActCtx"));

    return cookie;
}

static void wxPyClearActivationContext(ULONG_PTR cookie)
{
    if (! DeactivateActCtx(0, cookie))
        wxLogLastError(wxT("DeactivateActCtx"));
}

#endif  // ISOLATION_AWARE_ENABLED

#endif // __WXMSW__

void wxPyPreInit(PyObject* moduleDict)
{
#ifdef ISOLATION_AWARE_ENABLED
    wxPySetActivationContext();
#endif
//#ifdef __WXMSW__
////     wxCrtSetDbgFlag(_CRTDBG_LEAK_CHECK_DF
////                     | _CRTDBG_CHECK_ALWAYS_DF
////                     | _CRTDBG_DELAY_FREE_MEM_DF
////         );
//#endif
//
//#ifdef WXP_WITH_THREAD
//#if wxPyUSE_GIL_STATE
//    PyEval_InitThreads();
//#else
//    PyEval_InitThreads();
//    wxPyTStates = new wxPyThreadStateArray;
//    wxPyTMutex = new wxMutex;
//
//    // Save the current (main) thread state in our array
//    PyThreadState* tstate = wxPyBeginAllowThreads();
//    wxPyEndAllowThreads(tstate);
//#endif
//#endif

    // Ensure that the build options in the DLL (or whatever) match this build
    wxApp::CheckBuildOptions(WX_BUILD_OPTIONS_SIGNATURE, "wxPython");
}

void _wxPyCleanup()
{
    wxEntryCleanup();
}

PyObject* wxAssertionError = NULL;      // Exception object raised for wxASSERT failures

void wxPyCoreModuleInject(PyObject* moduleDict)
{
    // Create an exception object to use for wxASSERTions
    wxAssertionError = PyErr_NewException("wx._core.wxAssertionError",
                                            PyExc_AssertionError, NULL);
    PyDict_SetItemString(moduleDict, "wxAssertionError", wxAssertionError);

    // An alias that should be deprecated sometime
    PyDict_SetItemString(moduleDict, "PyAssertionError", wxAssertionError);


    // Create an exception object to use when the app object hasn't been created yet
    wxPyNoAppError = PyErr_NewException("wx._core.PyNoAppError",
                                        PyExc_RuntimeError, NULL);
    PyDict_SetItemString(moduleDict, "PyNoAppError", wxPyNoAppError);

#ifdef __WXGTK__
#define wxPort "__WXGTK__"
#define wxPortName "wxGTK"
#endif
#ifdef __WXMSW__
#define wxPort "__WXMSW__"
#define wxPortName "wxMSW"
#endif
#ifdef __WXMAC__
#define wxPort "__WXMAC__"
#define wxPortName "wxMac"
#endif

    wxInitAllImageHandlers();

    // TODO: Find some magic way to deprecate wx.Platform such that it raises
    // a warning when used...  Maybe a class that returns wx.Port for any __getattr__?
    PyDict_SetItemString(moduleDict, "Port", PyUnicode_FromString(wxPort));
    PyDict_SetItemString(moduleDict, "Platform", PyUnicode_FromString(wxPort));

    PyDict_SetItemString(moduleDict, "wxWidgets_version", wx2PyString(wxVERSION_STRING));

    PyDict_SetItemString(moduleDict, "_sizeof_int", PyLong_FromLong(sizeof(int)));
    PyDict_SetItemString(moduleDict, "_sizeof_long", PyLong_FromLong(sizeof(long)));
    PyDict_SetItemString(moduleDict, "_sizeof_longlong", PyLong_FromLong(sizeof(long long)));
    PyDict_SetItemString(moduleDict, "_sizeof_double", PyLong_FromLong(sizeof(double)));
    PyDict_SetItemString(moduleDict, "_sizeof_size_t", PyLong_FromLong(sizeof(size_t)));
    PyDict_SetItemString(moduleDict, "_LONG_MIN", PyLong_FromLong(LONG_MIN));
    PyDict_SetItemString(moduleDict, "_LONG_MAX", PyLong_FromLong(LONG_MAX));
    PyDict_SetItemString(moduleDict, "_LLONG_MIN", PyLong_FromLongLong(PY_LLONG_MIN));
    PyDict_SetItemString(moduleDict, "_LLONG_MAX", PyLong_FromLongLong(PY_LLONG_MAX));

    // Make a tuple of strings that gives more info about the platform and build.
    PyObject* PlatformInfo = PyList_New(0);
    PyObject* obj;

#define _AddInfoString(st) \
    obj = PyUnicode_FromString(st); \
    PyList_Append(PlatformInfo, obj); \
    Py_DECREF(obj)

    _AddInfoString(wxPort);
    _AddInfoString(wxPortName);
#if wxUSE_UNICODE
    _AddInfoString("unicode");
#if wxUSE_UNICODE_WCHAR
    _AddInfoString("unicode-wchar");
#else
    _AddInfoString("unicode-utf8");
#endif
#else
    _AddInfoString("ansi");
#endif

#ifdef __WXOSX__
    _AddInfoString("wxOSX");
#endif
#ifdef __WXOSX_CARBON__
    _AddInfoString("wxOSX-carbon");
#endif
#ifdef __WXOSX_COCOA__
    _AddInfoString("wxOSX-cocoa");
#endif
#ifdef __WXGTK__
#ifdef __WXGTK3__
    _AddInfoString("gtk3");
#elif __WXGTK20__
    _AddInfoString("gtk2");
#else
    _AddInfoString("gtk1");
#endif
#endif
#ifdef __WXDEBUG__
    _AddInfoString("wx-assertions-on");
#else
    _AddInfoString("wx-assertions-off");
#endif
    _AddInfoString("phoenix");

    obj = wx2PyString(wxVERSION_STRING);
    PyList_Append(PlatformInfo, obj);
    Py_DECREF(obj);

#if wxUSE_AUTOID_MANAGEMENT
    _AddInfoString("autoidman");
#endif

    wxString sip_version = wxString("sip-") + wxString(SIP_VERSION_STR);
    obj = wx2PyString(sip_version);
    PyList_Append(PlatformInfo, obj);
    Py_DECREF(obj);

#undef _AddInfoString

    PyObject* PlatformInfoTuple = PyList_AsTuple(PlatformInfo);
    Py_DECREF(PlatformInfo);
    PyDict_SetItemString(moduleDict, "PlatformInfo", PlatformInfoTuple);

}
bool _IsMainThread_function()
{
    return wxThread::IsMain();
}

void sipVH__core_247(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDialog*dialog)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", dialog, sipType_wxDialog, SIP_NULLPTR);
}

int sipVH__core_246(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDialog*dialog)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", dialog, sipType_wxDialog, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxWindow* sipVH__core_245(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent)
{
     ::wxWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", parent, sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxWindow, &sipRes);

    return sipRes;
}

bool sipVH__core_244(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxFileName& path)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxFileName(path), sipType_wxFileName, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_243(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxFileName& path,int events,const  ::wxString& filter)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NiN", new  ::wxFileName(path), sipType_wxFileName, SIP_NULLPTR, events, new  ::wxString(filter), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_242(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxFileName& path,int events)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Ni", new  ::wxFileName(path), sipType_wxFileName, SIP_NULLPTR, events);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_241(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCommand*command)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", command, sipType_wxCommand, SIP_NULLPTR);
}

bool sipVH__core_240(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCommand*command,bool storeIt)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Db", command, sipType_wxCommand, SIP_NULLPTR, storeIt);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_239(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxConfigBase& config)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &config, sipType_wxConfigBase, SIP_NULLPTR);
}

void sipVH__core_238(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxConfigBase& config)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxConfigBase *>(&config), sipType_wxConfigBase, SIP_NULLPTR);
}

void sipVH__core_237(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxMenu*menu)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", menu, sipType_wxMenu, SIP_NULLPTR);
}

void sipVH__core_236(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int item,const  ::wxPoint& pos)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iN", item, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);
}

bool sipVH__core_235(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int item,const  ::wxPoint& pos)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iN", item, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH__core_234(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& pos)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

bool sipVH__core_233(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxFontEncoding encoding,const  ::wxString& facename)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "FN", encoding, sipType_wxFontEncoding, new  ::wxString(facename), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxFontEncoding sipVH__core_232(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& charset,bool interactive)
{
     ::wxFontEncoding sipRes = ::wxFONTENCODING_SYSTEM;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Nb", new  ::wxString(charset), sipType_wxString, SIP_NULLPTR, interactive);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxFontEncoding, &sipRes);

    return sipRes;
}

bool sipVH__core_231(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxFontEncoding encoding,bool fixedWidthOnly)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Fb", encoding, sipType_wxFontEncoding, fixedWidthOnly);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_230(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& name)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

 ::wxPrintData& sipVH__core_229(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPrintData *sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    int sipRc = sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H1", sipType_wxPrintData, &sipRes);

    if (sipRc < 0)
        return *new  ::wxPrintData();

    return *sipRes;
}

 ::wxDC* sipVH__core_228(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxDC* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxDC, &sipRes);

    return sipRes;
}

void sipVH__core_227(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*minPage,int*maxPage,int*pageFrom,int*pageTo)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(iiii)", minPage, maxPage, pageFrom, pageTo);
}

void sipVH__core_226(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent, ::wxPrintout*printout,const  ::wxString& message)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDN", parent, sipType_wxWindow, SIP_NULLPTR, printout, sipType_wxPrintout, SIP_NULLPTR, new  ::wxString(message), sipType_wxString, SIP_NULLPTR);
}

 ::wxDC* sipVH__core_225(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent)
{
     ::wxDC* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", parent, sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxDC, &sipRes);

    return sipRes;
}

bool sipVH__core_224(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent, ::wxPrintout*printout,bool prompt)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDb", parent, sipType_wxWindow, SIP_NULLPTR, printout, sipType_wxPrintout, SIP_NULLPTR, prompt);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxPrintDialogData& sipVH__core_223(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPrintDialogData *sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    int sipRc = sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H1", sipType_wxPrintDialogData, &sipRes);

    if (sipRc < 0)
        return *new  ::wxPrintDialogData();

    return *sipRes;
}

 ::wxPrintAbortDialog* sipVH__core_222(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent, ::wxPrintout*printout)
{
     ::wxPrintAbortDialog* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", parent, sipType_wxWindow, SIP_NULLPTR, printout, sipType_wxPrintout, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxPrintAbortDialog, &sipRes);

    return sipRes;
}

void sipVH__core_221(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxPrintout*printout)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", printout, sipType_wxPrintout, SIP_NULLPTR);
}

void sipVH__core_220(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxPreviewCanvas*window)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", window, sipType_wxPreviewCanvas, SIP_NULLPTR);
}

bool sipVH__core_219(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxPreviewCanvas*canvas, ::wxDC& dc)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", canvas, sipType_wxPreviewCanvas, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxPrintout* sipVH__core_218(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPrintout* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxPrintout, &sipRes);

    return sipRes;
}

 ::wxFrame* sipVH__core_217(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxFrame* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxFrame, &sipRes);

    return sipRes;
}

 ::wxPreviewCanvas* sipVH__core_216(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPreviewCanvas* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxPreviewCanvas, &sipRes);

    return sipRes;
}

bool sipVH__core_215(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& windowDC, ::wxMemoryDC& destDC,const  ::wxRect& sourceRect,const  ::wxRect& destRect)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNN", &windowDC, sipType_wxDC, SIP_NULLPTR, &destDC, sipType_wxMemoryDC, SIP_NULLPTR, new  ::wxRect(sourceRect), sipType_wxRect, SIP_NULLPTR, new  ::wxRect(destRect), sipType_wxRect, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxRect sipVH__core_214(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& pos)
{
     ::wxRect sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRect, &sipRes);

    return sipRes;
}

bool sipVH__core_213(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,const  ::wxPoint& pos)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxIconBundle sipVH__core_212(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxArtID& id,const  ::wxArtClient& client)
{
     ::wxIconBundle sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxArtID(id), sipType_wxString, SIP_NULLPTR, new  ::wxArtClient(client), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxIconBundle, &sipRes);

    return sipRes;
}

 ::wxBitmap sipVH__core_211(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxArtID& id,const  ::wxArtClient& client,const  ::wxSize& size)
{
     ::wxBitmap sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNN", new  ::wxArtID(id), sipType_wxString, SIP_NULLPTR, new  ::wxArtClient(client), sipType_wxString, SIP_NULLPTR, new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxBitmap, &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_210(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxWindowBase*window)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxWindowBase *>(window), sipType_wxWindowBase, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__core_209(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*window,const  ::wxPoint& point, ::wxHelpEvent::Origin origin)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNF", window, sipType_wxWindowBase, SIP_NULLPTR, new  ::wxPoint(point), sipType_wxPoint, SIP_NULLPTR, origin, sipType_wxHelpEvent_Origin);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_208(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*window)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", window, sipType_wxWindowBase, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_207(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxWindow*window)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxWindow *>(window), sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

void sipVH__core_206(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowID id,const  ::wxString& text)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iN", id, new  ::wxString(text), sipType_wxString, SIP_NULLPTR);
}

void sipVH__core_205(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*window,const  ::wxString& text)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DN", window, sipType_wxWindowBase, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR);
}

void sipVH__core_204(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& viewer,long flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Nl", new  ::wxString(viewer), sipType_wxString, SIP_NULLPTR, flags);
}

void sipVH__core_203(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& titleFormat,const  ::wxSize& size,const  ::wxPoint& pos,bool newFrameEachTime)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "NNNb", new  ::wxString(titleFormat), sipType_wxString, SIP_NULLPTR, new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR, newFrameEachTime);
}

bool sipVH__core_202(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& keyWord, ::wxHelpSearchMode mode)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxString(keyWord), sipType_wxString, SIP_NULLPTR, mode, sipType_wxHelpSearchMode);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxFrame* sipVH__core_201(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxSize*size, ::wxPoint*pos,bool*newFrameEachTime)
{
     ::wxFrame* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H0H4H4b)", sipType_wxFrame, &sipRes, sipType_wxSize, size, sipType_wxPoint, pos, newFrameEachTime);

    return sipRes;
}

bool sipVH__core_200(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& text,const  ::wxPoint& pos)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxString(text), sipType_wxString, SIP_NULLPTR, new  ::wxPoint(pos), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxMDIClientWindow* sipVH__core_199(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxMDIClientWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxMDIClientWindow, &sipRes);

    return sipRes;
}

bool sipVH__core_198(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxMDIParentFrame*parent,long style)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Dl", parent, sipType_wxMDIParentFrame, SIP_NULLPTR, style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_197(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxMouseEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxMouseEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_196(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& ptOrigin,const  ::wxSize& sizePopup)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "NN", new  ::wxPoint(ptOrigin), sipType_wxPoint, SIP_NULLPTR, new  ::wxSize(sizePopup), sipType_wxSize, SIP_NULLPTR);
}

 ::wxToolBar* sipVH__core_195(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long style, ::wxWindowID id,const  ::wxString& name)
{
     ::wxToolBar* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "liN", style, id, new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxToolBar, &sipRes);

    return sipRes;
}

 ::wxStatusBar* sipVH__core_194(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int number,long style, ::wxWindowID id,const  ::wxString& name)
{
     ::wxStatusBar* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iliN", number, style, id, new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxStatusBar, &sipRes);

    return sipRes;
}

void sipVH__core_193(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& text,bool show)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Nb", new  ::wxString(text), sipType_wxString, SIP_NULLPTR, show);
}

void sipVH__core_192(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxFileDialogCustomize& customizer)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &customizer, sipType_wxFileDialogCustomize, SIP_NULLPTR);
}

bool sipVH__core_191(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDialog*dialog)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", dialog, sipType_wxDialog, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_190(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc, ::wxRect& rect,size_t n)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DD=", &dc, sipType_wxDC, SIP_NULLPTR, &rect, sipType_wxRect, SIP_NULLPTR, n);
}

void sipVH__core_189(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,const  ::wxRect& rect,size_t n)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DN=", &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, n);
}

void sipVH__core_188(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRect& rect,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "Ni", new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, flags);
}

void sipVH__core_187(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxComboPopup*popup)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", popup, sipType_wxComboPopup, SIP_NULLPTR);
}

bool sipVH__core_186(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxRect& rect,int flags)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Ni", new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_185(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxKeyEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxKeyEvent(event), sipType_wxKeyEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_184(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc,const  ::wxRect& rect)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DN", &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR);
}

void sipVH__core_183(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxKeyEvent& event)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &event, sipType_wxKeyEvent, SIP_NULLPTR);
}

 ::wxSize sipVH__core_182(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int minWidth,int prefHeight,int maxHeight)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iii", minWidth, prefHeight, maxHeight);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

bool sipVH__core_181(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& item, ::wxString*trueItem)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ND", new  ::wxString(item), sipType_wxString, SIP_NULLPTR, trueItem, sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

long sipVH__core_180(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long style)
{
    long sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", style);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "l", &sipRes);

    return sipRes;
}

int sipVH__core_179(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxTreeItemId& item1,const  ::wxTreeItemId& item2)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxTreeItemId(item1), sipType_wxTreeItemId, SIP_NULLPTR, new  ::wxTreeItemId(item2), sipType_wxTreeItemId, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_178(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long item,long column)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ll", item, column);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

int sipVH__core_177(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long item)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", item);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

int sipVH__core_176(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long item,long column)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ll", item, column);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxItemAttr* sipVH__core_175(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long item)
{
     ::wxItemAttr* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", item);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxItemAttr, &sipRes);

    return sipRes;
}

int sipVH__core_174(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint idx)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "u", idx);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__core_173(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint count)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "u", count);
}

bool sipVH__core_172(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint idx,int widthTitle)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ui", idx, widthTitle);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_171(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxArrayInt& order)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxArrayInt(order), sipType_wxArrayInt, SIP_NULLPTR);
}

void sipVH__core_170(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint idx,bool show)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ub", idx, show);
}

const  ::wxHeaderColumn& sipVH__core_169(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint idx)
{
     ::wxHeaderColumn *sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "u", idx);

    int sipRc = sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H1", sipType_wxHeaderColumn, &sipRes);

    if (sipRc < 0)
    {
        static  ::wxHeaderColumn *sipCpp = SIP_NULLPTR;

        if (!sipCpp)
        {
        sipCpp = new wxHeaderColumnSimple("");
        }

        return *sipCpp;
    }

    return *sipRes;
}

void sipVH__core_168(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxAlignment align)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "F", align, sipType_wxAlignment);
}

void sipVH__core_167(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxBitmapBundle& bitmap)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxBitmapBundle(bitmap), sipType_wxBitmapBundle, SIP_NULLPTR);
}

 ::wxAlignment sipVH__core_166(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxAlignment sipRes = ::wxALIGN_INVALID;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxAlignment, &sipRes);

    return sipRes;
}

 ::wxBitmapBundle sipVH__core_165(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBitmapBundle sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxBitmapBundle, &sipRes);

    return sipRes;
}

int sipVH__core_164(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxArrayInt& aSelections)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &aSelections, sipType_wxArrayInt, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__core_163(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& prefix, ::wxArrayString& res)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(prefix), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxArrayString, &res);
}

int sipVH__core_162(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& pt,long*flags)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxPoint(pt), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(il)", &sipRes, flags);

    return sipRes;
}

bool sipVH__core_161(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t index, ::wxWindow*page,const  ::wxString& text,bool select,int imageId)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=DNbi", index, page, sipType_wxWindow, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR, select, imageId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_160(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t page)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", page);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_159(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*page,const  ::wxString& text,bool select,int imageId)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNbi", page, sipType_wxWindow, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR, select, imageId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_158(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t page,const  ::wxString& text)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=N", page, new  ::wxString(text), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_157(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t nPage)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", nPage);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__core_156(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t page,int image)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=i", page, image);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_155(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxImageList*imageList)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", imageList, sipType_wxImageList, SIP_NULLPTR);
}

int sipVH__core_154(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& string,bool caseSensitive)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Nb", new  ::wxString(string), sipType_wxString, SIP_NULLPTR, caseSensitive);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__core_153(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint n,const  ::wxString& string)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "uN", n, new  ::wxString(string), sipType_wxString, SIP_NULLPTR);
}

 ::wxString sipVH__core_152(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint n)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "u", n);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

uint sipVH__core_151(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    uint sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "u", &sipRes);

    return sipRes;
}

void sipVH__core_150(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPosition& from,const  ::wxPosition& to)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "NN", new  ::wxPosition(from), sipType_wxPosition, SIP_NULLPTR, new  ::wxPosition(to), sipType_wxPosition, SIP_NULLPTR);
}

void sipVH__core_149(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t fromRow,size_t toRow,size_t fromColumn,size_t toColumn)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "====", fromRow, toRow, fromColumn, toColumn);
}

void sipVH__core_148(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPosition& pos)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxPosition(pos), sipType_wxPosition, SIP_NULLPTR);
}

bool sipVH__core_147(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int pages)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", pages);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_146(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t row)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "=", row);
}

 ::wxCoord sipVH__core_145(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t unit)
{
     ::wxCoord sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", unit);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__core_144(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t unitMin,size_t unitMax)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "==", unitMin, unitMax);
}

 ::wxOrientation sipVH__core_143(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxOrientation sipRes = ::wxHORIZONTAL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxOrientation, &sipRes);

    return sipRes;
}

 ::wxSize sipVH__core_142(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& size)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

bool sipVH__core_141(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxScrollWinEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxScrollWinEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_140(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDC& dc)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", &dc, sipType_wxDC, SIP_NULLPTR);
}

bool sipVH__core_139(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*parent)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", parent, sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_138(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*window)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", window, sipType_wxWindow, SIP_NULLPTR);
}

 ::wxObject* sipVH__core_137(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxObject, &sipRes);

    return sipRes;
}

 ::wxBorder sipVH__core_136(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBorder sipRes = ::wxBORDER_DEFAULT;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxBorder, &sipRes);

    return sipRes;
}

void sipVH__core_135(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowVariant variant)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "F", variant, sipType_wxWindowVariant);
}

void sipVH__core_134(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiii", x, y, width, height);
}

void sipVH__core_133(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int minW,int minH,int maxW,int maxH,int incW,int incH)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiiii", minW, minH, maxW, maxH, incW, incH);
}

void sipVH__core_132(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int width,int height)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "ii", width, height);
}

void sipVH__core_131(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int x,int y,int width,int height,int sizeFlags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "iiiii", x, y, width, height, sizeFlags);
}

void sipVH__core_130(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*x,int*y)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(ii)", x, y);
}

 ::wxWindow* sipVH__core_129(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxWindow, &sipRes);

    return sipRes;
}

void sipVH__core_128(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxValidator& validator)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxValidator *>(&validator), sipType_wxValidator, SIP_NULLPTR);
}

 ::wxValidator* sipVH__core_127(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxValidator* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxValidator, &sipRes);

    return sipRes;
}

 ::wxPoint sipVH__core_126(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxPoint sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxPoint, &sipRes);

    return sipRes;
}

bool sipVH__core_125(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int direction,int size,int availableOtherDir)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iii", direction, size, availableOtherDir);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_124(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindowBase*child)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", child, sipType_wxWindowBase, SIP_NULLPTR);
}

bool sipVH__core_123(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int milliseconds,bool oneShot)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ib", milliseconds, oneShot);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_122(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxArrayString& fileNames)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxArrayString(fileNames), sipType_wxArrayString, SIP_NULLPTR);
}

void sipVH__core_121(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEventLoopBase*loop)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", loop, sipType_wxEventLoopBase, SIP_NULLPTR);
}

 ::wxPortId sipVH__core_120(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*major,int*minor,int*micro)
{
     ::wxPortId sipRes = ::wxPORT_UNKNOWN;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(Fiii)", sipType_wxPortId, &sipRes, major, minor, micro);

    return sipRes;
}

 ::wxStandardPaths& sipVH__core_119(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxStandardPaths *sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    int sipRc = sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H1", sipType_wxStandardPaths, &sipRes);

    if (sipRc < 0)
    {
        static  ::wxStandardPaths *sipCpp = SIP_NULLPTR;

        if (!sipCpp)
        {
        sipCpp = & wxStandardPaths::Get();
        }

        return *sipCpp;
    }

    return *sipRes;
}

 ::wxLog* sipVH__core_118(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxLog* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxLog, &sipRes);

    return sipRes;
}

 ::wxEventLoopBase* sipVH__core_117(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEventLoopBase* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxEventLoopBase, &sipRes);

    return sipRes;
}

 ::wxConfigBase* sipVH__core_116(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxConfigBase* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxConfigBase, &sipRes);

    return sipRes;
}

bool sipVH__core_115(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, long eventsToProcess)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "l", eventsToProcess);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_114(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEventCategory cat)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", cat, sipType_wxEventCategory);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH__core_113(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, unsigned long timeout)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "m", timeout);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__core_112(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int rc)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "i", rc);
}

int sipVH__core_111(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

int sipVH__core_110(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEvent& event)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_109(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& basename, ::wxStandardPaths::ConfigFileConv conv)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxString(basename), sipType_wxString, SIP_NULLPTR, conv, sipType_wxStandardPaths_ConfigFileConv);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_108(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxStandardPaths::Dir userDir)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", userDir, sipType_wxStandardPaths_Dir);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_107(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& lang, ::wxStandardPaths::ResourceCat category)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxString(lang), sipType_wxString, SIP_NULLPTR, category, sipType_wxStandardPaths_ResourceCat);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__core_106(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxSizerItem*item)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", item, sipType_wxSizerItem, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_105(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& minSize)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxSize(minSize), sipType_wxSize, SIP_NULLPTR);
}

 ::wxEventCategory sipVH__core_104(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEventCategory sipRes = ::wxEVT_CATEGORY_UI;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxEventCategory, &sipRes);

    return sipRes;
}

 ::wxEvent* sipVH__core_103(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxEvent* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxEvent, &sipRes);

    return sipRes;
}

bool sipVH__core_102(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxEvent& event)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &event, sipType_wxEvent, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_101(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& key,bool bDeleteGroupIfEmpty)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Nb", new  ::wxString(key), sipType_wxString, SIP_NULLPTR, bDeleteGroupIfEmpty);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_100(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool bCurrentOnly)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "b", bCurrentOnly);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxConfigBase::EntryType sipVH__core_99(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& name)
{
     ::wxConfigBase::EntryType sipRes =  ::wxConfigBase::Type_Unknown;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(name), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxConfigBase_EntryType, &sipRes);

    return sipRes;
}

size_t sipVH__core_98(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool bRecursive)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "b", bRecursive);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

const  ::wxString& sipVH__core_97(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxString *sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    int sipRc = sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H1", sipType_wxString, &sipRes);

    if (sipRc < 0)
        return *new  ::wxString();

    return *sipRes;
}

void sipVH__core_96(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool primary)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", primary);
}

bool sipVH__core_95(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxDataFormat(format), sipType_wxDataFormat, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_94(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataObject& data)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &data, sipType_wxDataObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_93(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataObject*data)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", data, sipType_wxDataObject, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_92(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCoord x, ::wxCoord y,const  ::wxArrayString& filenames)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iiN", x, y, new  ::wxArrayString(filenames), sipType_wxArrayString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_91(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCoord x, ::wxCoord y,const  ::wxString& data)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iiN", x, y, new  ::wxString(data), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_90(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCoord x, ::wxCoord y)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "ii", x, y);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxDragResult sipVH__core_89(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxCoord x, ::wxCoord y, ::wxDragResult defResult)
{
     ::wxDragResult sipRes = ::wxDragError;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iiF", x, y, defResult, sipType_wxDragResult);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxDragResult, &sipRes);

    return sipRes;
}

bool sipVH__core_88(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDragResult effect)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", effect, sipType_wxDragResult);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxDragResult sipVH__core_87(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int flags)
{
     ::wxDragResult sipRes = ::wxDragError;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxDragResult, &sipRes);

    return sipRes;
}

bool sipVH__core_86(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxImageDataObject* self = static_cast<wxImageDataObject*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxImageDataObject::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_85(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxHTMLDataObject* self = static_cast<wxHTMLDataObject*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxHTMLDataObject::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_84(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxFileDataObject* self = static_cast<wxFileDataObject*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxFileDataObject::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_83(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxURLDataObject* self = static_cast<wxURLDataObject*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxURLDataObject::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_82(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxTextDataObject* self = static_cast<wxTextDataObject*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxTextDataObject::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH__core_81(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxBitmap& bitmap)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxBitmap(bitmap), sipType_wxBitmap, SIP_NULLPTR);
}

 ::wxBitmap sipVH__core_80(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxBitmap sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxBitmap, &sipRes);

    return sipRes;
}

bool sipVH__core_79(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxBitmapDataObject* self = static_cast<wxBitmapDataObject*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxBitmapDataObject::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_78(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxDataObjectComposite* self = static_cast<wxDataObjectComposite*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxDataObjectComposite::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_77(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, void*buf)
{
    bool sipRes = 0;
        // Call self.GetDataSize() to find out how big the buffer should be
        PyObject* self = NULL;
        PyObject* sizeObj = NULL;
        PyObject* buffer = NULL;
        PyObject* resObj = NULL;
        Py_ssize_t size = 0;
        
        self = wxPyMethod_Self(sipMethod);
        
        sizeObj = PyObject_CallMethod(self, "GetDataSize", "", NULL);
        if (!sizeObj) goto error;
        size = wxPyInt_AsSsize_t(sizeObj);
        
        // Make a buffer that big using the pointer passed to us, and then
        // call the Python method.
        buffer = wxPyMakeBuffer(buf, size);
        resObj = sipCallMethod(0, sipMethod, "S", buffer);
        
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        
        error:
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);
        Py_XDECREF(sizeObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_76(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t len,const void*buf)
{
    bool sipRes = 0;
        PyObject* buffer = wxPyMakeBuffer((void*)buf, len);
        PyObject *resObj = sipCallMethod(0,sipMethod,"S",buffer);
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_75(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t len,const void*buf)
{
    bool sipRes = 0;
        PyObject* buffer = wxPyMakeBuffer((void*)buf, len);
        PyObject *resObj = sipCallMethod(0,sipMethod,"S",buffer);
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

size_t sipVH__core_74(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

bool sipVH__core_73(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, void*buf)
{
    bool sipRes = 0;
        // Call self.GetDataSize() to find out how big the buffer should be
        PyObject* self = NULL;
        PyObject* sizeObj = NULL;
        PyObject* buffer = NULL;
        PyObject* resObj = NULL;
        Py_ssize_t size = 0;
        
        self = wxPyMethod_Self(sipMethod);
        
        sizeObj = PyObject_CallMethod(self, "GetDataSize", "", NULL);
        if (!sizeObj) goto error;
        size = wxPyInt_AsSsize_t(sizeObj);
        
        // Make a buffer that big using the pointer passed to us, and then
        // call the Python method.
        buffer = wxPyMakeBuffer(buf, size);
        resObj = sipCallMethod(0, sipMethod, "S", buffer);
        
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        
        error:
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);
        Py_XDECREF(sizeObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_72(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,void*buf)
{
    bool sipRes = 0;
        // Call self.GetDataSize() to find out how big the buffer should be
        PyObject* self = NULL;
        PyObject* fmtObj = NULL;
        PyObject* sizeObj = NULL;
        PyObject* buffer = NULL;
        PyObject* resObj = NULL;
        Py_ssize_t size = 0;
        
        self = wxPyMethod_Self(sipMethod); // this shouldn't fail, and the reference is borrowed
        
        fmtObj = wxPyConstructObject((void*)&format, "wxDataFormat", false);
        if (!fmtObj) goto error;
        sizeObj = PyObject_CallMethod(self, "GetDataSize", "(O)", fmtObj, NULL);
        if (!sizeObj) goto error;
        size = wxPyInt_AsSsize_t(sizeObj);
        
        // Make a buffer that big using the pointer passed to us, and then
        // call the Python method.
        buffer = wxPyMakeBuffer(buf, size);
        resObj = sipCallMethod(0, sipMethod, "SS", fmtObj, buffer);
        
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        
        error:
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);
        Py_XDECREF(fmtObj);
        Py_XDECREF(sizeObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_71(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        wxDataObjectSimple* self = static_cast<wxDataObjectSimple*>(wxPyGetCppPtr(sipPySelf));
        sipRes = self->wxDataObjectSimple::SetData(format, len, buf);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH__core_70(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,size_t len,const void*buf)
{
    bool sipRes = 0;
        PyObject* buffer = wxPyMakeBuffer((void*)buf, len);
        PyObject *resObj = sipCallMethod(0,sipMethod,"NS",
                               new wxDataFormat(format),sipType_wxDataFormat,NULL,
                               buffer);
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

 ::wxDataFormat sipVH__core_69(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataObject::Direction dir)
{
     ::wxDataFormat sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", dir, sipType_wxDataObject_Direction);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxDataFormat, &sipRes);

    return sipRes;
}

size_t sipVH__core_68(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataObject::Direction dir)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "F", dir, sipType_wxDataObject_Direction);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

size_t sipVH__core_67(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format)
{
    size_t sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxDataFormat(format), sipType_wxDataFormat, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "=", &sipRes);

    return sipRes;
}

bool sipVH__core_66(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxDataFormat& format,void*buf)
{
    bool sipRes = 0;
        // Call self.GetDataSize() to find out how big the buffer should be
        PyObject* self = NULL;
        PyObject* fmtObj = NULL;
        PyObject* sizeObj = NULL;
        PyObject* buffer = NULL;
        PyObject* resObj = NULL;
        Py_ssize_t size = 0;
        
        self = wxPyMethod_Self(sipMethod); // this shouldn't fail, and the reference is borrowed
        
        fmtObj = wxPyConstructObject((void*)&format, "wxDataFormat", false);
        if (!fmtObj) goto error;
        sizeObj = PyObject_CallMethod(self, "GetDataSize", "(O)", fmtObj, NULL);
        if (!sizeObj) goto error;
        size = wxPyInt_AsSsize_t(sizeObj);
        
        // Make a buffer that big using the pointer passed to us, and then
        // call the Python method.
        buffer = wxPyMakeBuffer(buf, size);
        resObj = sipCallMethod(0, sipMethod, "SS", fmtObj, buffer);
        
        if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
            PyErr_Print();
        
        error:
        Py_XDECREF(resObj);
        Py_XDECREF(buffer);
        Py_XDECREF(fmtObj);
        Py_XDECREF(sizeObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH__core_65(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDataFormat*formats, ::wxDataObject::Direction dir)
{
        // VirtualCatcherCode for wx.DataObject.GetAllFormats
        PyObject *resObj = sipCallMethod(0,sipMethod,"F",dir,sipType_wxDataObject_Direction);
        if (resObj) {
            if (!PySequence_Check(resObj)) {
                PyErr_SetString(PyExc_TypeError, "Should return a list of wx.DataFormat objects.");
                // or this?  sipBadCatcherResult(sipMethod);
            }
            else {
                Py_ssize_t len = PySequence_Length(resObj);
                Py_ssize_t idx;
                for (idx=0; idx<len; idx+=1) {
                    PyObject* item = PySequence_GetItem(resObj, idx);
                    if (! sipCanConvertToType(item, sipType_wxDataFormat, SIP_NOT_NONE)) {
                        PyErr_SetString(PyExc_TypeError, "List of wx.DataFormat objects expected.");
                        // or this?  sipBadCatcherResult(sipMethod);
                        Py_DECREF(item);
                        break;
                    }
                    wxDataFormat* fmt;
                    int err = 0;
                    fmt = (wxDataFormat*)sipConvertToType(
                                            item, sipType_wxDataFormat, NULL,
                                            SIP_NOT_NONE|SIP_NO_CONVERTORS, NULL, &err);
                    formats[idx] = *fmt;
                    Py_DECREF(item);
                }
            }
        }
        if (PyErr_Occurred())
            PyErr_Print();
        Py_XDECREF(resObj);

    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

 ::wxString sipVH__core_64(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::time_t time)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "n", time);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_63(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxLogLevel level,const  ::wxString& msg,const  ::wxLogRecordInfo& info)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "mNN", level, new  ::wxString(msg), sipType_wxString, SIP_NULLPTR, new  ::wxLogRecordInfo(info), sipType_wxLogRecordInfo, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

void sipVH__core_62(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxFrame*frame)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", frame, sipType_wxFrame, SIP_NULLPTR);
}

bool sipVH__core_61(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxFrame*frame)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", frame, sipType_wxFrame, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_60(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& msg)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::wxString(msg), sipType_wxString, SIP_NULLPTR);
}

void sipVH__core_59(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxLogLevel level,const  ::wxString& msg)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "mN", level, new  ::wxString(msg), sipType_wxString, SIP_NULLPTR);
}

void sipVH__core_58(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxLogLevel level,const  ::wxString& msg,const  ::wxLogRecordInfo& info)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "mNN", level, new  ::wxString(msg), sipType_wxString, SIP_NULLPTR, new  ::wxLogRecordInfo(info), sipType_wxLogRecordInfo, SIP_NULLPTR);
}

void sipVH__core_57(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

 ::wxAccStatus sipVH__core_56(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int childId, ::wxAccSelectionFlags selectFlags)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "iF", childId, selectFlags, sipType_wxAccSelectionFlags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxAccStatus, &sipRes);

    return sipRes;
}

 ::wxAccStatus sipVH__core_55(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxNavDir navDir,int fromId,int*toId, ::wxAccessible**toObject)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Fi", navDir, sipType_wxNavDir, fromId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FiH0)", sipType_wxAccStatus, &sipRes, toId, sipType_wxAccessible, toObject);

    return sipRes;
}

 ::wxAccStatus sipVH__core_54(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxPoint& pt,int*childId, ::wxAccessible**childObject)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxPoint(pt), sipType_wxPoint, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FiH0)", sipType_wxAccStatus, &sipRes, childId, sipType_wxAccessible, childObject);

    return sipRes;
}

 ::wxAccStatus sipVH__core_53(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int childId,long*state)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", childId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(Fl)", sipType_wxAccStatus, &sipRes, state);

    return sipRes;
}

 ::wxAccStatus sipVH__core_52(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxVariant*selections)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FH4)", sipType_wxAccStatus, &sipRes, sipType_wxVariant, selections);

    return sipRes;
}

 ::wxAccStatus sipVH__core_51(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int childId, ::wxAccRole*role)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", childId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FF)", sipType_wxAccStatus, &sipRes, sipType_wxAccRole, role);

    return sipRes;
}

 ::wxAccStatus sipVH__core_50(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxAccessible**parent)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FH0)", sipType_wxAccStatus, &sipRes, sipType_wxAccessible, parent);

    return sipRes;
}

 ::wxAccStatus sipVH__core_49(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxRect& rect,int elementId)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", elementId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FH5)", sipType_wxAccStatus, &sipRes, sipType_wxRect, &rect);

    return sipRes;
}

 ::wxAccStatus sipVH__core_48(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*childId, ::wxAccessible**child)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FiH0)", sipType_wxAccStatus, &sipRes, childId, sipType_wxAccessible, child);

    return sipRes;
}

 ::wxAccStatus sipVH__core_47(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int childId, ::wxString*actionName)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", childId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FH4)", sipType_wxAccStatus, &sipRes, sipType_wxString, actionName);

    return sipRes;
}

 ::wxAccStatus sipVH__core_46(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int*childCount)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(Fi)", sipType_wxAccStatus, &sipRes, childCount);

    return sipRes;
}

 ::wxAccStatus sipVH__core_45(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int childId, ::wxAccessible**child)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", childId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(FH0)", sipType_wxAccStatus, &sipRes, sipType_wxAccessible, child);

    return sipRes;
}

 ::wxAccStatus sipVH__core_44(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int childId)
{
     ::wxAccStatus sipRes = ::wxACC_FAIL;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "i", childId);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "F", sipType_wxAccStatus, &sipRes);

    return sipRes;
}

 ::wxRendererVersion sipVH__core_43(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxRendererVersion sipRes(0,0);
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxRendererVersion, &sipRes);

    return sipRes;
}

 ::wxSplitterRenderParams sipVH__core_42(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxWindow*win)
{
     ::wxSplitterRenderParams sipRes(0,0,0);
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxWindow *>(win), sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSplitterRenderParams, &sipRes);

    return sipRes;
}

int sipVH__core_41(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", win, sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

 ::wxSize sipVH__core_40(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", win, sipType_wxWindow, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

 ::wxSize sipVH__core_39(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win,int flags)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Di", win, sipType_wxWindow, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

void sipVH__core_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc,const  ::wxRect& rect, ::wxTitleBarButton button,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNFi", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, button, sipType_wxTitleBarButton, flags);
}

void sipVH__core_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc,const  ::wxSize& size, ::wxCoord position, ::wxOrientation orient,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNiFi", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR, position, orient, sipType_wxOrientation, flags);
}

 ::wxSize sipVH__core_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DD", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

void sipVH__core_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc,const  ::wxString& text,const  ::wxRect& rect,int align,int flags, ::wxEllipsizeMode ellipsizeMode)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNNiiF", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxString(text), sipType_wxString, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, align, flags, ellipsizeMode, sipType_wxEllipsizeMode);
}

int sipVH__core_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc,const  ::wxRect& rect,int flags, ::wxHeaderSortIconType sortArrow, ::wxHeaderButtonParams*params)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDNiFD", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, flags, sortArrow, sipType_wxHeaderSortIconType, params, sipType_wxHeaderButtonParams, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH__core_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc,const  ::wxRect& rect,int value,int max,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNiii", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, value, max, flags);
}

void sipVH__core_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxWindow*win, ::wxDC& dc,const  ::wxRect& rect,int flags)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDNi", win, sipType_wxWindow, SIP_NULLPTR, &dc, sipType_wxDC, SIP_NULLPTR, new  ::wxRect(rect), sipType_wxRect, SIP_NULLPTR, flags);
}

bool sipVH__core_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxBitmap& bitmap, ::wxCoord x, ::wxCoord y, ::wxOutputStream& stream)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NiiD", new  ::wxBitmap(bitmap), sipType_wxBitmap, SIP_NULLPTR, x, y, &stream, sipType_wxOutputStream, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxGraphicsContext*context)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", context, sipType_wxGraphicsContext, SIP_NULLPTR);
}

 ::wxGraphicsContext* sipVH__core_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxGraphicsContext* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_wxGraphicsContext, &sipRes);

    return sipRes;
}

double sipVH__core_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, size_t& idx)
{
    double sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "=", idx);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(d=)", &sipRes, &idx);

    return sipRes;
}

 ::wxBitmap sipVH__core_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxSize& size)
{
     ::wxBitmap sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxSize(size), sipType_wxSize, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxBitmap, &sipRes);

    return sipRes;
}

 ::wxSize sipVH__core_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, double scale)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "d", scale);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

 ::wxSize sipVH__core_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxSize sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxSize, &sipRes);

    return sipRes;
}

bool sipVH__core_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxInputStream& stream)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &stream, sipType_wxInputStream, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

int sipVH__core_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxInputStream& stream)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", &stream, sipType_wxInputStream, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

bool sipVH__core_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxImage*image, ::wxOutputStream& stream,bool verbose)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDb", image, sipType_wxImage, SIP_NULLPTR, &stream, sipType_wxOutputStream, SIP_NULLPTR, verbose);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxImage*image, ::wxInputStream& stream,bool verbose,int index)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DDbi", image, sipType_wxImage, SIP_NULLPTR, &stream, sipType_wxInputStream, SIP_NULLPTR, verbose, index);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxOutputStream& stream, ::wxBitmapType type)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DF", &stream, sipType_wxOutputStream, SIP_NULLPTR, type, sipType_wxBitmapType);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& name,const  ::wxString& mimetype)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxString(name), sipType_wxString, SIP_NULLPTR, new  ::wxString(mimetype), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& name, ::wxBitmapType type)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NF", new  ::wxString(name), sipType_wxString, SIP_NULLPTR, type, sipType_wxBitmapType);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxOutputStream& stream,const  ::wxString& mimetype)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", &stream, sipType_wxOutputStream, SIP_NULLPTR, new  ::wxString(mimetype), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxInputStream& stream,const  ::wxString& mimetype,int index)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DNi", &stream, sipType_wxInputStream, SIP_NULLPTR, new  ::wxString(mimetype), sipType_wxString, SIP_NULLPTR, index);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& name,const  ::wxString& mimetype,int index)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NNi", new  ::wxString(name), sipType_wxString, SIP_NULLPTR, new  ::wxString(mimetype), sipType_wxString, SIP_NULLPTR, index);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& name, ::wxBitmapType type,int index)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NFi", new  ::wxString(name), sipType_wxString, SIP_NULLPTR, type, sipType_wxBitmapType, index);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH__core_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxInputStream& stream, ::wxBitmapType type,int index)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DFi", &stream, sipType_wxInputStream, SIP_NULLPTR, type, sipType_wxBitmapType, index);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxFSFile* sipVH__core_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxFileSystem& fs,const  ::wxString& location)
{
     ::wxFSFile* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "DN", &fs, sipType_wxFileSystem, SIP_NULLPTR, new  ::wxString(location), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxFSFile, &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

 ::wxString sipVH__core_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& wildcard,int flags)
{
     ::wxString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "Ni", new  ::wxString(wildcard), sipType_wxString, SIP_NULLPTR, flags);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxString, &sipRes);

    return sipRes;
}

bool sipVH__core_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& location)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(location), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDouble cRadians)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "d", cRadians);
}

void sipVH__core_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxDouble dx, ::wxDouble dy)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "dd", dx, dy);
}

bool sipVH__core_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH__core_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxAffineMatrix2DBase& t)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", const_cast< ::wxAffineMatrix2DBase *>(&t), sipType_wxAffineMatrix2DBase, SIP_NULLPTR);
}

void sipVH__core_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::wxMatrix2D*mat2D, ::wxPoint2DDouble*tr)
{
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H4H4)", sipType_wxMatrix2D, mat2D, sipType_wxPoint2DDouble, tr);
}

void sipVH__core_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxMatrix2D& mat2D,const  ::wxPoint2DDouble& tr)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "NN", new  ::wxMatrix2D(mat2D), sipType_wxMatrix2D, SIP_NULLPTR, new  ::wxPoint2DDouble(tr), sipType_wxPoint2DDouble, SIP_NULLPTR);
}

bool sipVH__core_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxAffineMatrix2DBase& t)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "D", const_cast< ::wxAffineMatrix2DBase *>(&t), sipType_wxAffineMatrix2DBase, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::wxArrayString sipVH__core_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& domain)
{
     ::wxArrayString sipRes;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "N", new  ::wxString(domain), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_wxArrayString, &sipRes);

    return sipRes;
}

 ::wxMsgCatalog* sipVH__core_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::wxString& domain,const  ::wxString& lang)
{
     ::wxMsgCatalog* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(SIP_NULLPTR, sipMethod, "NN", new  ::wxString(domain), sipType_wxString, SIP_NULLPTR, new  ::wxString(lang), sipType_wxString, SIP_NULLPTR);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_wxMsgCatalog, &sipRes);

    return sipRes;
}


PyDoc_STRVAR(doc__wxPyCleanup, "_wxPyCleanup()");

extern "C" {static PyObject *func__wxPyCleanup(PyObject *,PyObject *);}
static PyObject *func__wxPyCleanup(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            _wxPyCleanup();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName__wxPyCleanup, doc__wxPyCleanup);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IsMainThread, "IsMainThread() -> bool\n"
"\n"
"Returns ``True`` if the current thread is what wx considers the GUI\n"
"thread.");

extern "C" {static PyObject *func_IsMainThread(PyObject *,PyObject *);}
static PyObject *func_IsMainThread(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _IsMainThread_function();
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IsMainThread, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetStockLabel, "GetStockLabel(id, flags=STOCK_WITH_MNEMONIC) -> String\n"
"\n"
"Returns label that should be used for given id element.");

extern "C" {static PyObject *func_GetStockLabel(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetStockLabel(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindowID id;
        long flags = wxSTOCK_WITH_MNEMONIC;

        static const char *sipKwdList[] = {
            sipName_id,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "i|l", &id, &flags))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetStockLabel(id,flags));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetStockLabel, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_HexToDec, "HexToDec(buf) -> int\n"
"HexToDec(buf) -> int\n"
"\n"
"Convert 2-character hexadecimal string to decimal integer.\n"
"");

extern "C" {static PyObject *func_HexToDec(PyObject *,PyObject *, PyObject *);}
static PyObject *func_HexToDec(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* buf;
        int bufState = 0;

        static const char *sipKwdList[] = {
            sipName_buf,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &buf, &bufState))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxHexToDec(*buf);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(buf), sipType_wxString, bufState);

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    {
        const char* buf;

        static const char *sipKwdList[] = {
            sipName_buf,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "s", &buf))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxHexToDec(buf);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_HexToDec, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DecToHex, "DecToHex(dec, buf)\n"
"DecToHex(dec) -> String\n"
"DecToHex(dec, ch1, ch2)\n"
"\n"
"Convert decimal integer to 2-character hexadecimal string.\n"
"\n"
"");

extern "C" {static PyObject *func_DecToHex(PyObject *,PyObject *, PyObject *);}
static PyObject *func_DecToHex(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        unsigned char dec;
         ::wxChar* buf;

        static const char *sipKwdList[] = {
            sipName_dec,
            sipName_buf,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "cx", &dec, &buf))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxDecToHex(dec,buf);
            Py_END_ALLOW_THREADS
            sipFree(buf);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        unsigned char dec;

        static const char *sipKwdList[] = {
            sipName_dec,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "c", &dec))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxDecToHex(dec));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    {
        unsigned char dec;
        char* ch1;
        char* ch2;

        static const char *sipKwdList[] = {
            sipName_dec,
            sipName_ch1,
            sipName_ch2,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "css", &dec, &ch1, &ch2))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxDecToHex(dec,ch1,ch2);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DecToHex, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Sleep, "Sleep(secs)\n"
"\n"
"Sleeps for the specified number of seconds.");

extern "C" {static PyObject *func_Sleep(PyObject *,PyObject *, PyObject *);}
static PyObject *func_Sleep(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int secs;

        static const char *sipKwdList[] = {
            sipName_secs,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "i", &secs))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxSleep(secs);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Sleep, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Now, "Now() -> String\n"
"\n"
"Returns a string representing the current date and time.");

extern "C" {static PyObject *func_Now(PyObject *,PyObject *);}
static PyObject *func_Now(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxNow());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Now, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_MilliSleep, "MilliSleep(milliseconds)\n"
"\n"
"Sleeps for the specified number of milliseconds.");

extern "C" {static PyObject *func_MilliSleep(PyObject *,PyObject *, PyObject *);}
static PyObject *func_MilliSleep(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        unsigned long milliseconds;

        static const char *sipKwdList[] = {
            sipName_milliseconds,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "m", &milliseconds))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxMilliSleep(milliseconds);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_MilliSleep, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_MicroSleep, "MicroSleep(microseconds)\n"
"\n"
"Sleeps for the specified number of microseconds.");

extern "C" {static PyObject *func_MicroSleep(PyObject *,PyObject *, PyObject *);}
static PyObject *func_MicroSleep(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        unsigned long microseconds;

        static const char *sipKwdList[] = {
            sipName_microseconds,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "m", &microseconds))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxMicroSleep(microseconds);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_MicroSleep, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Shutdown, "Shutdown(flags=SHUTDOWN_POWEROFF) -> bool\n"
"\n"
"This function shuts down or reboots the computer depending on the\n"
"value of the flags.");

extern "C" {static PyObject *func_Shutdown(PyObject *,PyObject *, PyObject *);}
static PyObject *func_Shutdown(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int flags = wxSHUTDOWN_POWEROFF;

        static const char *sipKwdList[] = {
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|i", &flags))
        {
            bool sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxShutdown(flags);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Shutdown, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Shell, "Shell(command=EmptyString) -> bool\n"
"\n"
"Executes a command in an interactive shell window.");

extern "C" {static PyObject *func_Shell(PyObject *,PyObject *, PyObject *);}
static PyObject *func_Shell(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString& commanddef = wxEmptyString;
        const  ::wxString* command = &commanddef;
        int commandState = 0;

        static const char *sipKwdList[] = {
            sipName_command,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|J1", sipType_wxString, &command, &commandState))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxShell(*command);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(command), sipType_wxString, commandState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Shell, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Kill, "Kill(pid, sig=SIGTERM, rc=None, flags=KILL_NOCHILDREN) -> int\n"
"\n"
"Equivalent to the Unix kill function: send the given signal sig to the\n"
"process with PID pid.");

extern "C" {static PyObject *func_Kill(PyObject *,PyObject *, PyObject *);}
static PyObject *func_Kill(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        long pid;
         ::wxSignal sig = wxSIGTERM;
         ::wxKillError rc;
        int flags = wxKILL_NOCHILDREN;

        static const char *sipKwdList[] = {
            sipName_pid,
            sipName_sig,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "l|Ei", &pid, sipType_wxSignal, &sig, &flags))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxKill(pid,sig,&rc,flags);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(iF)",sipRes,rc,sipType_wxKillError);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Kill, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetProcessId, "GetProcessId() -> unsignedlong\n"
"\n"
"Returns the number uniquely identifying the current process in the\n"
"system.");

extern "C" {static PyObject *func_GetProcessId(PyObject *,PyObject *);}
static PyObject *func_GetProcessId(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            unsigned long sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetProcessId();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetProcessId, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Execute, "Execute(command, flags=EXEC_ASYNC, callback=None, env=None) -> long\n"
"\n"
"Executes another program in Unix or Windows.");

extern "C" {static PyObject *func_Execute(PyObject *,PyObject *, PyObject *);}
static PyObject *func_Execute(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* command;
        int commandState = 0;
        int flags = wxEXEC_ASYNC;
         ::wxProcess* callback = 0;
        const  ::wxExecuteEnv* env = 0;

        static const char *sipKwdList[] = {
            sipName_command,
            sipName_flags,
            sipName_callback,
            sipName_env,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|iJ8J8", sipType_wxString, &command, &commandState, &flags, sipType_wxProcess, &callback, sipType_wxExecuteEnv, &env))
        {
            long sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxExecute(*command,flags,callback,env);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(command), sipType_wxString, commandState);

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Execute, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetNativeCpuArchitectureName, "GetNativeCpuArchitectureName() -> String\n"
"\n"
"In some situations the current process and native CPU architecture may\n"
"be different.");

extern "C" {static PyObject *func_GetNativeCpuArchitectureName(PyObject *,PyObject *);}
static PyObject *func_GetNativeCpuArchitectureName(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetNativeCpuArchitectureName());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetNativeCpuArchitectureName, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetCpuArchitectureName, "GetCpuArchitectureName() -> String\n"
"\n"
"Returns the CPU architecture name.");

extern "C" {static PyObject *func_GetCpuArchitectureName(PyObject *,PyObject *);}
static PyObject *func_GetCpuArchitectureName(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetCpuArchitectureName());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetCpuArchitectureName, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IsPlatformLittleEndian, "IsPlatformLittleEndian() -> bool\n"
"\n"
"Returns true if the current platform is little endian (instead of big\n"
"endian).");

extern "C" {static PyObject *func_IsPlatformLittleEndian(PyObject *,PyObject *);}
static PyObject *func_IsPlatformLittleEndian(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxIsPlatformLittleEndian();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IsPlatformLittleEndian, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IsPlatform64Bit, "IsPlatform64Bit() -> bool\n"
"\n"
"Returns true if the operating system the program is running under is\n"
"64 bit.");

extern "C" {static PyObject *func_IsPlatform64Bit(PyObject *,PyObject *);}
static PyObject *func_IsPlatform64Bit(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxIsPlatform64Bit();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IsPlatform64Bit, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_CheckOsVersion, "CheckOsVersion(majorVsn, minorVsn=0, microVsn=0) -> bool\n"
"\n"
"Returns true if the version of the operating system on which the\n"
"program is running under is the same or later than the given version.");

extern "C" {static PyObject *func_CheckOsVersion(PyObject *,PyObject *, PyObject *);}
static PyObject *func_CheckOsVersion(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int majorVsn;
        int minorVsn = 0;
        int microVsn = 0;

        static const char *sipKwdList[] = {
            sipName_majorVsn,
            sipName_minorVsn,
            sipName_microVsn,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "i|ii", &majorVsn, &minorVsn, &microVsn))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxCheckOsVersion(majorVsn,minorVsn,microVsn);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_CheckOsVersion, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetOsVersion, "GetOsVersion(micro=None) -> (OperatingSystemId, major, minor)\n"
"\n"
"Gets the version and the operating system ID for currently running OS.");

extern "C" {static PyObject *func_GetOsVersion(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetOsVersion(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int major;
        int minor;
        int micro;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, ""))
        {
             ::wxOperatingSystemId sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetOsVersion(&major,&minor,&micro);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(Fiii)",sipRes,sipType_wxOperatingSystemId,major,minor,micro);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetOsVersion, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetOsDescription, "GetOsDescription() -> String\n"
"\n"
"Returns the string containing the description of the current platform\n"
"in a user-readable form.");

extern "C" {static PyObject *func_GetOsDescription(PyObject *,PyObject *);}
static PyObject *func_GetOsDescription(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetOsDescription());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetOsDescription, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetUserName, "GetUserName() -> String\n"
"\n"
"This function returns the full user name (something like \"Mr. John\n"
"Smith\").");

extern "C" {static PyObject *func_GetUserName(PyObject *,PyObject *);}
static PyObject *func_GetUserName(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetUserName());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetUserName, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetUserId, "GetUserId() -> String\n"
"\n"
"This function returns the \"user id\" also known as \"login name\" under\n"
"Unix (i.e.");

extern "C" {static PyObject *func_GetUserId(PyObject *,PyObject *);}
static PyObject *func_GetUserId(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetUserId());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetUserId, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetUserHome, "GetUserHome(user=EmptyString) -> String\n"
"\n"
"Returns the home directory for the given user.");

extern "C" {static PyObject *func_GetUserHome(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetUserHome(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString& userdef = wxEmptyString;
        const  ::wxString* user = &userdef;
        int userState = 0;

        static const char *sipKwdList[] = {
            sipName_user,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|J1", sipType_wxString, &user, &userState))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetUserHome(*user));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(user), sipType_wxString, userState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetUserHome, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetFullHostName, "GetFullHostName() -> String\n"
"\n"
"Returns the FQDN (fully qualified domain host name) or an empty string\n"
"on error.");

extern "C" {static PyObject *func_GetFullHostName(PyObject *,PyObject *);}
static PyObject *func_GetFullHostName(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetFullHostName());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetFullHostName, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetHostName, "GetHostName() -> String\n"
"\n"
"Copies the current host machine's name into the supplied buffer.");

extern "C" {static PyObject *func_GetHostName(PyObject *,PyObject *);}
static PyObject *func_GetHostName(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetHostName());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetHostName, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetHomeDir, "GetHomeDir() -> String\n"
"\n"
"Return the (current) user's home directory.");

extern "C" {static PyObject *func_GetHomeDir(PyObject *,PyObject *);}
static PyObject *func_GetHomeDir(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetHomeDir());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetHomeDir, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetEmailAddress, "GetEmailAddress() -> String\n"
"\n"
"Copies the user's email address into the supplied buffer, by\n"
"concatenating the values returned by wxGetFullHostName() and\n"
"wxGetUserId().");

extern "C" {static PyObject *func_GetEmailAddress(PyObject *,PyObject *);}
static PyObject *func_GetEmailAddress(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetEmailAddress());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetEmailAddress, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_StripMenuCodes, "StripMenuCodes(str, flags=Strip_All) -> String\n"
"\n"
"Strips any menu codes from str and returns the result.");

extern "C" {static PyObject *func_StripMenuCodes(PyObject *,PyObject *, PyObject *);}
static PyObject *func_StripMenuCodes(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* str;
        int strState = 0;
        int flags = wxStrip_All;

        static const char *sipKwdList[] = {
            sipName_str,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|i", sipType_wxString, &str, &strState, &flags))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxStripMenuCodes(*str,flags));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(str), sipType_wxString, strState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_StripMenuCodes, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LaunchDefaultBrowser, "LaunchDefaultBrowser(url, flags=0) -> bool\n"
"\n"
"Opens the url in user's default browser.");

extern "C" {static PyObject *func_LaunchDefaultBrowser(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LaunchDefaultBrowser(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* url;
        int urlState = 0;
        int flags = 0;

        static const char *sipKwdList[] = {
            sipName_url,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|i", sipType_wxString, &url, &urlState, &flags))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxLaunchDefaultBrowser(*url,flags);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(url), sipType_wxString, urlState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LaunchDefaultBrowser, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LaunchDefaultApplication, "LaunchDefaultApplication(document, flags=0) -> bool\n"
"\n"
"Opens the document in the application associated with the files of\n"
"this type.");

extern "C" {static PyObject *func_LaunchDefaultApplication(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LaunchDefaultApplication(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* document;
        int documentState = 0;
        int flags = 0;

        static const char *sipKwdList[] = {
            sipName_document,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|i", sipType_wxString, &document, &documentState, &flags))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxLaunchDefaultApplication(*document,flags);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(document), sipType_wxString, documentState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LaunchDefaultApplication, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_RegisterId, "RegisterId(id)\n"
"\n"
"Ensures that Ids subsequently generated by wxNewId() do not clash with\n"
"the given id.");

extern "C" {static PyObject *func_RegisterId(PyObject *,PyObject *, PyObject *);}
static PyObject *func_RegisterId(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindowID id;

        static const char *sipKwdList[] = {
            sipName_id,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "i", &id))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxRegisterId(id);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_RegisterId, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_NewId, "NewId() -> WindowID");

extern "C" {static PyObject *func_NewId(PyObject *,PyObject *);}
static PyObject *func_NewId(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxWindowID sipRes;

            if (sipDeprecated(SIP_NULLPTR,sipName_NewId) < 0)
                return SIP_NULLPTR;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxNewId();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_NewId, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FindMenuItemId, "FindMenuItemId(frame, menuString, itemString) -> int\n"
"\n"
"Find a menu item identifier associated with the given frame's menu\n"
"bar.");

extern "C" {static PyObject *func_FindMenuItemId(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FindMenuItemId(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxFrame* frame;
        const  ::wxString* menuString;
        int menuStringState = 0;
        const  ::wxString* itemString;
        int itemStringState = 0;

        static const char *sipKwdList[] = {
            sipName_frame,
            sipName_menuString,
            sipName_itemString,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8J1J1", sipType_wxFrame, &frame, sipType_wxString, &menuString, &menuStringState, sipType_wxString, &itemString, &itemStringState))
        {
            int sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxFindMenuItemId(frame,*menuString,*itemString);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(menuString), sipType_wxString, menuStringState);
            sipReleaseType(const_cast< ::wxString *>(itemString), sipType_wxString, itemStringState);

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FindMenuItemId, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FindWindowAtPoint, "FindWindowAtPoint(pt) -> Window\n"
"\n"
"Find the deepest window at the given mouse position in screen\n"
"coordinates, returning the window if found, or NULL if not.");

extern "C" {static PyObject *func_FindWindowAtPoint(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FindWindowAtPoint(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxPoint* pt;
        int ptState = 0;

        static const char *sipKwdList[] = {
            sipName_pt,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxPoint, &pt, &ptState))
        {
             ::wxWindow*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxFindWindowAtPoint(*pt);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxPoint *>(pt), sipType_wxPoint, ptState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FindWindowAtPoint, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_EnableTopLevelWindows, "EnableTopLevelWindows(enable=True)\n"
"\n"
"This function enables or disables all top level windows.");

extern "C" {static PyObject *func_EnableTopLevelWindows(PyObject *,PyObject *, PyObject *);}
static PyObject *func_EnableTopLevelWindows(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool enable = 1;

        static const char *sipKwdList[] = {
            sipName_enable,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|b", &enable))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxEnableTopLevelWindows(enable);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_EnableTopLevelWindows, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetMouseState, "GetMouseState() -> MouseState\n"
"\n"
"Returns the current state of the mouse.");

extern "C" {static PyObject *func_GetMouseState(PyObject *,PyObject *);}
static PyObject *func_GetMouseState(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxMouseState*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxMouseState(wxGetMouseState());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxMouseState,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetMouseState, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetMousePosition, "GetMousePosition() -> Point\n"
"\n"
"Returns the mouse position in screen coordinates.");

extern "C" {static PyObject *func_GetMousePosition(PyObject *,PyObject *);}
static PyObject *func_GetMousePosition(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxPoint*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxPoint(wxGetMousePosition());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxPoint,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetMousePosition, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetKeyState, "GetKeyState(key) -> bool\n"
"\n"
"For normal keys, returns true if the specified key is currently down.");

extern "C" {static PyObject *func_GetKeyState(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetKeyState(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxKeyCode key;

        static const char *sipKwdList[] = {
            sipName_key,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "E", sipType_wxKeyCode, &key))
        {
            bool sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetKeyState(key);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetKeyState, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetPowerType, "GetPowerType() -> PowerType\n"
"\n"
"Returns the type of power source as one of wxPOWER_SOCKET,\n"
"wxPOWER_BATTERY or wxPOWER_UNKNOWN.");

extern "C" {static PyObject *func_GetPowerType(PyObject *,PyObject *);}
static PyObject *func_GetPowerType(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxPowerType sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetPowerType();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_wxPowerType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetPowerType, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetBatteryState, "GetBatteryState() -> BatteryState\n"
"\n"
"Returns battery state as one of wxBATTERY_NORMAL_STATE,\n"
"wxBATTERY_LOW_STATE, wxBATTERY_CRITICAL_STATE,\n"
"wxBATTERY_SHUTDOWN_STATE or wxBATTERY_UNKNOWN_STATE.");

extern "C" {static PyObject *func_GetBatteryState(PyObject *,PyObject *);}
static PyObject *func_GetBatteryState(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxBatteryState sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetBatteryState();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_wxBatteryState);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetBatteryState, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SecureZeroMemory, "SecureZeroMemory(p, n)\n"
"\n"
"Fills the memory block with zeros in a way that is guaranteed not to\n"
"be optimized away by the compiler.");

extern "C" {static PyObject *func_SecureZeroMemory(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SecureZeroMemory(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        void* p;
        size_t n;

        static const char *sipKwdList[] = {
            sipName_p,
            sipName_n,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "v=", &p, &n))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxSecureZeroMemory(p,n);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SecureZeroMemory, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetLibraryVersionInfo, "GetLibraryVersionInfo() -> VersionInfo\n"
"\n"
"Get wxWidgets version information.");

extern "C" {static PyObject *func_GetLibraryVersionInfo(PyObject *,PyObject *);}
static PyObject *func_GetLibraryVersionInfo(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxVersionInfo*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxVersionInfo(wxGetLibraryVersionInfo());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxVersionInfo,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetLibraryVersionInfo, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_InfoMessageBox, "InfoMessageBox(parent)\n"
"\n"
"Shows a message box with the information about the wxWidgets build\n"
"used, including its version, most important build parameters and the\n"
"version of the underlying GUI toolkit.");

extern "C" {static PyObject *func_InfoMessageBox(PyObject *,PyObject *, PyObject *);}
static PyObject *func_InfoMessageBox(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* parent;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8", sipType_wxWindow, &parent))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxInfoMessageBox(parent);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_InfoMessageBox, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Bell, "Bell()\n"
"\n"
"Ring the system bell.");

extern "C" {static PyObject *func_Bell(PyObject *,PyObject *);}
static PyObject *func_Bell(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxBell();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Bell, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IsBusy, "IsBusy() -> bool\n"
"\n"
"Returns true if between two wxBeginBusyCursor() and wxEndBusyCursor()\n"
"calls.");

extern "C" {static PyObject *func_IsBusy(PyObject *,PyObject *);}
static PyObject *func_IsBusy(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxIsBusy();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IsBusy, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_EndBusyCursor, "EndBusyCursor()\n"
"\n"
"Changes the cursor back to the original cursor, for all windows in the\n"
"application.");

extern "C" {static PyObject *func_EndBusyCursor(PyObject *,PyObject *);}
static PyObject *func_EndBusyCursor(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxEndBusyCursor();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_EndBusyCursor, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_BeginBusyCursor, "BeginBusyCursor(cursor=HOURGLASS_CURSOR)\n"
"\n"
"Changes the cursor to the given cursor for all windows in the\n"
"application.");

extern "C" {static PyObject *func_BeginBusyCursor(PyObject *,PyObject *, PyObject *);}
static PyObject *func_BeginBusyCursor(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxCursor* cursor = wxHOURGLASS_CURSOR;

        static const char *sipKwdList[] = {
            sipName_cursor,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|J8", sipType_wxCursor, &cursor))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxBeginBusyCursor(cursor);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_BeginBusyCursor, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetNumberFromUser, "GetNumberFromUser(message, prompt, caption, value, min=0, max=100, parent=None, pos=DefaultPosition) -> long\n"
"\n"
"Shows a dialog asking the user for numeric input.");

extern "C" {static PyObject *func_GetNumberFromUser(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetNumberFromUser(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString* prompt;
        int promptState = 0;
        const  ::wxString* caption;
        int captionState = 0;
        long value;
        long min = 0;
        long max = 100;
         ::wxWindow* parent = 0;
        const  ::wxPoint& posdef = wxDefaultPosition;
        const  ::wxPoint* pos = &posdef;
        int posState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_prompt,
            sipName_caption,
            sipName_value,
            sipName_min,
            sipName_max,
            sipName_parent,
            sipName_pos,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1J1l|llJ8J1", sipType_wxString, &message, &messageState, sipType_wxString, &prompt, &promptState, sipType_wxString, &caption, &captionState, &value, &min, &max, sipType_wxWindow, &parent, sipType_wxPoint, &pos, &posState))
        {
            long sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetNumberFromUser(*message,*prompt,*caption,value,min,max,parent,*pos);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(prompt), sipType_wxString, promptState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);
            sipReleaseType(const_cast< ::wxPoint *>(pos), sipType_wxPoint, posState);

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetNumberFromUser, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetPasswordFromUser, "GetPasswordFromUser(message, caption=GetPasswordFromUserPromptStr, default_value=EmptyString, parent=None, x=DefaultCoord, y=DefaultCoord, centre=True) -> String\n"
"\n"
"Similar to wxGetTextFromUser() but the text entered in the dialog is\n"
"not shown on screen but replaced with stars.");

extern "C" {static PyObject *func_GetPasswordFromUser(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetPasswordFromUser(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString& captiondef = wxGetPasswordFromUserPromptStr;
        const  ::wxString* caption = &captiondef;
        int captionState = 0;
        const  ::wxString& default_valuedef = wxEmptyString;
        const  ::wxString* default_value = &default_valuedef;
        int default_valueState = 0;
         ::wxWindow* parent = 0;
        int x = wxDefaultCoord;
        int y = wxDefaultCoord;
        bool centre = 1;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_caption,
            sipName_default_value,
            sipName_parent,
            sipName_x,
            sipName_y,
            sipName_centre,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J1J1J8iib", sipType_wxString, &message, &messageState, sipType_wxString, &caption, &captionState, sipType_wxString, &default_value, &default_valueState, sipType_wxWindow, &parent, &x, &y, &centre))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetPasswordFromUser(*message,*caption,*default_value,parent,x,y,centre));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);
            sipReleaseType(const_cast< ::wxString *>(default_value), sipType_wxString, default_valueState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetPasswordFromUser, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetTextFromUser, "GetTextFromUser(message, caption=GetTextFromUserPromptStr, default_value=EmptyString, parent=None, x=DefaultCoord, y=DefaultCoord, centre=True) -> String\n"
"\n"
"Pop up a dialog box with title set to caption, message, and a\n"
"default_value.");

extern "C" {static PyObject *func_GetTextFromUser(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetTextFromUser(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString& captiondef = wxGetTextFromUserPromptStr;
        const  ::wxString* caption = &captiondef;
        int captionState = 0;
        const  ::wxString& default_valuedef = wxEmptyString;
        const  ::wxString* default_value = &default_valuedef;
        int default_valueState = 0;
         ::wxWindow* parent = 0;
        int x = wxDefaultCoord;
        int y = wxDefaultCoord;
        bool centre = 1;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_caption,
            sipName_default_value,
            sipName_parent,
            sipName_x,
            sipName_y,
            sipName_centre,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J1J1J8iib", sipType_wxString, &message, &messageState, sipType_wxString, &caption, &captionState, sipType_wxString, &default_value, &default_valueState, sipType_wxWindow, &parent, &x, &y, &centre))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetTextFromUser(*message,*caption,*default_value,parent,x,y,centre));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);
            sipReleaseType(const_cast< ::wxString *>(default_value), sipType_wxString, default_valueState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetTextFromUser, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetFontFromUser, "GetFontFromUser(parent, fontInit, caption=EmptyString) -> Font\n"
"\n"
"Shows the font selection dialog and returns the font selected by user\n"
"or invalid font (use wxFont::IsOk() to test whether a font is valid)\n"
"if the dialog was cancelled.");

extern "C" {static PyObject *func_GetFontFromUser(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetFontFromUser(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* parent;
        const  ::wxFont* fontInit;
        const  ::wxString& captiondef = wxEmptyString;
        const  ::wxString* caption = &captiondef;
        int captionState = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_fontInit,
            sipName_caption,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8J9|J1", sipType_wxWindow, &parent, sipType_wxFont, &fontInit, sipType_wxString, &caption, &captionState))
        {
             ::wxFont*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxFont(wxGetFontFromUser(parent,*fontInit,*caption));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxFont,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetFontFromUser, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetSingleChoice, "GetSingleChoice(message, caption, aChoices, parent=None, x=DefaultCoord, y=DefaultCoord, centre=True, width=CHOICE_WIDTH, height=CHOICE_HEIGHT, initialSelection=0) -> String\n"
"GetSingleChoice(message, caption, choices, initialSelection, parent=None) -> String\n"
"\n"
"Pops up a dialog box containing a message, OK/Cancel buttons and a\n"
"single-selection listbox.\n"
"");

extern "C" {static PyObject *func_GetSingleChoice(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetSingleChoice(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString* caption;
        int captionState = 0;
        const  ::wxArrayString* aChoices;
        int aChoicesState = 0;
         ::wxWindow* parent = 0;
        int x = wxDefaultCoord;
        int y = wxDefaultCoord;
        bool centre = 1;
        int width = wxCHOICE_WIDTH;
        int height = wxCHOICE_HEIGHT;
        int initialSelection = 0;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_caption,
            sipName_aChoices,
            sipName_parent,
            sipName_x,
            sipName_y,
            sipName_centre,
            sipName_width,
            sipName_height,
            sipName_initialSelection,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1J1|J8iibiii", sipType_wxString, &message, &messageState, sipType_wxString, &caption, &captionState, sipType_wxArrayString, &aChoices, &aChoicesState, sipType_wxWindow, &parent, &x, &y, &centre, &width, &height, &initialSelection))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetSingleChoice(*message,*caption,*aChoices,parent,x,y,centre,width,height,initialSelection));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);
            sipReleaseType(const_cast< ::wxArrayString *>(aChoices), sipType_wxArrayString, aChoicesState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString* caption;
        int captionState = 0;
        const  ::wxArrayString* choices;
        int choicesState = 0;
        int initialSelection;
         ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_caption,
            sipName_choices,
            sipName_initialSelection,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1J1i|J8", sipType_wxString, &message, &messageState, sipType_wxString, &caption, &captionState, sipType_wxArrayString, &choices, &choicesState, &initialSelection, sipType_wxWindow, &parent))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetSingleChoice(*message,*caption,*choices,initialSelection,parent));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);
            sipReleaseType(const_cast< ::wxArrayString *>(choices), sipType_wxArrayString, choicesState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetSingleChoice, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetColourFromUser, "GetColourFromUser(parent, colInit, caption=EmptyString, data=None) -> Colour\n"
"\n"
"Shows the colour selection dialog and returns the colour selected by\n"
"user or invalid colour (use wxColour::IsOk() to test whether a colour\n"
"is valid) if the dialog was cancelled.");

extern "C" {static PyObject *func_GetColourFromUser(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetColourFromUser(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* parent;
        const  ::wxColour* colInit;
        int colInitState = 0;
        const  ::wxString& captiondef = wxEmptyString;
        const  ::wxString* caption = &captiondef;
        int captionState = 0;
         ::wxColourData* data = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_colInit,
            sipName_caption,
            sipName_data,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8J1|J1J8", sipType_wxWindow, &parent, sipType_wxColour, &colInit, &colInitState, sipType_wxString, &caption, &captionState, sipType_wxColourData, &data))
        {
             ::wxColour*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxColour(wxGetColourFromUser(parent,*colInit,*caption,data));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxColour *>(colInit), sipType_wxColour, colInitState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxColour,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetColourFromUser, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_MessageBox, "MessageBox(message, caption=MessageBoxCaptionStr, style=OK|CENTRE, parent=None, x=DefaultCoord, y=DefaultCoord) -> int\n"
"\n"
"Show a general purpose message dialog.");

extern "C" {static PyObject *func_MessageBox(PyObject *,PyObject *, PyObject *);}
static PyObject *func_MessageBox(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString& captiondef = wxMessageBoxCaptionStr;
        const  ::wxString* caption = &captiondef;
        int captionState = 0;
        int style = wxOK|wxCENTRE;
         ::wxWindow* parent = 0;
        int x = wxDefaultCoord;
        int y = wxDefaultCoord;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_caption,
            sipName_style,
            sipName_parent,
            sipName_x,
            sipName_y,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J1iJ8ii", sipType_wxString, &message, &messageState, sipType_wxString, &caption, &captionState, &style, sipType_wxWindow, &parent, &x, &y))
        {
            int sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxMessageBox(*message,*caption,style,parent,x,y);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(caption), sipType_wxString, captionState);

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_MessageBox, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SaveFileSelector, "SaveFileSelector(what, extension, default_name=EmptyString, parent=None) -> String\n"
"\n"
"Shows a file dialog asking the user for a file name for saving a file.");

extern "C" {static PyObject *func_SaveFileSelector(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SaveFileSelector(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* what;
        int whatState = 0;
        const  ::wxString* extension;
        int extensionState = 0;
        const  ::wxString& default_namedef = wxEmptyString;
        const  ::wxString* default_name = &default_namedef;
        int default_nameState = 0;
         ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_what,
            sipName_extension,
            sipName_default_name,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1|J1J8", sipType_wxString, &what, &whatState, sipType_wxString, &extension, &extensionState, sipType_wxString, &default_name, &default_nameState, sipType_wxWindow, &parent))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxSaveFileSelector(*what,*extension,*default_name,parent));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(what), sipType_wxString, whatState);
            sipReleaseType(const_cast< ::wxString *>(extension), sipType_wxString, extensionState);
            sipReleaseType(const_cast< ::wxString *>(default_name), sipType_wxString, default_nameState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SaveFileSelector, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LoadFileSelector, "LoadFileSelector(what, extension, default_name=EmptyString, parent=None) -> String\n"
"\n"
"Shows a file dialog asking the user for a file name for opening a\n"
"file.");

extern "C" {static PyObject *func_LoadFileSelector(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LoadFileSelector(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* what;
        int whatState = 0;
        const  ::wxString* extension;
        int extensionState = 0;
        const  ::wxString& default_namedef = wxEmptyString;
        const  ::wxString* default_name = &default_namedef;
        int default_nameState = 0;
         ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_what,
            sipName_extension,
            sipName_default_name,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1|J1J8", sipType_wxString, &what, &whatState, sipType_wxString, &extension, &extensionState, sipType_wxString, &default_name, &default_nameState, sipType_wxWindow, &parent))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxLoadFileSelector(*what,*extension,*default_name,parent));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(what), sipType_wxString, whatState);
            sipReleaseType(const_cast< ::wxString *>(extension), sipType_wxString, extensionState);
            sipReleaseType(const_cast< ::wxString *>(default_name), sipType_wxString, default_nameState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LoadFileSelector, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FileSelectorEx, "FileSelectorEx(message=FileSelectorPromptStr, default_path=EmptyString, default_filename=EmptyString, indexDefaultExtension=None, wildcard=FileSelectorDefaultWildcardStr, flags=0, parent=None, x=DefaultCoord, y=DefaultCoord) -> String\n"
"\n"
"An extended version of wxFileSelector()");

extern "C" {static PyObject *func_FileSelectorEx(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FileSelectorEx(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString& messagedef = wxFileSelectorPromptStr;
        const  ::wxString* message = &messagedef;
        int messageState = 0;
        const  ::wxString& default_pathdef = wxEmptyString;
        const  ::wxString* default_path = &default_pathdef;
        int default_pathState = 0;
        const  ::wxString& default_filenamedef = wxEmptyString;
        const  ::wxString* default_filename = &default_filenamedef;
        int default_filenameState = 0;
        int indexDefaultExtension;
        const  ::wxString& wildcarddef = wxFileSelectorDefaultWildcardStr;
        const  ::wxString* wildcard = &wildcarddef;
        int wildcardState = 0;
        int flags = 0;
         ::wxWindow* parent = 0;
        int x = wxDefaultCoord;
        int y = wxDefaultCoord;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_default_path,
            sipName_default_filename,
            sipName_wildcard,
            sipName_flags,
            sipName_parent,
            sipName_x,
            sipName_y,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|J1J1J1J1iJ8ii", sipType_wxString, &message, &messageState, sipType_wxString, &default_path, &default_pathState, sipType_wxString, &default_filename, &default_filenameState, sipType_wxString, &wildcard, &wildcardState, &flags, sipType_wxWindow, &parent, &x, &y))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxFileSelectorEx(*message,*default_path,*default_filename,&indexDefaultExtension,*wildcard,flags,parent,x,y));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(default_path), sipType_wxString, default_pathState);
            sipReleaseType(const_cast< ::wxString *>(default_filename), sipType_wxString, default_filenameState);
            sipReleaseType(const_cast< ::wxString *>(wildcard), sipType_wxString, wildcardState);

            if (PyErr_Occurred())
                return 0;

            PyObject *sipResObj = sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
            return sipBuildResult(0,"(Ri)",sipResObj,indexDefaultExtension);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FileSelectorEx, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FileSelector, "FileSelector(message, default_path=EmptyString, default_filename=EmptyString, default_extension=EmptyString, wildcard=FileSelectorDefaultWildcardStr, flags=0, parent=None, x=DefaultCoord, y=DefaultCoord) -> String\n"
"\n"
"Pops up a file selector box.");

extern "C" {static PyObject *func_FileSelector(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FileSelector(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;
        const  ::wxString& default_pathdef = wxEmptyString;
        const  ::wxString* default_path = &default_pathdef;
        int default_pathState = 0;
        const  ::wxString& default_filenamedef = wxEmptyString;
        const  ::wxString* default_filename = &default_filenamedef;
        int default_filenameState = 0;
        const  ::wxString& default_extensiondef = wxEmptyString;
        const  ::wxString* default_extension = &default_extensiondef;
        int default_extensionState = 0;
        const  ::wxString& wildcarddef = wxFileSelectorDefaultWildcardStr;
        const  ::wxString* wildcard = &wildcarddef;
        int wildcardState = 0;
        int flags = 0;
         ::wxWindow* parent = 0;
        int x = wxDefaultCoord;
        int y = wxDefaultCoord;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_default_path,
            sipName_default_filename,
            sipName_default_extension,
            sipName_wildcard,
            sipName_flags,
            sipName_parent,
            sipName_x,
            sipName_y,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J1J1J1J1iJ8ii", sipType_wxString, &message, &messageState, sipType_wxString, &default_path, &default_pathState, sipType_wxString, &default_filename, &default_filenameState, sipType_wxString, &default_extension, &default_extensionState, sipType_wxString, &wildcard, &wildcardState, &flags, sipType_wxWindow, &parent, &x, &y))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxFileSelector(*message,*default_path,*default_filename,*default_extension,*wildcard,flags,parent,x,y));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(default_path), sipType_wxString, default_pathState);
            sipReleaseType(const_cast< ::wxString *>(default_filename), sipType_wxString, default_filenameState);
            sipReleaseType(const_cast< ::wxString *>(default_extension), sipType_wxString, default_extensionState);
            sipReleaseType(const_cast< ::wxString *>(wildcard), sipType_wxString, wildcardState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FileSelector, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DirSelector, "DirSelector(message=DirSelectorPromptStr, default_path=EmptyString, style=0, pos=DefaultPosition, parent=None) -> String\n"
"\n"
"Pops up a directory selector dialog.");

extern "C" {static PyObject *func_DirSelector(PyObject *,PyObject *, PyObject *);}
static PyObject *func_DirSelector(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString& messagedef = wxDirSelectorPromptStr;
        const  ::wxString* message = &messagedef;
        int messageState = 0;
        const  ::wxString& default_pathdef = wxEmptyString;
        const  ::wxString* default_path = &default_pathdef;
        int default_pathState = 0;
        long style = 0;
        const  ::wxPoint& posdef = wxDefaultPosition;
        const  ::wxPoint* pos = &posdef;
        int posState = 0;
         ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_message,
            sipName_default_path,
            sipName_style,
            sipName_pos,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|J1J1lJ1J8", sipType_wxString, &message, &messageState, sipType_wxString, &default_path, &default_pathState, &style, sipType_wxPoint, &pos, &posState, sipType_wxWindow, &parent))
        {
             ::wxString*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxDirSelector(*message,*default_path,style,*pos,parent));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);
            sipReleaseType(const_cast< ::wxString *>(default_path), sipType_wxString, default_pathState);
            sipReleaseType(const_cast< ::wxPoint *>(pos), sipType_wxPoint, posState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DirSelector, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FindWindowByLabel, "FindWindowByLabel(label, parent=None) -> Window\n"
"\n"
"FindWindowByLabel(label, parent=None) -> Window\n"
"\n"
"Find a window by its label. Depending on the type of window, the label\n"
"may be a window title or panel item label. If parent is None, the\n"
"search will start from all top-level frames and dialog boxes; if\n"
"non-None, the search will be limited to the given window\n"
"hierarchy. The search is recursive in both cases.\n"
"FindWindowByLabel(label, parent=None) -> Window");

extern "C" {static PyObject *func_FindWindowByLabel(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FindWindowByLabel(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* label;
        int labelState = 0;
        const  ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_label,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J8", sipType_wxString, &label, &labelState, sipType_wxWindow, &parent))
        {
             ::wxWindow*sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _FindWindowByLabel_function(label, parent);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    {
        const  ::wxString* label;
        int labelState = 0;
         ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_label,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J8", sipType_wxString, &label, &labelState, sipType_wxWindow, &parent))
        {
             ::wxWindow*sipRes;

            if (sipDeprecated(SIP_NULLPTR,sipName_FindWindowByLabel) < 0)
                return SIP_NULLPTR;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxFindWindowByLabel(*label,parent);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(label), sipType_wxString, labelState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FindWindowByLabel, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FindWindowByName, "FindWindowByName(name, parent=None) -> Window\n"
"\n"
"FindWindowByName(name, parent=None) -> Window\n"
"\n"
"Find a window by its name (as given in a window constructor or Create\n"
"function call). If parent is None, the search will start from all\n"
"top-level frames and dialog boxes; if non-None, the search will be\n"
"limited to the given window hierarchy. The search is recursive in both\n"
"cases.\n"
"\n"
"If no window with the name is found, wx.FindWindowByLabel is called.\n"
"FindWindowByName(name, parent=None) -> Window");

extern "C" {static PyObject *func_FindWindowByName(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FindWindowByName(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* name;
        int nameState = 0;
        const  ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_name,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J8", sipType_wxString, &name, &nameState, sipType_wxWindow, &parent))
        {
             ::wxWindow*sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _FindWindowByName_function(name, parent);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;
            sipReleaseType(const_cast< ::wxString *>(name), sipType_wxString, nameState);

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    {
        const  ::wxString* name;
        int nameState = 0;
         ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_name,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J8", sipType_wxString, &name, &nameState, sipType_wxWindow, &parent))
        {
             ::wxWindow*sipRes;

            if (sipDeprecated(SIP_NULLPTR,sipName_FindWindowByName) < 0)
                return SIP_NULLPTR;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxFindWindowByName(*name,parent);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(name), sipType_wxString, nameState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FindWindowByName, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FindWindowById, "FindWindowById(id, parent=None) -> Window\n"
"\n"
"FindWindowById(id, parent=None) -> Window\n"
"\n"
"Find the first window in the application with the given id. If parent\n"
"is None, the search will start from all top-level frames and dialog\n"
"boxes; if non-None, the search will be limited to the given window\n"
"hierarchy. The search is recursive in both cases.");

extern "C" {static PyObject *func_FindWindowById(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FindWindowById(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        long id;
        const  ::wxWindow* parent = 0;

        static const char *sipKwdList[] = {
            sipName_id,
            sipName_parent,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "l|J8", &id, sipType_wxWindow, &parent))
        {
             ::wxWindow*sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _FindWindowById_function(id, parent);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FindWindowById, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetTopLevelWindows, "GetTopLevelWindows() -> WindowList\n"
"\n"
"Returns a list-like object of the the application's top-level windows,\n"
"(frames,dialogs, etc.)");

extern "C" {static PyObject *func_GetTopLevelWindows(PyObject *,PyObject *);}
static PyObject *func_GetTopLevelWindows(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxWindowList*sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _GetTopLevelWindows_function();
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindowList,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetTopLevelWindows, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DumpWindow, "DumpWindow(window) -> String\n"
"\n"
"Return a string with human-readable platform-specific description of\n"
"the window useful for diagnostic purposes.");

extern "C" {static PyObject *func_DumpWindow(PyObject *,PyObject *, PyObject *);}
static PyObject *func_DumpWindow(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxWindow* window;

        static const char *sipKwdList[] = {
            sipName_window,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8", sipType_wxWindow, &window))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxDumpWindow(window));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DumpWindow, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetTopLevelParent, "GetTopLevelParent(window) -> Window\n"
"\n"
"Returns the first top level parent of the given window, or in other\n"
"words, the frame or dialog containing it, or NULL.");

extern "C" {static PyObject *func_GetTopLevelParent(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetTopLevelParent(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* window;

        static const char *sipKwdList[] = {
            sipName_window,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8", sipType_wxWindow, &window))
        {
             ::wxWindow*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetTopLevelParent(window);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetTopLevelParent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetActiveWindow, "GetActiveWindow() -> Window\n"
"\n"
"Gets the currently active window (implemented for MSW and GTK only\n"
"currently, always returns NULL in the other ports).");

extern "C" {static PyObject *func_GetActiveWindow(PyObject *,PyObject *);}
static PyObject *func_GetActiveWindow(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxWindow*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetActiveWindow();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetActiveWindow, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FindWindowAtPointer, "FindWindowAtPointer() -> (Window, pt)\n"
"\n"
"Find the deepest window at the mouse pointer position, returning the\n"
"window and current pointer position in screen coordinates.");

extern "C" {static PyObject *func_FindWindowAtPointer(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FindWindowAtPointer(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxPoint* pt;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, ""))
        {
             ::wxWindow*sipRes;
            pt = new  ::wxPoint();
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxFindWindowAtPointer(*pt);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            PyObject *sipResObj = sipConvertFromType(sipRes,sipType_wxWindow,SIP_NULLPTR);
            return sipBuildResult(0,"(RN)",sipResObj,pt,sipType_wxPoint,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FindWindowAtPointer, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Exit, "Exit()\n"
"\n"
"Exits application after calling wxApp::OnExit.");

extern "C" {static PyObject *func_Exit(PyObject *,PyObject *);}
static PyObject *func_Exit(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxExit();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Exit, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SafeYield, "SafeYield(win=None, onlyIfNeeded=False) -> bool\n"
"\n"
"Calls wxApp::SafeYield.");

extern "C" {static PyObject *func_SafeYield(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SafeYield(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* win = 0;
        bool onlyIfNeeded = 0;

        static const char *sipKwdList[] = {
            sipName_win,
            sipName_onlyIfNeeded,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|J8b", sipType_wxWindow, &win, &onlyIfNeeded))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxSafeYield(win,onlyIfNeeded);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SafeYield, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Yield, "Yield() -> bool\n"
"\n"
"Calls wxAppConsole::Yield if there is an existing application object.");

extern "C" {static PyObject *func_Yield(PyObject *,PyObject *);}
static PyObject *func_Yield(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxYield();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Yield, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_WakeUpIdle, "WakeUpIdle()\n"
"\n"
"This function wakes up the (internal and platform dependent) idle\n"
"system, i.e.");

extern "C" {static PyObject *func_WakeUpIdle(PyObject *,PyObject *);}
static PyObject *func_WakeUpIdle(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxWakeUpIdle();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_WakeUpIdle, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_HandleFatalExceptions, "HandleFatalExceptions(doIt=True) -> bool\n"
"\n"
"If doIt is true, the fatal exceptions (also known as general\n"
"protection faults under Windows or segmentation violations in the Unix\n"
"world) will be caught and passed to wxApp::OnFatalException.");

extern "C" {static PyObject *func_HandleFatalExceptions(PyObject *,PyObject *, PyObject *);}
static PyObject *func_HandleFatalExceptions(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool doIt = 1;

        static const char *sipKwdList[] = {
            sipName_doIt,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|b", &doIt))
        {
            bool sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _wxHandleFatalExceptions_function(doIt);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_HandleFatalExceptions, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetApp, "GetApp() -> AppConsole\n"
"\n"
"Returns the current application object.");

extern "C" {static PyObject *func_GetApp(PyObject *,PyObject *);}
static PyObject *func_GetApp(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxAppConsole*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetApp();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxAppConsole,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetApp, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testCppClone, "testCppClone(evt: Event) -> Event");

extern "C" {static PyObject *func_testCppClone(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testCppClone(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxEvent* evt;

        static const char *sipKwdList[] = {
            sipName_evt,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9", sipType_wxEvent, &evt))
        {
             ::wxEvent*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = testCppClone(*evt);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxEvent,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testCppClone, doc_testCppClone);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_QueueEvent, "QueueEvent(dest, event)\n"
"\n"
"Queue an event for processing on the given object.");

extern "C" {static PyObject *func_QueueEvent(PyObject *,PyObject *, PyObject *);}
static PyObject *func_QueueEvent(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxEvtHandler* dest;
         ::wxEvent* event;

        static const char *sipKwdList[] = {
            sipName_dest,
            sipName_event,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8J:", sipType_wxEvtHandler, &dest, sipType_wxEvent, &event))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxQueueEvent(dest,event);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_QueueEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_PostEvent, "PostEvent(dest, event)\n"
"\n"
"In a GUI application, this function posts event to the specified dest\n"
"object using wxEvtHandler::AddPendingEvent().");

extern "C" {static PyObject *func_PostEvent(PyObject *,PyObject *, PyObject *);}
static PyObject *func_PostEvent(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxEvtHandler* dest;
        const  ::wxEvent* event;

        static const char *sipKwdList[] = {
            sipName_dest,
            sipName_event,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8J9", sipType_wxEvtHandler, &dest, sipType_wxEvent, &event))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxPostEvent(dest,*event);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_PostEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_NewEventType, "NewEventType() -> EventType\n"
"\n"
"Generates a new unique event type.");

extern "C" {static PyObject *func_NewEventType(PyObject *,PyObject *);}
static PyObject *func_NewEventType(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxEventType sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxNewEventType();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_NewEventType, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testVariantTypeName, "testVariantTypeName(var: object) -> object");

extern "C" {static PyObject *func_testVariantTypeName(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testVariantTypeName(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxVariant* var;
        int varState = 0;

        static const char *sipKwdList[] = {
            sipName_var,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxVariant, &var, &varState))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(testVariantTypeName(*var));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxVariant *>(var), sipType_wxVariant, varState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testVariantTypeName, doc_testVariantTypeName);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testVariantTypemap, "testVariantTypemap(var: object) -> object");

extern "C" {static PyObject *func_testVariantTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testVariantTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxVariant* var;
        int varState = 0;

        static const char *sipKwdList[] = {
            sipName_var,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxVariant, &var, &varState))
        {
             ::wxVariant*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxVariant(testVariantTypemap(*var));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxVariant *>(var), sipType_wxVariant, varState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxVariant,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testVariantTypemap, doc_testVariantTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IsDragResultOk, "IsDragResultOk(res) -> bool\n"
"\n"
"Returns true if res indicates that something was done during a DnD\n"
"operation, i.e.");

extern "C" {static PyObject *func_IsDragResultOk(PyObject *,PyObject *, PyObject *);}
static PyObject *func_IsDragResultOk(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxDragResult res;

        static const char *sipKwdList[] = {
            sipName_res,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "E", sipType_wxDragResult, &res))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxIsDragResultOk(res);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IsDragResultOk, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogSysError, "LogSysError(message)\n"
"\n"
"Mostly used by wxWidgets itself, but might be handy for logging errors\n"
"after system call (API function) failure.");

extern "C" {static PyObject *func_LogSysError(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogSysError(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogSysError(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogSysError, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogStatus, "LogStatus(frame, message)\n"
"LogStatus(message)\n"
"\n"
"Messages logged by this function will appear in the statusbar of the\n"
"frame or of the top level application window by default (i.e.\n"
"");

extern "C" {static PyObject *func_LogStatus(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogStatus(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxFrame* frame;
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_frame,
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8J1", sipType_wxFrame, &frame, sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogStatus(frame,*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogStatus(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogStatus, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogDebug, "LogDebug(message)\n"
"\n"
"The right functions for debug output.");

extern "C" {static PyObject *func_LogDebug(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogDebug(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogDebug(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogDebug, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogError, "LogError(message)\n"
"\n"
"The functions to use for error messages, i.e.");

extern "C" {static PyObject *func_LogError(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogError(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogError(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogError, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogFatalError, "LogFatalError(message)\n"
"\n"
"Like wxLogError(), but also terminates the program with the exit code\n"
"3.");

extern "C" {static PyObject *func_LogFatalError(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogFatalError(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogFatalError(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogFatalError, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogWarning, "LogWarning(message)\n"
"\n"
"For warnings - they are also normally shown to the user, but don't\n"
"interrupt the program work.");

extern "C" {static PyObject *func_LogWarning(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogWarning(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogWarning(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogWarning, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogVerbose, "LogVerbose(message)\n"
"\n"
"For verbose output.");

extern "C" {static PyObject *func_LogVerbose(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogVerbose(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogVerbose(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogVerbose, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogInfo, "LogInfo(formatString, )\n"
"\n"
"For low priority messages.");

extern "C" {static PyObject *func_LogInfo(PyObject *,PyObject *);}
static PyObject *func_LogInfo(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const char* formatString;
        PyObject * a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "sW", &formatString, &a1))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogInfo(formatString,a1);
            Py_END_ALLOW_THREADS

            Py_DECREF(a1);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogInfo, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogMessage, "LogMessage(message)\n"
"\n"
"For all normal, informational messages.");

extern "C" {static PyObject *func_LogMessage(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogMessage(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogMessage(*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogMessage, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_LogGeneric, "LogGeneric(level, message)\n"
"\n"
"Logs a message with the given wxLogLevel.");

extern "C" {static PyObject *func_LogGeneric(PyObject *,PyObject *, PyObject *);}
static PyObject *func_LogGeneric(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxLogLevel level;
        const  ::wxString* message;
        int messageState = 0;

        static const char *sipKwdList[] = {
            sipName_level,
            sipName_message,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "mJ1", &level, sipType_wxString, &message, &messageState))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxLogGeneric(level,*message);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(message), sipType_wxString, messageState);

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_LogGeneric, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SysErrorMsg, "SysErrorMsg(errCode=0) -> String\n"
"\n"
"Returns the error message corresponding to the given system error\n"
"code.");

extern "C" {static PyObject *func_SysErrorMsg(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SysErrorMsg(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        unsigned long errCode = 0;

        static const char *sipKwdList[] = {
            sipName_errCode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|m", &errCode))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxSysErrorMsg(errCode));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SysErrorMsg, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SysErrorMsgStr, "SysErrorMsgStr(errCode=0) -> String\n"
"\n"
"Returns the error message corresponding to the given system error\n"
"code.");

extern "C" {static PyObject *func_SysErrorMsgStr(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SysErrorMsgStr(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        unsigned long errCode = 0;

        static const char *sipKwdList[] = {
            sipName_errCode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "|m", &errCode))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxSysErrorMsgStr(errCode));
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SysErrorMsgStr, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SysErrorCode, "SysErrorCode() -> unsignedlong\n"
"\n"
"Returns the error code from the last system call.");

extern "C" {static PyObject *func_SysErrorCode(PyObject *,PyObject *);}
static PyObject *func_SysErrorCode(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            unsigned long sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxSysErrorCode();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SysErrorCode, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SafeShowMessage, "SafeShowMessage(title, text) -> bool\n"
"\n"
"This function shows a message to the user in a safe way and should be\n"
"safe to call even before the application has been initialized or if it\n"
"is currently in some other strange state (for example, about to\n"
"crash).");

extern "C" {static PyObject *func_SafeShowMessage(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SafeShowMessage(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* title;
        int titleState = 0;
        const  ::wxString* text;
        int textState = 0;

        static const char *sipKwdList[] = {
            sipName_title,
            sipName_text,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1", sipType_wxString, &title, &titleState, sipType_wxString, &text, &textState))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxSafeShowMessage(*title,*text);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(title), sipType_wxString, titleState);
            sipReleaseType(const_cast< ::wxString *>(text), sipType_wxString, textState);

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SafeShowMessage, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_AutoBufferedPaintDCFactory, "AutoBufferedPaintDCFactory(window) -> DC\n"
"\n"
"Check if the window is natively double buffered and will return a\n"
"wxPaintDC if it is, a wxBufferedPaintDC otherwise.");

extern "C" {static PyObject *func_AutoBufferedPaintDCFactory(PyObject *,PyObject *, PyObject *);}
static PyObject *func_AutoBufferedPaintDCFactory(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxWindow* window;

        static const char *sipKwdList[] = {
            sipName_window,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8", sipType_wxWindow, &window))
        {
             ::wxDC*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxAutoBufferedPaintDCFactory(window);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxDC,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_AutoBufferedPaintDCFactory, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_FFont, "FFont(pointSize, family, flags=FONTFLAG_DEFAULT, faceName=EmptyString, encoding=FONTENCODING_DEFAULT)");

extern "C" {static PyObject *func_FFont(PyObject *,PyObject *, PyObject *);}
static PyObject *func_FFont(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int pointSize;
         ::wxFontFamily family;
        int flags = wxFONTFLAG_DEFAULT;
        const  ::wxString& faceNamedef = wxEmptyString;
        const  ::wxString* faceName = &faceNamedef;
        int faceNameState = 0;
         ::wxFontEncoding encoding = wxFONTENCODING_DEFAULT;

        static const char *sipKwdList[] = {
            sipName_pointSize,
            sipName_family,
            sipName_flags,
            sipName_faceName,
            sipName_encoding,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "iE|iJ1E", &pointSize, sipType_wxFontFamily, &family, &flags, sipType_wxString, &faceName, &faceNameState, sipType_wxFontEncoding, &encoding))
        {
             ::wxFont*sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _FFont_function(pointSize, family, flags, faceName, encoding);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;
            sipReleaseType(const_cast< ::wxString *>(faceName), sipType_wxString, faceNameState);

            if (sipIsErr)
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxFont,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_FFont, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_InitAllImageHandlers, "InitAllImageHandlers()\n"
"\n"
"Initializes all available image handlers.");

extern "C" {static PyObject *func_InitAllImageHandlers(PyObject *,PyObject *);}
static PyObject *func_InitAllImageHandlers(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxInitAllImageHandlers();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_InitAllImageHandlers, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testColourTypeMap, "testColourTypeMap(c: Colour) -> Colour");

extern "C" {static PyObject *func_testColourTypeMap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testColourTypeMap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxColour* c;
        int cState = 0;

        static const char *sipKwdList[] = {
            sipName_c,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxColour, &c, &cState))
        {
             ::wxColour*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxColour(testColourTypeMap(*c));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxColour *>(c), sipType_wxColour, cState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxColour,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testColourTypeMap, doc_testColourTypeMap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_MacThemeColour, "MacThemeColour(themeBrushID) -> Colour");

extern "C" {static PyObject *func_MacThemeColour(PyObject *,PyObject *, PyObject *);}
static PyObject *func_MacThemeColour(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int themeBrushID;

        static const char *sipKwdList[] = {
            sipName_themeBrushID,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "i", &themeBrushID))
        {
             ::wxColour*sipRes = 0;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _MacThemeColour_function(themeBrushID);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;

            if (sipIsErr)
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxColour,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_MacThemeColour, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IntersectRect, "IntersectRect(r1, r2) -> PyObject\n"
"\n"
"Calculate and return the intersection of r1 and r2.  Returns None if\n"
"there\n"
"is no intersection.");

extern "C" {static PyObject *func_IntersectRect(PyObject *,PyObject *, PyObject *);}
static PyObject *func_IntersectRect(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxRect* r1;
        int r1State = 0;
         ::wxRect* r2;
        int r2State = 0;

        static const char *sipKwdList[] = {
            sipName_r1,
            sipName_r2,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J0J0", sipType_wxRect, &r1, &r1State, sipType_wxRect, &r2, &r2State))
        {
            PyObject * sipRes = SIP_NULLPTR;
            int sipIsErr = 0;
    PyErr_Clear();
    Py_BEGIN_ALLOW_THREADS
    sipRes = _IntersectRect_function(r1, r2);
    Py_END_ALLOW_THREADS
    if (PyErr_Occurred()) sipIsErr = 1;
            sipReleaseType(r1, sipType_wxRect, r1State);
            sipReleaseType(r2, sipType_wxRect, r2State);

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IntersectRect, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetDisplaySizeMM, "GetDisplaySizeMM() -> Size\n"
"\n"
"Returns the display size in millimeters.");

extern "C" {static PyObject *func_GetDisplaySizeMM(PyObject *,PyObject *);}
static PyObject *func_GetDisplaySizeMM(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxSize*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize(wxGetDisplaySizeMM());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetDisplaySizeMM, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DisplaySizeMM, "DisplaySizeMM() -> (width, height)\n"
"\n"
"Returns the display size in millimeters.");

extern "C" {static PyObject *func_DisplaySizeMM(PyObject *,PyObject *, PyObject *);}
static PyObject *func_DisplaySizeMM(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int width;
        int height;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, ""))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxDisplaySizeMM(&width,&height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(ii)",width,height);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DisplaySizeMM, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetDisplaySize, "GetDisplaySize() -> Size\n"
"\n"
"Returns the display size in pixels.");

extern "C" {static PyObject *func_GetDisplaySize(PyObject *,PyObject *);}
static PyObject *func_GetDisplaySize(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxSize*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize(wxGetDisplaySize());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetDisplaySize, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DisplaySize, "DisplaySize() -> (width, height)\n"
"\n"
"Returns the display size in pixels.");

extern "C" {static PyObject *func_DisplaySize(PyObject *,PyObject *, PyObject *);}
static PyObject *func_DisplaySize(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int width;
        int height;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, ""))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxDisplaySize(&width,&height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(ii)",width,height);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DisplaySize, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetDisplayPPI, "GetDisplayPPI() -> Size\n"
"\n"
"Returns the display resolution in pixels per inch.");

extern "C" {static PyObject *func_GetDisplayPPI(PyObject *,PyObject *);}
static PyObject *func_GetDisplayPPI(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxSize*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxSize(wxGetDisplayPPI());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxSize,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetDisplayPPI, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetClientDisplayRect, "GetClientDisplayRect() -> Rect\n"
"\n"
"Returns the dimensions of the work area on the display.");

extern "C" {static PyObject *func_GetClientDisplayRect(PyObject *,PyObject *);}
static PyObject *func_GetClientDisplayRect(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxRect*sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxRect(wxGetClientDisplayRect());
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxRect,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetClientDisplayRect, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_ClientDisplayRect, "ClientDisplayRect() -> (x, y, width, height)\n"
"\n"
"Returns the dimensions of the work area on the display.");

extern "C" {static PyObject *func_ClientDisplayRect(PyObject *,PyObject *, PyObject *);}
static PyObject *func_ClientDisplayRect(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int x;
        int y;
        int width;
        int height;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, SIP_NULLPTR, ""))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxClientDisplayRect(&x,&y,&width,&height);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipBuildResult(0,"(iiii)",x,y,width,height);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_ClientDisplayRect, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_SetCursor, "SetCursor(cursor)\n"
"\n"
"Globally sets the cursor; only has an effect on Windows, Mac and GTK+.");

extern "C" {static PyObject *func_SetCursor(PyObject *,PyObject *, PyObject *);}
static PyObject *func_SetCursor(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxCursor* cursor;

        static const char *sipKwdList[] = {
            sipName_cursor,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J9", sipType_wxCursor, &cursor))
        {
    if (!wxPyCheckForApp()) return NULL;
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxSetCursor(*cursor);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_SetCursor, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DisplayDepth, "DisplayDepth() -> int\n"
"\n"
"Returns the depth of the display (a value of 1 denotes a monochrome\n"
"display).");

extern "C" {static PyObject *func_DisplayDepth(PyObject *,PyObject *);}
static PyObject *func_DisplayDepth(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            int sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxDisplayDepth();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DisplayDepth, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_ColourDisplay, "ColourDisplay() -> bool\n"
"\n"
"Returns true if the display is colour, false otherwise.");

extern "C" {static PyObject *func_ColourDisplay(PyObject *,PyObject *);}
static PyObject *func_ColourDisplay(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes;
    if (!wxPyCheckForApp()) return NULL;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxColourDisplay();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_ColourDisplay, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetTranslation, "GetTranslation(string, domain=EmptyString, context=EmptyString) -> String\n"
"GetTranslation(string, plural, n, domain=EmptyString, context=EmptyString) -> String\n"
"\n"
"This function returns the translation of string in the current\n"
"locale().\n"
"");

extern "C" {static PyObject *func_GetTranslation(PyObject *,PyObject *, PyObject *);}
static PyObject *func_GetTranslation(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* string;
        int stringState = 0;
        const  ::wxString& domaindef = wxEmptyString;
        const  ::wxString* domain = &domaindef;
        int domainState = 0;
        const  ::wxString& contextdef = wxEmptyString;
        const  ::wxString* context = &contextdef;
        int contextState = 0;

        static const char *sipKwdList[] = {
            sipName_string,
            sipName_domain,
            sipName_context,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1|J1J1", sipType_wxString, &string, &stringState, sipType_wxString, &domain, &domainState, sipType_wxString, &context, &contextState))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetTranslation(*string,*domain,*context));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(string), sipType_wxString, stringState);
            sipReleaseType(const_cast< ::wxString *>(domain), sipType_wxString, domainState);
            sipReleaseType(const_cast< ::wxString *>(context), sipType_wxString, contextState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    {
        const  ::wxString* string;
        int stringState = 0;
        const  ::wxString* plural;
        int pluralState = 0;
        uint n;
        const  ::wxString& domaindef = wxEmptyString;
        const  ::wxString* domain = &domaindef;
        int domainState = 0;
        const  ::wxString& contextdef = wxEmptyString;
        const  ::wxString* context = &contextdef;
        int contextState = 0;

        static const char *sipKwdList[] = {
            sipName_string,
            sipName_plural,
            sipName_n,
            sipName_domain,
            sipName_context,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1J1u|J1J1", sipType_wxString, &string, &stringState, sipType_wxString, &plural, &pluralState, &n, sipType_wxString, &domain, &domainState, sipType_wxString, &context, &contextState))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(wxGetTranslation(*string,*plural,n,*domain,*context));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(string), sipType_wxString, stringState);
            sipReleaseType(const_cast< ::wxString *>(plural), sipType_wxString, pluralState);
            sipReleaseType(const_cast< ::wxString *>(domain), sipType_wxString, domainState);
            sipReleaseType(const_cast< ::wxString *>(context), sipType_wxString, contextState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetTranslation, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Setlocale, "Setlocale(category: int, locale: bytes) -> bytes\n"
"Setlocale(category: int, locale: object) -> bytes");

extern "C" {static PyObject *func_Setlocale(PyObject *,PyObject *, PyObject *);}
static PyObject *func_Setlocale(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        int category;
        const char* locale;

        static const char *sipKwdList[] = {
            sipName_category,
            sipName_locale,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "is", &category, &locale))
        {
            char*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxSetlocale(category,locale);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            if (sipRes == SIP_NULLPTR)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return PyBytes_FromString(sipRes);
        }
    }

    {
        int category;
        const  ::wxString* locale;
        int localeState = 0;

        static const char *sipKwdList[] = {
            sipName_category,
            sipName_locale,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "iJ1", &category, sipType_wxString, &locale, &localeState))
        {
            char*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxSetlocale(category,*locale);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(locale), sipType_wxString, localeState);

            if (PyErr_Occurred())
                return 0;

            if (sipRes == SIP_NULLPTR)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return PyBytes_FromString(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Setlocale, doc_Setlocale);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_GetLocale, "GetLocale() -> Locale\n"
"\n"
"Get the current locale object (note that it may be NULL!)");

extern "C" {static PyObject *func_GetLocale(PyObject *,PyObject *);}
static PyObject *func_GetLocale(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
             ::wxLocale*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxGetLocale();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromType(sipRes,sipType_wxLocale,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_GetLocale, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_IsRunningUnderWine, "IsRunningUnderWine() -> bool\n"
"\n"
"Returns true only for MSW programs running under Wine.");

extern "C" {static PyObject *func_IsRunningUnderWine(PyObject *,PyObject *);}
static PyObject *func_IsRunningUnderWine(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            bool sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = wxIsRunningUnderWine();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_IsRunningUnderWine, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testArrayDoubleTypemap, "testArrayDoubleTypemap(arr: object) -> object");

extern "C" {static PyObject *func_testArrayDoubleTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testArrayDoubleTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxArrayDouble* arr;
        int arrState = 0;

        static const char *sipKwdList[] = {
            sipName_arr,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxArrayDouble, &arr, &arrState))
        {
             ::wxArrayDouble*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxArrayDouble(testArrayDoubleTypemap(*arr));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxArrayDouble *>(arr), sipType_wxArrayDouble, arrState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxArrayDouble,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testArrayDoubleTypemap, doc_testArrayDoubleTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testArrayIntTypemap, "testArrayIntTypemap(arr: object) -> object");

extern "C" {static PyObject *func_testArrayIntTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testArrayIntTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxArrayInt* arr;
        int arrState = 0;

        static const char *sipKwdList[] = {
            sipName_arr,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxArrayInt, &arr, &arrState))
        {
             ::wxArrayInt*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxArrayInt(testArrayIntTypemap(*arr));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxArrayInt *>(arr), sipType_wxArrayInt, arrState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxArrayInt,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testArrayIntTypemap, doc_testArrayIntTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testArrayStringTypemap, "testArrayStringTypemap(arr: object) -> object");

extern "C" {static PyObject *func_testArrayStringTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testArrayStringTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxArrayString* arr;
        int arrState = 0;

        static const char *sipKwdList[] = {
            sipName_arr,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxArrayString, &arr, &arrState))
        {
             ::wxArrayString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxArrayString(testArrayStringTypemap(*arr));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxArrayString *>(arr), sipType_wxArrayString, arrState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxArrayString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testArrayStringTypemap, doc_testArrayStringTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testStringTypemap, "testStringTypemap(str: object) -> object");

extern "C" {static PyObject *func_testStringTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testStringTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::wxString* str;
        int strState = 0;

        static const char *sipKwdList[] = {
            sipName_str,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxString, &str, &strState))
        {
             ::wxString*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxString(testStringTypemap(*str));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::wxString *>(str), sipType_wxString, strState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxString,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testStringTypemap, doc_testStringTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Trap, "Trap()\n"
"\n"
"Generate a debugger exception meaning that the control is passed to\n"
"the debugger if one is attached to the process.");

extern "C" {static PyObject *func_Trap(PyObject *,PyObject *);}
static PyObject *func_Trap(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxTrap();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Trap, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_DisableAsserts, "DisableAsserts()\n"
"\n"
"Disable the condition checks in the assertions.");

extern "C" {static PyObject *func_DisableAsserts(PyObject *,PyObject *);}
static PyObject *func_DisableAsserts(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxDisableAsserts();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_DisableAsserts, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_Abort, "Abort()\n"
"\n"
"Exits the program immediately.");

extern "C" {static PyObject *func_Abort(PyObject *,PyObject *);}
static PyObject *func_Abort(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        if (sipParseArgs(&sipParseErr, sipArgs, ""))
        {
            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            wxAbort();
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_Abort, SIP_NULLPTR);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testUIntPtrTypemap, "testUIntPtrTypemap(value: object) -> object");

extern "C" {static PyObject *func_testUIntPtrTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testUIntPtrTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxUIntPtr* value;
        int valueState = 0;

        static const char *sipKwdList[] = {
            sipName_value,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxUIntPtr, &value, &valueState))
        {
             ::wxUIntPtr*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxUIntPtr(testUIntPtrTypemap(*value));
            Py_END_ALLOW_THREADS
            sipReleaseType(value, sipType_wxUIntPtr, valueState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxUIntPtr,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testUIntPtrTypemap, doc_testUIntPtrTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testIntPtrTypemap, "testIntPtrTypemap(value: object) -> object");

extern "C" {static PyObject *func_testIntPtrTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testIntPtrTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::wxIntPtr* value;
        int valueState = 0;

        static const char *sipKwdList[] = {
            sipName_value,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J1", sipType_wxIntPtr, &value, &valueState))
        {
             ::wxIntPtr*sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::wxIntPtr(testIntPtrTypemap(*value));
            Py_END_ALLOW_THREADS
            sipReleaseType(value, sipType_wxIntPtr, valueState);

            if (PyErr_Occurred())
                return 0;

            return sipConvertFromNewType(sipRes,sipType_wxIntPtr,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testIntPtrTypemap, doc_testIntPtrTypemap);

    return SIP_NULLPTR;
}


PyDoc_STRVAR(doc_testSizetTypemap, "testSizetTypemap(value: int) -> int");

extern "C" {static PyObject *func_testSizetTypemap(PyObject *,PyObject *, PyObject *);}
static PyObject *func_testSizetTypemap(PyObject *,PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        size_t value;

        static const char *sipKwdList[] = {
            sipName_value,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "=", &value))
        {
            size_t sipRes;

            PyErr_Clear();

            Py_BEGIN_ALLOW_THREADS
            sipRes = testSizetTypemap(value);
            Py_END_ALLOW_THREADS

            if (PyErr_Occurred())
                return 0;

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_testSizetTypemap, doc_testSizetTypemap);

    return SIP_NULLPTR;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_wxObject(void **);}
static const sipTypeDef *sipSubClass_wxObject(void **sipCppRet)
{
     ::wxObject *sipCpp = reinterpret_cast< ::wxObject *>(*sipCppRet);
    const sipTypeDef *sipType;
            const wxClassInfo* info   = sipCpp->GetClassInfo();
            wxString           name   = info->GetClassName();
            bool               exists = sipFindType(name.c_str()) != NULL;
            while (info && !exists) {
                info = info->GetBaseClass1();
                name = info->GetClassName();
                exists = sipFindType(name.c_str()) != NULL;
            }
            if (info)
                sipType = sipFindType(name.c_str());
            else
                sipType = NULL;

    return sipType;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_wxWindow(void **);}
static const sipTypeDef *sipSubClass_wxWindow(void **sipCppRet)
{
     ::wxObject *sipCpp = reinterpret_cast< ::wxObject *>(*sipCppRet);
    const sipTypeDef *sipType;
            const wxClassInfo* info   = sipCpp->GetClassInfo();
            wxString           name   = info->GetClassName();
            bool               exists = sipFindType(name.c_str()) != NULL;
            while (info && !exists) {
                info = info->GetBaseClass1();
                name = info->GetClassName();
                exists = sipFindType(name.c_str()) != NULL;
            }
            if (info)
                sipType = sipFindType(name.c_str());
            else
                sipType = NULL;

    return sipType;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAccObject, SIP_NULLPTR, 0}, sipNameNr_AccObject, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAccRole, SIP_NULLPTR, 0}, sipNameNr_AccRole, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAccSelectionFlags, SIP_NULLPTR, 0}, sipNameNr_AccSelectionFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAccStatus, SIP_NULLPTR, 0}, sipNameNr_AccStatus, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAcceleratorEntryFlags, SIP_NULLPTR, 0}, sipNameNr_AcceleratorEntryFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxActivateEvent__Reason, SIP_NULLPTR, 0}, sipNameNr_Reason, 9, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAlignment, SIP_NULLPTR, 0}, sipNameNr_Alignment, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAntialiasMode, SIP_NULLPTR, 0}, sipNameNr_AntialiasMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxAppAssertMode, SIP_NULLPTR, 0}, sipNameNr_AppAssertMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxArchitecture, SIP_NULLPTR, 0}, sipNameNr_Architecture, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBackgroundStyle, SIP_NULLPTR, 0}, sipNameNr_BackgroundStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBatteryState, SIP_NULLPTR, 0}, sipNameNr_BatteryState, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBitmapBufferFormat, SIP_NULLPTR, 0}, sipNameNr_BitmapBufferFormat, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBitmapType, SIP_NULLPTR, 0}, sipNameNr_BitmapType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBitness, SIP_NULLPTR, 0}, sipNameNr_Bitness, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBorder, SIP_NULLPTR, 0}, sipNameNr_Border, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxBrushStyle, SIP_NULLPTR, 0}, sipNameNr_BrushStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxCheckBoxState, SIP_NULLPTR, 0}, sipNameNr_CheckBoxState, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxCompositionMode, SIP_NULLPTR, 0}, sipNameNr_CompositionMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxConfigBase__EntryType, SIP_NULLPTR, 0}, sipNameNr_EntryType, 90, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxContentProtection, SIP_NULLPTR, 0}, sipNameNr_ContentProtection, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDataFormatId, SIP_NULLPTR, 0}, sipNameNr_DataFormatId, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDataObject__Direction, SIP_NULLPTR, 0}, sipNameNr_Direction, 114, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__Calendar, SIP_NULLPTR, 0}, sipNameNr_Calendar, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__Country, SIP_NULLPTR, 0}, sipNameNr_Country, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__Month, SIP_NULLPTR, 0}, sipNameNr_Month, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__NameFlags, SIP_NULLPTR, 0}, sipNameNr_NameFlags, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__TZ, SIP_NULLPTR, 0}, sipNameNr_TZ, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__WeekDay, SIP_NULLPTR, 0}, sipNameNr_WeekDay, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__WeekFlags, SIP_NULLPTR, 0}, sipNameNr_WeekFlags, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDateTime__Year, SIP_NULLPTR, 0}, sipNameNr_Year, 119, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDialogLayoutAdaptationMode, SIP_NULLPTR, 0}, sipNameNr_DialogLayoutAdaptationMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDirection, SIP_NULLPTR, 0}, sipNameNr_Direction, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDragResult, SIP_NULLPTR, 0}, sipNameNr_DragResult, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxDuplexMode, SIP_NULLPTR, 0}, sipNameNr_DuplexMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxEdge, SIP_NULLPTR, 0}, sipNameNr_Edge, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxEllipsizeFlags, SIP_NULLPTR, 0}, sipNameNr_EllipsizeFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxEllipsizeMode, SIP_NULLPTR, 0}, sipNameNr_EllipsizeMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxEndianness, SIP_NULLPTR, 0}, sipNameNr_Endianness, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxEventCategory, SIP_NULLPTR, 0}, sipNameNr_EventCategory, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxEventPropagation, SIP_NULLPTR, 0}, sipNameNr_EventPropagation, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFSWFlags, SIP_NULLPTR, 0}, sipNameNr_FSWFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFSWWarningType, SIP_NULLPTR, 0}, sipNameNr_FSWWarningType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFileHistoryMenuPathStyle, SIP_NULLPTR, 0}, sipNameNr_FileHistoryMenuPathStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFileSystemOpenFlags, SIP_NULLPTR, 0}, sipNameNr_FileSystemOpenFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFindReplaceDialogStyles, SIP_NULLPTR, 0}, sipNameNr_FindReplaceDialogStyles, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFindReplaceFlags, SIP_NULLPTR, 0}, sipNameNr_FindReplaceFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFlexSizerGrowMode, SIP_NULLPTR, 0}, sipNameNr_FlexSizerGrowMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFloodFillStyle, SIP_NULLPTR, 0}, sipNameNr_FloodFillStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFontEncoding, SIP_NULLPTR, 0}, sipNameNr_FontEncoding, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFontFamily, SIP_NULLPTR, 0}, sipNameNr_FontFamily, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFontFlag, SIP_NULLPTR, 0}, sipNameNr_FontFlag, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFontStyle, SIP_NULLPTR, 0}, sipNameNr_FontStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFontSymbolicSize, SIP_NULLPTR, 0}, sipNameNr_FontSymbolicSize, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxFontWeight, SIP_NULLPTR, 0}, sipNameNr_FontWeight, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxGenericStaticBitmap__ScaleMode, SIP_NULLPTR, 0}, sipNameNr_ScaleMode, 234, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxGeometryCentre, SIP_NULLPTR, 0}, sipNameNr_GeometryCentre, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxGradientType, SIP_NULLPTR, 0}, sipNameNr_GradientType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxHeaderSortIconType, SIP_NULLPTR, 0}, sipNameNr_HeaderSortIconType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxHelpEvent__Origin, SIP_NULLPTR, 0}, sipNameNr_Origin, 265, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxHelpSearchMode, SIP_NULLPTR, 0}, sipNameNr_HelpSearchMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxHitTest, SIP_NULLPTR, 0}, sipNameNr_HitTest, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxIdleMode, SIP_NULLPTR, 0}, sipNameNr_IdleMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxImageAlphaBlendMode, SIP_NULLPTR, 0}, sipNameNr_ImageAlphaBlendMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxImagePNGType, SIP_NULLPTR, 0}, sipNameNr_ImagePNGType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxImageResizeQuality, SIP_NULLPTR, 0}, sipNameNr_ImageResizeQuality, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxImageResolution, SIP_NULLPTR, 0}, sipNameNr_ImageResolution, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxInterpolationQuality, SIP_NULLPTR, 0}, sipNameNr_InterpolationQuality, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxItemKind, SIP_NULLPTR, 0}, sipNameNr_ItemKind, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxKeyCategoryFlags, SIP_NULLPTR, 0}, sipNameNr_KeyCategoryFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxKeyCode, SIP_NULLPTR, 0}, sipNameNr_KeyCode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxKeyModifier, SIP_NULLPTR, 0}, sipNameNr_KeyModifier, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxKillError, SIP_NULLPTR, 0}, sipNameNr_KillError, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxKillFlags, SIP_NULLPTR, 0}, sipNameNr_KillFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLanguage, SIP_NULLPTR, 0}, sipNameNr_Language, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLayoutDirection, SIP_NULLPTR, 0}, sipNameNr_LayoutDirection, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxListColumnFormat, SIP_NULLPTR, 0}, sipNameNr_ListColumnFormat, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLocaleCategory, SIP_NULLPTR, 0}, sipNameNr_LocaleCategory, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLocaleForm, SIP_NULLPTR, 0}, sipNameNr_LocaleForm, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLocaleInfo, SIP_NULLPTR, 0}, sipNameNr_LocaleInfo, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLocaleInitFlags, SIP_NULLPTR, 0}, sipNameNr_LocaleInitFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLocaleName, SIP_NULLPTR, 0}, sipNameNr_LocaleName, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLocaleTagType, SIP_NULLPTR, 0}, sipNameNr_LocaleTagType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxLogLevelValues, SIP_NULLPTR, 0}, sipNameNr_LogLevelValues, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxMappingMode, SIP_NULLPTR, 0}, sipNameNr_MappingMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxMouseButton, SIP_NULLPTR, 0}, sipNameNr_MouseButton, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxMouseWheelAxis, SIP_NULLPTR, 0}, sipNameNr_MouseWheelAxis, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxNavDir, SIP_NULLPTR, 0}, sipNameNr_NavDir, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxNavigationKeyEvent__wxNavigationKeyEventFlags, SIP_NULLPTR, 0}, sipNameNr_NavigationKeyEventFlags, 386, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxOperatingSystemId, SIP_NULLPTR, 0}, sipNameNr_OperatingSystemId, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxOrientation, SIP_NULLPTR, 0}, sipNameNr_Orientation, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxOutCode, SIP_NULLPTR, 0}, sipNameNr_OutCode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPaperSize, SIP_NULLPTR, 0}, sipNameNr_PaperSize, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPenCap, SIP_NULLPTR, 0}, sipNameNr_PenCap, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPenJoin, SIP_NULLPTR, 0}, sipNameNr_PenJoin, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPenQuality, SIP_NULLPTR, 0}, sipNameNr_PenQuality, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPenStyle, SIP_NULLPTR, 0}, sipNameNr_PenStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPolygonFillMode, SIP_NULLPTR, 0}, sipNameNr_PolygonFillMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPortId, SIP_NULLPTR, 0}, sipNameNr_PortId, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPowerResourceKind, SIP_NULLPTR, 0}, sipNameNr_PowerResourceKind, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPowerType, SIP_NULLPTR, 0}, sipNameNr_PowerType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPreviewFrameModalityKind, SIP_NULLPTR, 0}, sipNameNr_PreviewFrameModalityKind, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPrintBin, SIP_NULLPTR, 0}, sipNameNr_PrintBin, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPrintMode, SIP_NULLPTR, 0}, sipNameNr_PrintMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPrintOrientation, SIP_NULLPTR, 0}, sipNameNr_PrintOrientation, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxPrinterError, SIP_NULLPTR, 0}, sipNameNr_PrinterError, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRasterOperationMode, SIP_NULLPTR, 0}, sipNameNr_RasterOperationMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRegionContain, SIP_NULLPTR, 0}, sipNameNr_RegionContain, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxRelationship, SIP_NULLPTR, 0}, sipNameNr_Relationship, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSVGShapeRenderingMode, SIP_NULLPTR, 0}, sipNameNr_SVGShapeRenderingMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxScrollbarVisibility, SIP_NULLPTR, 0}, sipNameNr_ScrollbarVisibility, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSeekMode, SIP_NULLPTR, 0}, sipNameNr_SeekMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxShowEffect, SIP_NULLPTR, 0}, sipNameNr_ShowEffect, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxShutdownFlags, SIP_NULLPTR, 0}, sipNameNr_ShutdownFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSignal, SIP_NULLPTR, 0}, sipNameNr_Signal, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSizerFlagBits, SIP_NULLPTR, 0}, sipNameNr_SizerFlagBits, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSplitMode, SIP_NULLPTR, 0}, sipNameNr_SplitMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStandardID, SIP_NULLPTR, 0}, sipNameNr_StandardID, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStandardPaths__ConfigFileConv, SIP_NULLPTR, 0}, sipNameNr_ConfigFileConv, 529, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStandardPaths__Dir, SIP_NULLPTR, 0}, sipNameNr_Dir, 529, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStandardPaths__FileLayout, SIP_NULLPTR, 0}, sipNameNr_FileLayout, 529, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStandardPaths__ResourceCat, SIP_NULLPTR, 0}, sipNameNr_ResourceCat, 529, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStaticBitmap__ScaleMode, SIP_NULLPTR, 0}, sipNameNr_ScaleMode, 534, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStockCursor, SIP_NULLPTR, 0}, sipNameNr_StockCursor, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStockGDI__Item, SIP_NULLPTR, 0}, sipNameNr_Item, 544, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStockLabelQueryFlag, SIP_NULLPTR, 0}, sipNameNr_StockLabelQueryFlag, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStockPreferencesPage__Kind, SIP_NULLPTR, 0}, sipNameNr_Kind, 547, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStreamError, SIP_NULLPTR, 0}, sipNameNr_StreamError, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxStretch, SIP_NULLPTR, 0}, sipNameNr_Stretch, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSystemColour, SIP_NULLPTR, 0}, sipNameNr_SystemColour, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSystemFeature, SIP_NULLPTR, 0}, sipNameNr_SystemFeature, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSystemFont, SIP_NULLPTR, 0}, sipNameNr_SystemFont, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSystemMetric, SIP_NULLPTR, 0}, sipNameNr_SystemMetric, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxSystemScreenType, SIP_NULLPTR, 0}, sipNameNr_SystemScreenType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrAlignment, SIP_NULLPTR, 0}, sipNameNr_TextAttrAlignment, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrBulletStyle, SIP_NULLPTR, 0}, sipNameNr_TextAttrBulletStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrEffects, SIP_NULLPTR, 0}, sipNameNr_TextAttrEffects, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrFlags, SIP_NULLPTR, 0}, sipNameNr_TextAttrFlags, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrLineSpacing, SIP_NULLPTR, 0}, sipNameNr_TextAttrLineSpacing, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextAttrUnderlineType, SIP_NULLPTR, 0}, sipNameNr_TextAttrUnderlineType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextCtrlHitTestResult, SIP_NULLPTR, 0}, sipNameNr_TextCtrlHitTestResult, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTextFileType, SIP_NULLPTR, 0}, sipNameNr_TextFileType, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTitleBarButton, SIP_NULLPTR, 0}, sipNameNr_TitleBarButton, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxToolBarToolStyle, SIP_NULLPTR, 0}, sipNameNr_ToolBarToolStyle, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxTreeItemIcon, SIP_NULLPTR, 0}, sipNameNr_TreeItemIcon, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxUpdateUI, SIP_NULLPTR, 0}, sipNameNr_UpdateUI, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxUpdateUIMode, SIP_NULLPTR, 0}, sipNameNr_UpdateUIMode, -1, SIP_NULLPTR},
    {{-1, SIP_NULLPTR, SIP_NULLPTR, SIP_TYPE_ENUM, sipNameNr_wxWindowVariant, SIP_NULLPTR, 0}, sipNameNr_WindowVariant, -1, SIP_NULLPTR},
};

/* These are the enum members of all global enums. */
static sipEnumMemberDef enummembers[] = {
    {sipName_ACCEL_ALT, static_cast<int>(::wxACCEL_ALT), 6},
    {sipName_ACCEL_CMD, static_cast<int>(::wxACCEL_CMD), 6},
    {sipName_ACCEL_CTRL, static_cast<int>(::wxACCEL_CTRL), 6},
    {sipName_ACCEL_NORMAL, static_cast<int>(::wxACCEL_NORMAL), 6},
    {sipName_ACCEL_RAW_CTRL, static_cast<int>(::wxACCEL_RAW_CTRL), 6},
    {sipName_ACCEL_SHIFT, static_cast<int>(::wxACCEL_SHIFT), 6},
    {sipName_ACC_FAIL, static_cast<int>(::wxACC_FAIL), 4},
    {sipName_ACC_FALSE, static_cast<int>(::wxACC_FALSE), 4},
    {sipName_ACC_INVALID_ARG, static_cast<int>(::wxACC_INVALID_ARG), 4},
    {sipName_ACC_NOT_IMPLEMENTED, static_cast<int>(::wxACC_NOT_IMPLEMENTED), 4},
    {sipName_ACC_NOT_SUPPORTED, static_cast<int>(::wxACC_NOT_SUPPORTED), 4},
    {sipName_ACC_OK, static_cast<int>(::wxACC_OK), 4},
    {sipName_ACC_SEL_ADDSELECTION, static_cast<int>(::wxACC_SEL_ADDSELECTION), 3},
    {sipName_ACC_SEL_EXTENDSELECTION, static_cast<int>(::wxACC_SEL_EXTENDSELECTION), 3},
    {sipName_ACC_SEL_NONE, static_cast<int>(::wxACC_SEL_NONE), 3},
    {sipName_ACC_SEL_REMOVESELECTION, static_cast<int>(::wxACC_SEL_REMOVESELECTION), 3},
    {sipName_ACC_SEL_TAKEFOCUS, static_cast<int>(::wxACC_SEL_TAKEFOCUS), 3},
    {sipName_ACC_SEL_TAKESELECTION, static_cast<int>(::wxACC_SEL_TAKESELECTION), 3},
    {sipName_ALIGN_BOTTOM, static_cast<int>(::wxALIGN_BOTTOM), 14},
    {sipName_ALIGN_CENTER, static_cast<int>(::wxALIGN_CENTER), 14},
    {sipName_ALIGN_CENTER_HORIZONTAL, static_cast<int>(::wxALIGN_CENTER_HORIZONTAL), 14},
    {sipName_ALIGN_CENTER_VERTICAL, static_cast<int>(::wxALIGN_CENTER_VERTICAL), 14},
    {sipName_ALIGN_CENTRE, static_cast<int>(::wxALIGN_CENTRE), 14},
    {sipName_ALIGN_CENTRE_HORIZONTAL, static_cast<int>(::wxALIGN_CENTRE_HORIZONTAL), 14},
    {sipName_ALIGN_CENTRE_VERTICAL, static_cast<int>(::wxALIGN_CENTRE_VERTICAL), 14},
    {sipName_ALIGN_INVALID, static_cast<int>(::wxALIGN_INVALID), 14},
    {sipName_ALIGN_LEFT, static_cast<int>(::wxALIGN_LEFT), 14},
    {sipName_ALIGN_MASK, static_cast<int>(::wxALIGN_MASK), 14},
    {sipName_ALIGN_NOT, static_cast<int>(::wxALIGN_NOT), 14},
    {sipName_ALIGN_RIGHT, static_cast<int>(::wxALIGN_RIGHT), 14},
    {sipName_ALIGN_TOP, static_cast<int>(::wxALIGN_TOP), 14},
    {sipName_ALL, static_cast<int>(::wxALL), 137},
    {sipName_AND, static_cast<int>(::wxAND), 470},
    {sipName_AND_INVERT, static_cast<int>(::wxAND_INVERT), 470},
    {sipName_AND_REVERSE, static_cast<int>(::wxAND_REVERSE), 470},
    {sipName_ANTIALIAS_DEFAULT, static_cast<int>(::wxANTIALIAS_DEFAULT), 17},
    {sipName_ANTIALIAS_NONE, static_cast<int>(::wxANTIALIAS_NONE), 17},
    {sipName_APP_ASSERT_DIALOG, static_cast<int>(::wxAPP_ASSERT_DIALOG), 19},
    {sipName_APP_ASSERT_EXCEPTION, static_cast<int>(::wxAPP_ASSERT_EXCEPTION), 19},
    {sipName_APP_ASSERT_LOG, static_cast<int>(::wxAPP_ASSERT_LOG), 19},
    {sipName_APP_ASSERT_SUPPRESS, static_cast<int>(::wxAPP_ASSERT_SUPPRESS), 19},
    {sipName_ARCH_32, static_cast<int>(::wxARCH_32), 22},
    {sipName_ARCH_64, static_cast<int>(::wxARCH_64), 22},
    {sipName_ARCH_INVALID, static_cast<int>(::wxARCH_INVALID), 22},
    {sipName_ARCH_MAX, static_cast<int>(::wxARCH_MAX), 22},
    {sipName_Above, static_cast<int>(::wxAbove), 481},
    {sipName_Absolute, static_cast<int>(::wxAbsolute), 481},
    {sipName_AsIs, static_cast<int>(::wxAsIs), 481},
    {sipName_BATTERY_CRITICAL_STATE, static_cast<int>(::wxBATTERY_CRITICAL_STATE), 31},
    {sipName_BATTERY_LOW_STATE, static_cast<int>(::wxBATTERY_LOW_STATE), 31},
    {sipName_BATTERY_NORMAL_STATE, static_cast<int>(::wxBATTERY_NORMAL_STATE), 31},
    {sipName_BATTERY_SHUTDOWN_STATE, static_cast<int>(::wxBATTERY_SHUTDOWN_STATE), 31},
    {sipName_BATTERY_UNKNOWN_STATE, static_cast<int>(::wxBATTERY_UNKNOWN_STATE), 31},
    {sipName_BG_STYLE_COLOUR, static_cast<int>(::wxBG_STYLE_COLOUR), 30},
    {sipName_BG_STYLE_ERASE, static_cast<int>(::wxBG_STYLE_ERASE), 30},
    {sipName_BG_STYLE_PAINT, static_cast<int>(::wxBG_STYLE_PAINT), 30},
    {sipName_BG_STYLE_SYSTEM, static_cast<int>(::wxBG_STYLE_SYSTEM), 30},
    {sipName_BG_STYLE_TRANSPARENT, static_cast<int>(::wxBG_STYLE_TRANSPARENT), 30},
    {sipName_BITMAP_TYPE_ANI, static_cast<int>(::wxBITMAP_TYPE_ANI), 39},
    {sipName_BITMAP_TYPE_ANY, static_cast<int>(::wxBITMAP_TYPE_ANY), 39},
    {sipName_BITMAP_TYPE_BMP, static_cast<int>(::wxBITMAP_TYPE_BMP), 39},
    {sipName_BITMAP_TYPE_CUR, static_cast<int>(::wxBITMAP_TYPE_CUR), 39},
    {sipName_BITMAP_TYPE_GIF, static_cast<int>(::wxBITMAP_TYPE_GIF), 39},
    {sipName_BITMAP_TYPE_ICO, static_cast<int>(::wxBITMAP_TYPE_ICO), 39},
    {sipName_BITMAP_TYPE_ICON, static_cast<int>(::wxBITMAP_TYPE_ICON), 39},
    {sipName_BITMAP_TYPE_IFF, static_cast<int>(::wxBITMAP_TYPE_IFF), 39},
    {sipName_BITMAP_TYPE_INVALID, static_cast<int>(::wxBITMAP_TYPE_INVALID), 39},
    {sipName_BITMAP_TYPE_JPEG, static_cast<int>(::wxBITMAP_TYPE_JPEG), 39},
    {sipName_BITMAP_TYPE_MACCURSOR, static_cast<int>(::wxBITMAP_TYPE_MACCURSOR), 39},
    {sipName_BITMAP_TYPE_PCX, static_cast<int>(::wxBITMAP_TYPE_PCX), 39},
    {sipName_BITMAP_TYPE_PICT, static_cast<int>(::wxBITMAP_TYPE_PICT), 39},
    {sipName_BITMAP_TYPE_PNG, static_cast<int>(::wxBITMAP_TYPE_PNG), 39},
    {sipName_BITMAP_TYPE_PNM, static_cast<int>(::wxBITMAP_TYPE_PNM), 39},
    {sipName_BITMAP_TYPE_TGA, static_cast<int>(::wxBITMAP_TYPE_TGA), 39},
    {sipName_BITMAP_TYPE_TIF, static_cast<int>(::wxBITMAP_TYPE_TIF), 39},
    {sipName_BITMAP_TYPE_TIFF, static_cast<int>(::wxBITMAP_TYPE_TIFF), 39},
    {sipName_BITMAP_TYPE_XBM, static_cast<int>(::wxBITMAP_TYPE_XBM), 39},
    {sipName_BITMAP_TYPE_XBM_DATA, static_cast<int>(::wxBITMAP_TYPE_XBM_DATA), 39},
    {sipName_BITMAP_TYPE_XPM, static_cast<int>(::wxBITMAP_TYPE_XPM), 39},
    {sipName_BITMAP_TYPE_XPM_DATA, static_cast<int>(::wxBITMAP_TYPE_XPM_DATA), 39},
    {sipName_BITNESS_32, static_cast<int>(::wxBITNESS_32), 40},
    {sipName_BITNESS_64, static_cast<int>(::wxBITNESS_64), 40},
    {sipName_BITNESS_INVALID, static_cast<int>(::wxBITNESS_INVALID), 40},
    {sipName_BITNESS_MAX, static_cast<int>(::wxBITNESS_MAX), 40},
    {sipName_BORDER_DEFAULT, static_cast<int>(::wxBORDER_DEFAULT), 43},
    {sipName_BORDER_DOUBLE, static_cast<int>(::wxBORDER_DOUBLE), 43},
    {sipName_BORDER_MASK, static_cast<int>(::wxBORDER_MASK), 43},
    {sipName_BORDER_NONE, static_cast<int>(::wxBORDER_NONE), 43},
    {sipName_BORDER_RAISED, static_cast<int>(::wxBORDER_RAISED), 43},
    {sipName_BORDER_SIMPLE, static_cast<int>(::wxBORDER_SIMPLE), 43},
    {sipName_BORDER_STATIC, static_cast<int>(::wxBORDER_STATIC), 43},
    {sipName_BORDER_SUNKEN, static_cast<int>(::wxBORDER_SUNKEN), 43},
    {sipName_BORDER_THEME, static_cast<int>(::wxBORDER_THEME), 43},
    {sipName_BOTH, static_cast<int>(::wxBOTH), 394},
    {sipName_BOTTOM, static_cast<int>(::wxBOTTOM), 137},
    {sipName_BRUSHSTYLE_BDIAGONAL_HATCH, static_cast<int>(::wxBRUSHSTYLE_BDIAGONAL_HATCH), 47},
    {sipName_BRUSHSTYLE_CROSSDIAG_HATCH, static_cast<int>(::wxBRUSHSTYLE_CROSSDIAG_HATCH), 47},
    {sipName_BRUSHSTYLE_CROSS_HATCH, static_cast<int>(::wxBRUSHSTYLE_CROSS_HATCH), 47},
    {sipName_BRUSHSTYLE_FDIAGONAL_HATCH, static_cast<int>(::wxBRUSHSTYLE_FDIAGONAL_HATCH), 47},
    {sipName_BRUSHSTYLE_FIRST_HATCH, static_cast<int>(::wxBRUSHSTYLE_FIRST_HATCH), 47},
    {sipName_BRUSHSTYLE_HORIZONTAL_HATCH, static_cast<int>(::wxBRUSHSTYLE_HORIZONTAL_HATCH), 47},
    {sipName_BRUSHSTYLE_INVALID, static_cast<int>(::wxBRUSHSTYLE_INVALID), 47},
    {sipName_BRUSHSTYLE_LAST_HATCH, static_cast<int>(::wxBRUSHSTYLE_LAST_HATCH), 47},
    {sipName_BRUSHSTYLE_SOLID, static_cast<int>(::wxBRUSHSTYLE_SOLID), 47},
    {sipName_BRUSHSTYLE_STIPPLE, static_cast<int>(::wxBRUSHSTYLE_STIPPLE), 47},
    {sipName_BRUSHSTYLE_STIPPLE_MASK, static_cast<int>(::wxBRUSHSTYLE_STIPPLE_MASK), 47},
    {sipName_BRUSHSTYLE_STIPPLE_MASK_OPAQUE, static_cast<int>(::wxBRUSHSTYLE_STIPPLE_MASK_OPAQUE), 47},
    {sipName_BRUSHSTYLE_TRANSPARENT, static_cast<int>(::wxBRUSHSTYLE_TRANSPARENT), 47},
    {sipName_BRUSHSTYLE_VERTICAL_HATCH, static_cast<int>(::wxBRUSHSTYLE_VERTICAL_HATCH), 47},
    {sipName_Below, static_cast<int>(::wxBelow), 481},
    {sipName_BitmapBufferFormat_ARGB32, static_cast<int>(::wxBitmapBufferFormat_ARGB32), 33},
    {sipName_BitmapBufferFormat_RGB, static_cast<int>(::wxBitmapBufferFormat_RGB), 33},
    {sipName_BitmapBufferFormat_RGB32, static_cast<int>(::wxBitmapBufferFormat_RGB32), 33},
    {sipName_BitmapBufferFormat_RGBA, static_cast<int>(::wxBitmapBufferFormat_RGBA), 33},
    {sipName_Bottom, static_cast<int>(::wxBottom), 146},
    {sipName_CAP_BUTT, static_cast<int>(::wxCAP_BUTT), 412},
    {sipName_CAP_INVALID, static_cast<int>(::wxCAP_INVALID), 412},
    {sipName_CAP_PROJECTING, static_cast<int>(::wxCAP_PROJECTING), 412},
    {sipName_CAP_ROUND, static_cast<int>(::wxCAP_ROUND), 412},
    {sipName_CENTER, static_cast<int>(::wxCENTER), 236},
    {sipName_CENTRE, static_cast<int>(::wxCENTRE), 236},
    {sipName_CHK_CHECKED, static_cast<int>(::wxCHK_CHECKED), 57},
    {sipName_CHK_UNCHECKED, static_cast<int>(::wxCHK_UNCHECKED), 57},
    {sipName_CHK_UNDETERMINED, static_cast<int>(::wxCHK_UNDETERMINED), 57},
    {sipName_CLEAR, static_cast<int>(::wxCLEAR), 470},
    {sipName_COMPOSITION_ADD, static_cast<int>(::wxCOMPOSITION_ADD), 88},
    {sipName_COMPOSITION_ATOP, static_cast<int>(::wxCOMPOSITION_ATOP), 88},
    {sipName_COMPOSITION_CLEAR, static_cast<int>(::wxCOMPOSITION_CLEAR), 88},
    {sipName_COMPOSITION_DEST, static_cast<int>(::wxCOMPOSITION_DEST), 88},
    {sipName_COMPOSITION_DEST_ATOP, static_cast<int>(::wxCOMPOSITION_DEST_ATOP), 88},
    {sipName_COMPOSITION_DEST_IN, static_cast<int>(::wxCOMPOSITION_DEST_IN), 88},
    {sipName_COMPOSITION_DEST_OUT, static_cast<int>(::wxCOMPOSITION_DEST_OUT), 88},
    {sipName_COMPOSITION_DEST_OVER, static_cast<int>(::wxCOMPOSITION_DEST_OVER), 88},
    {sipName_COMPOSITION_DIFF, static_cast<int>(::wxCOMPOSITION_DIFF), 88},
    {sipName_COMPOSITION_IN, static_cast<int>(::wxCOMPOSITION_IN), 88},
    {sipName_COMPOSITION_INVALID, static_cast<int>(::wxCOMPOSITION_INVALID), 88},
    {sipName_COMPOSITION_OUT, static_cast<int>(::wxCOMPOSITION_OUT), 88},
    {sipName_COMPOSITION_OVER, static_cast<int>(::wxCOMPOSITION_OVER), 88},
    {sipName_COMPOSITION_SOURCE, static_cast<int>(::wxCOMPOSITION_SOURCE), 88},
    {sipName_COMPOSITION_XOR, static_cast<int>(::wxCOMPOSITION_XOR), 88},
    {sipName_CONTENT_PROTECTION_ENABLED, static_cast<int>(::wxCONTENT_PROTECTION_ENABLED), 93},
    {sipName_CONTENT_PROTECTION_NONE, static_cast<int>(::wxCONTENT_PROTECTION_NONE), 93},
    {sipName_COPY, static_cast<int>(::wxCOPY), 470},
    {sipName_CURSOR_ARROW, static_cast<int>(::wxCURSOR_ARROW), 543},
    {sipName_CURSOR_ARROWWAIT, static_cast<int>(::wxCURSOR_ARROWWAIT), 543},
    {sipName_CURSOR_BLANK, static_cast<int>(::wxCURSOR_BLANK), 543},
    {sipName_CURSOR_BULLSEYE, static_cast<int>(::wxCURSOR_BULLSEYE), 543},
    {sipName_CURSOR_CHAR, static_cast<int>(::wxCURSOR_CHAR), 543},
    {sipName_CURSOR_COPY_ARROW, static_cast<int>(::wxCURSOR_COPY_ARROW), 543},
    {sipName_CURSOR_CROSS, static_cast<int>(::wxCURSOR_CROSS), 543},
    {sipName_CURSOR_DEFAULT, static_cast<int>(::wxCURSOR_DEFAULT), 543},
    {sipName_CURSOR_HAND, static_cast<int>(::wxCURSOR_HAND), 543},
    {sipName_CURSOR_IBEAM, static_cast<int>(::wxCURSOR_IBEAM), 543},
    {sipName_CURSOR_LEFT_BUTTON, static_cast<int>(::wxCURSOR_LEFT_BUTTON), 543},
    {sipName_CURSOR_MAGNIFIER, static_cast<int>(::wxCURSOR_MAGNIFIER), 543},
    {sipName_CURSOR_MAX, static_cast<int>(::wxCURSOR_MAX), 543},
    {sipName_CURSOR_MIDDLE_BUTTON, static_cast<int>(::wxCURSOR_MIDDLE_BUTTON), 543},
    {sipName_CURSOR_NONE, static_cast<int>(::wxCURSOR_NONE), 543},
    {sipName_CURSOR_NO_ENTRY, static_cast<int>(::wxCURSOR_NO_ENTRY), 543},
    {sipName_CURSOR_PAINT_BRUSH, static_cast<int>(::wxCURSOR_PAINT_BRUSH), 543},
    {sipName_CURSOR_PENCIL, static_cast<int>(::wxCURSOR_PENCIL), 543},
    {sipName_CURSOR_POINT_LEFT, static_cast<int>(::wxCURSOR_POINT_LEFT), 543},
    {sipName_CURSOR_POINT_RIGHT, static_cast<int>(::wxCURSOR_POINT_RIGHT), 543},
    {sipName_CURSOR_QUESTION_ARROW, static_cast<int>(::wxCURSOR_QUESTION_ARROW), 543},
    {sipName_CURSOR_RIGHT_ARROW, static_cast<int>(::wxCURSOR_RIGHT_ARROW), 543},
    {sipName_CURSOR_RIGHT_BUTTON, static_cast<int>(::wxCURSOR_RIGHT_BUTTON), 543},
    {sipName_CURSOR_SIZENESW, static_cast<int>(::wxCURSOR_SIZENESW), 543},
    {sipName_CURSOR_SIZENS, static_cast<int>(::wxCURSOR_SIZENS), 543},
    {sipName_CURSOR_SIZENWSE, static_cast<int>(::wxCURSOR_SIZENWSE), 543},
    {sipName_CURSOR_SIZEWE, static_cast<int>(::wxCURSOR_SIZEWE), 543},
    {sipName_CURSOR_SIZING, static_cast<int>(::wxCURSOR_SIZING), 543},
    {sipName_CURSOR_SPRAYCAN, static_cast<int>(::wxCURSOR_SPRAYCAN), 543},
    {sipName_CURSOR_WAIT, static_cast<int>(::wxCURSOR_WAIT), 543},
    {sipName_CURSOR_WATCH, static_cast<int>(::wxCURSOR_WATCH), 543},
    {sipName_Center, static_cast<int>(::wxCenter), 146},
    {sipName_Centre, static_cast<int>(::wxCentre), 146},
    {sipName_CentreX, static_cast<int>(::wxCentreX), 146},
    {sipName_CentreY, static_cast<int>(::wxCentreY), 146},
    {sipName_DF_BITMAP, static_cast<int>(::wxDF_BITMAP), 113},
    {sipName_DF_DIB, static_cast<int>(::wxDF_DIB), 113},
    {sipName_DF_DIF, static_cast<int>(::wxDF_DIF), 113},
    {sipName_DF_ENHMETAFILE, static_cast<int>(::wxDF_ENHMETAFILE), 113},
    {sipName_DF_FILENAME, static_cast<int>(::wxDF_FILENAME), 113},
    {sipName_DF_HTML, static_cast<int>(::wxDF_HTML), 113},
    {sipName_DF_INVALID, static_cast<int>(::wxDF_INVALID), 113},
    {sipName_DF_LOCALE, static_cast<int>(::wxDF_LOCALE), 113},
    {sipName_DF_MAX, static_cast<int>(::wxDF_MAX), 113},
    {sipName_DF_METAFILE, static_cast<int>(::wxDF_METAFILE), 113},
    {sipName_DF_OEMTEXT, static_cast<int>(::wxDF_OEMTEXT), 113},
    {sipName_DF_PALETTE, static_cast<int>(::wxDF_PALETTE), 113},
    {sipName_DF_PENDATA, static_cast<int>(::wxDF_PENDATA), 113},
    {sipName_DF_PNG, static_cast<int>(::wxDF_PNG), 113},
    {sipName_DF_PRIVATE, static_cast<int>(::wxDF_PRIVATE), 113},
    {sipName_DF_RIFF, static_cast<int>(::wxDF_RIFF), 113},
    {sipName_DF_SYLK, static_cast<int>(::wxDF_SYLK), 113},
    {sipName_DF_TEXT, static_cast<int>(::wxDF_TEXT), 113},
    {sipName_DF_TIFF, static_cast<int>(::wxDF_TIFF), 113},
    {sipName_DF_UNICODETEXT, static_cast<int>(::wxDF_UNICODETEXT), 113},
    {sipName_DF_WAVE, static_cast<int>(::wxDF_WAVE), 113},
    {sipName_DIALOG_ADAPTATION_MODE_DEFAULT, static_cast<int>(::wxDIALOG_ADAPTATION_MODE_DEFAULT), 132},
    {sipName_DIALOG_ADAPTATION_MODE_DISABLED, static_cast<int>(::wxDIALOG_ADAPTATION_MODE_DISABLED), 132},
    {sipName_DIALOG_ADAPTATION_MODE_ENABLED, static_cast<int>(::wxDIALOG_ADAPTATION_MODE_ENABLED), 132},
    {sipName_DIRECTION_MASK, static_cast<int>(::wxDIRECTION_MASK), 137},
    {sipName_DOWN, static_cast<int>(::wxDOWN), 137},
    {sipName_DUPLEX_HORIZONTAL, static_cast<int>(::wxDUPLEX_HORIZONTAL), 145},
    {sipName_DUPLEX_SIMPLEX, static_cast<int>(::wxDUPLEX_SIMPLEX), 145},
    {sipName_DUPLEX_VERTICAL, static_cast<int>(::wxDUPLEX_VERTICAL), 145},
    {sipName_DragCancel, static_cast<int>(::wxDragCancel), 141},
    {sipName_DragCopy, static_cast<int>(::wxDragCopy), 141},
    {sipName_DragError, static_cast<int>(::wxDragError), 141},
    {sipName_DragLink, static_cast<int>(::wxDragLink), 141},
    {sipName_DragMove, static_cast<int>(::wxDragMove), 141},
    {sipName_DragNone, static_cast<int>(::wxDragNone), 141},
    {sipName_EAST, static_cast<int>(::wxEAST), 137},
    {sipName_ELLIPSIZE_END, static_cast<int>(::wxELLIPSIZE_END), 148},
    {sipName_ELLIPSIZE_FLAGS_DEFAULT, static_cast<int>(::wxELLIPSIZE_FLAGS_DEFAULT), 147},
    {sipName_ELLIPSIZE_FLAGS_EXPAND_TABS, static_cast<int>(::wxELLIPSIZE_FLAGS_EXPAND_TABS), 147},
    {sipName_ELLIPSIZE_FLAGS_NONE, static_cast<int>(::wxELLIPSIZE_FLAGS_NONE), 147},
    {sipName_ELLIPSIZE_FLAGS_PROCESS_MNEMONICS, static_cast<int>(::wxELLIPSIZE_FLAGS_PROCESS_MNEMONICS), 147},
    {sipName_ELLIPSIZE_MIDDLE, static_cast<int>(::wxELLIPSIZE_MIDDLE), 148},
    {sipName_ELLIPSIZE_NONE, static_cast<int>(::wxELLIPSIZE_NONE), 148},
    {sipName_ELLIPSIZE_START, static_cast<int>(::wxELLIPSIZE_START), 148},
    {sipName_ENDIAN_BIG, static_cast<int>(::wxENDIAN_BIG), 149},
    {sipName_ENDIAN_INVALID, static_cast<int>(::wxENDIAN_INVALID), 149},
    {sipName_ENDIAN_LITTLE, static_cast<int>(::wxENDIAN_LITTLE), 149},
    {sipName_ENDIAN_MAX, static_cast<int>(::wxENDIAN_MAX), 149},
    {sipName_ENDIAN_PDP, static_cast<int>(::wxENDIAN_PDP), 149},
    {sipName_EQUIV, static_cast<int>(::wxEQUIV), 470},
    {sipName_EVENT_PROPAGATE_MAX, static_cast<int>(::wxEVENT_PROPAGATE_MAX), 157},
    {sipName_EVENT_PROPAGATE_NONE, static_cast<int>(::wxEVENT_PROPAGATE_NONE), 157},
    {sipName_EVT_CATEGORY_ALL, static_cast<int>(::wxEVT_CATEGORY_ALL), 153},
    {sipName_EVT_CATEGORY_SOCKET, static_cast<int>(::wxEVT_CATEGORY_SOCKET), 153},
    {sipName_EVT_CATEGORY_THREAD, static_cast<int>(::wxEVT_CATEGORY_THREAD), 153},
    {sipName_EVT_CATEGORY_TIMER, static_cast<int>(::wxEVT_CATEGORY_TIMER), 153},
    {sipName_EVT_CATEGORY_UI, static_cast<int>(::wxEVT_CATEGORY_UI), 153},
    {sipName_EVT_CATEGORY_USER_INPUT, static_cast<int>(::wxEVT_CATEGORY_USER_INPUT), 153},
    {sipName_EXPAND, static_cast<int>(::wxEXPAND), 552},
    {sipName_FH_PATH_SHOW_ALWAYS, static_cast<int>(::wxFH_PATH_SHOW_ALWAYS), 182},
    {sipName_FH_PATH_SHOW_IF_DIFFERENT, static_cast<int>(::wxFH_PATH_SHOW_IF_DIFFERENT), 182},
    {sipName_FH_PATH_SHOW_NEVER, static_cast<int>(::wxFH_PATH_SHOW_NEVER), 182},
    {sipName_FIXED_MINSIZE, static_cast<int>(::wxFIXED_MINSIZE), 513},
    {sipName_FLEX_GROWMODE_ALL, static_cast<int>(::wxFLEX_GROWMODE_ALL), 201},
    {sipName_FLEX_GROWMODE_NONE, static_cast<int>(::wxFLEX_GROWMODE_NONE), 201},
    {sipName_FLEX_GROWMODE_SPECIFIED, static_cast<int>(::wxFLEX_GROWMODE_SPECIFIED), 201},
    {sipName_FLOOD_BORDER, static_cast<int>(::wxFLOOD_BORDER), 202},
    {sipName_FLOOD_SURFACE, static_cast<int>(::wxFLOOD_SURFACE), 202},
    {sipName_FONTENCODING_ALTERNATIVE, static_cast<int>(::wxFONTENCODING_ALTERNATIVE), 207},
    {sipName_FONTENCODING_BIG5, static_cast<int>(::wxFONTENCODING_BIG5), 207},
    {sipName_FONTENCODING_BULGARIAN, static_cast<int>(::wxFONTENCODING_BULGARIAN), 207},
    {sipName_FONTENCODING_CP1250, static_cast<int>(::wxFONTENCODING_CP1250), 207},
    {sipName_FONTENCODING_CP1251, static_cast<int>(::wxFONTENCODING_CP1251), 207},
    {sipName_FONTENCODING_CP1252, static_cast<int>(::wxFONTENCODING_CP1252), 207},
    {sipName_FONTENCODING_CP1253, static_cast<int>(::wxFONTENCODING_CP1253), 207},
    {sipName_FONTENCODING_CP1254, static_cast<int>(::wxFONTENCODING_CP1254), 207},
    {sipName_FONTENCODING_CP1255, static_cast<int>(::wxFONTENCODING_CP1255), 207},
    {sipName_FONTENCODING_CP1256, static_cast<int>(::wxFONTENCODING_CP1256), 207},
    {sipName_FONTENCODING_CP1257, static_cast<int>(::wxFONTENCODING_CP1257), 207},
    {sipName_FONTENCODING_CP1258, static_cast<int>(::wxFONTENCODING_CP1258), 207},
    {sipName_FONTENCODING_CP12_MAX, static_cast<int>(::wxFONTENCODING_CP12_MAX), 207},
    {sipName_FONTENCODING_CP1361, static_cast<int>(::wxFONTENCODING_CP1361), 207},
    {sipName_FONTENCODING_CP437, static_cast<int>(::wxFONTENCODING_CP437), 207},
    {sipName_FONTENCODING_CP850, static_cast<int>(::wxFONTENCODING_CP850), 207},
    {sipName_FONTENCODING_CP852, static_cast<int>(::wxFONTENCODING_CP852), 207},
    {sipName_FONTENCODING_CP855, static_cast<int>(::wxFONTENCODING_CP855), 207},
    {sipName_FONTENCODING_CP866, static_cast<int>(::wxFONTENCODING_CP866), 207},
    {sipName_FONTENCODING_CP874, static_cast<int>(::wxFONTENCODING_CP874), 207},
    {sipName_FONTENCODING_CP932, static_cast<int>(::wxFONTENCODING_CP932), 207},
    {sipName_FONTENCODING_CP936, static_cast<int>(::wxFONTENCODING_CP936), 207},
    {sipName_FONTENCODING_CP949, static_cast<int>(::wxFONTENCODING_CP949), 207},
    {sipName_FONTENCODING_CP950, static_cast<int>(::wxFONTENCODING_CP950), 207},
    {sipName_FONTENCODING_DEFAULT, static_cast<int>(::wxFONTENCODING_DEFAULT), 207},
    {sipName_FONTENCODING_EUC_JP, static_cast<int>(::wxFONTENCODING_EUC_JP), 207},
    {sipName_FONTENCODING_EUC_KR, static_cast<int>(::wxFONTENCODING_EUC_KR), 207},
    {sipName_FONTENCODING_GB2312, static_cast<int>(::wxFONTENCODING_GB2312), 207},
    {sipName_FONTENCODING_ISO2022_JP, static_cast<int>(::wxFONTENCODING_ISO2022_JP), 207},
    {sipName_FONTENCODING_ISO8859_1, static_cast<int>(::wxFONTENCODING_ISO8859_1), 207},
    {sipName_FONTENCODING_ISO8859_10, static_cast<int>(::wxFONTENCODING_ISO8859_10), 207},
    {sipName_FONTENCODING_ISO8859_11, static_cast<int>(::wxFONTENCODING_ISO8859_11), 207},
    {sipName_FONTENCODING_ISO8859_12, static_cast<int>(::wxFONTENCODING_ISO8859_12), 207},
    {sipName_FONTENCODING_ISO8859_13, static_cast<int>(::wxFONTENCODING_ISO8859_13), 207},
    {sipName_FONTENCODING_ISO8859_14, static_cast<int>(::wxFONTENCODING_ISO8859_14), 207},
    {sipName_FONTENCODING_ISO8859_15, static_cast<int>(::wxFONTENCODING_ISO8859_15), 207},
    {sipName_FONTENCODING_ISO8859_2, static_cast<int>(::wxFONTENCODING_ISO8859_2), 207},
    {sipName_FONTENCODING_ISO8859_3, static_cast<int>(::wxFONTENCODING_ISO8859_3), 207},
    {sipName_FONTENCODING_ISO8859_4, static_cast<int>(::wxFONTENCODING_ISO8859_4), 207},
    {sipName_FONTENCODING_ISO8859_5, static_cast<int>(::wxFONTENCODING_ISO8859_5), 207},
    {sipName_FONTENCODING_ISO8859_6, static_cast<int>(::wxFONTENCODING_ISO8859_6), 207},
    {sipName_FONTENCODING_ISO8859_7, static_cast<int>(::wxFONTENCODING_ISO8859_7), 207},
    {sipName_FONTENCODING_ISO8859_8, static_cast<int>(::wxFONTENCODING_ISO8859_8), 207},
    {sipName_FONTENCODING_ISO8859_9, static_cast<int>(::wxFONTENCODING_ISO8859_9), 207},
    {sipName_FONTENCODING_ISO8859_MAX, static_cast<int>(::wxFONTENCODING_ISO8859_MAX), 207},
    {sipName_FONTENCODING_JOHAB, static_cast<int>(::wxFONTENCODING_JOHAB), 207},
    {sipName_FONTENCODING_KOI8, static_cast<int>(::wxFONTENCODING_KOI8), 207},
    {sipName_FONTENCODING_KOI8_U, static_cast<int>(::wxFONTENCODING_KOI8_U), 207},
    {sipName_FONTENCODING_MACARABIC, static_cast<int>(::wxFONTENCODING_MACARABIC), 207},
    {sipName_FONTENCODING_MACARABICEXT, static_cast<int>(::wxFONTENCODING_MACARABICEXT), 207},
    {sipName_FONTENCODING_MACARMENIAN, static_cast<int>(::wxFONTENCODING_MACARMENIAN), 207},
    {sipName_FONTENCODING_MACBENGALI, static_cast<int>(::wxFONTENCODING_MACBENGALI), 207},
    {sipName_FONTENCODING_MACBURMESE, static_cast<int>(::wxFONTENCODING_MACBURMESE), 207},
    {sipName_FONTENCODING_MACCELTIC, static_cast<int>(::wxFONTENCODING_MACCELTIC), 207},
    {sipName_FONTENCODING_MACCENTRALEUR, static_cast<int>(::wxFONTENCODING_MACCENTRALEUR), 207},
    {sipName_FONTENCODING_MACCHINESESIMP, static_cast<int>(::wxFONTENCODING_MACCHINESESIMP), 207},
    {sipName_FONTENCODING_MACCHINESETRAD, static_cast<int>(::wxFONTENCODING_MACCHINESETRAD), 207},
    {sipName_FONTENCODING_MACCROATIAN, static_cast<int>(::wxFONTENCODING_MACCROATIAN), 207},
    {sipName_FONTENCODING_MACCYRILLIC, static_cast<int>(::wxFONTENCODING_MACCYRILLIC), 207},
    {sipName_FONTENCODING_MACDEVANAGARI, static_cast<int>(::wxFONTENCODING_MACDEVANAGARI), 207},
    {sipName_FONTENCODING_MACDINGBATS, static_cast<int>(::wxFONTENCODING_MACDINGBATS), 207},
    {sipName_FONTENCODING_MACETHIOPIC, static_cast<int>(::wxFONTENCODING_MACETHIOPIC), 207},
    {sipName_FONTENCODING_MACGAELIC, static_cast<int>(::wxFONTENCODING_MACGAELIC), 207},
    {sipName_FONTENCODING_MACGEORGIAN, static_cast<int>(::wxFONTENCODING_MACGEORGIAN), 207},
    {sipName_FONTENCODING_MACGREEK, static_cast<int>(::wxFONTENCODING_MACGREEK), 207},
    {sipName_FONTENCODING_MACGUJARATI, static_cast<int>(::wxFONTENCODING_MACGUJARATI), 207},
    {sipName_FONTENCODING_MACGURMUKHI, static_cast<int>(::wxFONTENCODING_MACGURMUKHI), 207},
    {sipName_FONTENCODING_MACHEBREW, static_cast<int>(::wxFONTENCODING_MACHEBREW), 207},
    {sipName_FONTENCODING_MACICELANDIC, static_cast<int>(::wxFONTENCODING_MACICELANDIC), 207},
    {sipName_FONTENCODING_MACJAPANESE, static_cast<int>(::wxFONTENCODING_MACJAPANESE), 207},
    {sipName_FONTENCODING_MACKANNADA, static_cast<int>(::wxFONTENCODING_MACKANNADA), 207},
    {sipName_FONTENCODING_MACKEYBOARD, static_cast<int>(::wxFONTENCODING_MACKEYBOARD), 207},
    {sipName_FONTENCODING_MACKHMER, static_cast<int>(::wxFONTENCODING_MACKHMER), 207},
    {sipName_FONTENCODING_MACKOREAN, static_cast<int>(::wxFONTENCODING_MACKOREAN), 207},
    {sipName_FONTENCODING_MACLAOTIAN, static_cast<int>(::wxFONTENCODING_MACLAOTIAN), 207},
    {sipName_FONTENCODING_MACMALAJALAM, static_cast<int>(::wxFONTENCODING_MACMALAJALAM), 207},
    {sipName_FONTENCODING_MACMAX, static_cast<int>(::wxFONTENCODING_MACMAX), 207},
    {sipName_FONTENCODING_MACMIN, static_cast<int>(::wxFONTENCODING_MACMIN), 207},
    {sipName_FONTENCODING_MACMONGOLIAN, static_cast<int>(::wxFONTENCODING_MACMONGOLIAN), 207},
    {sipName_FONTENCODING_MACORIYA, static_cast<int>(::wxFONTENCODING_MACORIYA), 207},
    {sipName_FONTENCODING_MACROMAN, static_cast<int>(::wxFONTENCODING_MACROMAN), 207},
    {sipName_FONTENCODING_MACROMANIAN, static_cast<int>(::wxFONTENCODING_MACROMANIAN), 207},
    {sipName_FONTENCODING_MACSINHALESE, static_cast<int>(::wxFONTENCODING_MACSINHALESE), 207},
    {sipName_FONTENCODING_MACSYMBOL, static_cast<int>(::wxFONTENCODING_MACSYMBOL), 207},
    {sipName_FONTENCODING_MACTAMIL, static_cast<int>(::wxFONTENCODING_MACTAMIL), 207},
    {sipName_FONTENCODING_MACTELUGU, static_cast<int>(::wxFONTENCODING_MACTELUGU), 207},
    {sipName_FONTENCODING_MACTHAI, static_cast<int>(::wxFONTENCODING_MACTHAI), 207},
    {sipName_FONTENCODING_MACTIBETAN, static_cast<int>(::wxFONTENCODING_MACTIBETAN), 207},
    {sipName_FONTENCODING_MACTURKISH, static_cast<int>(::wxFONTENCODING_MACTURKISH), 207},
    {sipName_FONTENCODING_MACVIATNAMESE, static_cast<int>(::wxFONTENCODING_MACVIATNAMESE), 207},
    {sipName_FONTENCODING_MAX, static_cast<int>(::wxFONTENCODING_MAX), 207},
    {sipName_FONTENCODING_SHIFT_JIS, static_cast<int>(::wxFONTENCODING_SHIFT_JIS), 207},
    {sipName_FONTENCODING_SYSTEM, static_cast<int>(::wxFONTENCODING_SYSTEM), 207},
    {sipName_FONTENCODING_UNICODE, static_cast<int>(::wxFONTENCODING_UNICODE), 207},
    {sipName_FONTENCODING_UTF16, static_cast<int>(::wxFONTENCODING_UTF16), 207},
    {sipName_FONTENCODING_UTF16BE, static_cast<int>(::wxFONTENCODING_UTF16BE), 207},
    {sipName_FONTENCODING_UTF16LE, static_cast<int>(::wxFONTENCODING_UTF16LE), 207},
    {sipName_FONTENCODING_UTF32, static_cast<int>(::wxFONTENCODING_UTF32), 207},
    {sipName_FONTENCODING_UTF32BE, static_cast<int>(::wxFONTENCODING_UTF32BE), 207},
    {sipName_FONTENCODING_UTF32LE, static_cast<int>(::wxFONTENCODING_UTF32LE), 207},
    {sipName_FONTENCODING_UTF7, static_cast<int>(::wxFONTENCODING_UTF7), 207},
    {sipName_FONTENCODING_UTF8, static_cast<int>(::wxFONTENCODING_UTF8), 207},
    {sipName_FONTENCODING_VIETNAMESE, static_cast<int>(::wxFONTENCODING_VIETNAMESE), 207},
    {sipName_FONTFAMILY_DECORATIVE, static_cast<int>(::wxFONTFAMILY_DECORATIVE), 209},
    {sipName_FONTFAMILY_DEFAULT, static_cast<int>(::wxFONTFAMILY_DEFAULT), 209},
    {sipName_FONTFAMILY_MAX, static_cast<int>(::wxFONTFAMILY_MAX), 209},
    {sipName_FONTFAMILY_MODERN, static_cast<int>(::wxFONTFAMILY_MODERN), 209},
    {sipName_FONTFAMILY_ROMAN, static_cast<int>(::wxFONTFAMILY_ROMAN), 209},
    {sipName_FONTFAMILY_SCRIPT, static_cast<int>(::wxFONTFAMILY_SCRIPT), 209},
    {sipName_FONTFAMILY_SWISS, static_cast<int>(::wxFONTFAMILY_SWISS), 209},
    {sipName_FONTFAMILY_TELETYPE, static_cast<int>(::wxFONTFAMILY_TELETYPE), 209},
    {sipName_FONTFAMILY_UNKNOWN, static_cast<int>(::wxFONTFAMILY_UNKNOWN), 209},
    {sipName_FONTFLAG_ANTIALIASED, static_cast<int>(::wxFONTFLAG_ANTIALIASED), 210},
    {sipName_FONTFLAG_BOLD, static_cast<int>(::wxFONTFLAG_BOLD), 210},
    {sipName_FONTFLAG_DEFAULT, static_cast<int>(::wxFONTFLAG_DEFAULT), 210},
    {sipName_FONTFLAG_ITALIC, static_cast<int>(::wxFONTFLAG_ITALIC), 210},
    {sipName_FONTFLAG_LIGHT, static_cast<int>(::wxFONTFLAG_LIGHT), 210},
    {sipName_FONTFLAG_MASK, static_cast<int>(::wxFONTFLAG_MASK), 210},
    {sipName_FONTFLAG_NOT_ANTIALIASED, static_cast<int>(::wxFONTFLAG_NOT_ANTIALIASED), 210},
    {sipName_FONTFLAG_SLANT, static_cast<int>(::wxFONTFLAG_SLANT), 210},
    {sipName_FONTFLAG_STRIKETHROUGH, static_cast<int>(::wxFONTFLAG_STRIKETHROUGH), 210},
    {sipName_FONTFLAG_UNDERLINED, static_cast<int>(::wxFONTFLAG_UNDERLINED), 210},
    {sipName_FONTSIZE_LARGE, static_cast<int>(::wxFONTSIZE_LARGE), 218},
    {sipName_FONTSIZE_MEDIUM, static_cast<int>(::wxFONTSIZE_MEDIUM), 218},
    {sipName_FONTSIZE_SMALL, static_cast<int>(::wxFONTSIZE_SMALL), 218},
    {sipName_FONTSIZE_XX_LARGE, static_cast<int>(::wxFONTSIZE_XX_LARGE), 218},
    {sipName_FONTSIZE_XX_SMALL, static_cast<int>(::wxFONTSIZE_XX_SMALL), 218},
    {sipName_FONTSIZE_X_LARGE, static_cast<int>(::wxFONTSIZE_X_LARGE), 218},
    {sipName_FONTSIZE_X_SMALL, static_cast<int>(::wxFONTSIZE_X_SMALL), 218},
    {sipName_FONTSTYLE_ITALIC, static_cast<int>(::wxFONTSTYLE_ITALIC), 217},
    {sipName_FONTSTYLE_MAX, static_cast<int>(::wxFONTSTYLE_MAX), 217},
    {sipName_FONTSTYLE_NORMAL, static_cast<int>(::wxFONTSTYLE_NORMAL), 217},
    {sipName_FONTSTYLE_SLANT, static_cast<int>(::wxFONTSTYLE_SLANT), 217},
    {sipName_FONTWEIGHT_BOLD, static_cast<int>(::wxFONTWEIGHT_BOLD), 219},
    {sipName_FONTWEIGHT_EXTRABOLD, static_cast<int>(::wxFONTWEIGHT_EXTRABOLD), 219},
    {sipName_FONTWEIGHT_EXTRAHEAVY, static_cast<int>(::wxFONTWEIGHT_EXTRAHEAVY), 219},
    {sipName_FONTWEIGHT_EXTRALIGHT, static_cast<int>(::wxFONTWEIGHT_EXTRALIGHT), 219},
    {sipName_FONTWEIGHT_HEAVY, static_cast<int>(::wxFONTWEIGHT_HEAVY), 219},
    {sipName_FONTWEIGHT_INVALID, static_cast<int>(::wxFONTWEIGHT_INVALID), 219},
    {sipName_FONTWEIGHT_LIGHT, static_cast<int>(::wxFONTWEIGHT_LIGHT), 219},
    {sipName_FONTWEIGHT_MAX, static_cast<int>(::wxFONTWEIGHT_MAX), 219},
    {sipName_FONTWEIGHT_MEDIUM, static_cast<int>(::wxFONTWEIGHT_MEDIUM), 219},
    {sipName_FONTWEIGHT_NORMAL, static_cast<int>(::wxFONTWEIGHT_NORMAL), 219},
    {sipName_FONTWEIGHT_SEMIBOLD, static_cast<int>(::wxFONTWEIGHT_SEMIBOLD), 219},
    {sipName_FONTWEIGHT_THIN, static_cast<int>(::wxFONTWEIGHT_THIN), 219},
    {sipName_FR_DOWN, static_cast<int>(::wxFR_DOWN), 199},
    {sipName_FR_MATCHCASE, static_cast<int>(::wxFR_MATCHCASE), 199},
    {sipName_FR_NOMATCHCASE, static_cast<int>(::wxFR_NOMATCHCASE), 198},
    {sipName_FR_NOUPDOWN, static_cast<int>(::wxFR_NOUPDOWN), 198},
    {sipName_FR_NOWHOLEWORD, static_cast<int>(::wxFR_NOWHOLEWORD), 198},
    {sipName_FR_REPLACEDIALOG, static_cast<int>(::wxFR_REPLACEDIALOG), 198},
    {sipName_FR_WHOLEWORD, static_cast<int>(::wxFR_WHOLEWORD), 199},
    {sipName_FSW_EVENT_ACCESS, static_cast<int>(::wxFSW_EVENT_ACCESS), 161},
    {sipName_FSW_EVENT_ALL, static_cast<int>(::wxFSW_EVENT_ALL), 161},
    {sipName_FSW_EVENT_ATTRIB, static_cast<int>(::wxFSW_EVENT_ATTRIB), 161},
    {sipName_FSW_EVENT_CREATE, static_cast<int>(::wxFSW_EVENT_CREATE), 161},
    {sipName_FSW_EVENT_DELETE, static_cast<int>(::wxFSW_EVENT_DELETE), 161},
    {sipName_FSW_EVENT_ERROR, static_cast<int>(::wxFSW_EVENT_ERROR), 161},
    {sipName_FSW_EVENT_MODIFY, static_cast<int>(::wxFSW_EVENT_MODIFY), 161},
    {sipName_FSW_EVENT_RENAME, static_cast<int>(::wxFSW_EVENT_RENAME), 161},
    {sipName_FSW_EVENT_UNMOUNT, static_cast<int>(::wxFSW_EVENT_UNMOUNT), 161},
    {sipName_FSW_EVENT_WARNING, static_cast<int>(::wxFSW_EVENT_WARNING), 161},
    {sipName_FSW_WARNING_GENERAL, static_cast<int>(::wxFSW_WARNING_GENERAL), 162},
    {sipName_FSW_WARNING_NONE, static_cast<int>(::wxFSW_WARNING_NONE), 162},
    {sipName_FSW_WARNING_OVERFLOW, static_cast<int>(::wxFSW_WARNING_OVERFLOW), 162},
    {sipName_FS_READ, static_cast<int>(::wxFS_READ), 187},
    {sipName_FS_SEEKABLE, static_cast<int>(::wxFS_SEEKABLE), 187},
    {sipName_FromCurrent, static_cast<int>(::wxFromCurrent), 499},
    {sipName_FromEnd, static_cast<int>(::wxFromEnd), 499},
    {sipName_FromStart, static_cast<int>(::wxFromStart), 499},
    {sipName_GRADIENT_LINEAR, static_cast<int>(::wxGRADIENT_LINEAR), 238},
    {sipName_GRADIENT_NONE, static_cast<int>(::wxGRADIENT_NONE), 238},
    {sipName_GRADIENT_RADIAL, static_cast<int>(::wxGRADIENT_RADIAL), 238},
    {sipName_GROW, static_cast<int>(::wxGROW), 552},
    {sipName_HDR_SORT_ICON_DOWN, static_cast<int>(::wxHDR_SORT_ICON_DOWN), 262},
    {sipName_HDR_SORT_ICON_NONE, static_cast<int>(::wxHDR_SORT_ICON_NONE), 262},
    {sipName_HDR_SORT_ICON_UP, static_cast<int>(::wxHDR_SORT_ICON_UP), 262},
    {sipName_HELP_SEARCH_ALL, static_cast<int>(::wxHELP_SEARCH_ALL), 268},
    {sipName_HELP_SEARCH_INDEX, static_cast<int>(::wxHELP_SEARCH_INDEX), 268},
    {sipName_HORIZONTAL, static_cast<int>(::wxHORIZONTAL), 394},
    {sipName_HT_MAX, static_cast<int>(::wxHT_MAX), 269},
    {sipName_HT_NOWHERE, static_cast<int>(::wxHT_NOWHERE), 269},
    {sipName_HT_SCROLLBAR_ARROW_LINE_1, static_cast<int>(::wxHT_SCROLLBAR_ARROW_LINE_1), 269},
    {sipName_HT_SCROLLBAR_ARROW_LINE_2, static_cast<int>(::wxHT_SCROLLBAR_ARROW_LINE_2), 269},
    {sipName_HT_SCROLLBAR_ARROW_PAGE_1, static_cast<int>(::wxHT_SCROLLBAR_ARROW_PAGE_1), 269},
    {sipName_HT_SCROLLBAR_ARROW_PAGE_2, static_cast<int>(::wxHT_SCROLLBAR_ARROW_PAGE_2), 269},
    {sipName_HT_SCROLLBAR_BAR_1, static_cast<int>(::wxHT_SCROLLBAR_BAR_1), 269},
    {sipName_HT_SCROLLBAR_BAR_2, static_cast<int>(::wxHT_SCROLLBAR_BAR_2), 269},
    {sipName_HT_SCROLLBAR_FIRST, static_cast<int>(::wxHT_SCROLLBAR_FIRST), 269},
    {sipName_HT_SCROLLBAR_LAST, static_cast<int>(::wxHT_SCROLLBAR_LAST), 269},
    {sipName_HT_SCROLLBAR_THUMB, static_cast<int>(::wxHT_SCROLLBAR_THUMB), 269},
    {sipName_HT_WINDOW_CORNER, static_cast<int>(::wxHT_WINDOW_CORNER), 269},
    {sipName_HT_WINDOW_HORZ_SCROLLBAR, static_cast<int>(::wxHT_WINDOW_HORZ_SCROLLBAR), 269},
    {sipName_HT_WINDOW_INSIDE, static_cast<int>(::wxHT_WINDOW_INSIDE), 269},
    {sipName_HT_WINDOW_OUTSIDE, static_cast<int>(::wxHT_WINDOW_OUTSIDE), 269},
    {sipName_HT_WINDOW_VERT_SCROLLBAR, static_cast<int>(::wxHT_WINDOW_VERT_SCROLLBAR), 269},
    {sipName_Height, static_cast<int>(::wxHeight), 146},
    {sipName_IDLE_PROCESS_ALL, static_cast<int>(::wxIDLE_PROCESS_ALL), 277},
    {sipName_IDLE_PROCESS_SPECIFIED, static_cast<int>(::wxIDLE_PROCESS_SPECIFIED), 277},
    {sipName_ID_ABORT, static_cast<int>(::wxID_ABORT), 528},
    {sipName_ID_ABOUT, static_cast<int>(::wxID_ABOUT), 528},
    {sipName_ID_ADD, static_cast<int>(::wxID_ADD), 528},
    {sipName_ID_ANY, static_cast<int>(::wxID_ANY), 528},
    {sipName_ID_APPLY, static_cast<int>(::wxID_APPLY), 528},
    {sipName_ID_AUTO_HIGHEST, static_cast<int>(::wxID_AUTO_HIGHEST), 528},
    {sipName_ID_AUTO_LOWEST, static_cast<int>(::wxID_AUTO_LOWEST), 528},
    {sipName_ID_BACKWARD, static_cast<int>(::wxID_BACKWARD), 528},
    {sipName_ID_BOLD, static_cast<int>(::wxID_BOLD), 528},
    {sipName_ID_BOTTOM, static_cast<int>(::wxID_BOTTOM), 528},
    {sipName_ID_CANCEL, static_cast<int>(::wxID_CANCEL), 528},
    {sipName_ID_CDROM, static_cast<int>(::wxID_CDROM), 528},
    {sipName_ID_CLEAR, static_cast<int>(::wxID_CLEAR), 528},
    {sipName_ID_CLOSE, static_cast<int>(::wxID_CLOSE), 528},
    {sipName_ID_CLOSE_ALL, static_cast<int>(::wxID_CLOSE_ALL), 528},
    {sipName_ID_CLOSE_FRAME, static_cast<int>(::wxID_CLOSE_FRAME), 528},
    {sipName_ID_CONTEXT_HELP, static_cast<int>(::wxID_CONTEXT_HELP), 528},
    {sipName_ID_CONVERT, static_cast<int>(::wxID_CONVERT), 528},
    {sipName_ID_COPY, static_cast<int>(::wxID_COPY), 528},
    {sipName_ID_CUT, static_cast<int>(::wxID_CUT), 528},
    {sipName_ID_DEFAULT, static_cast<int>(::wxID_DEFAULT), 528},
    {sipName_ID_DELETE, static_cast<int>(::wxID_DELETE), 528},
    {sipName_ID_DOWN, static_cast<int>(::wxID_DOWN), 528},
    {sipName_ID_DUPLICATE, static_cast<int>(::wxID_DUPLICATE), 528},
    {sipName_ID_EDIT, static_cast<int>(::wxID_EDIT), 528},
    {sipName_ID_EXECUTE, static_cast<int>(::wxID_EXECUTE), 528},
    {sipName_ID_EXIT, static_cast<int>(::wxID_EXIT), 528},
    {sipName_ID_FILE, static_cast<int>(::wxID_FILE), 528},
    {sipName_ID_FILE1, static_cast<int>(::wxID_FILE1), 528},
    {sipName_ID_FILE2, static_cast<int>(::wxID_FILE2), 528},
    {sipName_ID_FILE3, static_cast<int>(::wxID_FILE3), 528},
    {sipName_ID_FILE4, static_cast<int>(::wxID_FILE4), 528},
    {sipName_ID_FILE5, static_cast<int>(::wxID_FILE5), 528},
    {sipName_ID_FILE6, static_cast<int>(::wxID_FILE6), 528},
    {sipName_ID_FILE7, static_cast<int>(::wxID_FILE7), 528},
    {sipName_ID_FILE8, static_cast<int>(::wxID_FILE8), 528},
    {sipName_ID_FILE9, static_cast<int>(::wxID_FILE9), 528},
    {sipName_ID_FILECTRL, static_cast<int>(::wxID_FILECTRL), 528},
    {sipName_ID_FILEDLGG, static_cast<int>(::wxID_FILEDLGG), 528},
    {sipName_ID_FIND, static_cast<int>(::wxID_FIND), 528},
    {sipName_ID_FIRST, static_cast<int>(::wxID_FIRST), 528},
    {sipName_ID_FLOPPY, static_cast<int>(::wxID_FLOPPY), 528},
    {sipName_ID_FORWARD, static_cast<int>(::wxID_FORWARD), 528},
    {sipName_ID_HARDDISK, static_cast<int>(::wxID_HARDDISK), 528},
    {sipName_ID_HELP, static_cast<int>(::wxID_HELP), 528},
    {sipName_ID_HELP_COMMANDS, static_cast<int>(::wxID_HELP_COMMANDS), 528},
    {sipName_ID_HELP_CONTENTS, static_cast<int>(::wxID_HELP_CONTENTS), 528},
    {sipName_ID_HELP_CONTEXT, static_cast<int>(::wxID_HELP_CONTEXT), 528},
    {sipName_ID_HELP_INDEX, static_cast<int>(::wxID_HELP_INDEX), 528},
    {sipName_ID_HELP_PROCEDURES, static_cast<int>(::wxID_HELP_PROCEDURES), 528},
    {sipName_ID_HELP_SEARCH, static_cast<int>(::wxID_HELP_SEARCH), 528},
    {sipName_ID_HIGHEST, static_cast<int>(::wxID_HIGHEST), 528},
    {sipName_ID_HOME, static_cast<int>(::wxID_HOME), 528},
    {sipName_ID_ICONIZE_FRAME, static_cast<int>(::wxID_ICONIZE_FRAME), 528},
    {sipName_ID_IGNORE, static_cast<int>(::wxID_IGNORE), 528},
    {sipName_ID_INDENT, static_cast<int>(::wxID_INDENT), 528},
    {sipName_ID_INDEX, static_cast<int>(::wxID_INDEX), 528},
    {sipName_ID_INFO, static_cast<int>(::wxID_INFO), 528},
    {sipName_ID_ITALIC, static_cast<int>(::wxID_ITALIC), 528},
    {sipName_ID_JUMP_TO, static_cast<int>(::wxID_JUMP_TO), 528},
    {sipName_ID_JUSTIFY_CENTER, static_cast<int>(::wxID_JUSTIFY_CENTER), 528},
    {sipName_ID_JUSTIFY_FILL, static_cast<int>(::wxID_JUSTIFY_FILL), 528},
    {sipName_ID_JUSTIFY_LEFT, static_cast<int>(::wxID_JUSTIFY_LEFT), 528},
    {sipName_ID_JUSTIFY_RIGHT, static_cast<int>(::wxID_JUSTIFY_RIGHT), 528},
    {sipName_ID_LAST, static_cast<int>(::wxID_LAST), 528},
    {sipName_ID_LOWEST, static_cast<int>(::wxID_LOWEST), 528},
    {sipName_ID_MAXIMIZE_FRAME, static_cast<int>(::wxID_MAXIMIZE_FRAME), 528},
    {sipName_ID_MDI_WINDOW_ARRANGE_ICONS, static_cast<int>(::wxID_MDI_WINDOW_ARRANGE_ICONS), 528},
    {sipName_ID_MDI_WINDOW_CASCADE, static_cast<int>(::wxID_MDI_WINDOW_CASCADE), 528},
    {sipName_ID_MDI_WINDOW_FIRST, static_cast<int>(::wxID_MDI_WINDOW_FIRST), 528},
    {sipName_ID_MDI_WINDOW_LAST, static_cast<int>(::wxID_MDI_WINDOW_LAST), 528},
    {sipName_ID_MDI_WINDOW_NEXT, static_cast<int>(::wxID_MDI_WINDOW_NEXT), 528},
    {sipName_ID_MDI_WINDOW_PREV, static_cast<int>(::wxID_MDI_WINDOW_PREV), 528},
    {sipName_ID_MDI_WINDOW_TILE_HORZ, static_cast<int>(::wxID_MDI_WINDOW_TILE_HORZ), 528},
    {sipName_ID_MDI_WINDOW_TILE_VERT, static_cast<int>(::wxID_MDI_WINDOW_TILE_VERT), 528},
    {sipName_ID_MORE, static_cast<int>(::wxID_MORE), 528},
    {sipName_ID_MOVE_FRAME, static_cast<int>(::wxID_MOVE_FRAME), 528},
    {sipName_ID_NETWORK, static_cast<int>(::wxID_NETWORK), 528},
    {sipName_ID_NEW, static_cast<int>(::wxID_NEW), 528},
    {sipName_ID_NO, static_cast<int>(::wxID_NO), 528},
    {sipName_ID_NONE, static_cast<int>(::wxID_NONE), 528},
    {sipName_ID_NOTOALL, static_cast<int>(::wxID_NOTOALL), 528},
    {sipName_ID_OK, static_cast<int>(::wxID_OK), 528},
    {sipName_ID_OPEN, static_cast<int>(::wxID_OPEN), 528},
    {sipName_ID_PAGE_SETUP, static_cast<int>(::wxID_PAGE_SETUP), 528},
    {sipName_ID_PASTE, static_cast<int>(::wxID_PASTE), 528},
    {sipName_ID_PREFERENCES, static_cast<int>(::wxID_PREFERENCES), 528},
    {sipName_ID_PREVIEW, static_cast<int>(::wxID_PREVIEW), 528},
    {sipName_ID_PRINT, static_cast<int>(::wxID_PRINT), 528},
    {sipName_ID_PRINT_SETUP, static_cast<int>(::wxID_PRINT_SETUP), 528},
    {sipName_ID_PROPERTIES, static_cast<int>(::wxID_PROPERTIES), 528},
    {sipName_ID_REDO, static_cast<int>(::wxID_REDO), 528},
    {sipName_ID_REFRESH, static_cast<int>(::wxID_REFRESH), 528},
    {sipName_ID_REMOVE, static_cast<int>(::wxID_REMOVE), 528},
    {sipName_ID_REPLACE, static_cast<int>(::wxID_REPLACE), 528},
    {sipName_ID_REPLACE_ALL, static_cast<int>(::wxID_REPLACE_ALL), 528},
    {sipName_ID_RESET, static_cast<int>(::wxID_RESET), 528},
    {sipName_ID_RESIZE_FRAME, static_cast<int>(::wxID_RESIZE_FRAME), 528},
    {sipName_ID_RESTORE_FRAME, static_cast<int>(::wxID_RESTORE_FRAME), 528},
    {sipName_ID_RETRY, static_cast<int>(::wxID_RETRY), 528},
    {sipName_ID_REVERT, static_cast<int>(::wxID_REVERT), 528},
    {sipName_ID_REVERT_TO_SAVED, static_cast<int>(::wxID_REVERT_TO_SAVED), 528},
    {sipName_ID_SAVE, static_cast<int>(::wxID_SAVE), 528},
    {sipName_ID_SAVEAS, static_cast<int>(::wxID_SAVEAS), 528},
    {sipName_ID_SELECTALL, static_cast<int>(::wxID_SELECTALL), 528},
    {sipName_ID_SELECT_COLOR, static_cast<int>(::wxID_SELECT_COLOR), 528},
    {sipName_ID_SELECT_FONT, static_cast<int>(::wxID_SELECT_FONT), 528},
    {sipName_ID_SEPARATOR, static_cast<int>(::wxID_SEPARATOR), 528},
    {sipName_ID_SETUP, static_cast<int>(::wxID_SETUP), 528},
    {sipName_ID_SORT_ASCENDING, static_cast<int>(::wxID_SORT_ASCENDING), 528},
    {sipName_ID_SORT_DESCENDING, static_cast<int>(::wxID_SORT_DESCENDING), 528},
    {sipName_ID_SPELL_CHECK, static_cast<int>(::wxID_SPELL_CHECK), 528},
    {sipName_ID_STATIC, static_cast<int>(::wxID_STATIC), 528},
    {sipName_ID_STOP, static_cast<int>(::wxID_STOP), 528},
    {sipName_ID_STRIKETHROUGH, static_cast<int>(::wxID_STRIKETHROUGH), 528},
    {sipName_ID_SYSTEM_MENU, static_cast<int>(::wxID_SYSTEM_MENU), 528},
    {sipName_ID_TOP, static_cast<int>(::wxID_TOP), 528},
    {sipName_ID_UNDELETE, static_cast<int>(::wxID_UNDELETE), 528},
    {sipName_ID_UNDERLINE, static_cast<int>(::wxID_UNDERLINE), 528},
    {sipName_ID_UNDO, static_cast<int>(::wxID_UNDO), 528},
    {sipName_ID_UNINDENT, static_cast<int>(::wxID_UNINDENT), 528},
    {sipName_ID_UP, static_cast<int>(::wxID_UP), 528},
    {sipName_ID_VIEW_DETAILS, static_cast<int>(::wxID_VIEW_DETAILS), 528},
    {sipName_ID_VIEW_LARGEICONS, static_cast<int>(::wxID_VIEW_LARGEICONS), 528},
    {sipName_ID_VIEW_LIST, static_cast<int>(::wxID_VIEW_LIST), 528},
    {sipName_ID_VIEW_SMALLICONS, static_cast<int>(::wxID_VIEW_SMALLICONS), 528},
    {sipName_ID_VIEW_SORTDATE, static_cast<int>(::wxID_VIEW_SORTDATE), 528},
    {sipName_ID_VIEW_SORTNAME, static_cast<int>(::wxID_VIEW_SORTNAME), 528},
    {sipName_ID_VIEW_SORTSIZE, static_cast<int>(::wxID_VIEW_SORTSIZE), 528},
    {sipName_ID_VIEW_SORTTYPE, static_cast<int>(::wxID_VIEW_SORTTYPE), 528},
    {sipName_ID_YES, static_cast<int>(::wxID_YES), 528},
    {sipName_ID_YESTOALL, static_cast<int>(::wxID_YESTOALL), 528},
    {sipName_ID_ZOOM_100, static_cast<int>(::wxID_ZOOM_100), 528},
    {sipName_ID_ZOOM_FIT, static_cast<int>(::wxID_ZOOM_FIT), 528},
    {sipName_ID_ZOOM_IN, static_cast<int>(::wxID_ZOOM_IN), 528},
    {sipName_ID_ZOOM_OUT, static_cast<int>(::wxID_ZOOM_OUT), 528},
    {sipName_IMAGE_ALPHA_BLEND_COMPOSE, static_cast<int>(::wxIMAGE_ALPHA_BLEND_COMPOSE), 281},
    {sipName_IMAGE_ALPHA_BLEND_OVER, static_cast<int>(::wxIMAGE_ALPHA_BLEND_OVER), 281},
    {sipName_IMAGE_QUALITY_BICUBIC, static_cast<int>(::wxIMAGE_QUALITY_BICUBIC), 288},
    {sipName_IMAGE_QUALITY_BILINEAR, static_cast<int>(::wxIMAGE_QUALITY_BILINEAR), 288},
    {sipName_IMAGE_QUALITY_BOX_AVERAGE, static_cast<int>(::wxIMAGE_QUALITY_BOX_AVERAGE), 288},
    {sipName_IMAGE_QUALITY_HIGH, static_cast<int>(::wxIMAGE_QUALITY_HIGH), 288},
    {sipName_IMAGE_QUALITY_NEAREST, static_cast<int>(::wxIMAGE_QUALITY_NEAREST), 288},
    {sipName_IMAGE_QUALITY_NORMAL, static_cast<int>(::wxIMAGE_QUALITY_NORMAL), 288},
    {sipName_IMAGE_RESOLUTION_CM, static_cast<int>(::wxIMAGE_RESOLUTION_CM), 289},
    {sipName_IMAGE_RESOLUTION_INCHES, static_cast<int>(::wxIMAGE_RESOLUTION_INCHES), 289},
    {sipName_IMAGE_RESOLUTION_NONE, static_cast<int>(::wxIMAGE_RESOLUTION_NONE), 289},
    {sipName_INTERPOLATION_BEST, static_cast<int>(::wxINTERPOLATION_BEST), 297},
    {sipName_INTERPOLATION_DEFAULT, static_cast<int>(::wxINTERPOLATION_DEFAULT), 297},
    {sipName_INTERPOLATION_FAST, static_cast<int>(::wxINTERPOLATION_FAST), 297},
    {sipName_INTERPOLATION_GOOD, static_cast<int>(::wxINTERPOLATION_GOOD), 297},
    {sipName_INTERPOLATION_NONE, static_cast<int>(::wxINTERPOLATION_NONE), 297},
    {sipName_INVERT, static_cast<int>(::wxINVERT), 470},
    {sipName_ITEM_CHECK, static_cast<int>(::wxITEM_CHECK), 301},
    {sipName_ITEM_DROPDOWN, static_cast<int>(::wxITEM_DROPDOWN), 301},
    {sipName_ITEM_MAX, static_cast<int>(::wxITEM_MAX), 301},
    {sipName_ITEM_NORMAL, static_cast<int>(::wxITEM_NORMAL), 301},
    {sipName_ITEM_RADIO, static_cast<int>(::wxITEM_RADIO), 301},
    {sipName_ITEM_SEPARATOR, static_cast<int>(::wxITEM_SEPARATOR), 301},
    {sipName_InRegion, static_cast<int>(::wxInRegion), 479},
    {sipName_Inside, static_cast<int>(::wxInside), 395},
    {sipName_JOIN_BEVEL, static_cast<int>(::wxJOIN_BEVEL), 414},
    {sipName_JOIN_INVALID, static_cast<int>(::wxJOIN_INVALID), 414},
    {sipName_JOIN_MITER, static_cast<int>(::wxJOIN_MITER), 414},
    {sipName_JOIN_ROUND, static_cast<int>(::wxJOIN_ROUND), 414},
    {sipName_KILL_ACCESS_DENIED, static_cast<int>(::wxKILL_ACCESS_DENIED), 309},
    {sipName_KILL_BAD_SIGNAL, static_cast<int>(::wxKILL_BAD_SIGNAL), 309},
    {sipName_KILL_CHILDREN, static_cast<int>(::wxKILL_CHILDREN), 310},
    {sipName_KILL_ERROR, static_cast<int>(::wxKILL_ERROR), 309},
    {sipName_KILL_NOCHILDREN, static_cast<int>(::wxKILL_NOCHILDREN), 310},
    {sipName_KILL_NO_PROCESS, static_cast<int>(::wxKILL_NO_PROCESS), 309},
    {sipName_KILL_OK, static_cast<int>(::wxKILL_OK), 309},
    {sipName_LANDSCAPE, static_cast<int>(::wxLANDSCAPE), 450},
    {sipName_LANGUAGE_ABKHAZIAN, static_cast<int>(::wxLANGUAGE_ABKHAZIAN), 311},
    {sipName_LANGUAGE_AFAR, static_cast<int>(::wxLANGUAGE_AFAR), 311},
    {sipName_LANGUAGE_AFAR_DJIBOUTI, static_cast<int>(::wxLANGUAGE_AFAR_DJIBOUTI), 311},
    {sipName_LANGUAGE_AFAR_ERITREA, static_cast<int>(::wxLANGUAGE_AFAR_ERITREA), 311},
    {sipName_LANGUAGE_AFAR_ETHIOPIA, static_cast<int>(::wxLANGUAGE_AFAR_ETHIOPIA), 311},
    {sipName_LANGUAGE_AFRIKAANS, static_cast<int>(::wxLANGUAGE_AFRIKAANS), 311},
    {sipName_LANGUAGE_AFRIKAANS_NAMIBIA, static_cast<int>(::wxLANGUAGE_AFRIKAANS_NAMIBIA), 311},
    {sipName_LANGUAGE_AFRIKAANS_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_AFRIKAANS_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_AGHEM, static_cast<int>(::wxLANGUAGE_AGHEM), 311},
    {sipName_LANGUAGE_AGHEM_CAMEROON, static_cast<int>(::wxLANGUAGE_AGHEM_CAMEROON), 311},
    {sipName_LANGUAGE_AKAN, static_cast<int>(::wxLANGUAGE_AKAN), 311},
    {sipName_LANGUAGE_AKAN_GHANA, static_cast<int>(::wxLANGUAGE_AKAN_GHANA), 311},
    {sipName_LANGUAGE_ALBANIAN, static_cast<int>(::wxLANGUAGE_ALBANIAN), 311},
    {sipName_LANGUAGE_ALBANIAN_ALBANIA, static_cast<int>(::wxLANGUAGE_ALBANIAN_ALBANIA), 311},
    {sipName_LANGUAGE_ALBANIAN_KOSOVO, static_cast<int>(::wxLANGUAGE_ALBANIAN_KOSOVO), 311},
    {sipName_LANGUAGE_ALBANIAN_NORTH_MACEDONIA, static_cast<int>(::wxLANGUAGE_ALBANIAN_NORTH_MACEDONIA), 311},
    {sipName_LANGUAGE_ALSATIAN_FRANCE, static_cast<int>(::wxLANGUAGE_ALSATIAN_FRANCE), 311},
    {sipName_LANGUAGE_AMHARIC, static_cast<int>(::wxLANGUAGE_AMHARIC), 311},
    {sipName_LANGUAGE_AMHARIC_ETHIOPIA, static_cast<int>(::wxLANGUAGE_AMHARIC_ETHIOPIA), 311},
    {sipName_LANGUAGE_ARABIC, static_cast<int>(::wxLANGUAGE_ARABIC), 311},
    {sipName_LANGUAGE_ARABIC_ALGERIA, static_cast<int>(::wxLANGUAGE_ARABIC_ALGERIA), 311},
    {sipName_LANGUAGE_ARABIC_BAHRAIN, static_cast<int>(::wxLANGUAGE_ARABIC_BAHRAIN), 311},
    {sipName_LANGUAGE_ARABIC_CHAD, static_cast<int>(::wxLANGUAGE_ARABIC_CHAD), 311},
    {sipName_LANGUAGE_ARABIC_COMOROS, static_cast<int>(::wxLANGUAGE_ARABIC_COMOROS), 311},
    {sipName_LANGUAGE_ARABIC_DJIBOUTI, static_cast<int>(::wxLANGUAGE_ARABIC_DJIBOUTI), 311},
    {sipName_LANGUAGE_ARABIC_EGYPT, static_cast<int>(::wxLANGUAGE_ARABIC_EGYPT), 311},
    {sipName_LANGUAGE_ARABIC_ERITREA, static_cast<int>(::wxLANGUAGE_ARABIC_ERITREA), 311},
    {sipName_LANGUAGE_ARABIC_IRAQ, static_cast<int>(::wxLANGUAGE_ARABIC_IRAQ), 311},
    {sipName_LANGUAGE_ARABIC_ISRAEL, static_cast<int>(::wxLANGUAGE_ARABIC_ISRAEL), 311},
    {sipName_LANGUAGE_ARABIC_JORDAN, static_cast<int>(::wxLANGUAGE_ARABIC_JORDAN), 311},
    {sipName_LANGUAGE_ARABIC_KUWAIT, static_cast<int>(::wxLANGUAGE_ARABIC_KUWAIT), 311},
    {sipName_LANGUAGE_ARABIC_LEBANON, static_cast<int>(::wxLANGUAGE_ARABIC_LEBANON), 311},
    {sipName_LANGUAGE_ARABIC_LIBYA, static_cast<int>(::wxLANGUAGE_ARABIC_LIBYA), 311},
    {sipName_LANGUAGE_ARABIC_MAURITANIA, static_cast<int>(::wxLANGUAGE_ARABIC_MAURITANIA), 311},
    {sipName_LANGUAGE_ARABIC_MOROCCO, static_cast<int>(::wxLANGUAGE_ARABIC_MOROCCO), 311},
    {sipName_LANGUAGE_ARABIC_OMAN, static_cast<int>(::wxLANGUAGE_ARABIC_OMAN), 311},
    {sipName_LANGUAGE_ARABIC_PALESTINIAN_AUTHORITY, static_cast<int>(::wxLANGUAGE_ARABIC_PALESTINIAN_AUTHORITY), 311},
    {sipName_LANGUAGE_ARABIC_QATAR, static_cast<int>(::wxLANGUAGE_ARABIC_QATAR), 311},
    {sipName_LANGUAGE_ARABIC_SAUDI_ARABIA, static_cast<int>(::wxLANGUAGE_ARABIC_SAUDI_ARABIA), 311},
    {sipName_LANGUAGE_ARABIC_SOMALIA, static_cast<int>(::wxLANGUAGE_ARABIC_SOMALIA), 311},
    {sipName_LANGUAGE_ARABIC_SOUTH_SUDAN, static_cast<int>(::wxLANGUAGE_ARABIC_SOUTH_SUDAN), 311},
    {sipName_LANGUAGE_ARABIC_SUDAN, static_cast<int>(::wxLANGUAGE_ARABIC_SUDAN), 311},
    {sipName_LANGUAGE_ARABIC_SYRIA, static_cast<int>(::wxLANGUAGE_ARABIC_SYRIA), 311},
    {sipName_LANGUAGE_ARABIC_TUNISIA, static_cast<int>(::wxLANGUAGE_ARABIC_TUNISIA), 311},
    {sipName_LANGUAGE_ARABIC_UAE, static_cast<int>(::wxLANGUAGE_ARABIC_UAE), 311},
    {sipName_LANGUAGE_ARABIC_WORLD, static_cast<int>(::wxLANGUAGE_ARABIC_WORLD), 311},
    {sipName_LANGUAGE_ARABIC_YEMEN, static_cast<int>(::wxLANGUAGE_ARABIC_YEMEN), 311},
    {sipName_LANGUAGE_ARMENIAN, static_cast<int>(::wxLANGUAGE_ARMENIAN), 311},
    {sipName_LANGUAGE_ARMENIAN_ARMENIA, static_cast<int>(::wxLANGUAGE_ARMENIAN_ARMENIA), 311},
    {sipName_LANGUAGE_ASSAMESE, static_cast<int>(::wxLANGUAGE_ASSAMESE), 311},
    {sipName_LANGUAGE_ASSAMESE_INDIA, static_cast<int>(::wxLANGUAGE_ASSAMESE_INDIA), 311},
    {sipName_LANGUAGE_ASTURIAN, static_cast<int>(::wxLANGUAGE_ASTURIAN), 311},
    {sipName_LANGUAGE_ASTURIAN_SPAIN, static_cast<int>(::wxLANGUAGE_ASTURIAN_SPAIN), 311},
    {sipName_LANGUAGE_ASU, static_cast<int>(::wxLANGUAGE_ASU), 311},
    {sipName_LANGUAGE_ASU_TANZANIA, static_cast<int>(::wxLANGUAGE_ASU_TANZANIA), 311},
    {sipName_LANGUAGE_AYMARA, static_cast<int>(::wxLANGUAGE_AYMARA), 311},
    {sipName_LANGUAGE_AZERBAIJANI, static_cast<int>(::wxLANGUAGE_AZERBAIJANI), 311},
    {sipName_LANGUAGE_AZERBAIJANI_CYRILLIC, static_cast<int>(::wxLANGUAGE_AZERBAIJANI_CYRILLIC), 311},
    {sipName_LANGUAGE_AZERBAIJANI_CYRILLIC_AZERBAIJAN, static_cast<int>(::wxLANGUAGE_AZERBAIJANI_CYRILLIC_AZERBAIJAN), 311},
    {sipName_LANGUAGE_AZERBAIJANI_LATIN, static_cast<int>(::wxLANGUAGE_AZERBAIJANI_LATIN), 311},
    {sipName_LANGUAGE_AZERBAIJANI_LATIN_AZERBAIJAN, static_cast<int>(::wxLANGUAGE_AZERBAIJANI_LATIN_AZERBAIJAN), 311},
    {sipName_LANGUAGE_AZERI, static_cast<int>(::wxLANGUAGE_AZERI), 311},
    {sipName_LANGUAGE_AZERI_CYRILLIC, static_cast<int>(::wxLANGUAGE_AZERI_CYRILLIC), 311},
    {sipName_LANGUAGE_AZERI_LATIN, static_cast<int>(::wxLANGUAGE_AZERI_LATIN), 311},
    {sipName_LANGUAGE_BAFIA, static_cast<int>(::wxLANGUAGE_BAFIA), 311},
    {sipName_LANGUAGE_BAFIA_CAMEROON, static_cast<int>(::wxLANGUAGE_BAFIA_CAMEROON), 311},
    {sipName_LANGUAGE_BAMANANKAN, static_cast<int>(::wxLANGUAGE_BAMANANKAN), 311},
    {sipName_LANGUAGE_BAMANANKAN_LATIN, static_cast<int>(::wxLANGUAGE_BAMANANKAN_LATIN), 311},
    {sipName_LANGUAGE_BAMANANKAN_LATIN_MALI, static_cast<int>(::wxLANGUAGE_BAMANANKAN_LATIN_MALI), 311},
    {sipName_LANGUAGE_BANGLA, static_cast<int>(::wxLANGUAGE_BANGLA), 311},
    {sipName_LANGUAGE_BANGLA_BANGLADESH, static_cast<int>(::wxLANGUAGE_BANGLA_BANGLADESH), 311},
    {sipName_LANGUAGE_BANGLA_INDIA, static_cast<int>(::wxLANGUAGE_BANGLA_INDIA), 311},
    {sipName_LANGUAGE_BASAA, static_cast<int>(::wxLANGUAGE_BASAA), 311},
    {sipName_LANGUAGE_BASAA_CAMEROON, static_cast<int>(::wxLANGUAGE_BASAA_CAMEROON), 311},
    {sipName_LANGUAGE_BASHKIR, static_cast<int>(::wxLANGUAGE_BASHKIR), 311},
    {sipName_LANGUAGE_BASHKIR_RUSSIA, static_cast<int>(::wxLANGUAGE_BASHKIR_RUSSIA), 311},
    {sipName_LANGUAGE_BASQUE, static_cast<int>(::wxLANGUAGE_BASQUE), 311},
    {sipName_LANGUAGE_BASQUE_SPAIN, static_cast<int>(::wxLANGUAGE_BASQUE_SPAIN), 311},
    {sipName_LANGUAGE_BELARUSIAN, static_cast<int>(::wxLANGUAGE_BELARUSIAN), 311},
    {sipName_LANGUAGE_BELARUSIAN_BELARUS, static_cast<int>(::wxLANGUAGE_BELARUSIAN_BELARUS), 311},
    {sipName_LANGUAGE_BEMBA, static_cast<int>(::wxLANGUAGE_BEMBA), 311},
    {sipName_LANGUAGE_BEMBA_ZAMBIA, static_cast<int>(::wxLANGUAGE_BEMBA_ZAMBIA), 311},
    {sipName_LANGUAGE_BENA, static_cast<int>(::wxLANGUAGE_BENA), 311},
    {sipName_LANGUAGE_BENA_TANZANIA, static_cast<int>(::wxLANGUAGE_BENA_TANZANIA), 311},
    {sipName_LANGUAGE_BENGALI, static_cast<int>(::wxLANGUAGE_BENGALI), 311},
    {sipName_LANGUAGE_BENGALI_BANGLADESH, static_cast<int>(::wxLANGUAGE_BENGALI_BANGLADESH), 311},
    {sipName_LANGUAGE_BENGALI_INDIA, static_cast<int>(::wxLANGUAGE_BENGALI_INDIA), 311},
    {sipName_LANGUAGE_BHUTANI, static_cast<int>(::wxLANGUAGE_BHUTANI), 311},
    {sipName_LANGUAGE_BIHARI, static_cast<int>(::wxLANGUAGE_BIHARI), 311},
    {sipName_LANGUAGE_BISLAMA, static_cast<int>(::wxLANGUAGE_BISLAMA), 311},
    {sipName_LANGUAGE_BLIN, static_cast<int>(::wxLANGUAGE_BLIN), 311},
    {sipName_LANGUAGE_BLIN_ERITREA, static_cast<int>(::wxLANGUAGE_BLIN_ERITREA), 311},
    {sipName_LANGUAGE_BODO, static_cast<int>(::wxLANGUAGE_BODO), 311},
    {sipName_LANGUAGE_BODO_INDIA, static_cast<int>(::wxLANGUAGE_BODO_INDIA), 311},
    {sipName_LANGUAGE_BOSNIAN, static_cast<int>(::wxLANGUAGE_BOSNIAN), 311},
    {sipName_LANGUAGE_BOSNIAN_CYRILLIC, static_cast<int>(::wxLANGUAGE_BOSNIAN_CYRILLIC), 311},
    {sipName_LANGUAGE_BOSNIAN_CYRILLIC_BOSNIA_AND_HERZEGOVINA, static_cast<int>(::wxLANGUAGE_BOSNIAN_CYRILLIC_BOSNIA_AND_HERZEGOVINA), 311},
    {sipName_LANGUAGE_BOSNIAN_LATIN, static_cast<int>(::wxLANGUAGE_BOSNIAN_LATIN), 311},
    {sipName_LANGUAGE_BOSNIAN_LATIN_BOSNIA_AND_HERZEGOVINA, static_cast<int>(::wxLANGUAGE_BOSNIAN_LATIN_BOSNIA_AND_HERZEGOVINA), 311},
    {sipName_LANGUAGE_BRETON, static_cast<int>(::wxLANGUAGE_BRETON), 311},
    {sipName_LANGUAGE_BRETON_FRANCE, static_cast<int>(::wxLANGUAGE_BRETON_FRANCE), 311},
    {sipName_LANGUAGE_BULGARIAN, static_cast<int>(::wxLANGUAGE_BULGARIAN), 311},
    {sipName_LANGUAGE_BULGARIAN_BULGARIA, static_cast<int>(::wxLANGUAGE_BULGARIAN_BULGARIA), 311},
    {sipName_LANGUAGE_BURMESE, static_cast<int>(::wxLANGUAGE_BURMESE), 311},
    {sipName_LANGUAGE_BURMESE_MYANMAR, static_cast<int>(::wxLANGUAGE_BURMESE_MYANMAR), 311},
    {sipName_LANGUAGE_CAMBODIAN, static_cast<int>(::wxLANGUAGE_CAMBODIAN), 311},
    {sipName_LANGUAGE_CATALAN, static_cast<int>(::wxLANGUAGE_CATALAN), 311},
    {sipName_LANGUAGE_CATALAN_ANDORRA, static_cast<int>(::wxLANGUAGE_CATALAN_ANDORRA), 311},
    {sipName_LANGUAGE_CATALAN_FRANCE, static_cast<int>(::wxLANGUAGE_CATALAN_FRANCE), 311},
    {sipName_LANGUAGE_CATALAN_ITALY, static_cast<int>(::wxLANGUAGE_CATALAN_ITALY), 311},
    {sipName_LANGUAGE_CATALAN_SPAIN, static_cast<int>(::wxLANGUAGE_CATALAN_SPAIN), 311},
    {sipName_LANGUAGE_CEBUANO, static_cast<int>(::wxLANGUAGE_CEBUANO), 311},
    {sipName_LANGUAGE_CEBUANO_LATIN, static_cast<int>(::wxLANGUAGE_CEBUANO_LATIN), 311},
    {sipName_LANGUAGE_CEBUANO_LATIN_PHILIPPINES, static_cast<int>(::wxLANGUAGE_CEBUANO_LATIN_PHILIPPINES), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_ARABIC, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_ARABIC), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_ARABIC_MOROCCO, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_ARABIC_MOROCCO), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_LATIN, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_LATIN), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_LATIN_ALGERIA, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_LATIN_ALGERIA), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_LATIN_MOROCCO, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_LATIN_MOROCCO), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_TIFINAGH, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_TIFINAGH), 311},
    {sipName_LANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_TIFINAGH_MOROCCO, static_cast<int>(::wxLANGUAGE_CENTRAL_ATLAS_TAMAZIGHT_TIFINAGH_MOROCCO), 311},
    {sipName_LANGUAGE_CENTRAL_KURDISH, static_cast<int>(::wxLANGUAGE_CENTRAL_KURDISH), 311},
    {sipName_LANGUAGE_CENTRAL_KURDISH_IRAQ, static_cast<int>(::wxLANGUAGE_CENTRAL_KURDISH_IRAQ), 311},
    {sipName_LANGUAGE_CHAKMA, static_cast<int>(::wxLANGUAGE_CHAKMA), 311},
    {sipName_LANGUAGE_CHAKMA_CHAKMA, static_cast<int>(::wxLANGUAGE_CHAKMA_CHAKMA), 311},
    {sipName_LANGUAGE_CHAKMA_CHAKMA_BANGLADESH, static_cast<int>(::wxLANGUAGE_CHAKMA_CHAKMA_BANGLADESH), 311},
    {sipName_LANGUAGE_CHAKMA_CHAKMA_INDIA, static_cast<int>(::wxLANGUAGE_CHAKMA_CHAKMA_INDIA), 311},
    {sipName_LANGUAGE_CHECHEN, static_cast<int>(::wxLANGUAGE_CHECHEN), 311},
    {sipName_LANGUAGE_CHECHEN_RUSSIA, static_cast<int>(::wxLANGUAGE_CHECHEN_RUSSIA), 311},
    {sipName_LANGUAGE_CHEROKEE, static_cast<int>(::wxLANGUAGE_CHEROKEE), 311},
    {sipName_LANGUAGE_CHEROKEE_CHEROKEE, static_cast<int>(::wxLANGUAGE_CHEROKEE_CHEROKEE), 311},
    {sipName_LANGUAGE_CHEROKEE_US, static_cast<int>(::wxLANGUAGE_CHEROKEE_US), 311},
    {sipName_LANGUAGE_CHIGA, static_cast<int>(::wxLANGUAGE_CHIGA), 311},
    {sipName_LANGUAGE_CHIGA_UGANDA, static_cast<int>(::wxLANGUAGE_CHIGA_UGANDA), 311},
    {sipName_LANGUAGE_CHINESE, static_cast<int>(::wxLANGUAGE_CHINESE), 311},
    {sipName_LANGUAGE_CHINESE_CHINA, static_cast<int>(::wxLANGUAGE_CHINESE_CHINA), 311},
    {sipName_LANGUAGE_CHINESE_HONGKONG, static_cast<int>(::wxLANGUAGE_CHINESE_HONGKONG), 311},
    {sipName_LANGUAGE_CHINESE_MACAO, static_cast<int>(::wxLANGUAGE_CHINESE_MACAO), 311},
    {sipName_LANGUAGE_CHINESE_MACAU, static_cast<int>(::wxLANGUAGE_CHINESE_MACAU), 311},
    {sipName_LANGUAGE_CHINESE_SIMPLIFIED, static_cast<int>(::wxLANGUAGE_CHINESE_SIMPLIFIED), 311},
    {sipName_LANGUAGE_CHINESE_SIMPLIFIED_EXPLICIT, static_cast<int>(::wxLANGUAGE_CHINESE_SIMPLIFIED_EXPLICIT), 311},
    {sipName_LANGUAGE_CHINESE_SIMPLIFIED_HONGKONG, static_cast<int>(::wxLANGUAGE_CHINESE_SIMPLIFIED_HONGKONG), 311},
    {sipName_LANGUAGE_CHINESE_SIMPLIFIED_MACAO, static_cast<int>(::wxLANGUAGE_CHINESE_SIMPLIFIED_MACAO), 311},
    {sipName_LANGUAGE_CHINESE_SINGAPORE, static_cast<int>(::wxLANGUAGE_CHINESE_SINGAPORE), 311},
    {sipName_LANGUAGE_CHINESE_TAIWAN, static_cast<int>(::wxLANGUAGE_CHINESE_TAIWAN), 311},
    {sipName_LANGUAGE_CHINESE_TRADITIONAL, static_cast<int>(::wxLANGUAGE_CHINESE_TRADITIONAL), 311},
    {sipName_LANGUAGE_CHINESE_TRADITIONAL_EXPLICIT, static_cast<int>(::wxLANGUAGE_CHINESE_TRADITIONAL_EXPLICIT), 311},
    {sipName_LANGUAGE_CHURCH_SLAVIC, static_cast<int>(::wxLANGUAGE_CHURCH_SLAVIC), 311},
    {sipName_LANGUAGE_CHURCH_SLAVIC_RUSSIA, static_cast<int>(::wxLANGUAGE_CHURCH_SLAVIC_RUSSIA), 311},
    {sipName_LANGUAGE_COLOGNIAN, static_cast<int>(::wxLANGUAGE_COLOGNIAN), 311},
    {sipName_LANGUAGE_COLOGNIAN_GERMANY, static_cast<int>(::wxLANGUAGE_COLOGNIAN_GERMANY), 311},
    {sipName_LANGUAGE_CORNISH, static_cast<int>(::wxLANGUAGE_CORNISH), 311},
    {sipName_LANGUAGE_CORNISH_UK, static_cast<int>(::wxLANGUAGE_CORNISH_UK), 311},
    {sipName_LANGUAGE_CORSICAN, static_cast<int>(::wxLANGUAGE_CORSICAN), 311},
    {sipName_LANGUAGE_CORSICAN_FRANCE, static_cast<int>(::wxLANGUAGE_CORSICAN_FRANCE), 311},
    {sipName_LANGUAGE_CROATIAN, static_cast<int>(::wxLANGUAGE_CROATIAN), 311},
    {sipName_LANGUAGE_CROATIAN_BOSNIA_AND_HERZEGOVINA, static_cast<int>(::wxLANGUAGE_CROATIAN_BOSNIA_AND_HERZEGOVINA), 311},
    {sipName_LANGUAGE_CROATIAN_CROATIA, static_cast<int>(::wxLANGUAGE_CROATIAN_CROATIA), 311},
    {sipName_LANGUAGE_CZECH, static_cast<int>(::wxLANGUAGE_CZECH), 311},
    {sipName_LANGUAGE_CZECH_CZECHIA, static_cast<int>(::wxLANGUAGE_CZECH_CZECHIA), 311},
    {sipName_LANGUAGE_DANISH, static_cast<int>(::wxLANGUAGE_DANISH), 311},
    {sipName_LANGUAGE_DANISH_DENMARK, static_cast<int>(::wxLANGUAGE_DANISH_DENMARK), 311},
    {sipName_LANGUAGE_DANISH_GREENLAND, static_cast<int>(::wxLANGUAGE_DANISH_GREENLAND), 311},
    {sipName_LANGUAGE_DARI, static_cast<int>(::wxLANGUAGE_DARI), 311},
    {sipName_LANGUAGE_DARI_AFGHANISTAN, static_cast<int>(::wxLANGUAGE_DARI_AFGHANISTAN), 311},
    {sipName_LANGUAGE_DEFAULT, static_cast<int>(::wxLANGUAGE_DEFAULT), 311},
    {sipName_LANGUAGE_DIVEHI, static_cast<int>(::wxLANGUAGE_DIVEHI), 311},
    {sipName_LANGUAGE_DIVEHI_MALDIVES, static_cast<int>(::wxLANGUAGE_DIVEHI_MALDIVES), 311},
    {sipName_LANGUAGE_DUALA, static_cast<int>(::wxLANGUAGE_DUALA), 311},
    {sipName_LANGUAGE_DUALA_CAMEROON, static_cast<int>(::wxLANGUAGE_DUALA_CAMEROON), 311},
    {sipName_LANGUAGE_DUTCH, static_cast<int>(::wxLANGUAGE_DUTCH), 311},
    {sipName_LANGUAGE_DUTCH_ARUBA, static_cast<int>(::wxLANGUAGE_DUTCH_ARUBA), 311},
    {sipName_LANGUAGE_DUTCH_BELGIAN, static_cast<int>(::wxLANGUAGE_DUTCH_BELGIAN), 311},
    {sipName_LANGUAGE_DUTCH_BONAIRE_SINT_EUSTATIUS_AND_SABA, static_cast<int>(::wxLANGUAGE_DUTCH_BONAIRE_SINT_EUSTATIUS_AND_SABA), 311},
    {sipName_LANGUAGE_DUTCH_CURACAO, static_cast<int>(::wxLANGUAGE_DUTCH_CURACAO), 311},
    {sipName_LANGUAGE_DUTCH_NETHERLANDS, static_cast<int>(::wxLANGUAGE_DUTCH_NETHERLANDS), 311},
    {sipName_LANGUAGE_DUTCH_SINT_MAARTEN, static_cast<int>(::wxLANGUAGE_DUTCH_SINT_MAARTEN), 311},
    {sipName_LANGUAGE_DUTCH_SURINAME, static_cast<int>(::wxLANGUAGE_DUTCH_SURINAME), 311},
    {sipName_LANGUAGE_DZONGKHA, static_cast<int>(::wxLANGUAGE_DZONGKHA), 311},
    {sipName_LANGUAGE_DZONGKHA_BHUTAN, static_cast<int>(::wxLANGUAGE_DZONGKHA_BHUTAN), 311},
    {sipName_LANGUAGE_EDO, static_cast<int>(::wxLANGUAGE_EDO), 311},
    {sipName_LANGUAGE_EDO_NIGERIA, static_cast<int>(::wxLANGUAGE_EDO_NIGERIA), 311},
    {sipName_LANGUAGE_EMBU, static_cast<int>(::wxLANGUAGE_EMBU), 311},
    {sipName_LANGUAGE_EMBU_KENYA, static_cast<int>(::wxLANGUAGE_EMBU_KENYA), 311},
    {sipName_LANGUAGE_ENGLISH, static_cast<int>(::wxLANGUAGE_ENGLISH), 311},
    {sipName_LANGUAGE_ENGLISH_AMERICAN_SAMOA, static_cast<int>(::wxLANGUAGE_ENGLISH_AMERICAN_SAMOA), 311},
    {sipName_LANGUAGE_ENGLISH_ANGUILLA, static_cast<int>(::wxLANGUAGE_ENGLISH_ANGUILLA), 311},
    {sipName_LANGUAGE_ENGLISH_ANTIGUA_AND_BARBUDA, static_cast<int>(::wxLANGUAGE_ENGLISH_ANTIGUA_AND_BARBUDA), 311},
    {sipName_LANGUAGE_ENGLISH_AUSTRALIA, static_cast<int>(::wxLANGUAGE_ENGLISH_AUSTRALIA), 311},
    {sipName_LANGUAGE_ENGLISH_AUSTRIA, static_cast<int>(::wxLANGUAGE_ENGLISH_AUSTRIA), 311},
    {sipName_LANGUAGE_ENGLISH_BAHAMAS, static_cast<int>(::wxLANGUAGE_ENGLISH_BAHAMAS), 311},
    {sipName_LANGUAGE_ENGLISH_BARBADOS, static_cast<int>(::wxLANGUAGE_ENGLISH_BARBADOS), 311},
    {sipName_LANGUAGE_ENGLISH_BELGIUM, static_cast<int>(::wxLANGUAGE_ENGLISH_BELGIUM), 311},
    {sipName_LANGUAGE_ENGLISH_BELIZE, static_cast<int>(::wxLANGUAGE_ENGLISH_BELIZE), 311},
    {sipName_LANGUAGE_ENGLISH_BERMUDA, static_cast<int>(::wxLANGUAGE_ENGLISH_BERMUDA), 311},
    {sipName_LANGUAGE_ENGLISH_BOTSWANA, static_cast<int>(::wxLANGUAGE_ENGLISH_BOTSWANA), 311},
    {sipName_LANGUAGE_ENGLISH_BRITISH_INDIAN_OCEAN_TERRITORY, static_cast<int>(::wxLANGUAGE_ENGLISH_BRITISH_INDIAN_OCEAN_TERRITORY), 311},
    {sipName_LANGUAGE_ENGLISH_BRITISH_VIRGIN_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_BRITISH_VIRGIN_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_BURUNDI, static_cast<int>(::wxLANGUAGE_ENGLISH_BURUNDI), 311},
    {sipName_LANGUAGE_ENGLISH_CAMEROON, static_cast<int>(::wxLANGUAGE_ENGLISH_CAMEROON), 311},
    {sipName_LANGUAGE_ENGLISH_CANADA, static_cast<int>(::wxLANGUAGE_ENGLISH_CANADA), 311},
    {sipName_LANGUAGE_ENGLISH_CARIBBEAN, static_cast<int>(::wxLANGUAGE_ENGLISH_CARIBBEAN), 311},
    {sipName_LANGUAGE_ENGLISH_CARIBBEAN_CB, static_cast<int>(::wxLANGUAGE_ENGLISH_CARIBBEAN_CB), 311},
    {sipName_LANGUAGE_ENGLISH_CAYMAN_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_CAYMAN_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_CHRISTMAS_ISLAND, static_cast<int>(::wxLANGUAGE_ENGLISH_CHRISTMAS_ISLAND), 311},
    {sipName_LANGUAGE_ENGLISH_COCOS_KEELING_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_COCOS_KEELING_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_COOK_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_COOK_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_CYPRUS, static_cast<int>(::wxLANGUAGE_ENGLISH_CYPRUS), 311},
    {sipName_LANGUAGE_ENGLISH_DENMARK, static_cast<int>(::wxLANGUAGE_ENGLISH_DENMARK), 311},
    {sipName_LANGUAGE_ENGLISH_DOMINICA, static_cast<int>(::wxLANGUAGE_ENGLISH_DOMINICA), 311},
    {sipName_LANGUAGE_ENGLISH_EIRE, static_cast<int>(::wxLANGUAGE_ENGLISH_EIRE), 311},
    {sipName_LANGUAGE_ENGLISH_ERITREA, static_cast<int>(::wxLANGUAGE_ENGLISH_ERITREA), 311},
    {sipName_LANGUAGE_ENGLISH_ESWATINI, static_cast<int>(::wxLANGUAGE_ENGLISH_ESWATINI), 311},
    {sipName_LANGUAGE_ENGLISH_EUROPE, static_cast<int>(::wxLANGUAGE_ENGLISH_EUROPE), 311},
    {sipName_LANGUAGE_ENGLISH_FALKLAND_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_FALKLAND_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_FIJI, static_cast<int>(::wxLANGUAGE_ENGLISH_FIJI), 311},
    {sipName_LANGUAGE_ENGLISH_FINLAND, static_cast<int>(::wxLANGUAGE_ENGLISH_FINLAND), 311},
    {sipName_LANGUAGE_ENGLISH_GAMBIA, static_cast<int>(::wxLANGUAGE_ENGLISH_GAMBIA), 311},
    {sipName_LANGUAGE_ENGLISH_GERMANY, static_cast<int>(::wxLANGUAGE_ENGLISH_GERMANY), 311},
    {sipName_LANGUAGE_ENGLISH_GHANA, static_cast<int>(::wxLANGUAGE_ENGLISH_GHANA), 311},
    {sipName_LANGUAGE_ENGLISH_GIBRALTAR, static_cast<int>(::wxLANGUAGE_ENGLISH_GIBRALTAR), 311},
    {sipName_LANGUAGE_ENGLISH_GRENADA, static_cast<int>(::wxLANGUAGE_ENGLISH_GRENADA), 311},
    {sipName_LANGUAGE_ENGLISH_GUAM, static_cast<int>(::wxLANGUAGE_ENGLISH_GUAM), 311},
    {sipName_LANGUAGE_ENGLISH_GUERNSEY, static_cast<int>(::wxLANGUAGE_ENGLISH_GUERNSEY), 311},
    {sipName_LANGUAGE_ENGLISH_GUYANA, static_cast<int>(::wxLANGUAGE_ENGLISH_GUYANA), 311},
    {sipName_LANGUAGE_ENGLISH_HONG_KONG_SAR, static_cast<int>(::wxLANGUAGE_ENGLISH_HONG_KONG_SAR), 311},
    {sipName_LANGUAGE_ENGLISH_INDIA, static_cast<int>(::wxLANGUAGE_ENGLISH_INDIA), 311},
    {sipName_LANGUAGE_ENGLISH_INDONESIA, static_cast<int>(::wxLANGUAGE_ENGLISH_INDONESIA), 311},
    {sipName_LANGUAGE_ENGLISH_ISLE_OF_MAN, static_cast<int>(::wxLANGUAGE_ENGLISH_ISLE_OF_MAN), 311},
    {sipName_LANGUAGE_ENGLISH_ISRAEL, static_cast<int>(::wxLANGUAGE_ENGLISH_ISRAEL), 311},
    {sipName_LANGUAGE_ENGLISH_JAMAICA, static_cast<int>(::wxLANGUAGE_ENGLISH_JAMAICA), 311},
    {sipName_LANGUAGE_ENGLISH_JERSEY, static_cast<int>(::wxLANGUAGE_ENGLISH_JERSEY), 311},
    {sipName_LANGUAGE_ENGLISH_KENYA, static_cast<int>(::wxLANGUAGE_ENGLISH_KENYA), 311},
    {sipName_LANGUAGE_ENGLISH_KIRIBATI, static_cast<int>(::wxLANGUAGE_ENGLISH_KIRIBATI), 311},
    {sipName_LANGUAGE_ENGLISH_LESOTHO, static_cast<int>(::wxLANGUAGE_ENGLISH_LESOTHO), 311},
    {sipName_LANGUAGE_ENGLISH_LIBERIA, static_cast<int>(::wxLANGUAGE_ENGLISH_LIBERIA), 311},
    {sipName_LANGUAGE_ENGLISH_MACAO_SAR, static_cast<int>(::wxLANGUAGE_ENGLISH_MACAO_SAR), 311},
    {sipName_LANGUAGE_ENGLISH_MADAGASCAR, static_cast<int>(::wxLANGUAGE_ENGLISH_MADAGASCAR), 311},
    {sipName_LANGUAGE_ENGLISH_MALAWI, static_cast<int>(::wxLANGUAGE_ENGLISH_MALAWI), 311},
    {sipName_LANGUAGE_ENGLISH_MALAYSIA, static_cast<int>(::wxLANGUAGE_ENGLISH_MALAYSIA), 311},
    {sipName_LANGUAGE_ENGLISH_MALTA, static_cast<int>(::wxLANGUAGE_ENGLISH_MALTA), 311},
    {sipName_LANGUAGE_ENGLISH_MARSHALL_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_MARSHALL_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_MAURITIUS, static_cast<int>(::wxLANGUAGE_ENGLISH_MAURITIUS), 311},
    {sipName_LANGUAGE_ENGLISH_MICRONESIA, static_cast<int>(::wxLANGUAGE_ENGLISH_MICRONESIA), 311},
    {sipName_LANGUAGE_ENGLISH_MONTSERRAT, static_cast<int>(::wxLANGUAGE_ENGLISH_MONTSERRAT), 311},
    {sipName_LANGUAGE_ENGLISH_NAMIBIA, static_cast<int>(::wxLANGUAGE_ENGLISH_NAMIBIA), 311},
    {sipName_LANGUAGE_ENGLISH_NAURU, static_cast<int>(::wxLANGUAGE_ENGLISH_NAURU), 311},
    {sipName_LANGUAGE_ENGLISH_NETHERLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_NETHERLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_NEW_ZEALAND, static_cast<int>(::wxLANGUAGE_ENGLISH_NEW_ZEALAND), 311},
    {sipName_LANGUAGE_ENGLISH_NIGERIA, static_cast<int>(::wxLANGUAGE_ENGLISH_NIGERIA), 311},
    {sipName_LANGUAGE_ENGLISH_NIUE, static_cast<int>(::wxLANGUAGE_ENGLISH_NIUE), 311},
    {sipName_LANGUAGE_ENGLISH_NORFOLK_ISLAND, static_cast<int>(::wxLANGUAGE_ENGLISH_NORFOLK_ISLAND), 311},
    {sipName_LANGUAGE_ENGLISH_NORTHERN_MARIANA_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_NORTHERN_MARIANA_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_PAKISTAN, static_cast<int>(::wxLANGUAGE_ENGLISH_PAKISTAN), 311},
    {sipName_LANGUAGE_ENGLISH_PALAU, static_cast<int>(::wxLANGUAGE_ENGLISH_PALAU), 311},
    {sipName_LANGUAGE_ENGLISH_PAPUA_NEW_GUINEA, static_cast<int>(::wxLANGUAGE_ENGLISH_PAPUA_NEW_GUINEA), 311},
    {sipName_LANGUAGE_ENGLISH_PHILIPPINES, static_cast<int>(::wxLANGUAGE_ENGLISH_PHILIPPINES), 311},
    {sipName_LANGUAGE_ENGLISH_PITCAIRN_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_PITCAIRN_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_PUERTO_RICO, static_cast<int>(::wxLANGUAGE_ENGLISH_PUERTO_RICO), 311},
    {sipName_LANGUAGE_ENGLISH_RWANDA, static_cast<int>(::wxLANGUAGE_ENGLISH_RWANDA), 311},
    {sipName_LANGUAGE_ENGLISH_SAMOA, static_cast<int>(::wxLANGUAGE_ENGLISH_SAMOA), 311},
    {sipName_LANGUAGE_ENGLISH_SEYCHELLES, static_cast<int>(::wxLANGUAGE_ENGLISH_SEYCHELLES), 311},
    {sipName_LANGUAGE_ENGLISH_SIERRA_LEONE, static_cast<int>(::wxLANGUAGE_ENGLISH_SIERRA_LEONE), 311},
    {sipName_LANGUAGE_ENGLISH_SINGAPORE, static_cast<int>(::wxLANGUAGE_ENGLISH_SINGAPORE), 311},
    {sipName_LANGUAGE_ENGLISH_SINT_MAARTEN, static_cast<int>(::wxLANGUAGE_ENGLISH_SINT_MAARTEN), 311},
    {sipName_LANGUAGE_ENGLISH_SLOVENIA, static_cast<int>(::wxLANGUAGE_ENGLISH_SLOVENIA), 311},
    {sipName_LANGUAGE_ENGLISH_SOLOMON_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_SOLOMON_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_ENGLISH_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_ENGLISH_SOUTH_SUDAN, static_cast<int>(::wxLANGUAGE_ENGLISH_SOUTH_SUDAN), 311},
    {sipName_LANGUAGE_ENGLISH_ST_HELENA_ASCENSION_TRISTAN_DA_CUNHA, static_cast<int>(::wxLANGUAGE_ENGLISH_ST_HELENA_ASCENSION_TRISTAN_DA_CUNHA), 311},
    {sipName_LANGUAGE_ENGLISH_ST_KITTS_AND_NEVIS, static_cast<int>(::wxLANGUAGE_ENGLISH_ST_KITTS_AND_NEVIS), 311},
    {sipName_LANGUAGE_ENGLISH_ST_LUCIA, static_cast<int>(::wxLANGUAGE_ENGLISH_ST_LUCIA), 311},
    {sipName_LANGUAGE_ENGLISH_ST_VINCENT_AND_GRENADINES, static_cast<int>(::wxLANGUAGE_ENGLISH_ST_VINCENT_AND_GRENADINES), 311},
    {sipName_LANGUAGE_ENGLISH_SUDAN, static_cast<int>(::wxLANGUAGE_ENGLISH_SUDAN), 311},
    {sipName_LANGUAGE_ENGLISH_SWEDEN, static_cast<int>(::wxLANGUAGE_ENGLISH_SWEDEN), 311},
    {sipName_LANGUAGE_ENGLISH_SWITZERLAND, static_cast<int>(::wxLANGUAGE_ENGLISH_SWITZERLAND), 311},
    {sipName_LANGUAGE_ENGLISH_TANZANIA, static_cast<int>(::wxLANGUAGE_ENGLISH_TANZANIA), 311},
    {sipName_LANGUAGE_ENGLISH_TOKELAU, static_cast<int>(::wxLANGUAGE_ENGLISH_TOKELAU), 311},
    {sipName_LANGUAGE_ENGLISH_TONGA, static_cast<int>(::wxLANGUAGE_ENGLISH_TONGA), 311},
    {sipName_LANGUAGE_ENGLISH_TRINIDAD, static_cast<int>(::wxLANGUAGE_ENGLISH_TRINIDAD), 311},
    {sipName_LANGUAGE_ENGLISH_TURKS_AND_CAICOS_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_TURKS_AND_CAICOS_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_TUVALU, static_cast<int>(::wxLANGUAGE_ENGLISH_TUVALU), 311},
    {sipName_LANGUAGE_ENGLISH_UGANDA, static_cast<int>(::wxLANGUAGE_ENGLISH_UGANDA), 311},
    {sipName_LANGUAGE_ENGLISH_UK, static_cast<int>(::wxLANGUAGE_ENGLISH_UK), 311},
    {sipName_LANGUAGE_ENGLISH_UNITED_ARAB_EMIRATES, static_cast<int>(::wxLANGUAGE_ENGLISH_UNITED_ARAB_EMIRATES), 311},
    {sipName_LANGUAGE_ENGLISH_US, static_cast<int>(::wxLANGUAGE_ENGLISH_US), 311},
    {sipName_LANGUAGE_ENGLISH_US_OUTLYING_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_US_OUTLYING_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_US_VIRGIN_ISLANDS, static_cast<int>(::wxLANGUAGE_ENGLISH_US_VIRGIN_ISLANDS), 311},
    {sipName_LANGUAGE_ENGLISH_VANUATU, static_cast<int>(::wxLANGUAGE_ENGLISH_VANUATU), 311},
    {sipName_LANGUAGE_ENGLISH_WORLD, static_cast<int>(::wxLANGUAGE_ENGLISH_WORLD), 311},
    {sipName_LANGUAGE_ENGLISH_ZAMBIA, static_cast<int>(::wxLANGUAGE_ENGLISH_ZAMBIA), 311},
    {sipName_LANGUAGE_ENGLISH_ZIMBABWE, static_cast<int>(::wxLANGUAGE_ENGLISH_ZIMBABWE), 311},
    {sipName_LANGUAGE_ESPERANTO, static_cast<int>(::wxLANGUAGE_ESPERANTO), 311},
    {sipName_LANGUAGE_ESPERANTO_WORLD, static_cast<int>(::wxLANGUAGE_ESPERANTO_WORLD), 311},
    {sipName_LANGUAGE_ESTONIAN, static_cast<int>(::wxLANGUAGE_ESTONIAN), 311},
    {sipName_LANGUAGE_ESTONIAN_ESTONIA, static_cast<int>(::wxLANGUAGE_ESTONIAN_ESTONIA), 311},
    {sipName_LANGUAGE_EWE, static_cast<int>(::wxLANGUAGE_EWE), 311},
    {sipName_LANGUAGE_EWE_GHANA, static_cast<int>(::wxLANGUAGE_EWE_GHANA), 311},
    {sipName_LANGUAGE_EWE_TOGO, static_cast<int>(::wxLANGUAGE_EWE_TOGO), 311},
    {sipName_LANGUAGE_EWONDO, static_cast<int>(::wxLANGUAGE_EWONDO), 311},
    {sipName_LANGUAGE_EWONDO_CAMEROON, static_cast<int>(::wxLANGUAGE_EWONDO_CAMEROON), 311},
    {sipName_LANGUAGE_FAEROESE, static_cast<int>(::wxLANGUAGE_FAEROESE), 311},
    {sipName_LANGUAGE_FAEROESE_DENMARK, static_cast<int>(::wxLANGUAGE_FAEROESE_DENMARK), 311},
    {sipName_LANGUAGE_FAEROESE_FAROE_ISLANDS, static_cast<int>(::wxLANGUAGE_FAEROESE_FAROE_ISLANDS), 311},
    {sipName_LANGUAGE_FARSI, static_cast<int>(::wxLANGUAGE_FARSI), 311},
    {sipName_LANGUAGE_FIJI, static_cast<int>(::wxLANGUAGE_FIJI), 311},
    {sipName_LANGUAGE_FILIPINO, static_cast<int>(::wxLANGUAGE_FILIPINO), 311},
    {sipName_LANGUAGE_FILIPINO_PHILIPPINES, static_cast<int>(::wxLANGUAGE_FILIPINO_PHILIPPINES), 311},
    {sipName_LANGUAGE_FINNISH, static_cast<int>(::wxLANGUAGE_FINNISH), 311},
    {sipName_LANGUAGE_FINNISH_FINLAND, static_cast<int>(::wxLANGUAGE_FINNISH_FINLAND), 311},
    {sipName_LANGUAGE_FRENCH, static_cast<int>(::wxLANGUAGE_FRENCH), 311},
    {sipName_LANGUAGE_FRENCH_ALGERIA, static_cast<int>(::wxLANGUAGE_FRENCH_ALGERIA), 311},
    {sipName_LANGUAGE_FRENCH_BELGIAN, static_cast<int>(::wxLANGUAGE_FRENCH_BELGIAN), 311},
    {sipName_LANGUAGE_FRENCH_BENIN, static_cast<int>(::wxLANGUAGE_FRENCH_BENIN), 311},
    {sipName_LANGUAGE_FRENCH_BURKINA_FASO, static_cast<int>(::wxLANGUAGE_FRENCH_BURKINA_FASO), 311},
    {sipName_LANGUAGE_FRENCH_BURUNDI, static_cast<int>(::wxLANGUAGE_FRENCH_BURUNDI), 311},
    {sipName_LANGUAGE_FRENCH_CAMEROON, static_cast<int>(::wxLANGUAGE_FRENCH_CAMEROON), 311},
    {sipName_LANGUAGE_FRENCH_CANADIAN, static_cast<int>(::wxLANGUAGE_FRENCH_CANADIAN), 311},
    {sipName_LANGUAGE_FRENCH_CARIBBEAN, static_cast<int>(::wxLANGUAGE_FRENCH_CARIBBEAN), 311},
    {sipName_LANGUAGE_FRENCH_CENTRAL_AFRICAN_REPUBLIC, static_cast<int>(::wxLANGUAGE_FRENCH_CENTRAL_AFRICAN_REPUBLIC), 311},
    {sipName_LANGUAGE_FRENCH_CHAD, static_cast<int>(::wxLANGUAGE_FRENCH_CHAD), 311},
    {sipName_LANGUAGE_FRENCH_COMOROS, static_cast<int>(::wxLANGUAGE_FRENCH_COMOROS), 311},
    {sipName_LANGUAGE_FRENCH_CONGO, static_cast<int>(::wxLANGUAGE_FRENCH_CONGO), 311},
    {sipName_LANGUAGE_FRENCH_CONGO_DRC, static_cast<int>(::wxLANGUAGE_FRENCH_CONGO_DRC), 311},
    {sipName_LANGUAGE_FRENCH_COTE_DIVOIRE, static_cast<int>(::wxLANGUAGE_FRENCH_COTE_DIVOIRE), 311},
    {sipName_LANGUAGE_FRENCH_DJIBOUTI, static_cast<int>(::wxLANGUAGE_FRENCH_DJIBOUTI), 311},
    {sipName_LANGUAGE_FRENCH_EQUATORIAL_GUINEA, static_cast<int>(::wxLANGUAGE_FRENCH_EQUATORIAL_GUINEA), 311},
    {sipName_LANGUAGE_FRENCH_FRANCE, static_cast<int>(::wxLANGUAGE_FRENCH_FRANCE), 311},
    {sipName_LANGUAGE_FRENCH_FRENCH_GUIANA, static_cast<int>(::wxLANGUAGE_FRENCH_FRENCH_GUIANA), 311},
    {sipName_LANGUAGE_FRENCH_FRENCH_POLYNESIA, static_cast<int>(::wxLANGUAGE_FRENCH_FRENCH_POLYNESIA), 311},
    {sipName_LANGUAGE_FRENCH_GABON, static_cast<int>(::wxLANGUAGE_FRENCH_GABON), 311},
    {sipName_LANGUAGE_FRENCH_GUADELOUPE, static_cast<int>(::wxLANGUAGE_FRENCH_GUADELOUPE), 311},
    {sipName_LANGUAGE_FRENCH_GUINEA, static_cast<int>(::wxLANGUAGE_FRENCH_GUINEA), 311},
    {sipName_LANGUAGE_FRENCH_HAITI, static_cast<int>(::wxLANGUAGE_FRENCH_HAITI), 311},
    {sipName_LANGUAGE_FRENCH_LUXEMBOURG, static_cast<int>(::wxLANGUAGE_FRENCH_LUXEMBOURG), 311},
    {sipName_LANGUAGE_FRENCH_MADAGASCAR, static_cast<int>(::wxLANGUAGE_FRENCH_MADAGASCAR), 311},
    {sipName_LANGUAGE_FRENCH_MALI, static_cast<int>(::wxLANGUAGE_FRENCH_MALI), 311},
    {sipName_LANGUAGE_FRENCH_MARTINIQUE, static_cast<int>(::wxLANGUAGE_FRENCH_MARTINIQUE), 311},
    {sipName_LANGUAGE_FRENCH_MAURITANIA, static_cast<int>(::wxLANGUAGE_FRENCH_MAURITANIA), 311},
    {sipName_LANGUAGE_FRENCH_MAURITIUS, static_cast<int>(::wxLANGUAGE_FRENCH_MAURITIUS), 311},
    {sipName_LANGUAGE_FRENCH_MAYOTTE, static_cast<int>(::wxLANGUAGE_FRENCH_MAYOTTE), 311},
    {sipName_LANGUAGE_FRENCH_MONACO, static_cast<int>(::wxLANGUAGE_FRENCH_MONACO), 311},
    {sipName_LANGUAGE_FRENCH_MOROCCO, static_cast<int>(::wxLANGUAGE_FRENCH_MOROCCO), 311},
    {sipName_LANGUAGE_FRENCH_NEW_CALEDONIA, static_cast<int>(::wxLANGUAGE_FRENCH_NEW_CALEDONIA), 311},
    {sipName_LANGUAGE_FRENCH_NIGER, static_cast<int>(::wxLANGUAGE_FRENCH_NIGER), 311},
    {sipName_LANGUAGE_FRENCH_REUNION, static_cast<int>(::wxLANGUAGE_FRENCH_REUNION), 311},
    {sipName_LANGUAGE_FRENCH_RWANDA, static_cast<int>(::wxLANGUAGE_FRENCH_RWANDA), 311},
    {sipName_LANGUAGE_FRENCH_SENEGAL, static_cast<int>(::wxLANGUAGE_FRENCH_SENEGAL), 311},
    {sipName_LANGUAGE_FRENCH_SEYCHELLES, static_cast<int>(::wxLANGUAGE_FRENCH_SEYCHELLES), 311},
    {sipName_LANGUAGE_FRENCH_ST_BARTHELEMY, static_cast<int>(::wxLANGUAGE_FRENCH_ST_BARTHELEMY), 311},
    {sipName_LANGUAGE_FRENCH_ST_MARTIN, static_cast<int>(::wxLANGUAGE_FRENCH_ST_MARTIN), 311},
    {sipName_LANGUAGE_FRENCH_ST_PIERRE_AND_MIQUELON, static_cast<int>(::wxLANGUAGE_FRENCH_ST_PIERRE_AND_MIQUELON), 311},
    {sipName_LANGUAGE_FRENCH_SWISS, static_cast<int>(::wxLANGUAGE_FRENCH_SWISS), 311},
    {sipName_LANGUAGE_FRENCH_SYRIA, static_cast<int>(::wxLANGUAGE_FRENCH_SYRIA), 311},
    {sipName_LANGUAGE_FRENCH_TOGO, static_cast<int>(::wxLANGUAGE_FRENCH_TOGO), 311},
    {sipName_LANGUAGE_FRENCH_TUNISIA, static_cast<int>(::wxLANGUAGE_FRENCH_TUNISIA), 311},
    {sipName_LANGUAGE_FRENCH_VANUATU, static_cast<int>(::wxLANGUAGE_FRENCH_VANUATU), 311},
    {sipName_LANGUAGE_FRENCH_WALLIS_AND_FUTUNA, static_cast<int>(::wxLANGUAGE_FRENCH_WALLIS_AND_FUTUNA), 311},
    {sipName_LANGUAGE_FRISIAN, static_cast<int>(::wxLANGUAGE_FRISIAN), 311},
    {sipName_LANGUAGE_FRISIAN_NETHERLANDS, static_cast<int>(::wxLANGUAGE_FRISIAN_NETHERLANDS), 311},
    {sipName_LANGUAGE_FRIULIAN, static_cast<int>(::wxLANGUAGE_FRIULIAN), 311},
    {sipName_LANGUAGE_FRIULIAN_ITALY, static_cast<int>(::wxLANGUAGE_FRIULIAN_ITALY), 311},
    {sipName_LANGUAGE_FULAH, static_cast<int>(::wxLANGUAGE_FULAH), 311},
    {sipName_LANGUAGE_FULAH_LATIN, static_cast<int>(::wxLANGUAGE_FULAH_LATIN), 311},
    {sipName_LANGUAGE_FULAH_LATIN_BURKINA_FASO, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_BURKINA_FASO), 311},
    {sipName_LANGUAGE_FULAH_LATIN_CAMEROON, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_CAMEROON), 311},
    {sipName_LANGUAGE_FULAH_LATIN_GAMBIA, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_GAMBIA), 311},
    {sipName_LANGUAGE_FULAH_LATIN_GHANA, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_GHANA), 311},
    {sipName_LANGUAGE_FULAH_LATIN_GUINEA, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_GUINEA), 311},
    {sipName_LANGUAGE_FULAH_LATIN_GUINEA_BISSAU, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_GUINEA_BISSAU), 311},
    {sipName_LANGUAGE_FULAH_LATIN_LIBERIA, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_LIBERIA), 311},
    {sipName_LANGUAGE_FULAH_LATIN_MAURITANIA, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_MAURITANIA), 311},
    {sipName_LANGUAGE_FULAH_LATIN_NIGER, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_NIGER), 311},
    {sipName_LANGUAGE_FULAH_LATIN_NIGERIA, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_NIGERIA), 311},
    {sipName_LANGUAGE_FULAH_LATIN_SENEGAL, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_SENEGAL), 311},
    {sipName_LANGUAGE_FULAH_LATIN_SIERRA_LEONE, static_cast<int>(::wxLANGUAGE_FULAH_LATIN_SIERRA_LEONE), 311},
    {sipName_LANGUAGE_GALICIAN, static_cast<int>(::wxLANGUAGE_GALICIAN), 311},
    {sipName_LANGUAGE_GALICIAN_SPAIN, static_cast<int>(::wxLANGUAGE_GALICIAN_SPAIN), 311},
    {sipName_LANGUAGE_GANDA, static_cast<int>(::wxLANGUAGE_GANDA), 311},
    {sipName_LANGUAGE_GANDA_UGANDA, static_cast<int>(::wxLANGUAGE_GANDA_UGANDA), 311},
    {sipName_LANGUAGE_GEORGIAN, static_cast<int>(::wxLANGUAGE_GEORGIAN), 311},
    {sipName_LANGUAGE_GEORGIAN_GEORGIA, static_cast<int>(::wxLANGUAGE_GEORGIAN_GEORGIA), 311},
    {sipName_LANGUAGE_GERMAN, static_cast<int>(::wxLANGUAGE_GERMAN), 311},
    {sipName_LANGUAGE_GERMAN_AUSTRIAN, static_cast<int>(::wxLANGUAGE_GERMAN_AUSTRIAN), 311},
    {sipName_LANGUAGE_GERMAN_BELGIUM, static_cast<int>(::wxLANGUAGE_GERMAN_BELGIUM), 311},
    {sipName_LANGUAGE_GERMAN_GERMANY, static_cast<int>(::wxLANGUAGE_GERMAN_GERMANY), 311},
    {sipName_LANGUAGE_GERMAN_ITALY, static_cast<int>(::wxLANGUAGE_GERMAN_ITALY), 311},
    {sipName_LANGUAGE_GERMAN_LIECHTENSTEIN, static_cast<int>(::wxLANGUAGE_GERMAN_LIECHTENSTEIN), 311},
    {sipName_LANGUAGE_GERMAN_LUXEMBOURG, static_cast<int>(::wxLANGUAGE_GERMAN_LUXEMBOURG), 311},
    {sipName_LANGUAGE_GERMAN_SWISS, static_cast<int>(::wxLANGUAGE_GERMAN_SWISS), 311},
    {sipName_LANGUAGE_GREEK, static_cast<int>(::wxLANGUAGE_GREEK), 311},
    {sipName_LANGUAGE_GREEK_CYPRUS, static_cast<int>(::wxLANGUAGE_GREEK_CYPRUS), 311},
    {sipName_LANGUAGE_GREEK_GREECE, static_cast<int>(::wxLANGUAGE_GREEK_GREECE), 311},
    {sipName_LANGUAGE_GREENLANDIC, static_cast<int>(::wxLANGUAGE_GREENLANDIC), 311},
    {sipName_LANGUAGE_GUARANI, static_cast<int>(::wxLANGUAGE_GUARANI), 311},
    {sipName_LANGUAGE_GUARANI_PARAGUAY, static_cast<int>(::wxLANGUAGE_GUARANI_PARAGUAY), 311},
    {sipName_LANGUAGE_GUJARATI, static_cast<int>(::wxLANGUAGE_GUJARATI), 311},
    {sipName_LANGUAGE_GUJARATI_INDIA, static_cast<int>(::wxLANGUAGE_GUJARATI_INDIA), 311},
    {sipName_LANGUAGE_GUSII, static_cast<int>(::wxLANGUAGE_GUSII), 311},
    {sipName_LANGUAGE_GUSII_KENYA, static_cast<int>(::wxLANGUAGE_GUSII_KENYA), 311},
    {sipName_LANGUAGE_HAUSA, static_cast<int>(::wxLANGUAGE_HAUSA), 311},
    {sipName_LANGUAGE_HAUSA_LATIN, static_cast<int>(::wxLANGUAGE_HAUSA_LATIN), 311},
    {sipName_LANGUAGE_HAUSA_LATIN_GHANA, static_cast<int>(::wxLANGUAGE_HAUSA_LATIN_GHANA), 311},
    {sipName_LANGUAGE_HAUSA_LATIN_NIGER, static_cast<int>(::wxLANGUAGE_HAUSA_LATIN_NIGER), 311},
    {sipName_LANGUAGE_HAUSA_LATIN_NIGERIA, static_cast<int>(::wxLANGUAGE_HAUSA_LATIN_NIGERIA), 311},
    {sipName_LANGUAGE_HAWAIIAN, static_cast<int>(::wxLANGUAGE_HAWAIIAN), 311},
    {sipName_LANGUAGE_HAWAIIAN_US, static_cast<int>(::wxLANGUAGE_HAWAIIAN_US), 311},
    {sipName_LANGUAGE_HEBREW, static_cast<int>(::wxLANGUAGE_HEBREW), 311},
    {sipName_LANGUAGE_HEBREW_ISRAEL, static_cast<int>(::wxLANGUAGE_HEBREW_ISRAEL), 311},
    {sipName_LANGUAGE_HINDI, static_cast<int>(::wxLANGUAGE_HINDI), 311},
    {sipName_LANGUAGE_HINDI_INDIA, static_cast<int>(::wxLANGUAGE_HINDI_INDIA), 311},
    {sipName_LANGUAGE_HUNGARIAN, static_cast<int>(::wxLANGUAGE_HUNGARIAN), 311},
    {sipName_LANGUAGE_HUNGARIAN_HUNGARY, static_cast<int>(::wxLANGUAGE_HUNGARIAN_HUNGARY), 311},
    {sipName_LANGUAGE_IBIBIO, static_cast<int>(::wxLANGUAGE_IBIBIO), 311},
    {sipName_LANGUAGE_IBIBIO_NIGERIA, static_cast<int>(::wxLANGUAGE_IBIBIO_NIGERIA), 311},
    {sipName_LANGUAGE_ICELANDIC, static_cast<int>(::wxLANGUAGE_ICELANDIC), 311},
    {sipName_LANGUAGE_ICELANDIC_ICELAND, static_cast<int>(::wxLANGUAGE_ICELANDIC_ICELAND), 311},
    {sipName_LANGUAGE_IGBO, static_cast<int>(::wxLANGUAGE_IGBO), 311},
    {sipName_LANGUAGE_IGBO_NIGERIA, static_cast<int>(::wxLANGUAGE_IGBO_NIGERIA), 311},
    {sipName_LANGUAGE_INDONESIAN, static_cast<int>(::wxLANGUAGE_INDONESIAN), 311},
    {sipName_LANGUAGE_INDONESIAN_INDONESIA, static_cast<int>(::wxLANGUAGE_INDONESIAN_INDONESIA), 311},
    {sipName_LANGUAGE_INTERLINGUA, static_cast<int>(::wxLANGUAGE_INTERLINGUA), 311},
    {sipName_LANGUAGE_INTERLINGUA_WORLD, static_cast<int>(::wxLANGUAGE_INTERLINGUA_WORLD), 311},
    {sipName_LANGUAGE_INTERLINGUE, static_cast<int>(::wxLANGUAGE_INTERLINGUE), 311},
    {sipName_LANGUAGE_INUKTITUT, static_cast<int>(::wxLANGUAGE_INUKTITUT), 311},
    {sipName_LANGUAGE_INUKTITUT_LATIN, static_cast<int>(::wxLANGUAGE_INUKTITUT_LATIN), 311},
    {sipName_LANGUAGE_INUKTITUT_LATIN_CANADA, static_cast<int>(::wxLANGUAGE_INUKTITUT_LATIN_CANADA), 311},
    {sipName_LANGUAGE_INUKTITUT_SYLLABICS, static_cast<int>(::wxLANGUAGE_INUKTITUT_SYLLABICS), 311},
    {sipName_LANGUAGE_INUKTITUT_SYLLABICS_CANADA, static_cast<int>(::wxLANGUAGE_INUKTITUT_SYLLABICS_CANADA), 311},
    {sipName_LANGUAGE_INUPIAK, static_cast<int>(::wxLANGUAGE_INUPIAK), 311},
    {sipName_LANGUAGE_IRISH, static_cast<int>(::wxLANGUAGE_IRISH), 311},
    {sipName_LANGUAGE_IRISH_IRELAND, static_cast<int>(::wxLANGUAGE_IRISH_IRELAND), 311},
    {sipName_LANGUAGE_ITALIAN, static_cast<int>(::wxLANGUAGE_ITALIAN), 311},
    {sipName_LANGUAGE_ITALIAN_ITALY, static_cast<int>(::wxLANGUAGE_ITALIAN_ITALY), 311},
    {sipName_LANGUAGE_ITALIAN_SAN_MARINO, static_cast<int>(::wxLANGUAGE_ITALIAN_SAN_MARINO), 311},
    {sipName_LANGUAGE_ITALIAN_SWISS, static_cast<int>(::wxLANGUAGE_ITALIAN_SWISS), 311},
    {sipName_LANGUAGE_ITALIAN_VATICAN_CITY, static_cast<int>(::wxLANGUAGE_ITALIAN_VATICAN_CITY), 311},
    {sipName_LANGUAGE_JAPANESE, static_cast<int>(::wxLANGUAGE_JAPANESE), 311},
    {sipName_LANGUAGE_JAPANESE_JAPAN, static_cast<int>(::wxLANGUAGE_JAPANESE_JAPAN), 311},
    {sipName_LANGUAGE_JAVANESE, static_cast<int>(::wxLANGUAGE_JAVANESE), 311},
    {sipName_LANGUAGE_JAVANESE_INDONESIA, static_cast<int>(::wxLANGUAGE_JAVANESE_INDONESIA), 311},
    {sipName_LANGUAGE_JAVANESE_JAVANESE, static_cast<int>(::wxLANGUAGE_JAVANESE_JAVANESE), 311},
    {sipName_LANGUAGE_JAVANESE_JAVANESE_INDONESIA, static_cast<int>(::wxLANGUAGE_JAVANESE_JAVANESE_INDONESIA), 311},
    {sipName_LANGUAGE_JOLA_FONYI, static_cast<int>(::wxLANGUAGE_JOLA_FONYI), 311},
    {sipName_LANGUAGE_JOLA_FONYI_SENEGAL, static_cast<int>(::wxLANGUAGE_JOLA_FONYI_SENEGAL), 311},
    {sipName_LANGUAGE_KABUVERDIANU, static_cast<int>(::wxLANGUAGE_KABUVERDIANU), 311},
    {sipName_LANGUAGE_KABUVERDIANU_CABO_VERDE, static_cast<int>(::wxLANGUAGE_KABUVERDIANU_CABO_VERDE), 311},
    {sipName_LANGUAGE_KABYLE, static_cast<int>(::wxLANGUAGE_KABYLE), 311},
    {sipName_LANGUAGE_KABYLE_ALGERIA, static_cast<int>(::wxLANGUAGE_KABYLE_ALGERIA), 311},
    {sipName_LANGUAGE_KAKO, static_cast<int>(::wxLANGUAGE_KAKO), 311},
    {sipName_LANGUAGE_KAKO_CAMEROON, static_cast<int>(::wxLANGUAGE_KAKO_CAMEROON), 311},
    {sipName_LANGUAGE_KALAALLISUT, static_cast<int>(::wxLANGUAGE_KALAALLISUT), 311},
    {sipName_LANGUAGE_KALENJIN, static_cast<int>(::wxLANGUAGE_KALENJIN), 311},
    {sipName_LANGUAGE_KALENJIN_KENYA, static_cast<int>(::wxLANGUAGE_KALENJIN_KENYA), 311},
    {sipName_LANGUAGE_KAMBA, static_cast<int>(::wxLANGUAGE_KAMBA), 311},
    {sipName_LANGUAGE_KAMBA_KENYA, static_cast<int>(::wxLANGUAGE_KAMBA_KENYA), 311},
    {sipName_LANGUAGE_KANNADA, static_cast<int>(::wxLANGUAGE_KANNADA), 311},
    {sipName_LANGUAGE_KANNADA_INDIA, static_cast<int>(::wxLANGUAGE_KANNADA_INDIA), 311},
    {sipName_LANGUAGE_KANURI, static_cast<int>(::wxLANGUAGE_KANURI), 311},
    {sipName_LANGUAGE_KANURI_LATIN, static_cast<int>(::wxLANGUAGE_KANURI_LATIN), 311},
    {sipName_LANGUAGE_KANURI_NIGERIA, static_cast<int>(::wxLANGUAGE_KANURI_NIGERIA), 311},
    {sipName_LANGUAGE_KASHMIRI, static_cast<int>(::wxLANGUAGE_KASHMIRI), 311},
    {sipName_LANGUAGE_KASHMIRI_DEVANAGARI, static_cast<int>(::wxLANGUAGE_KASHMIRI_DEVANAGARI), 311},
    {sipName_LANGUAGE_KASHMIRI_DEVANAGARI_INDIA, static_cast<int>(::wxLANGUAGE_KASHMIRI_DEVANAGARI_INDIA), 311},
    {sipName_LANGUAGE_KASHMIRI_INDIA, static_cast<int>(::wxLANGUAGE_KASHMIRI_INDIA), 311},
    {sipName_LANGUAGE_KASHMIRI_PERSO_ARABIC, static_cast<int>(::wxLANGUAGE_KASHMIRI_PERSO_ARABIC), 311},
    {sipName_LANGUAGE_KASHMIRI_PERSO_ARABIC_INDIA, static_cast<int>(::wxLANGUAGE_KASHMIRI_PERSO_ARABIC_INDIA), 311},
    {sipName_LANGUAGE_KAZAKH, static_cast<int>(::wxLANGUAGE_KAZAKH), 311},
    {sipName_LANGUAGE_KAZAKH_KAZAKHSTAN, static_cast<int>(::wxLANGUAGE_KAZAKH_KAZAKHSTAN), 311},
    {sipName_LANGUAGE_KERNEWEK, static_cast<int>(::wxLANGUAGE_KERNEWEK), 311},
    {sipName_LANGUAGE_KHMER, static_cast<int>(::wxLANGUAGE_KHMER), 311},
    {sipName_LANGUAGE_KHMER_CAMBODIA, static_cast<int>(::wxLANGUAGE_KHMER_CAMBODIA), 311},
    {sipName_LANGUAGE_KICHE, static_cast<int>(::wxLANGUAGE_KICHE), 311},
    {sipName_LANGUAGE_KICHE_GUATEMALA, static_cast<int>(::wxLANGUAGE_KICHE_GUATEMALA), 311},
    {sipName_LANGUAGE_KICHE_LATIN, static_cast<int>(::wxLANGUAGE_KICHE_LATIN), 311},
    {sipName_LANGUAGE_KIKUYU, static_cast<int>(::wxLANGUAGE_KIKUYU), 311},
    {sipName_LANGUAGE_KIKUYU_KENYA, static_cast<int>(::wxLANGUAGE_KIKUYU_KENYA), 311},
    {sipName_LANGUAGE_KINYARWANDA, static_cast<int>(::wxLANGUAGE_KINYARWANDA), 311},
    {sipName_LANGUAGE_KINYARWANDA_RWANDA, static_cast<int>(::wxLANGUAGE_KINYARWANDA_RWANDA), 311},
    {sipName_LANGUAGE_KIRGHIZ, static_cast<int>(::wxLANGUAGE_KIRGHIZ), 311},
    {sipName_LANGUAGE_KIRGHIZ_KYRGYZSTAN, static_cast<int>(::wxLANGUAGE_KIRGHIZ_KYRGYZSTAN), 311},
    {sipName_LANGUAGE_KIRUNDI, static_cast<int>(::wxLANGUAGE_KIRUNDI), 311},
    {sipName_LANGUAGE_KIRUNDI_BURUNDI, static_cast<int>(::wxLANGUAGE_KIRUNDI_BURUNDI), 311},
    {sipName_LANGUAGE_KONKANI, static_cast<int>(::wxLANGUAGE_KONKANI), 311},
    {sipName_LANGUAGE_KONKANI_INDIA, static_cast<int>(::wxLANGUAGE_KONKANI_INDIA), 311},
    {sipName_LANGUAGE_KOREAN, static_cast<int>(::wxLANGUAGE_KOREAN), 311},
    {sipName_LANGUAGE_KOREAN_KOREA, static_cast<int>(::wxLANGUAGE_KOREAN_KOREA), 311},
    {sipName_LANGUAGE_KOREAN_NORTH_KOREA, static_cast<int>(::wxLANGUAGE_KOREAN_NORTH_KOREA), 311},
    {sipName_LANGUAGE_KOYRABORO_SENNI, static_cast<int>(::wxLANGUAGE_KOYRABORO_SENNI), 311},
    {sipName_LANGUAGE_KOYRABORO_SENNI_MALI, static_cast<int>(::wxLANGUAGE_KOYRABORO_SENNI_MALI), 311},
    {sipName_LANGUAGE_KOYRA_CHIINI, static_cast<int>(::wxLANGUAGE_KOYRA_CHIINI), 311},
    {sipName_LANGUAGE_KOYRA_CHIINI_MALI, static_cast<int>(::wxLANGUAGE_KOYRA_CHIINI_MALI), 311},
    {sipName_LANGUAGE_KURDISH, static_cast<int>(::wxLANGUAGE_KURDISH), 311},
    {sipName_LANGUAGE_KURDISH_PERSO_ARABIC_IRAN, static_cast<int>(::wxLANGUAGE_KURDISH_PERSO_ARABIC_IRAN), 311},
    {sipName_LANGUAGE_KWASIO, static_cast<int>(::wxLANGUAGE_KWASIO), 311},
    {sipName_LANGUAGE_KWASIO_CAMEROON, static_cast<int>(::wxLANGUAGE_KWASIO_CAMEROON), 311},
    {sipName_LANGUAGE_LAKOTA, static_cast<int>(::wxLANGUAGE_LAKOTA), 311},
    {sipName_LANGUAGE_LAKOTA_US, static_cast<int>(::wxLANGUAGE_LAKOTA_US), 311},
    {sipName_LANGUAGE_LANGI, static_cast<int>(::wxLANGUAGE_LANGI), 311},
    {sipName_LANGUAGE_LANGI_TANZANIA, static_cast<int>(::wxLANGUAGE_LANGI_TANZANIA), 311},
    {sipName_LANGUAGE_LAOTHIAN, static_cast<int>(::wxLANGUAGE_LAOTHIAN), 311},
    {sipName_LANGUAGE_LAOTHIAN_LAOS, static_cast<int>(::wxLANGUAGE_LAOTHIAN_LAOS), 311},
    {sipName_LANGUAGE_LATIN, static_cast<int>(::wxLANGUAGE_LATIN), 311},
    {sipName_LANGUAGE_LATIN_WORLD, static_cast<int>(::wxLANGUAGE_LATIN_WORLD), 311},
    {sipName_LANGUAGE_LATVIAN, static_cast<int>(::wxLANGUAGE_LATVIAN), 311},
    {sipName_LANGUAGE_LATVIAN_LATVIA, static_cast<int>(::wxLANGUAGE_LATVIAN_LATVIA), 311},
    {sipName_LANGUAGE_LINGALA, static_cast<int>(::wxLANGUAGE_LINGALA), 311},
    {sipName_LANGUAGE_LINGALA_ANGOLA, static_cast<int>(::wxLANGUAGE_LINGALA_ANGOLA), 311},
    {sipName_LANGUAGE_LINGALA_CENTRAL_AFRICAN_REPUBLIC, static_cast<int>(::wxLANGUAGE_LINGALA_CENTRAL_AFRICAN_REPUBLIC), 311},
    {sipName_LANGUAGE_LINGALA_CONGO, static_cast<int>(::wxLANGUAGE_LINGALA_CONGO), 311},
    {sipName_LANGUAGE_LINGALA_CONGO_DRC, static_cast<int>(::wxLANGUAGE_LINGALA_CONGO_DRC), 311},
    {sipName_LANGUAGE_LITHUANIAN, static_cast<int>(::wxLANGUAGE_LITHUANIAN), 311},
    {sipName_LANGUAGE_LITHUANIAN_LITHUANIA, static_cast<int>(::wxLANGUAGE_LITHUANIAN_LITHUANIA), 311},
    {sipName_LANGUAGE_LOWER_SORBIAN, static_cast<int>(::wxLANGUAGE_LOWER_SORBIAN), 311},
    {sipName_LANGUAGE_LOWER_SORBIAN_GERMANY, static_cast<int>(::wxLANGUAGE_LOWER_SORBIAN_GERMANY), 311},
    {sipName_LANGUAGE_LOW_GERMAN, static_cast<int>(::wxLANGUAGE_LOW_GERMAN), 311},
    {sipName_LANGUAGE_LOW_GERMAN_GERMANY, static_cast<int>(::wxLANGUAGE_LOW_GERMAN_GERMANY), 311},
    {sipName_LANGUAGE_LOW_GERMAN_NETHERLANDS, static_cast<int>(::wxLANGUAGE_LOW_GERMAN_NETHERLANDS), 311},
    {sipName_LANGUAGE_LUBA_KATANGA, static_cast<int>(::wxLANGUAGE_LUBA_KATANGA), 311},
    {sipName_LANGUAGE_LUBA_KATANGA_CONGO_DRC, static_cast<int>(::wxLANGUAGE_LUBA_KATANGA_CONGO_DRC), 311},
    {sipName_LANGUAGE_LUO, static_cast<int>(::wxLANGUAGE_LUO), 311},
    {sipName_LANGUAGE_LUO_KENYA, static_cast<int>(::wxLANGUAGE_LUO_KENYA), 311},
    {sipName_LANGUAGE_LUXEMBOURGISH, static_cast<int>(::wxLANGUAGE_LUXEMBOURGISH), 311},
    {sipName_LANGUAGE_LUXEMBOURGISH_LUXEMBOURG, static_cast<int>(::wxLANGUAGE_LUXEMBOURGISH_LUXEMBOURG), 311},
    {sipName_LANGUAGE_LUYIA, static_cast<int>(::wxLANGUAGE_LUYIA), 311},
    {sipName_LANGUAGE_LUYIA_KENYA, static_cast<int>(::wxLANGUAGE_LUYIA_KENYA), 311},
    {sipName_LANGUAGE_MACEDONIAN, static_cast<int>(::wxLANGUAGE_MACEDONIAN), 311},
    {sipName_LANGUAGE_MACEDONIAN_NORTH_MACEDONIA, static_cast<int>(::wxLANGUAGE_MACEDONIAN_NORTH_MACEDONIA), 311},
    {sipName_LANGUAGE_MACHAME, static_cast<int>(::wxLANGUAGE_MACHAME), 311},
    {sipName_LANGUAGE_MACHAME_TANZANIA, static_cast<int>(::wxLANGUAGE_MACHAME_TANZANIA), 311},
    {sipName_LANGUAGE_MAKHUWA_MEETTO, static_cast<int>(::wxLANGUAGE_MAKHUWA_MEETTO), 311},
    {sipName_LANGUAGE_MAKHUWA_MEETTO_MOZAMBIQUE, static_cast<int>(::wxLANGUAGE_MAKHUWA_MEETTO_MOZAMBIQUE), 311},
    {sipName_LANGUAGE_MAKONDE, static_cast<int>(::wxLANGUAGE_MAKONDE), 311},
    {sipName_LANGUAGE_MAKONDE_TANZANIA, static_cast<int>(::wxLANGUAGE_MAKONDE_TANZANIA), 311},
    {sipName_LANGUAGE_MALAGASY, static_cast<int>(::wxLANGUAGE_MALAGASY), 311},
    {sipName_LANGUAGE_MALAGASY_MADAGASCAR, static_cast<int>(::wxLANGUAGE_MALAGASY_MADAGASCAR), 311},
    {sipName_LANGUAGE_MALAY, static_cast<int>(::wxLANGUAGE_MALAY), 311},
    {sipName_LANGUAGE_MALAYALAM, static_cast<int>(::wxLANGUAGE_MALAYALAM), 311},
    {sipName_LANGUAGE_MALAYALAM_INDIA, static_cast<int>(::wxLANGUAGE_MALAYALAM_INDIA), 311},
    {sipName_LANGUAGE_MALAY_BRUNEI, static_cast<int>(::wxLANGUAGE_MALAY_BRUNEI), 311},
    {sipName_LANGUAGE_MALAY_BRUNEI_DARUSSALAM, static_cast<int>(::wxLANGUAGE_MALAY_BRUNEI_DARUSSALAM), 311},
    {sipName_LANGUAGE_MALAY_MALAYSIA, static_cast<int>(::wxLANGUAGE_MALAY_MALAYSIA), 311},
    {sipName_LANGUAGE_MALAY_SINGAPORE, static_cast<int>(::wxLANGUAGE_MALAY_SINGAPORE), 311},
    {sipName_LANGUAGE_MALTESE, static_cast<int>(::wxLANGUAGE_MALTESE), 311},
    {sipName_LANGUAGE_MALTESE_MALTA, static_cast<int>(::wxLANGUAGE_MALTESE_MALTA), 311},
    {sipName_LANGUAGE_MANIPURI, static_cast<int>(::wxLANGUAGE_MANIPURI), 311},
    {sipName_LANGUAGE_MANIPURI_INDIA, static_cast<int>(::wxLANGUAGE_MANIPURI_INDIA), 311},
    {sipName_LANGUAGE_MANX, static_cast<int>(::wxLANGUAGE_MANX), 311},
    {sipName_LANGUAGE_MANX_ISLE_OF_MAN, static_cast<int>(::wxLANGUAGE_MANX_ISLE_OF_MAN), 311},
    {sipName_LANGUAGE_MAORI, static_cast<int>(::wxLANGUAGE_MAORI), 311},
    {sipName_LANGUAGE_MAORI_NEW_ZEALAND, static_cast<int>(::wxLANGUAGE_MAORI_NEW_ZEALAND), 311},
    {sipName_LANGUAGE_MAPUCHE, static_cast<int>(::wxLANGUAGE_MAPUCHE), 311},
    {sipName_LANGUAGE_MAPUCHE_CHILE, static_cast<int>(::wxLANGUAGE_MAPUCHE_CHILE), 311},
    {sipName_LANGUAGE_MARATHI, static_cast<int>(::wxLANGUAGE_MARATHI), 311},
    {sipName_LANGUAGE_MARATHI_INDIA, static_cast<int>(::wxLANGUAGE_MARATHI_INDIA), 311},
    {sipName_LANGUAGE_MASAI, static_cast<int>(::wxLANGUAGE_MASAI), 311},
    {sipName_LANGUAGE_MASAI_KENYA, static_cast<int>(::wxLANGUAGE_MASAI_KENYA), 311},
    {sipName_LANGUAGE_MASAI_TANZANIA, static_cast<int>(::wxLANGUAGE_MASAI_TANZANIA), 311},
    {sipName_LANGUAGE_MAZANDERANI, static_cast<int>(::wxLANGUAGE_MAZANDERANI), 311},
    {sipName_LANGUAGE_MAZANDERANI_IRAN, static_cast<int>(::wxLANGUAGE_MAZANDERANI_IRAN), 311},
    {sipName_LANGUAGE_MERU, static_cast<int>(::wxLANGUAGE_MERU), 311},
    {sipName_LANGUAGE_MERU_KENYA, static_cast<int>(::wxLANGUAGE_MERU_KENYA), 311},
    {sipName_LANGUAGE_META, static_cast<int>(::wxLANGUAGE_META), 311},
    {sipName_LANGUAGE_META_CAMEROON, static_cast<int>(::wxLANGUAGE_META_CAMEROON), 311},
    {sipName_LANGUAGE_MOHAWK, static_cast<int>(::wxLANGUAGE_MOHAWK), 311},
    {sipName_LANGUAGE_MOHAWK_CANADA, static_cast<int>(::wxLANGUAGE_MOHAWK_CANADA), 311},
    {sipName_LANGUAGE_MOLDAVIAN, static_cast<int>(::wxLANGUAGE_MOLDAVIAN), 311},
    {sipName_LANGUAGE_MONGOLIAN, static_cast<int>(::wxLANGUAGE_MONGOLIAN), 311},
    {sipName_LANGUAGE_MONGOLIAN_CYRILLIC, static_cast<int>(::wxLANGUAGE_MONGOLIAN_CYRILLIC), 311},
    {sipName_LANGUAGE_MONGOLIAN_MONGOLIA, static_cast<int>(::wxLANGUAGE_MONGOLIAN_MONGOLIA), 311},
    {sipName_LANGUAGE_MONGOLIAN_TRADITIONAL, static_cast<int>(::wxLANGUAGE_MONGOLIAN_TRADITIONAL), 311},
    {sipName_LANGUAGE_MONGOLIAN_TRADITIONAL_CHINA, static_cast<int>(::wxLANGUAGE_MONGOLIAN_TRADITIONAL_CHINA), 311},
    {sipName_LANGUAGE_MONGOLIAN_TRADITIONAL_MONGOLIA, static_cast<int>(::wxLANGUAGE_MONGOLIAN_TRADITIONAL_MONGOLIA), 311},
    {sipName_LANGUAGE_MORISYEN, static_cast<int>(::wxLANGUAGE_MORISYEN), 311},
    {sipName_LANGUAGE_MORISYEN_MAURITIUS, static_cast<int>(::wxLANGUAGE_MORISYEN_MAURITIUS), 311},
    {sipName_LANGUAGE_MUNDANG, static_cast<int>(::wxLANGUAGE_MUNDANG), 311},
    {sipName_LANGUAGE_MUNDANG_CAMEROON, static_cast<int>(::wxLANGUAGE_MUNDANG_CAMEROON), 311},
    {sipName_LANGUAGE_NAMA, static_cast<int>(::wxLANGUAGE_NAMA), 311},
    {sipName_LANGUAGE_NAMA_NAMIBIA, static_cast<int>(::wxLANGUAGE_NAMA_NAMIBIA), 311},
    {sipName_LANGUAGE_NAURU, static_cast<int>(::wxLANGUAGE_NAURU), 311},
    {sipName_LANGUAGE_NEPALI, static_cast<int>(::wxLANGUAGE_NEPALI), 311},
    {sipName_LANGUAGE_NEPALI_INDIA, static_cast<int>(::wxLANGUAGE_NEPALI_INDIA), 311},
    {sipName_LANGUAGE_NEPALI_NEPAL, static_cast<int>(::wxLANGUAGE_NEPALI_NEPAL), 311},
    {sipName_LANGUAGE_NGIEMBOON, static_cast<int>(::wxLANGUAGE_NGIEMBOON), 311},
    {sipName_LANGUAGE_NGIEMBOON_CAMEROON, static_cast<int>(::wxLANGUAGE_NGIEMBOON_CAMEROON), 311},
    {sipName_LANGUAGE_NGOMBA, static_cast<int>(::wxLANGUAGE_NGOMBA), 311},
    {sipName_LANGUAGE_NGOMBA_CAMEROON, static_cast<int>(::wxLANGUAGE_NGOMBA_CAMEROON), 311},
    {sipName_LANGUAGE_NKO, static_cast<int>(::wxLANGUAGE_NKO), 311},
    {sipName_LANGUAGE_NKO_GUINEA, static_cast<int>(::wxLANGUAGE_NKO_GUINEA), 311},
    {sipName_LANGUAGE_NORTHERN_LURI, static_cast<int>(::wxLANGUAGE_NORTHERN_LURI), 311},
    {sipName_LANGUAGE_NORTHERN_LURI_IRAN, static_cast<int>(::wxLANGUAGE_NORTHERN_LURI_IRAN), 311},
    {sipName_LANGUAGE_NORTHERN_LURI_IRAQ, static_cast<int>(::wxLANGUAGE_NORTHERN_LURI_IRAQ), 311},
    {sipName_LANGUAGE_NORTH_NDEBELE, static_cast<int>(::wxLANGUAGE_NORTH_NDEBELE), 311},
    {sipName_LANGUAGE_NORTH_NDEBELE_ZIMBABWE, static_cast<int>(::wxLANGUAGE_NORTH_NDEBELE_ZIMBABWE), 311},
    {sipName_LANGUAGE_NORWEGIAN, static_cast<int>(::wxLANGUAGE_NORWEGIAN), 311},
    {sipName_LANGUAGE_NORWEGIAN_BOKMAL, static_cast<int>(::wxLANGUAGE_NORWEGIAN_BOKMAL), 311},
    {sipName_LANGUAGE_NORWEGIAN_BOKMAL_NORWAY, static_cast<int>(::wxLANGUAGE_NORWEGIAN_BOKMAL_NORWAY), 311},
    {sipName_LANGUAGE_NORWEGIAN_BOKMAL_SVALBARD_AND_JAN_MAYEN, static_cast<int>(::wxLANGUAGE_NORWEGIAN_BOKMAL_SVALBARD_AND_JAN_MAYEN), 311},
    {sipName_LANGUAGE_NORWEGIAN_NYNORSK, static_cast<int>(::wxLANGUAGE_NORWEGIAN_NYNORSK), 311},
    {sipName_LANGUAGE_NORWEGIAN_NYNORSK_NORWAY, static_cast<int>(::wxLANGUAGE_NORWEGIAN_NYNORSK_NORWAY), 311},
    {sipName_LANGUAGE_NUER, static_cast<int>(::wxLANGUAGE_NUER), 311},
    {sipName_LANGUAGE_NUER_SOUTH_SUDAN, static_cast<int>(::wxLANGUAGE_NUER_SOUTH_SUDAN), 311},
    {sipName_LANGUAGE_NYANKOLE, static_cast<int>(::wxLANGUAGE_NYANKOLE), 311},
    {sipName_LANGUAGE_NYANKOLE_UGANDA, static_cast<int>(::wxLANGUAGE_NYANKOLE_UGANDA), 311},
    {sipName_LANGUAGE_OCCITAN, static_cast<int>(::wxLANGUAGE_OCCITAN), 311},
    {sipName_LANGUAGE_OCCITAN_FRANCE, static_cast<int>(::wxLANGUAGE_OCCITAN_FRANCE), 311},
    {sipName_LANGUAGE_ODIA, static_cast<int>(::wxLANGUAGE_ODIA), 311},
    {sipName_LANGUAGE_ODIA_INDIA, static_cast<int>(::wxLANGUAGE_ODIA_INDIA), 311},
    {sipName_LANGUAGE_ORIYA, static_cast<int>(::wxLANGUAGE_ORIYA), 311},
    {sipName_LANGUAGE_ORIYA_INDIA, static_cast<int>(::wxLANGUAGE_ORIYA_INDIA), 311},
    {sipName_LANGUAGE_OROMO, static_cast<int>(::wxLANGUAGE_OROMO), 311},
    {sipName_LANGUAGE_OROMO_ETHIOPIA, static_cast<int>(::wxLANGUAGE_OROMO_ETHIOPIA), 311},
    {sipName_LANGUAGE_OROMO_KENYA, static_cast<int>(::wxLANGUAGE_OROMO_KENYA), 311},
    {sipName_LANGUAGE_OSSETIC, static_cast<int>(::wxLANGUAGE_OSSETIC), 311},
    {sipName_LANGUAGE_OSSETIC_GEORGIA, static_cast<int>(::wxLANGUAGE_OSSETIC_GEORGIA), 311},
    {sipName_LANGUAGE_OSSETIC_RUSSIA, static_cast<int>(::wxLANGUAGE_OSSETIC_RUSSIA), 311},
    {sipName_LANGUAGE_PAPIAMENTO, static_cast<int>(::wxLANGUAGE_PAPIAMENTO), 311},
    {sipName_LANGUAGE_PAPIAMENTO_CARIBBEAN, static_cast<int>(::wxLANGUAGE_PAPIAMENTO_CARIBBEAN), 311},
    {sipName_LANGUAGE_PASHTO, static_cast<int>(::wxLANGUAGE_PASHTO), 311},
    {sipName_LANGUAGE_PASHTO_AFGHANISTAN, static_cast<int>(::wxLANGUAGE_PASHTO_AFGHANISTAN), 311},
    {sipName_LANGUAGE_PASHTO_PAKISTAN, static_cast<int>(::wxLANGUAGE_PASHTO_PAKISTAN), 311},
    {sipName_LANGUAGE_PERSIAN_IRAN, static_cast<int>(::wxLANGUAGE_PERSIAN_IRAN), 311},
    {sipName_LANGUAGE_POLISH, static_cast<int>(::wxLANGUAGE_POLISH), 311},
    {sipName_LANGUAGE_POLISH_POLAND, static_cast<int>(::wxLANGUAGE_POLISH_POLAND), 311},
    {sipName_LANGUAGE_PORTUGUESE, static_cast<int>(::wxLANGUAGE_PORTUGUESE), 311},
    {sipName_LANGUAGE_PORTUGUESE_ANGOLA, static_cast<int>(::wxLANGUAGE_PORTUGUESE_ANGOLA), 311},
    {sipName_LANGUAGE_PORTUGUESE_BRAZILIAN, static_cast<int>(::wxLANGUAGE_PORTUGUESE_BRAZILIAN), 311},
    {sipName_LANGUAGE_PORTUGUESE_CABO_VERDE, static_cast<int>(::wxLANGUAGE_PORTUGUESE_CABO_VERDE), 311},
    {sipName_LANGUAGE_PORTUGUESE_EQUATORIAL_GUINEA, static_cast<int>(::wxLANGUAGE_PORTUGUESE_EQUATORIAL_GUINEA), 311},
    {sipName_LANGUAGE_PORTUGUESE_GUINEA_BISSAU, static_cast<int>(::wxLANGUAGE_PORTUGUESE_GUINEA_BISSAU), 311},
    {sipName_LANGUAGE_PORTUGUESE_LUXEMBOURG, static_cast<int>(::wxLANGUAGE_PORTUGUESE_LUXEMBOURG), 311},
    {sipName_LANGUAGE_PORTUGUESE_MACAO_SAR, static_cast<int>(::wxLANGUAGE_PORTUGUESE_MACAO_SAR), 311},
    {sipName_LANGUAGE_PORTUGUESE_MOZAMBIQUE, static_cast<int>(::wxLANGUAGE_PORTUGUESE_MOZAMBIQUE), 311},
    {sipName_LANGUAGE_PORTUGUESE_PORTUGAL, static_cast<int>(::wxLANGUAGE_PORTUGUESE_PORTUGAL), 311},
    {sipName_LANGUAGE_PORTUGUESE_SAO_TOME_AND_PRINCIPE, static_cast<int>(::wxLANGUAGE_PORTUGUESE_SAO_TOME_AND_PRINCIPE), 311},
    {sipName_LANGUAGE_PORTUGUESE_SWITZERLAND, static_cast<int>(::wxLANGUAGE_PORTUGUESE_SWITZERLAND), 311},
    {sipName_LANGUAGE_PORTUGUESE_TIMOR_LESTE, static_cast<int>(::wxLANGUAGE_PORTUGUESE_TIMOR_LESTE), 311},
    {sipName_LANGUAGE_PRUSSIAN, static_cast<int>(::wxLANGUAGE_PRUSSIAN), 311},
    {sipName_LANGUAGE_PRUSSIAN_WORLD, static_cast<int>(::wxLANGUAGE_PRUSSIAN_WORLD), 311},
    {sipName_LANGUAGE_PUNJABI, static_cast<int>(::wxLANGUAGE_PUNJABI), 311},
    {sipName_LANGUAGE_PUNJABI_ARABIC, static_cast<int>(::wxLANGUAGE_PUNJABI_ARABIC), 311},
    {sipName_LANGUAGE_PUNJABI_GURMUKHI, static_cast<int>(::wxLANGUAGE_PUNJABI_GURMUKHI), 311},
    {sipName_LANGUAGE_PUNJABI_INDIA, static_cast<int>(::wxLANGUAGE_PUNJABI_INDIA), 311},
    {sipName_LANGUAGE_PUNJABI_PAKISTAN, static_cast<int>(::wxLANGUAGE_PUNJABI_PAKISTAN), 311},
    {sipName_LANGUAGE_QUECHUA, static_cast<int>(::wxLANGUAGE_QUECHUA), 311},
    {sipName_LANGUAGE_QUECHUA_BOLIVIA, static_cast<int>(::wxLANGUAGE_QUECHUA_BOLIVIA), 311},
    {sipName_LANGUAGE_QUECHUA_ECUADOR, static_cast<int>(::wxLANGUAGE_QUECHUA_ECUADOR), 311},
    {sipName_LANGUAGE_QUECHUA_MACRO, static_cast<int>(::wxLANGUAGE_QUECHUA_MACRO), 311},
    {sipName_LANGUAGE_QUECHUA_PERU, static_cast<int>(::wxLANGUAGE_QUECHUA_PERU), 311},
    {sipName_LANGUAGE_RHAETO_ROMANCE, static_cast<int>(::wxLANGUAGE_RHAETO_ROMANCE), 311},
    {sipName_LANGUAGE_RHAETO_ROMANCE_SWITZERLAND, static_cast<int>(::wxLANGUAGE_RHAETO_ROMANCE_SWITZERLAND), 311},
    {sipName_LANGUAGE_ROMANIAN, static_cast<int>(::wxLANGUAGE_ROMANIAN), 311},
    {sipName_LANGUAGE_ROMANIAN_MOLDOVA, static_cast<int>(::wxLANGUAGE_ROMANIAN_MOLDOVA), 311},
    {sipName_LANGUAGE_ROMANIAN_ROMANIA, static_cast<int>(::wxLANGUAGE_ROMANIAN_ROMANIA), 311},
    {sipName_LANGUAGE_ROMBO, static_cast<int>(::wxLANGUAGE_ROMBO), 311},
    {sipName_LANGUAGE_ROMBO_TANZANIA, static_cast<int>(::wxLANGUAGE_ROMBO_TANZANIA), 311},
    {sipName_LANGUAGE_RUSSIAN, static_cast<int>(::wxLANGUAGE_RUSSIAN), 311},
    {sipName_LANGUAGE_RUSSIAN_BELARUS, static_cast<int>(::wxLANGUAGE_RUSSIAN_BELARUS), 311},
    {sipName_LANGUAGE_RUSSIAN_KAZAKHSTAN, static_cast<int>(::wxLANGUAGE_RUSSIAN_KAZAKHSTAN), 311},
    {sipName_LANGUAGE_RUSSIAN_KYRGYZSTAN, static_cast<int>(::wxLANGUAGE_RUSSIAN_KYRGYZSTAN), 311},
    {sipName_LANGUAGE_RUSSIAN_MOLDOVA, static_cast<int>(::wxLANGUAGE_RUSSIAN_MOLDOVA), 311},
    {sipName_LANGUAGE_RUSSIAN_RUSSIA, static_cast<int>(::wxLANGUAGE_RUSSIAN_RUSSIA), 311},
    {sipName_LANGUAGE_RUSSIAN_UKRAINE, static_cast<int>(::wxLANGUAGE_RUSSIAN_UKRAINE), 311},
    {sipName_LANGUAGE_RWA, static_cast<int>(::wxLANGUAGE_RWA), 311},
    {sipName_LANGUAGE_RWA_TANZANIA, static_cast<int>(::wxLANGUAGE_RWA_TANZANIA), 311},
    {sipName_LANGUAGE_SAHO, static_cast<int>(::wxLANGUAGE_SAHO), 311},
    {sipName_LANGUAGE_SAHO_ERITREA, static_cast<int>(::wxLANGUAGE_SAHO_ERITREA), 311},
    {sipName_LANGUAGE_SAKHA, static_cast<int>(::wxLANGUAGE_SAKHA), 311},
    {sipName_LANGUAGE_SAKHA_RUSSIA, static_cast<int>(::wxLANGUAGE_SAKHA_RUSSIA), 311},
    {sipName_LANGUAGE_SAMBURU, static_cast<int>(::wxLANGUAGE_SAMBURU), 311},
    {sipName_LANGUAGE_SAMBURU_KENYA, static_cast<int>(::wxLANGUAGE_SAMBURU_KENYA), 311},
    {sipName_LANGUAGE_SAMI, static_cast<int>(::wxLANGUAGE_SAMI), 311},
    {sipName_LANGUAGE_SAMI_FINLAND, static_cast<int>(::wxLANGUAGE_SAMI_FINLAND), 311},
    {sipName_LANGUAGE_SAMI_INARI, static_cast<int>(::wxLANGUAGE_SAMI_INARI), 311},
    {sipName_LANGUAGE_SAMI_INARI_FINLAND, static_cast<int>(::wxLANGUAGE_SAMI_INARI_FINLAND), 311},
    {sipName_LANGUAGE_SAMI_LULE, static_cast<int>(::wxLANGUAGE_SAMI_LULE), 311},
    {sipName_LANGUAGE_SAMI_LULE_NORWAY, static_cast<int>(::wxLANGUAGE_SAMI_LULE_NORWAY), 311},
    {sipName_LANGUAGE_SAMI_LULE_SWEDEN, static_cast<int>(::wxLANGUAGE_SAMI_LULE_SWEDEN), 311},
    {sipName_LANGUAGE_SAMI_NORWAY, static_cast<int>(::wxLANGUAGE_SAMI_NORWAY), 311},
    {sipName_LANGUAGE_SAMI_SKOLT, static_cast<int>(::wxLANGUAGE_SAMI_SKOLT), 311},
    {sipName_LANGUAGE_SAMI_SKOLT_FINLAND, static_cast<int>(::wxLANGUAGE_SAMI_SKOLT_FINLAND), 311},
    {sipName_LANGUAGE_SAMI_SOUTHERN, static_cast<int>(::wxLANGUAGE_SAMI_SOUTHERN), 311},
    {sipName_LANGUAGE_SAMI_SOUTHERN_NORWAY, static_cast<int>(::wxLANGUAGE_SAMI_SOUTHERN_NORWAY), 311},
    {sipName_LANGUAGE_SAMI_SOUTHERN_SWEDEN, static_cast<int>(::wxLANGUAGE_SAMI_SOUTHERN_SWEDEN), 311},
    {sipName_LANGUAGE_SAMI_SWEDEN, static_cast<int>(::wxLANGUAGE_SAMI_SWEDEN), 311},
    {sipName_LANGUAGE_SAMOAN, static_cast<int>(::wxLANGUAGE_SAMOAN), 311},
    {sipName_LANGUAGE_SANGHO, static_cast<int>(::wxLANGUAGE_SANGHO), 311},
    {sipName_LANGUAGE_SANGHO_CENTRAL_AFRICAN_REPUBLIC, static_cast<int>(::wxLANGUAGE_SANGHO_CENTRAL_AFRICAN_REPUBLIC), 311},
    {sipName_LANGUAGE_SANGU, static_cast<int>(::wxLANGUAGE_SANGU), 311},
    {sipName_LANGUAGE_SANGU_TANZANIA, static_cast<int>(::wxLANGUAGE_SANGU_TANZANIA), 311},
    {sipName_LANGUAGE_SANSKRIT, static_cast<int>(::wxLANGUAGE_SANSKRIT), 311},
    {sipName_LANGUAGE_SANSKRIT_INDIA, static_cast<int>(::wxLANGUAGE_SANSKRIT_INDIA), 311},
    {sipName_LANGUAGE_SCOTS_GAELIC, static_cast<int>(::wxLANGUAGE_SCOTS_GAELIC), 311},
    {sipName_LANGUAGE_SCOTS_GAELIC_UK, static_cast<int>(::wxLANGUAGE_SCOTS_GAELIC_UK), 311},
    {sipName_LANGUAGE_SENA, static_cast<int>(::wxLANGUAGE_SENA), 311},
    {sipName_LANGUAGE_SENA_MOZAMBIQUE, static_cast<int>(::wxLANGUAGE_SENA_MOZAMBIQUE), 311},
    {sipName_LANGUAGE_SERBIAN, static_cast<int>(::wxLANGUAGE_SERBIAN), 311},
    {sipName_LANGUAGE_SERBIAN_CYRILLIC, static_cast<int>(::wxLANGUAGE_SERBIAN_CYRILLIC), 311},
    {sipName_LANGUAGE_SERBIAN_CYRILLIC_BOSNIA_AND_HERZEGOVINA, static_cast<int>(::wxLANGUAGE_SERBIAN_CYRILLIC_BOSNIA_AND_HERZEGOVINA), 311},
    {sipName_LANGUAGE_SERBIAN_CYRILLIC_KOSOVO, static_cast<int>(::wxLANGUAGE_SERBIAN_CYRILLIC_KOSOVO), 311},
    {sipName_LANGUAGE_SERBIAN_CYRILLIC_MONTENEGRO, static_cast<int>(::wxLANGUAGE_SERBIAN_CYRILLIC_MONTENEGRO), 311},
    {sipName_LANGUAGE_SERBIAN_CYRILLIC_SERBIA, static_cast<int>(::wxLANGUAGE_SERBIAN_CYRILLIC_SERBIA), 311},
    {sipName_LANGUAGE_SERBIAN_CYRILLIC_YU, static_cast<int>(::wxLANGUAGE_SERBIAN_CYRILLIC_YU), 311},
    {sipName_LANGUAGE_SERBIAN_LATIN, static_cast<int>(::wxLANGUAGE_SERBIAN_LATIN), 311},
    {sipName_LANGUAGE_SERBIAN_LATIN_BOSNIA_AND_HERZEGOVINA, static_cast<int>(::wxLANGUAGE_SERBIAN_LATIN_BOSNIA_AND_HERZEGOVINA), 311},
    {sipName_LANGUAGE_SERBIAN_LATIN_KOSOVO, static_cast<int>(::wxLANGUAGE_SERBIAN_LATIN_KOSOVO), 311},
    {sipName_LANGUAGE_SERBIAN_LATIN_MONTENEGRO, static_cast<int>(::wxLANGUAGE_SERBIAN_LATIN_MONTENEGRO), 311},
    {sipName_LANGUAGE_SERBIAN_LATIN_SERBIA, static_cast<int>(::wxLANGUAGE_SERBIAN_LATIN_SERBIA), 311},
    {sipName_LANGUAGE_SERBIAN_LATIN_YU, static_cast<int>(::wxLANGUAGE_SERBIAN_LATIN_YU), 311},
    {sipName_LANGUAGE_SERBIAN_SERBIA, static_cast<int>(::wxLANGUAGE_SERBIAN_SERBIA), 311},
    {sipName_LANGUAGE_SERBIAN_YU, static_cast<int>(::wxLANGUAGE_SERBIAN_YU), 311},
    {sipName_LANGUAGE_SERBO_CROATIAN, static_cast<int>(::wxLANGUAGE_SERBO_CROATIAN), 311},
    {sipName_LANGUAGE_SESOTHO, static_cast<int>(::wxLANGUAGE_SESOTHO), 311},
    {sipName_LANGUAGE_SESOTHO_LESOTHO, static_cast<int>(::wxLANGUAGE_SESOTHO_LESOTHO), 311},
    {sipName_LANGUAGE_SESOTHO_SA_LEBOA, static_cast<int>(::wxLANGUAGE_SESOTHO_SA_LEBOA), 311},
    {sipName_LANGUAGE_SESOTHO_SA_LEBOA_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_SESOTHO_SA_LEBOA_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_SESOTHO_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_SESOTHO_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_SETSWANA, static_cast<int>(::wxLANGUAGE_SETSWANA), 311},
    {sipName_LANGUAGE_SETSWANA_BOTSWANA, static_cast<int>(::wxLANGUAGE_SETSWANA_BOTSWANA), 311},
    {sipName_LANGUAGE_SETSWANA_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_SETSWANA_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_SHAMBALA, static_cast<int>(::wxLANGUAGE_SHAMBALA), 311},
    {sipName_LANGUAGE_SHAMBALA_TANZANIA, static_cast<int>(::wxLANGUAGE_SHAMBALA_TANZANIA), 311},
    {sipName_LANGUAGE_SHONA, static_cast<int>(::wxLANGUAGE_SHONA), 311},
    {sipName_LANGUAGE_SHONA_LATIN, static_cast<int>(::wxLANGUAGE_SHONA_LATIN), 311},
    {sipName_LANGUAGE_SHONA_LATIN_ZIMBABWE, static_cast<int>(::wxLANGUAGE_SHONA_LATIN_ZIMBABWE), 311},
    {sipName_LANGUAGE_SINDHI, static_cast<int>(::wxLANGUAGE_SINDHI), 311},
    {sipName_LANGUAGE_SINDHI_ARABIC, static_cast<int>(::wxLANGUAGE_SINDHI_ARABIC), 311},
    {sipName_LANGUAGE_SINDHI_DEVANAGARI, static_cast<int>(::wxLANGUAGE_SINDHI_DEVANAGARI), 311},
    {sipName_LANGUAGE_SINDHI_DEVANAGARI_INDIA, static_cast<int>(::wxLANGUAGE_SINDHI_DEVANAGARI_INDIA), 311},
    {sipName_LANGUAGE_SINDHI_PAKISTAN, static_cast<int>(::wxLANGUAGE_SINDHI_PAKISTAN), 311},
    {sipName_LANGUAGE_SINHALESE, static_cast<int>(::wxLANGUAGE_SINHALESE), 311},
    {sipName_LANGUAGE_SINHALESE_SRI_LANKA, static_cast<int>(::wxLANGUAGE_SINHALESE_SRI_LANKA), 311},
    {sipName_LANGUAGE_SISWATI, static_cast<int>(::wxLANGUAGE_SISWATI), 311},
    {sipName_LANGUAGE_SISWATI_ESWATINI, static_cast<int>(::wxLANGUAGE_SISWATI_ESWATINI), 311},
    {sipName_LANGUAGE_SISWATI_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_SISWATI_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_SLOVAK, static_cast<int>(::wxLANGUAGE_SLOVAK), 311},
    {sipName_LANGUAGE_SLOVAK_SLOVAKIA, static_cast<int>(::wxLANGUAGE_SLOVAK_SLOVAKIA), 311},
    {sipName_LANGUAGE_SLOVENIAN, static_cast<int>(::wxLANGUAGE_SLOVENIAN), 311},
    {sipName_LANGUAGE_SLOVENIAN_SLOVENIA, static_cast<int>(::wxLANGUAGE_SLOVENIAN_SLOVENIA), 311},
    {sipName_LANGUAGE_SOGA, static_cast<int>(::wxLANGUAGE_SOGA), 311},
    {sipName_LANGUAGE_SOGA_UGANDA, static_cast<int>(::wxLANGUAGE_SOGA_UGANDA), 311},
    {sipName_LANGUAGE_SOMALI, static_cast<int>(::wxLANGUAGE_SOMALI), 311},
    {sipName_LANGUAGE_SOMALI_DJIBOUTI, static_cast<int>(::wxLANGUAGE_SOMALI_DJIBOUTI), 311},
    {sipName_LANGUAGE_SOMALI_ETHIOPIA, static_cast<int>(::wxLANGUAGE_SOMALI_ETHIOPIA), 311},
    {sipName_LANGUAGE_SOMALI_KENYA, static_cast<int>(::wxLANGUAGE_SOMALI_KENYA), 311},
    {sipName_LANGUAGE_SOMALI_SOMALIA, static_cast<int>(::wxLANGUAGE_SOMALI_SOMALIA), 311},
    {sipName_LANGUAGE_SOUTH_NDEBELE, static_cast<int>(::wxLANGUAGE_SOUTH_NDEBELE), 311},
    {sipName_LANGUAGE_SOUTH_NDEBELE_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_SOUTH_NDEBELE_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_SPANISH, static_cast<int>(::wxLANGUAGE_SPANISH), 311},
    {sipName_LANGUAGE_SPANISH_ARGENTINA, static_cast<int>(::wxLANGUAGE_SPANISH_ARGENTINA), 311},
    {sipName_LANGUAGE_SPANISH_BELIZE, static_cast<int>(::wxLANGUAGE_SPANISH_BELIZE), 311},
    {sipName_LANGUAGE_SPANISH_BOLIVIA, static_cast<int>(::wxLANGUAGE_SPANISH_BOLIVIA), 311},
    {sipName_LANGUAGE_SPANISH_BRAZIL, static_cast<int>(::wxLANGUAGE_SPANISH_BRAZIL), 311},
    {sipName_LANGUAGE_SPANISH_CHILE, static_cast<int>(::wxLANGUAGE_SPANISH_CHILE), 311},
    {sipName_LANGUAGE_SPANISH_COLOMBIA, static_cast<int>(::wxLANGUAGE_SPANISH_COLOMBIA), 311},
    {sipName_LANGUAGE_SPANISH_COSTA_RICA, static_cast<int>(::wxLANGUAGE_SPANISH_COSTA_RICA), 311},
    {sipName_LANGUAGE_SPANISH_CUBA, static_cast<int>(::wxLANGUAGE_SPANISH_CUBA), 311},
    {sipName_LANGUAGE_SPANISH_DOMINICAN_REPUBLIC, static_cast<int>(::wxLANGUAGE_SPANISH_DOMINICAN_REPUBLIC), 311},
    {sipName_LANGUAGE_SPANISH_ECUADOR, static_cast<int>(::wxLANGUAGE_SPANISH_ECUADOR), 311},
    {sipName_LANGUAGE_SPANISH_EL_SALVADOR, static_cast<int>(::wxLANGUAGE_SPANISH_EL_SALVADOR), 311},
    {sipName_LANGUAGE_SPANISH_EQUATORIAL_GUINEA, static_cast<int>(::wxLANGUAGE_SPANISH_EQUATORIAL_GUINEA), 311},
    {sipName_LANGUAGE_SPANISH_GUATEMALA, static_cast<int>(::wxLANGUAGE_SPANISH_GUATEMALA), 311},
    {sipName_LANGUAGE_SPANISH_HONDURAS, static_cast<int>(::wxLANGUAGE_SPANISH_HONDURAS), 311},
    {sipName_LANGUAGE_SPANISH_LATIN_AMERICA, static_cast<int>(::wxLANGUAGE_SPANISH_LATIN_AMERICA), 311},
    {sipName_LANGUAGE_SPANISH_MEXICAN, static_cast<int>(::wxLANGUAGE_SPANISH_MEXICAN), 311},
    {sipName_LANGUAGE_SPANISH_MODERN, static_cast<int>(::wxLANGUAGE_SPANISH_MODERN), 311},
    {sipName_LANGUAGE_SPANISH_NICARAGUA, static_cast<int>(::wxLANGUAGE_SPANISH_NICARAGUA), 311},
    {sipName_LANGUAGE_SPANISH_PANAMA, static_cast<int>(::wxLANGUAGE_SPANISH_PANAMA), 311},
    {sipName_LANGUAGE_SPANISH_PARAGUAY, static_cast<int>(::wxLANGUAGE_SPANISH_PARAGUAY), 311},
    {sipName_LANGUAGE_SPANISH_PERU, static_cast<int>(::wxLANGUAGE_SPANISH_PERU), 311},
    {sipName_LANGUAGE_SPANISH_PHILIPPINES, static_cast<int>(::wxLANGUAGE_SPANISH_PHILIPPINES), 311},
    {sipName_LANGUAGE_SPANISH_PUERTO_RICO, static_cast<int>(::wxLANGUAGE_SPANISH_PUERTO_RICO), 311},
    {sipName_LANGUAGE_SPANISH_SPAIN, static_cast<int>(::wxLANGUAGE_SPANISH_SPAIN), 311},
    {sipName_LANGUAGE_SPANISH_URUGUAY, static_cast<int>(::wxLANGUAGE_SPANISH_URUGUAY), 311},
    {sipName_LANGUAGE_SPANISH_US, static_cast<int>(::wxLANGUAGE_SPANISH_US), 311},
    {sipName_LANGUAGE_SPANISH_VENEZUELA, static_cast<int>(::wxLANGUAGE_SPANISH_VENEZUELA), 311},
    {sipName_LANGUAGE_STANDARD_MOROCCAN_TAMAZIGHT, static_cast<int>(::wxLANGUAGE_STANDARD_MOROCCAN_TAMAZIGHT), 311},
    {sipName_LANGUAGE_STANDARD_MOROCCAN_TAMAZIGHT_TIFINAGH, static_cast<int>(::wxLANGUAGE_STANDARD_MOROCCAN_TAMAZIGHT_TIFINAGH), 311},
    {sipName_LANGUAGE_STANDARD_MOROCCAN_TAMAZIGHT_TIFINAGH_MOROCCO, static_cast<int>(::wxLANGUAGE_STANDARD_MOROCCAN_TAMAZIGHT_TIFINAGH_MOROCCO), 311},
    {sipName_LANGUAGE_SUNDANESE, static_cast<int>(::wxLANGUAGE_SUNDANESE), 311},
    {sipName_LANGUAGE_SWAHILI, static_cast<int>(::wxLANGUAGE_SWAHILI), 311},
    {sipName_LANGUAGE_SWAHILI_CONGO_DRC, static_cast<int>(::wxLANGUAGE_SWAHILI_CONGO_DRC), 311},
    {sipName_LANGUAGE_SWAHILI_KENYA, static_cast<int>(::wxLANGUAGE_SWAHILI_KENYA), 311},
    {sipName_LANGUAGE_SWAHILI_TANZANIA, static_cast<int>(::wxLANGUAGE_SWAHILI_TANZANIA), 311},
    {sipName_LANGUAGE_SWAHILI_UGANDA, static_cast<int>(::wxLANGUAGE_SWAHILI_UGANDA), 311},
    {sipName_LANGUAGE_SWEDISH, static_cast<int>(::wxLANGUAGE_SWEDISH), 311},
    {sipName_LANGUAGE_SWEDISH_ALAND_ISLANDS, static_cast<int>(::wxLANGUAGE_SWEDISH_ALAND_ISLANDS), 311},
    {sipName_LANGUAGE_SWEDISH_FINLAND, static_cast<int>(::wxLANGUAGE_SWEDISH_FINLAND), 311},
    {sipName_LANGUAGE_SWEDISH_SWEDEN, static_cast<int>(::wxLANGUAGE_SWEDISH_SWEDEN), 311},
    {sipName_LANGUAGE_SWISS_GERMAN, static_cast<int>(::wxLANGUAGE_SWISS_GERMAN), 311},
    {sipName_LANGUAGE_SWISS_GERMAN_LIECHTENSTEIN, static_cast<int>(::wxLANGUAGE_SWISS_GERMAN_LIECHTENSTEIN), 311},
    {sipName_LANGUAGE_SWISS_GERMAN_SWITZERLAND, static_cast<int>(::wxLANGUAGE_SWISS_GERMAN_SWITZERLAND), 311},
    {sipName_LANGUAGE_SYRIAC, static_cast<int>(::wxLANGUAGE_SYRIAC), 311},
    {sipName_LANGUAGE_SYRIAC_SYRIA, static_cast<int>(::wxLANGUAGE_SYRIAC_SYRIA), 311},
    {sipName_LANGUAGE_TACHELHIT, static_cast<int>(::wxLANGUAGE_TACHELHIT), 311},
    {sipName_LANGUAGE_TACHELHIT_LATIN, static_cast<int>(::wxLANGUAGE_TACHELHIT_LATIN), 311},
    {sipName_LANGUAGE_TACHELHIT_LATIN_MOROCCO, static_cast<int>(::wxLANGUAGE_TACHELHIT_LATIN_MOROCCO), 311},
    {sipName_LANGUAGE_TACHELHIT_TIFINAGH, static_cast<int>(::wxLANGUAGE_TACHELHIT_TIFINAGH), 311},
    {sipName_LANGUAGE_TACHELHIT_TIFINAGH_MOROCCO, static_cast<int>(::wxLANGUAGE_TACHELHIT_TIFINAGH_MOROCCO), 311},
    {sipName_LANGUAGE_TAGALOG, static_cast<int>(::wxLANGUAGE_TAGALOG), 311},
    {sipName_LANGUAGE_TAITA, static_cast<int>(::wxLANGUAGE_TAITA), 311},
    {sipName_LANGUAGE_TAITA_KENYA, static_cast<int>(::wxLANGUAGE_TAITA_KENYA), 311},
    {sipName_LANGUAGE_TAJIK, static_cast<int>(::wxLANGUAGE_TAJIK), 311},
    {sipName_LANGUAGE_TAJIK_CYRILLIC, static_cast<int>(::wxLANGUAGE_TAJIK_CYRILLIC), 311},
    {sipName_LANGUAGE_TAJIK_CYRILLIC_TAJIKISTAN, static_cast<int>(::wxLANGUAGE_TAJIK_CYRILLIC_TAJIKISTAN), 311},
    {sipName_LANGUAGE_TAMIL, static_cast<int>(::wxLANGUAGE_TAMIL), 311},
    {sipName_LANGUAGE_TAMIL_INDIA, static_cast<int>(::wxLANGUAGE_TAMIL_INDIA), 311},
    {sipName_LANGUAGE_TAMIL_MALAYSIA, static_cast<int>(::wxLANGUAGE_TAMIL_MALAYSIA), 311},
    {sipName_LANGUAGE_TAMIL_SINGAPORE, static_cast<int>(::wxLANGUAGE_TAMIL_SINGAPORE), 311},
    {sipName_LANGUAGE_TAMIL_SRI_LANKA, static_cast<int>(::wxLANGUAGE_TAMIL_SRI_LANKA), 311},
    {sipName_LANGUAGE_TASAWAQ, static_cast<int>(::wxLANGUAGE_TASAWAQ), 311},
    {sipName_LANGUAGE_TASAWAQ_NIGER, static_cast<int>(::wxLANGUAGE_TASAWAQ_NIGER), 311},
    {sipName_LANGUAGE_TATAR, static_cast<int>(::wxLANGUAGE_TATAR), 311},
    {sipName_LANGUAGE_TATAR_RUSSIA, static_cast<int>(::wxLANGUAGE_TATAR_RUSSIA), 311},
    {sipName_LANGUAGE_TELUGU, static_cast<int>(::wxLANGUAGE_TELUGU), 311},
    {sipName_LANGUAGE_TELUGU_INDIA, static_cast<int>(::wxLANGUAGE_TELUGU_INDIA), 311},
    {sipName_LANGUAGE_TESO, static_cast<int>(::wxLANGUAGE_TESO), 311},
    {sipName_LANGUAGE_TESO_KENYA, static_cast<int>(::wxLANGUAGE_TESO_KENYA), 311},
    {sipName_LANGUAGE_TESO_UGANDA, static_cast<int>(::wxLANGUAGE_TESO_UGANDA), 311},
    {sipName_LANGUAGE_THAI, static_cast<int>(::wxLANGUAGE_THAI), 311},
    {sipName_LANGUAGE_THAI_THAILAND, static_cast<int>(::wxLANGUAGE_THAI_THAILAND), 311},
    {sipName_LANGUAGE_TIBETAN, static_cast<int>(::wxLANGUAGE_TIBETAN), 311},
    {sipName_LANGUAGE_TIBETAN_CHINA, static_cast<int>(::wxLANGUAGE_TIBETAN_CHINA), 311},
    {sipName_LANGUAGE_TIBETAN_INDIA, static_cast<int>(::wxLANGUAGE_TIBETAN_INDIA), 311},
    {sipName_LANGUAGE_TIGRE, static_cast<int>(::wxLANGUAGE_TIGRE), 311},
    {sipName_LANGUAGE_TIGRE_ERITREA, static_cast<int>(::wxLANGUAGE_TIGRE_ERITREA), 311},
    {sipName_LANGUAGE_TIGRINYA, static_cast<int>(::wxLANGUAGE_TIGRINYA), 311},
    {sipName_LANGUAGE_TIGRINYA_ERITREA, static_cast<int>(::wxLANGUAGE_TIGRINYA_ERITREA), 311},
    {sipName_LANGUAGE_TIGRINYA_ETHIOPIA, static_cast<int>(::wxLANGUAGE_TIGRINYA_ETHIOPIA), 311},
    {sipName_LANGUAGE_TONGA, static_cast<int>(::wxLANGUAGE_TONGA), 311},
    {sipName_LANGUAGE_TONGA_TONGA, static_cast<int>(::wxLANGUAGE_TONGA_TONGA), 311},
    {sipName_LANGUAGE_TSONGA, static_cast<int>(::wxLANGUAGE_TSONGA), 311},
    {sipName_LANGUAGE_TSONGA_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_TSONGA_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_TURKISH, static_cast<int>(::wxLANGUAGE_TURKISH), 311},
    {sipName_LANGUAGE_TURKISH_CYPRUS, static_cast<int>(::wxLANGUAGE_TURKISH_CYPRUS), 311},
    {sipName_LANGUAGE_TURKISH_TURKEY, static_cast<int>(::wxLANGUAGE_TURKISH_TURKEY), 311},
    {sipName_LANGUAGE_TURKMEN, static_cast<int>(::wxLANGUAGE_TURKMEN), 311},
    {sipName_LANGUAGE_TURKMEN_TURKMENISTAN, static_cast<int>(::wxLANGUAGE_TURKMEN_TURKMENISTAN), 311},
    {sipName_LANGUAGE_TWI, static_cast<int>(::wxLANGUAGE_TWI), 311},
    {sipName_LANGUAGE_UIGHUR, static_cast<int>(::wxLANGUAGE_UIGHUR), 311},
    {sipName_LANGUAGE_UIGHUR_CHINA, static_cast<int>(::wxLANGUAGE_UIGHUR_CHINA), 311},
    {sipName_LANGUAGE_UKRAINIAN, static_cast<int>(::wxLANGUAGE_UKRAINIAN), 311},
    {sipName_LANGUAGE_UKRAINIAN_UKRAINE, static_cast<int>(::wxLANGUAGE_UKRAINIAN_UKRAINE), 311},
    {sipName_LANGUAGE_UNKNOWN, static_cast<int>(::wxLANGUAGE_UNKNOWN), 311},
    {sipName_LANGUAGE_UPPER_SORBIAN, static_cast<int>(::wxLANGUAGE_UPPER_SORBIAN), 311},
    {sipName_LANGUAGE_UPPER_SORBIAN_GERMANY, static_cast<int>(::wxLANGUAGE_UPPER_SORBIAN_GERMANY), 311},
    {sipName_LANGUAGE_URDU, static_cast<int>(::wxLANGUAGE_URDU), 311},
    {sipName_LANGUAGE_URDU_INDIA, static_cast<int>(::wxLANGUAGE_URDU_INDIA), 311},
    {sipName_LANGUAGE_URDU_PAKISTAN, static_cast<int>(::wxLANGUAGE_URDU_PAKISTAN), 311},
    {sipName_LANGUAGE_USER_DEFINED, static_cast<int>(::wxLANGUAGE_USER_DEFINED), 311},
    {sipName_LANGUAGE_UZBEK, static_cast<int>(::wxLANGUAGE_UZBEK), 311},
    {sipName_LANGUAGE_UZBEK_CYRILLIC, static_cast<int>(::wxLANGUAGE_UZBEK_CYRILLIC), 311},
    {sipName_LANGUAGE_UZBEK_CYRILLIC_UZBEKISTAN, static_cast<int>(::wxLANGUAGE_UZBEK_CYRILLIC_UZBEKISTAN), 311},
    {sipName_LANGUAGE_UZBEK_LATIN, static_cast<int>(::wxLANGUAGE_UZBEK_LATIN), 311},
    {sipName_LANGUAGE_UZBEK_LATIN_UZBEKISTAN, static_cast<int>(::wxLANGUAGE_UZBEK_LATIN_UZBEKISTAN), 311},
    {sipName_LANGUAGE_UZBEK_PERSO_ARABIC, static_cast<int>(::wxLANGUAGE_UZBEK_PERSO_ARABIC), 311},
    {sipName_LANGUAGE_UZBEK_PERSO_ARABIC_AFGHANISTAN, static_cast<int>(::wxLANGUAGE_UZBEK_PERSO_ARABIC_AFGHANISTAN), 311},
    {sipName_LANGUAGE_VAI, static_cast<int>(::wxLANGUAGE_VAI), 311},
    {sipName_LANGUAGE_VAI_LATIN, static_cast<int>(::wxLANGUAGE_VAI_LATIN), 311},
    {sipName_LANGUAGE_VAI_LATIN_LIBERIA, static_cast<int>(::wxLANGUAGE_VAI_LATIN_LIBERIA), 311},
    {sipName_LANGUAGE_VAI_VAI, static_cast<int>(::wxLANGUAGE_VAI_VAI), 311},
    {sipName_LANGUAGE_VAI_VAI_LIBERIA, static_cast<int>(::wxLANGUAGE_VAI_VAI_LIBERIA), 311},
    {sipName_LANGUAGE_VALENCIAN, static_cast<int>(::wxLANGUAGE_VALENCIAN), 311},
    {sipName_LANGUAGE_VENDA, static_cast<int>(::wxLANGUAGE_VENDA), 311},
    {sipName_LANGUAGE_VENDA_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_VENDA_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_VIETNAMESE, static_cast<int>(::wxLANGUAGE_VIETNAMESE), 311},
    {sipName_LANGUAGE_VIETNAMESE_VIETNAM, static_cast<int>(::wxLANGUAGE_VIETNAMESE_VIETNAM), 311},
    {sipName_LANGUAGE_VOLAPUK, static_cast<int>(::wxLANGUAGE_VOLAPUK), 311},
    {sipName_LANGUAGE_VOLAPUK_WORLD, static_cast<int>(::wxLANGUAGE_VOLAPUK_WORLD), 311},
    {sipName_LANGUAGE_VUNJO, static_cast<int>(::wxLANGUAGE_VUNJO), 311},
    {sipName_LANGUAGE_VUNJO_TANZANIA, static_cast<int>(::wxLANGUAGE_VUNJO_TANZANIA), 311},
    {sipName_LANGUAGE_WALSER, static_cast<int>(::wxLANGUAGE_WALSER), 311},
    {sipName_LANGUAGE_WALSER_SWITZERLAND, static_cast<int>(::wxLANGUAGE_WALSER_SWITZERLAND), 311},
    {sipName_LANGUAGE_WELSH, static_cast<int>(::wxLANGUAGE_WELSH), 311},
    {sipName_LANGUAGE_WELSH_UK, static_cast<int>(::wxLANGUAGE_WELSH_UK), 311},
    {sipName_LANGUAGE_WOLAYTTA, static_cast<int>(::wxLANGUAGE_WOLAYTTA), 311},
    {sipName_LANGUAGE_WOLAYTTA_ETHIOPIA, static_cast<int>(::wxLANGUAGE_WOLAYTTA_ETHIOPIA), 311},
    {sipName_LANGUAGE_WOLOF, static_cast<int>(::wxLANGUAGE_WOLOF), 311},
    {sipName_LANGUAGE_WOLOF_SENEGAL, static_cast<int>(::wxLANGUAGE_WOLOF_SENEGAL), 311},
    {sipName_LANGUAGE_XHOSA, static_cast<int>(::wxLANGUAGE_XHOSA), 311},
    {sipName_LANGUAGE_XHOSA_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_XHOSA_SOUTH_AFRICA), 311},
    {sipName_LANGUAGE_YANGBEN, static_cast<int>(::wxLANGUAGE_YANGBEN), 311},
    {sipName_LANGUAGE_YANGBEN_CAMEROON, static_cast<int>(::wxLANGUAGE_YANGBEN_CAMEROON), 311},
    {sipName_LANGUAGE_YI, static_cast<int>(::wxLANGUAGE_YI), 311},
    {sipName_LANGUAGE_YIDDISH, static_cast<int>(::wxLANGUAGE_YIDDISH), 311},
    {sipName_LANGUAGE_YIDDISH_WORLD, static_cast<int>(::wxLANGUAGE_YIDDISH_WORLD), 311},
    {sipName_LANGUAGE_YI_CHINA, static_cast<int>(::wxLANGUAGE_YI_CHINA), 311},
    {sipName_LANGUAGE_YORUBA, static_cast<int>(::wxLANGUAGE_YORUBA), 311},
    {sipName_LANGUAGE_YORUBA_BENIN, static_cast<int>(::wxLANGUAGE_YORUBA_BENIN), 311},
    {sipName_LANGUAGE_YORUBA_NIGERIA, static_cast<int>(::wxLANGUAGE_YORUBA_NIGERIA), 311},
    {sipName_LANGUAGE_ZARMA, static_cast<int>(::wxLANGUAGE_ZARMA), 311},
    {sipName_LANGUAGE_ZARMA_NIGER, static_cast<int>(::wxLANGUAGE_ZARMA_NIGER), 311},
    {sipName_LANGUAGE_ZHUANG, static_cast<int>(::wxLANGUAGE_ZHUANG), 311},
    {sipName_LANGUAGE_ZULU, static_cast<int>(::wxLANGUAGE_ZULU), 311},
    {sipName_LANGUAGE_ZULU_SOUTH_AFRICA, static_cast<int>(::wxLANGUAGE_ZULU_SOUTH_AFRICA), 311},
    {sipName_LEFT, static_cast<int>(::wxLEFT), 137},
    {sipName_LIST_FORMAT_CENTER, static_cast<int>(::wxLIST_FORMAT_CENTER), 317},
    {sipName_LIST_FORMAT_CENTRE, static_cast<int>(::wxLIST_FORMAT_CENTRE), 317},
    {sipName_LIST_FORMAT_LEFT, static_cast<int>(::wxLIST_FORMAT_LEFT), 317},
    {sipName_LIST_FORMAT_RIGHT, static_cast<int>(::wxLIST_FORMAT_RIGHT), 317},
    {sipName_LOCALE_CAT_DATE, static_cast<int>(::wxLOCALE_CAT_DATE), 324},
    {sipName_LOCALE_CAT_DEFAULT, static_cast<int>(::wxLOCALE_CAT_DEFAULT), 324},
    {sipName_LOCALE_CAT_MONEY, static_cast<int>(::wxLOCALE_CAT_MONEY), 324},
    {sipName_LOCALE_CAT_NUMBER, static_cast<int>(::wxLOCALE_CAT_NUMBER), 324},
    {sipName_LOCALE_DATE_TIME_FMT, static_cast<int>(::wxLOCALE_DATE_TIME_FMT), 326},
    {sipName_LOCALE_DECIMAL_POINT, static_cast<int>(::wxLOCALE_DECIMAL_POINT), 326},
    {sipName_LOCALE_DONT_LOAD_DEFAULT, static_cast<int>(::wxLOCALE_DONT_LOAD_DEFAULT), 327},
    {sipName_LOCALE_FORM_ENGLISH, static_cast<int>(::wxLOCALE_FORM_ENGLISH), 325},
    {sipName_LOCALE_FORM_NATIVE, static_cast<int>(::wxLOCALE_FORM_NATIVE), 325},
    {sipName_LOCALE_LOAD_DEFAULT, static_cast<int>(::wxLOCALE_LOAD_DEFAULT), 327},
    {sipName_LOCALE_LONG_DATE_FMT, static_cast<int>(::wxLOCALE_LONG_DATE_FMT), 326},
    {sipName_LOCALE_NAME_COUNTRY, static_cast<int>(::wxLOCALE_NAME_COUNTRY), 328},
    {sipName_LOCALE_NAME_LANGUAGE, static_cast<int>(::wxLOCALE_NAME_LANGUAGE), 328},
    {sipName_LOCALE_NAME_LOCALE, static_cast<int>(::wxLOCALE_NAME_LOCALE), 328},
    {sipName_LOCALE_SHORT_DATE_FMT, static_cast<int>(::wxLOCALE_SHORT_DATE_FMT), 326},
    {sipName_LOCALE_TAGTYPE_BCP47, static_cast<int>(::wxLOCALE_TAGTYPE_BCP47), 329},
    {sipName_LOCALE_TAGTYPE_DEFAULT, static_cast<int>(::wxLOCALE_TAGTYPE_DEFAULT), 329},
    {sipName_LOCALE_TAGTYPE_MACOS, static_cast<int>(::wxLOCALE_TAGTYPE_MACOS), 329},
    {sipName_LOCALE_TAGTYPE_POSIX, static_cast<int>(::wxLOCALE_TAGTYPE_POSIX), 329},
    {sipName_LOCALE_TAGTYPE_SYSTEM, static_cast<int>(::wxLOCALE_TAGTYPE_SYSTEM), 329},
    {sipName_LOCALE_TAGTYPE_WINDOWS, static_cast<int>(::wxLOCALE_TAGTYPE_WINDOWS), 329},
    {sipName_LOCALE_THOUSANDS_SEP, static_cast<int>(::wxLOCALE_THOUSANDS_SEP), 326},
    {sipName_LOCALE_TIME_FMT, static_cast<int>(::wxLOCALE_TIME_FMT), 326},
    {sipName_LOG_Debug, static_cast<int>(::wxLOG_Debug), 337},
    {sipName_LOG_Error, static_cast<int>(::wxLOG_Error), 337},
    {sipName_LOG_FatalError, static_cast<int>(::wxLOG_FatalError), 337},
    {sipName_LOG_Info, static_cast<int>(::wxLOG_Info), 337},
    {sipName_LOG_Max, static_cast<int>(::wxLOG_Max), 337},
    {sipName_LOG_Message, static_cast<int>(::wxLOG_Message), 337},
    {sipName_LOG_Progress, static_cast<int>(::wxLOG_Progress), 337},
    {sipName_LOG_Status, static_cast<int>(::wxLOG_Status), 337},
    {sipName_LOG_Trace, static_cast<int>(::wxLOG_Trace), 337},
    {sipName_LOG_User, static_cast<int>(::wxLOG_User), 337},
    {sipName_LOG_Warning, static_cast<int>(::wxLOG_Warning), 337},
    {sipName_Layout_Default, static_cast<int>(::wxLayout_Default), 314},
    {sipName_Layout_LeftToRight, static_cast<int>(::wxLayout_LeftToRight), 314},
    {sipName_Layout_RightToLeft, static_cast<int>(::wxLayout_RightToLeft), 314},
    {sipName_Left, static_cast<int>(::wxLeft), 146},
    {sipName_LeftOf, static_cast<int>(::wxLeftOf), 481},
    {sipName_MM_LOMETRIC, static_cast<int>(::wxMM_LOMETRIC), 349},
    {sipName_MM_METRIC, static_cast<int>(::wxMM_METRIC), 349},
    {sipName_MM_POINTS, static_cast<int>(::wxMM_POINTS), 349},
    {sipName_MM_TEXT, static_cast<int>(::wxMM_TEXT), 349},
    {sipName_MM_TWIPS, static_cast<int>(::wxMM_TWIPS), 349},
    {sipName_MOD_ALL, static_cast<int>(::wxMOD_ALL), 307},
    {sipName_MOD_ALT, static_cast<int>(::wxMOD_ALT), 307},
    {sipName_MOD_ALTGR, static_cast<int>(::wxMOD_ALTGR), 307},
    {sipName_MOD_CMD, static_cast<int>(::wxMOD_CMD), 307},
    {sipName_MOD_CONTROL, static_cast<int>(::wxMOD_CONTROL), 307},
    {sipName_MOD_META, static_cast<int>(::wxMOD_META), 307},
    {sipName_MOD_NONE, static_cast<int>(::wxMOD_NONE), 307},
    {sipName_MOD_RAW_CONTROL, static_cast<int>(::wxMOD_RAW_CONTROL), 307},
    {sipName_MOD_SHIFT, static_cast<int>(::wxMOD_SHIFT), 307},
    {sipName_MOD_WIN, static_cast<int>(::wxMOD_WIN), 307},
    {sipName_MOUSE_BTN_ANY, static_cast<int>(::wxMOUSE_BTN_ANY), 372},
    {sipName_MOUSE_BTN_AUX1, static_cast<int>(::wxMOUSE_BTN_AUX1), 372},
    {sipName_MOUSE_BTN_AUX2, static_cast<int>(::wxMOUSE_BTN_AUX2), 372},
    {sipName_MOUSE_BTN_LEFT, static_cast<int>(::wxMOUSE_BTN_LEFT), 372},
    {sipName_MOUSE_BTN_MAX, static_cast<int>(::wxMOUSE_BTN_MAX), 372},
    {sipName_MOUSE_BTN_MIDDLE, static_cast<int>(::wxMOUSE_BTN_MIDDLE), 372},
    {sipName_MOUSE_BTN_NONE, static_cast<int>(::wxMOUSE_BTN_NONE), 372},
    {sipName_MOUSE_BTN_RIGHT, static_cast<int>(::wxMOUSE_BTN_RIGHT), 372},
    {sipName_MOUSE_WHEEL_HORIZONTAL, static_cast<int>(::wxMOUSE_WHEEL_HORIZONTAL), 378},
    {sipName_MOUSE_WHEEL_VERTICAL, static_cast<int>(::wxMOUSE_WHEEL_VERTICAL), 378},
    {sipName_NAND, static_cast<int>(::wxNAND), 470},
    {sipName_NAVDIR_DOWN, static_cast<int>(::wxNAVDIR_DOWN), 385},
    {sipName_NAVDIR_FIRSTCHILD, static_cast<int>(::wxNAVDIR_FIRSTCHILD), 385},
    {sipName_NAVDIR_LASTCHILD, static_cast<int>(::wxNAVDIR_LASTCHILD), 385},
    {sipName_NAVDIR_LEFT, static_cast<int>(::wxNAVDIR_LEFT), 385},
    {sipName_NAVDIR_NEXT, static_cast<int>(::wxNAVDIR_NEXT), 385},
    {sipName_NAVDIR_PREVIOUS, static_cast<int>(::wxNAVDIR_PREVIOUS), 385},
    {sipName_NAVDIR_RIGHT, static_cast<int>(::wxNAVDIR_RIGHT), 385},
    {sipName_NAVDIR_UP, static_cast<int>(::wxNAVDIR_UP), 385},
    {sipName_NOR, static_cast<int>(::wxNOR), 470},
    {sipName_NORTH, static_cast<int>(::wxNORTH), 137},
    {sipName_NO_OP, static_cast<int>(::wxNO_OP), 470},
    {sipName_OBJID_ALERT, static_cast<int>(::wxOBJID_ALERT), 1},
    {sipName_OBJID_CARET, static_cast<int>(::wxOBJID_CARET), 1},
    {sipName_OBJID_CLIENT, static_cast<int>(::wxOBJID_CLIENT), 1},
    {sipName_OBJID_CURSOR, static_cast<int>(::wxOBJID_CURSOR), 1},
    {sipName_OBJID_HSCROLL, static_cast<int>(::wxOBJID_HSCROLL), 1},
    {sipName_OBJID_MENU, static_cast<int>(::wxOBJID_MENU), 1},
    {sipName_OBJID_SIZEGRIP, static_cast<int>(::wxOBJID_SIZEGRIP), 1},
    {sipName_OBJID_SOUND, static_cast<int>(::wxOBJID_SOUND), 1},
    {sipName_OBJID_SYSMENU, static_cast<int>(::wxOBJID_SYSMENU), 1},
    {sipName_OBJID_TITLEBAR, static_cast<int>(::wxOBJID_TITLEBAR), 1},
    {sipName_OBJID_VSCROLL, static_cast<int>(::wxOBJID_VSCROLL), 1},
    {sipName_OBJID_WINDOW, static_cast<int>(::wxOBJID_WINDOW), 1},
    {sipName_ODDEVEN_RULE, static_cast<int>(::wxODDEVEN_RULE), 426},
    {sipName_OR, static_cast<int>(::wxOR), 470},
    {sipName_ORIENTATION_MASK, static_cast<int>(::wxORIENTATION_MASK), 394},
    {sipName_OR_INVERT, static_cast<int>(::wxOR_INVERT), 470},
    {sipName_OR_REVERSE, static_cast<int>(::wxOR_REVERSE), 470},
    {sipName_OS_MAC, static_cast<int>(::wxOS_MAC), 393},
    {sipName_OS_MAC_OS, static_cast<int>(::wxOS_MAC_OS), 393},
    {sipName_OS_MAC_OSX_DARWIN, static_cast<int>(::wxOS_MAC_OSX_DARWIN), 393},
    {sipName_OS_UNIX, static_cast<int>(::wxOS_UNIX), 393},
    {sipName_OS_UNIX_AIX, static_cast<int>(::wxOS_UNIX_AIX), 393},
    {sipName_OS_UNIX_FREEBSD, static_cast<int>(::wxOS_UNIX_FREEBSD), 393},
    {sipName_OS_UNIX_HPUX, static_cast<int>(::wxOS_UNIX_HPUX), 393},
    {sipName_OS_UNIX_LINUX, static_cast<int>(::wxOS_UNIX_LINUX), 393},
    {sipName_OS_UNIX_NETBSD, static_cast<int>(::wxOS_UNIX_NETBSD), 393},
    {sipName_OS_UNIX_OPENBSD, static_cast<int>(::wxOS_UNIX_OPENBSD), 393},
    {sipName_OS_UNIX_SOLARIS, static_cast<int>(::wxOS_UNIX_SOLARIS), 393},
    {sipName_OS_UNKNOWN, static_cast<int>(::wxOS_UNKNOWN), 393},
    {sipName_OS_WINDOWS, static_cast<int>(::wxOS_WINDOWS), 393},
    {sipName_OS_WINDOWS_NT, static_cast<int>(::wxOS_WINDOWS_NT), 393},
    {sipName_OutBottom, static_cast<int>(::wxOutBottom), 395},
    {sipName_OutLeft, static_cast<int>(::wxOutLeft), 395},
    {sipName_OutRegion, static_cast<int>(::wxOutRegion), 479},
    {sipName_OutRight, static_cast<int>(::wxOutRight), 395},
    {sipName_OutTop, static_cast<int>(::wxOutTop), 395},
    {sipName_PAPER_10X11, static_cast<int>(::wxPAPER_10X11), 409},
    {sipName_PAPER_10X14, static_cast<int>(::wxPAPER_10X14), 409},
    {sipName_PAPER_11X17, static_cast<int>(::wxPAPER_11X17), 409},
    {sipName_PAPER_12X11, static_cast<int>(::wxPAPER_12X11), 409},
    {sipName_PAPER_15X11, static_cast<int>(::wxPAPER_15X11), 409},
    {sipName_PAPER_9X11, static_cast<int>(::wxPAPER_9X11), 409},
    {sipName_PAPER_A2, static_cast<int>(::wxPAPER_A2), 409},
    {sipName_PAPER_A3, static_cast<int>(::wxPAPER_A3), 409},
    {sipName_PAPER_A3_EXTRA, static_cast<int>(::wxPAPER_A3_EXTRA), 409},
    {sipName_PAPER_A3_EXTRA_TRANSVERSE, static_cast<int>(::wxPAPER_A3_EXTRA_TRANSVERSE), 409},
    {sipName_PAPER_A3_ROTATED, static_cast<int>(::wxPAPER_A3_ROTATED), 409},
    {sipName_PAPER_A3_TRANSVERSE, static_cast<int>(::wxPAPER_A3_TRANSVERSE), 409},
    {sipName_PAPER_A4, static_cast<int>(::wxPAPER_A4), 409},
    {sipName_PAPER_A4SMALL, static_cast<int>(::wxPAPER_A4SMALL), 409},
    {sipName_PAPER_A4_EXTRA, static_cast<int>(::wxPAPER_A4_EXTRA), 409},
    {sipName_PAPER_A4_PLUS, static_cast<int>(::wxPAPER_A4_PLUS), 409},
    {sipName_PAPER_A4_ROTATED, static_cast<int>(::wxPAPER_A4_ROTATED), 409},
    {sipName_PAPER_A4_TRANSVERSE, static_cast<int>(::wxPAPER_A4_TRANSVERSE), 409},
    {sipName_PAPER_A5, static_cast<int>(::wxPAPER_A5), 409},
    {sipName_PAPER_A5_EXTRA, static_cast<int>(::wxPAPER_A5_EXTRA), 409},
    {sipName_PAPER_A5_ROTATED, static_cast<int>(::wxPAPER_A5_ROTATED), 409},
    {sipName_PAPER_A5_TRANSVERSE, static_cast<int>(::wxPAPER_A5_TRANSVERSE), 409},
    {sipName_PAPER_A6, static_cast<int>(::wxPAPER_A6), 409},
    {sipName_PAPER_A6_ROTATED, static_cast<int>(::wxPAPER_A6_ROTATED), 409},
    {sipName_PAPER_A_PLUS, static_cast<int>(::wxPAPER_A_PLUS), 409},
    {sipName_PAPER_B4, static_cast<int>(::wxPAPER_B4), 409},
    {sipName_PAPER_B4_JIS_ROTATED, static_cast<int>(::wxPAPER_B4_JIS_ROTATED), 409},
    {sipName_PAPER_B5, static_cast<int>(::wxPAPER_B5), 409},
    {sipName_PAPER_B5_EXTRA, static_cast<int>(::wxPAPER_B5_EXTRA), 409},
    {sipName_PAPER_B5_JIS_ROTATED, static_cast<int>(::wxPAPER_B5_JIS_ROTATED), 409},
    {sipName_PAPER_B5_TRANSVERSE, static_cast<int>(::wxPAPER_B5_TRANSVERSE), 409},
    {sipName_PAPER_B6_JIS, static_cast<int>(::wxPAPER_B6_JIS), 409},
    {sipName_PAPER_B6_JIS_ROTATED, static_cast<int>(::wxPAPER_B6_JIS_ROTATED), 409},
    {sipName_PAPER_B_PLUS, static_cast<int>(::wxPAPER_B_PLUS), 409},
    {sipName_PAPER_CSHEET, static_cast<int>(::wxPAPER_CSHEET), 409},
    {sipName_PAPER_DBL_JAPANESE_POSTCARD, static_cast<int>(::wxPAPER_DBL_JAPANESE_POSTCARD), 409},
    {sipName_PAPER_DBL_JAPANESE_POSTCARD_ROTATED, static_cast<int>(::wxPAPER_DBL_JAPANESE_POSTCARD_ROTATED), 409},
    {sipName_PAPER_DSHEET, static_cast<int>(::wxPAPER_DSHEET), 409},
    {sipName_PAPER_ENV_10, static_cast<int>(::wxPAPER_ENV_10), 409},
    {sipName_PAPER_ENV_11, static_cast<int>(::wxPAPER_ENV_11), 409},
    {sipName_PAPER_ENV_12, static_cast<int>(::wxPAPER_ENV_12), 409},
    {sipName_PAPER_ENV_14, static_cast<int>(::wxPAPER_ENV_14), 409},
    {sipName_PAPER_ENV_9, static_cast<int>(::wxPAPER_ENV_9), 409},
    {sipName_PAPER_ENV_B4, static_cast<int>(::wxPAPER_ENV_B4), 409},
    {sipName_PAPER_ENV_B5, static_cast<int>(::wxPAPER_ENV_B5), 409},
    {sipName_PAPER_ENV_B6, static_cast<int>(::wxPAPER_ENV_B6), 409},
    {sipName_PAPER_ENV_C3, static_cast<int>(::wxPAPER_ENV_C3), 409},
    {sipName_PAPER_ENV_C4, static_cast<int>(::wxPAPER_ENV_C4), 409},
    {sipName_PAPER_ENV_C5, static_cast<int>(::wxPAPER_ENV_C5), 409},
    {sipName_PAPER_ENV_C6, static_cast<int>(::wxPAPER_ENV_C6), 409},
    {sipName_PAPER_ENV_C65, static_cast<int>(::wxPAPER_ENV_C65), 409},
    {sipName_PAPER_ENV_DL, static_cast<int>(::wxPAPER_ENV_DL), 409},
    {sipName_PAPER_ENV_INVITE, static_cast<int>(::wxPAPER_ENV_INVITE), 409},
    {sipName_PAPER_ENV_ITALY, static_cast<int>(::wxPAPER_ENV_ITALY), 409},
    {sipName_PAPER_ENV_MONARCH, static_cast<int>(::wxPAPER_ENV_MONARCH), 409},
    {sipName_PAPER_ENV_PERSONAL, static_cast<int>(::wxPAPER_ENV_PERSONAL), 409},
    {sipName_PAPER_ESHEET, static_cast<int>(::wxPAPER_ESHEET), 409},
    {sipName_PAPER_EXECUTIVE, static_cast<int>(::wxPAPER_EXECUTIVE), 409},
    {sipName_PAPER_FANFOLD_LGL_GERMAN, static_cast<int>(::wxPAPER_FANFOLD_LGL_GERMAN), 409},
    {sipName_PAPER_FANFOLD_STD_GERMAN, static_cast<int>(::wxPAPER_FANFOLD_STD_GERMAN), 409},
    {sipName_PAPER_FANFOLD_US, static_cast<int>(::wxPAPER_FANFOLD_US), 409},
    {sipName_PAPER_FOLIO, static_cast<int>(::wxPAPER_FOLIO), 409},
    {sipName_PAPER_ISO_B4, static_cast<int>(::wxPAPER_ISO_B4), 409},
    {sipName_PAPER_JAPANESE_POSTCARD, static_cast<int>(::wxPAPER_JAPANESE_POSTCARD), 409},
    {sipName_PAPER_JAPANESE_POSTCARD_ROTATED, static_cast<int>(::wxPAPER_JAPANESE_POSTCARD_ROTATED), 409},
    {sipName_PAPER_JENV_CHOU3, static_cast<int>(::wxPAPER_JENV_CHOU3), 409},
    {sipName_PAPER_JENV_CHOU3_ROTATED, static_cast<int>(::wxPAPER_JENV_CHOU3_ROTATED), 409},
    {sipName_PAPER_JENV_CHOU4, static_cast<int>(::wxPAPER_JENV_CHOU4), 409},
    {sipName_PAPER_JENV_CHOU4_ROTATED, static_cast<int>(::wxPAPER_JENV_CHOU4_ROTATED), 409},
    {sipName_PAPER_JENV_KAKU2, static_cast<int>(::wxPAPER_JENV_KAKU2), 409},
    {sipName_PAPER_JENV_KAKU2_ROTATED, static_cast<int>(::wxPAPER_JENV_KAKU2_ROTATED), 409},
    {sipName_PAPER_JENV_KAKU3, static_cast<int>(::wxPAPER_JENV_KAKU3), 409},
    {sipName_PAPER_JENV_KAKU3_ROTATED, static_cast<int>(::wxPAPER_JENV_KAKU3_ROTATED), 409},
    {sipName_PAPER_JENV_YOU4, static_cast<int>(::wxPAPER_JENV_YOU4), 409},
    {sipName_PAPER_JENV_YOU4_ROTATED, static_cast<int>(::wxPAPER_JENV_YOU4_ROTATED), 409},
    {sipName_PAPER_LEDGER, static_cast<int>(::wxPAPER_LEDGER), 409},
    {sipName_PAPER_LEGAL, static_cast<int>(::wxPAPER_LEGAL), 409},
    {sipName_PAPER_LEGAL_EXTRA, static_cast<int>(::wxPAPER_LEGAL_EXTRA), 409},
    {sipName_PAPER_LETTER, static_cast<int>(::wxPAPER_LETTER), 409},
    {sipName_PAPER_LETTERSMALL, static_cast<int>(::wxPAPER_LETTERSMALL), 409},
    {sipName_PAPER_LETTER_EXTRA, static_cast<int>(::wxPAPER_LETTER_EXTRA), 409},
    {sipName_PAPER_LETTER_EXTRA_TRANSVERSE, static_cast<int>(::wxPAPER_LETTER_EXTRA_TRANSVERSE), 409},
    {sipName_PAPER_LETTER_PLUS, static_cast<int>(::wxPAPER_LETTER_PLUS), 409},
    {sipName_PAPER_LETTER_ROTATED, static_cast<int>(::wxPAPER_LETTER_ROTATED), 409},
    {sipName_PAPER_LETTER_TRANSVERSE, static_cast<int>(::wxPAPER_LETTER_TRANSVERSE), 409},
    {sipName_PAPER_NONE, static_cast<int>(::wxPAPER_NONE), 409},
    {sipName_PAPER_NOTE, static_cast<int>(::wxPAPER_NOTE), 409},
    {sipName_PAPER_P16K, static_cast<int>(::wxPAPER_P16K), 409},
    {sipName_PAPER_P16K_ROTATED, static_cast<int>(::wxPAPER_P16K_ROTATED), 409},
    {sipName_PAPER_P32K, static_cast<int>(::wxPAPER_P32K), 409},
    {sipName_PAPER_P32KBIG, static_cast<int>(::wxPAPER_P32KBIG), 409},
    {sipName_PAPER_P32KBIG_ROTATED, static_cast<int>(::wxPAPER_P32KBIG_ROTATED), 409},
    {sipName_PAPER_P32K_ROTATED, static_cast<int>(::wxPAPER_P32K_ROTATED), 409},
    {sipName_PAPER_PENV_1, static_cast<int>(::wxPAPER_PENV_1), 409},
    {sipName_PAPER_PENV_10, static_cast<int>(::wxPAPER_PENV_10), 409},
    {sipName_PAPER_PENV_10_ROTATED, static_cast<int>(::wxPAPER_PENV_10_ROTATED), 409},
    {sipName_PAPER_PENV_1_ROTATED, static_cast<int>(::wxPAPER_PENV_1_ROTATED), 409},
    {sipName_PAPER_PENV_2, static_cast<int>(::wxPAPER_PENV_2), 409},
    {sipName_PAPER_PENV_2_ROTATED, static_cast<int>(::wxPAPER_PENV_2_ROTATED), 409},
    {sipName_PAPER_PENV_3, static_cast<int>(::wxPAPER_PENV_3), 409},
    {sipName_PAPER_PENV_3_ROTATED, static_cast<int>(::wxPAPER_PENV_3_ROTATED), 409},
    {sipName_PAPER_PENV_4, static_cast<int>(::wxPAPER_PENV_4), 409},
    {sipName_PAPER_PENV_4_ROTATED, static_cast<int>(::wxPAPER_PENV_4_ROTATED), 409},
    {sipName_PAPER_PENV_5, static_cast<int>(::wxPAPER_PENV_5), 409},
    {sipName_PAPER_PENV_5_ROTATED, static_cast<int>(::wxPAPER_PENV_5_ROTATED), 409},
    {sipName_PAPER_PENV_6, static_cast<int>(::wxPAPER_PENV_6), 409},
    {sipName_PAPER_PENV_6_ROTATED, static_cast<int>(::wxPAPER_PENV_6_ROTATED), 409},
    {sipName_PAPER_PENV_7, static_cast<int>(::wxPAPER_PENV_7), 409},
    {sipName_PAPER_PENV_7_ROTATED, static_cast<int>(::wxPAPER_PENV_7_ROTATED), 409},
    {sipName_PAPER_PENV_8, static_cast<int>(::wxPAPER_PENV_8), 409},
    {sipName_PAPER_PENV_8_ROTATED, static_cast<int>(::wxPAPER_PENV_8_ROTATED), 409},
    {sipName_PAPER_PENV_9, static_cast<int>(::wxPAPER_PENV_9), 409},
    {sipName_PAPER_PENV_9_ROTATED, static_cast<int>(::wxPAPER_PENV_9_ROTATED), 409},
    {sipName_PAPER_QUARTO, static_cast<int>(::wxPAPER_QUARTO), 409},
    {sipName_PAPER_STATEMENT, static_cast<int>(::wxPAPER_STATEMENT), 409},
    {sipName_PAPER_TABLOID, static_cast<int>(::wxPAPER_TABLOID), 409},
    {sipName_PAPER_TABLOID_EXTRA, static_cast<int>(::wxPAPER_TABLOID_EXTRA), 409},
    {sipName_PENSTYLE_BDIAGONAL_HATCH, static_cast<int>(::wxPENSTYLE_BDIAGONAL_HATCH), 417},
    {sipName_PENSTYLE_CROSSDIAG_HATCH, static_cast<int>(::wxPENSTYLE_CROSSDIAG_HATCH), 417},
    {sipName_PENSTYLE_CROSS_HATCH, static_cast<int>(::wxPENSTYLE_CROSS_HATCH), 417},
    {sipName_PENSTYLE_DOT, static_cast<int>(::wxPENSTYLE_DOT), 417},
    {sipName_PENSTYLE_DOT_DASH, static_cast<int>(::wxPENSTYLE_DOT_DASH), 417},
    {sipName_PENSTYLE_FDIAGONAL_HATCH, static_cast<int>(::wxPENSTYLE_FDIAGONAL_HATCH), 417},
    {sipName_PENSTYLE_FIRST_HATCH, static_cast<int>(::wxPENSTYLE_FIRST_HATCH), 417},
    {sipName_PENSTYLE_HORIZONTAL_HATCH, static_cast<int>(::wxPENSTYLE_HORIZONTAL_HATCH), 417},
    {sipName_PENSTYLE_INVALID, static_cast<int>(::wxPENSTYLE_INVALID), 417},
    {sipName_PENSTYLE_LAST_HATCH, static_cast<int>(::wxPENSTYLE_LAST_HATCH), 417},
    {sipName_PENSTYLE_LONG_DASH, static_cast<int>(::wxPENSTYLE_LONG_DASH), 417},
    {sipName_PENSTYLE_SHORT_DASH, static_cast<int>(::wxPENSTYLE_SHORT_DASH), 417},
    {sipName_PENSTYLE_SOLID, static_cast<int>(::wxPENSTYLE_SOLID), 417},
    {sipName_PENSTYLE_STIPPLE, static_cast<int>(::wxPENSTYLE_STIPPLE), 417},
    {sipName_PENSTYLE_STIPPLE_MASK, static_cast<int>(::wxPENSTYLE_STIPPLE_MASK), 417},
    {sipName_PENSTYLE_STIPPLE_MASK_OPAQUE, static_cast<int>(::wxPENSTYLE_STIPPLE_MASK_OPAQUE), 417},
    {sipName_PENSTYLE_TRANSPARENT, static_cast<int>(::wxPENSTYLE_TRANSPARENT), 417},
    {sipName_PENSTYLE_USER_DASH, static_cast<int>(::wxPENSTYLE_USER_DASH), 417},
    {sipName_PENSTYLE_VERTICAL_HATCH, static_cast<int>(::wxPENSTYLE_VERTICAL_HATCH), 417},
    {sipName_PEN_QUALITY_DEFAULT, static_cast<int>(::wxPEN_QUALITY_DEFAULT), 416},
    {sipName_PEN_QUALITY_HIGH, static_cast<int>(::wxPEN_QUALITY_HIGH), 416},
    {sipName_PEN_QUALITY_LOW, static_cast<int>(::wxPEN_QUALITY_LOW), 416},
    {sipName_PNG_TYPE_COLOUR, static_cast<int>(::wxPNG_TYPE_COLOUR), 287},
    {sipName_PNG_TYPE_GREY, static_cast<int>(::wxPNG_TYPE_GREY), 287},
    {sipName_PNG_TYPE_GREY_RED, static_cast<int>(::wxPNG_TYPE_GREY_RED), 287},
    {sipName_PNG_TYPE_PALETTE, static_cast<int>(::wxPNG_TYPE_PALETTE), 287},
    {sipName_PORTRAIT, static_cast<int>(::wxPORTRAIT), 450},
    {sipName_PORT_BASE, static_cast<int>(::wxPORT_BASE), 429},
    {sipName_PORT_COCOA, static_cast<int>(::wxPORT_COCOA), 429},
    {sipName_PORT_DFB, static_cast<int>(::wxPORT_DFB), 429},
    {sipName_PORT_GTK, static_cast<int>(::wxPORT_GTK), 429},
    {sipName_PORT_MAC, static_cast<int>(::wxPORT_MAC), 429},
    {sipName_PORT_MOTIF, static_cast<int>(::wxPORT_MOTIF), 429},
    {sipName_PORT_MSW, static_cast<int>(::wxPORT_MSW), 429},
    {sipName_PORT_QT, static_cast<int>(::wxPORT_QT), 429},
    {sipName_PORT_UNKNOWN, static_cast<int>(::wxPORT_UNKNOWN), 429},
    {sipName_PORT_X11, static_cast<int>(::wxPORT_X11), 429},
    {sipName_POWER_BATTERY, static_cast<int>(::wxPOWER_BATTERY), 436},
    {sipName_POWER_RESOURCE_SCREEN, static_cast<int>(::wxPOWER_RESOURCE_SCREEN), 435},
    {sipName_POWER_RESOURCE_SYSTEM, static_cast<int>(::wxPOWER_RESOURCE_SYSTEM), 435},
    {sipName_POWER_SOCKET, static_cast<int>(::wxPOWER_SOCKET), 436},
    {sipName_POWER_UNKNOWN, static_cast<int>(::wxPOWER_UNKNOWN), 436},
    {sipName_PRINTBIN_AUTO, static_cast<int>(::wxPRINTBIN_AUTO), 445},
    {sipName_PRINTBIN_CASSETTE, static_cast<int>(::wxPRINTBIN_CASSETTE), 445},
    {sipName_PRINTBIN_DEFAULT, static_cast<int>(::wxPRINTBIN_DEFAULT), 445},
    {sipName_PRINTBIN_ENVELOPE, static_cast<int>(::wxPRINTBIN_ENVELOPE), 445},
    {sipName_PRINTBIN_ENVMANUAL, static_cast<int>(::wxPRINTBIN_ENVMANUAL), 445},
    {sipName_PRINTBIN_FORMSOURCE, static_cast<int>(::wxPRINTBIN_FORMSOURCE), 445},
    {sipName_PRINTBIN_LARGECAPACITY, static_cast<int>(::wxPRINTBIN_LARGECAPACITY), 445},
    {sipName_PRINTBIN_LARGEFMT, static_cast<int>(::wxPRINTBIN_LARGEFMT), 445},
    {sipName_PRINTBIN_LOWER, static_cast<int>(::wxPRINTBIN_LOWER), 445},
    {sipName_PRINTBIN_MANUAL, static_cast<int>(::wxPRINTBIN_MANUAL), 445},
    {sipName_PRINTBIN_MIDDLE, static_cast<int>(::wxPRINTBIN_MIDDLE), 445},
    {sipName_PRINTBIN_ONLYONE, static_cast<int>(::wxPRINTBIN_ONLYONE), 445},
    {sipName_PRINTBIN_SMALLFMT, static_cast<int>(::wxPRINTBIN_SMALLFMT), 445},
    {sipName_PRINTBIN_TRACTOR, static_cast<int>(::wxPRINTBIN_TRACTOR), 445},
    {sipName_PRINTBIN_USER, static_cast<int>(::wxPRINTBIN_USER), 445},
    {sipName_PRINTER_CANCELLED, static_cast<int>(::wxPRINTER_CANCELLED), 454},
    {sipName_PRINTER_ERROR, static_cast<int>(::wxPRINTER_ERROR), 454},
    {sipName_PRINTER_NO_ERROR, static_cast<int>(::wxPRINTER_NO_ERROR), 454},
    {sipName_PRINT_MODE_FILE, static_cast<int>(::wxPRINT_MODE_FILE), 449},
    {sipName_PRINT_MODE_NONE, static_cast<int>(::wxPRINT_MODE_NONE), 449},
    {sipName_PRINT_MODE_PREVIEW, static_cast<int>(::wxPRINT_MODE_PREVIEW), 449},
    {sipName_PRINT_MODE_PRINTER, static_cast<int>(::wxPRINT_MODE_PRINTER), 449},
    {sipName_PRINT_MODE_STREAM, static_cast<int>(::wxPRINT_MODE_STREAM), 449},
    {sipName_PartRegion, static_cast<int>(::wxPartRegion), 479},
    {sipName_PercentOf, static_cast<int>(::wxPercentOf), 481},
    {sipName_PreviewFrame_AppModal, static_cast<int>(::wxPreviewFrame_AppModal), 443},
    {sipName_PreviewFrame_NonModal, static_cast<int>(::wxPreviewFrame_NonModal), 443},
    {sipName_PreviewFrame_WindowModal, static_cast<int>(::wxPreviewFrame_WindowModal), 443},
    {sipName_RESERVE_SPACE_EVEN_IF_HIDDEN, static_cast<int>(::wxRESERVE_SPACE_EVEN_IF_HIDDEN), 513},
    {sipName_RIGHT, static_cast<int>(::wxRIGHT), 137},
    {sipName_ROLE_NONE, static_cast<int>(::wxROLE_NONE), 2},
    {sipName_ROLE_SYSTEM_ALERT, static_cast<int>(::wxROLE_SYSTEM_ALERT), 2},
    {sipName_ROLE_SYSTEM_ANIMATION, static_cast<int>(::wxROLE_SYSTEM_ANIMATION), 2},
    {sipName_ROLE_SYSTEM_APPLICATION, static_cast<int>(::wxROLE_SYSTEM_APPLICATION), 2},
    {sipName_ROLE_SYSTEM_BORDER, static_cast<int>(::wxROLE_SYSTEM_BORDER), 2},
    {sipName_ROLE_SYSTEM_BUTTONDROPDOWN, static_cast<int>(::wxROLE_SYSTEM_BUTTONDROPDOWN), 2},
    {sipName_ROLE_SYSTEM_BUTTONDROPDOWNGRID, static_cast<int>(::wxROLE_SYSTEM_BUTTONDROPDOWNGRID), 2},
    {sipName_ROLE_SYSTEM_BUTTONMENU, static_cast<int>(::wxROLE_SYSTEM_BUTTONMENU), 2},
    {sipName_ROLE_SYSTEM_CARET, static_cast<int>(::wxROLE_SYSTEM_CARET), 2},
    {sipName_ROLE_SYSTEM_CELL, static_cast<int>(::wxROLE_SYSTEM_CELL), 2},
    {sipName_ROLE_SYSTEM_CHARACTER, static_cast<int>(::wxROLE_SYSTEM_CHARACTER), 2},
    {sipName_ROLE_SYSTEM_CHART, static_cast<int>(::wxROLE_SYSTEM_CHART), 2},
    {sipName_ROLE_SYSTEM_CHECKBUTTON, static_cast<int>(::wxROLE_SYSTEM_CHECKBUTTON), 2},
    {sipName_ROLE_SYSTEM_CLIENT, static_cast<int>(::wxROLE_SYSTEM_CLIENT), 2},
    {sipName_ROLE_SYSTEM_CLOCK, static_cast<int>(::wxROLE_SYSTEM_CLOCK), 2},
    {sipName_ROLE_SYSTEM_COLUMN, static_cast<int>(::wxROLE_SYSTEM_COLUMN), 2},
    {sipName_ROLE_SYSTEM_COLUMNHEADER, static_cast<int>(::wxROLE_SYSTEM_COLUMNHEADER), 2},
    {sipName_ROLE_SYSTEM_COMBOBOX, static_cast<int>(::wxROLE_SYSTEM_COMBOBOX), 2},
    {sipName_ROLE_SYSTEM_CURSOR, static_cast<int>(::wxROLE_SYSTEM_CURSOR), 2},
    {sipName_ROLE_SYSTEM_DIAGRAM, static_cast<int>(::wxROLE_SYSTEM_DIAGRAM), 2},
    {sipName_ROLE_SYSTEM_DIAL, static_cast<int>(::wxROLE_SYSTEM_DIAL), 2},
    {sipName_ROLE_SYSTEM_DIALOG, static_cast<int>(::wxROLE_SYSTEM_DIALOG), 2},
    {sipName_ROLE_SYSTEM_DOCUMENT, static_cast<int>(::wxROLE_SYSTEM_DOCUMENT), 2},
    {sipName_ROLE_SYSTEM_DROPLIST, static_cast<int>(::wxROLE_SYSTEM_DROPLIST), 2},
    {sipName_ROLE_SYSTEM_EQUATION, static_cast<int>(::wxROLE_SYSTEM_EQUATION), 2},
    {sipName_ROLE_SYSTEM_GRAPHIC, static_cast<int>(::wxROLE_SYSTEM_GRAPHIC), 2},
    {sipName_ROLE_SYSTEM_GRIP, static_cast<int>(::wxROLE_SYSTEM_GRIP), 2},
    {sipName_ROLE_SYSTEM_GROUPING, static_cast<int>(::wxROLE_SYSTEM_GROUPING), 2},
    {sipName_ROLE_SYSTEM_HELPBALLOON, static_cast<int>(::wxROLE_SYSTEM_HELPBALLOON), 2},
    {sipName_ROLE_SYSTEM_HOTKEYFIELD, static_cast<int>(::wxROLE_SYSTEM_HOTKEYFIELD), 2},
    {sipName_ROLE_SYSTEM_INDICATOR, static_cast<int>(::wxROLE_SYSTEM_INDICATOR), 2},
    {sipName_ROLE_SYSTEM_LINK, static_cast<int>(::wxROLE_SYSTEM_LINK), 2},
    {sipName_ROLE_SYSTEM_LIST, static_cast<int>(::wxROLE_SYSTEM_LIST), 2},
    {sipName_ROLE_SYSTEM_LISTITEM, static_cast<int>(::wxROLE_SYSTEM_LISTITEM), 2},
    {sipName_ROLE_SYSTEM_MENUBAR, static_cast<int>(::wxROLE_SYSTEM_MENUBAR), 2},
    {sipName_ROLE_SYSTEM_MENUITEM, static_cast<int>(::wxROLE_SYSTEM_MENUITEM), 2},
    {sipName_ROLE_SYSTEM_MENUPOPUP, static_cast<int>(::wxROLE_SYSTEM_MENUPOPUP), 2},
    {sipName_ROLE_SYSTEM_OUTLINE, static_cast<int>(::wxROLE_SYSTEM_OUTLINE), 2},
    {sipName_ROLE_SYSTEM_OUTLINEITEM, static_cast<int>(::wxROLE_SYSTEM_OUTLINEITEM), 2},
    {sipName_ROLE_SYSTEM_PAGETAB, static_cast<int>(::wxROLE_SYSTEM_PAGETAB), 2},
    {sipName_ROLE_SYSTEM_PAGETABLIST, static_cast<int>(::wxROLE_SYSTEM_PAGETABLIST), 2},
    {sipName_ROLE_SYSTEM_PANE, static_cast<int>(::wxROLE_SYSTEM_PANE), 2},
    {sipName_ROLE_SYSTEM_PROGRESSBAR, static_cast<int>(::wxROLE_SYSTEM_PROGRESSBAR), 2},
    {sipName_ROLE_SYSTEM_PROPERTYPAGE, static_cast<int>(::wxROLE_SYSTEM_PROPERTYPAGE), 2},
    {sipName_ROLE_SYSTEM_PUSHBUTTON, static_cast<int>(::wxROLE_SYSTEM_PUSHBUTTON), 2},
    {sipName_ROLE_SYSTEM_RADIOBUTTON, static_cast<int>(::wxROLE_SYSTEM_RADIOBUTTON), 2},
    {sipName_ROLE_SYSTEM_ROW, static_cast<int>(::wxROLE_SYSTEM_ROW), 2},
    {sipName_ROLE_SYSTEM_ROWHEADER, static_cast<int>(::wxROLE_SYSTEM_ROWHEADER), 2},
    {sipName_ROLE_SYSTEM_SCROLLBAR, static_cast<int>(::wxROLE_SYSTEM_SCROLLBAR), 2},
    {sipName_ROLE_SYSTEM_SEPARATOR, static_cast<int>(::wxROLE_SYSTEM_SEPARATOR), 2},
    {sipName_ROLE_SYSTEM_SLIDER, static_cast<int>(::wxROLE_SYSTEM_SLIDER), 2},
    {sipName_ROLE_SYSTEM_SOUND, static_cast<int>(::wxROLE_SYSTEM_SOUND), 2},
    {sipName_ROLE_SYSTEM_SPINBUTTON, static_cast<int>(::wxROLE_SYSTEM_SPINBUTTON), 2},
    {sipName_ROLE_SYSTEM_STATICTEXT, static_cast<int>(::wxROLE_SYSTEM_STATICTEXT), 2},
    {sipName_ROLE_SYSTEM_STATUSBAR, static_cast<int>(::wxROLE_SYSTEM_STATUSBAR), 2},
    {sipName_ROLE_SYSTEM_TABLE, static_cast<int>(::wxROLE_SYSTEM_TABLE), 2},
    {sipName_ROLE_SYSTEM_TEXT, static_cast<int>(::wxROLE_SYSTEM_TEXT), 2},
    {sipName_ROLE_SYSTEM_TITLEBAR, static_cast<int>(::wxROLE_SYSTEM_TITLEBAR), 2},
    {sipName_ROLE_SYSTEM_TOOLBAR, static_cast<int>(::wxROLE_SYSTEM_TOOLBAR), 2},
    {sipName_ROLE_SYSTEM_TOOLTIP, static_cast<int>(::wxROLE_SYSTEM_TOOLTIP), 2},
    {sipName_ROLE_SYSTEM_WHITESPACE, static_cast<int>(::wxROLE_SYSTEM_WHITESPACE), 2},
    {sipName_ROLE_SYSTEM_WINDOW, static_cast<int>(::wxROLE_SYSTEM_WINDOW), 2},
    {sipName_Right, static_cast<int>(::wxRight), 146},
    {sipName_RightOf, static_cast<int>(::wxRightOf), 481},
    {sipName_SET, static_cast<int>(::wxSET), 470},
    {sipName_SHAPED, static_cast<int>(::wxSHAPED), 552},
    {sipName_SHOW_EFFECT_BLEND, static_cast<int>(::wxSHOW_EFFECT_BLEND), 503},
    {sipName_SHOW_EFFECT_EXPAND, static_cast<int>(::wxSHOW_EFFECT_EXPAND), 503},
    {sipName_SHOW_EFFECT_MAX, static_cast<int>(::wxSHOW_EFFECT_MAX), 503},
    {sipName_SHOW_EFFECT_NONE, static_cast<int>(::wxSHOW_EFFECT_NONE), 503},
    {sipName_SHOW_EFFECT_ROLL_TO_BOTTOM, static_cast<int>(::wxSHOW_EFFECT_ROLL_TO_BOTTOM), 503},
    {sipName_SHOW_EFFECT_ROLL_TO_LEFT, static_cast<int>(::wxSHOW_EFFECT_ROLL_TO_LEFT), 503},
    {sipName_SHOW_EFFECT_ROLL_TO_RIGHT, static_cast<int>(::wxSHOW_EFFECT_ROLL_TO_RIGHT), 503},
    {sipName_SHOW_EFFECT_ROLL_TO_TOP, static_cast<int>(::wxSHOW_EFFECT_ROLL_TO_TOP), 503},
    {sipName_SHOW_EFFECT_SLIDE_TO_BOTTOM, static_cast<int>(::wxSHOW_EFFECT_SLIDE_TO_BOTTOM), 503},
    {sipName_SHOW_EFFECT_SLIDE_TO_LEFT, static_cast<int>(::wxSHOW_EFFECT_SLIDE_TO_LEFT), 503},
    {sipName_SHOW_EFFECT_SLIDE_TO_RIGHT, static_cast<int>(::wxSHOW_EFFECT_SLIDE_TO_RIGHT), 503},
    {sipName_SHOW_EFFECT_SLIDE_TO_TOP, static_cast<int>(::wxSHOW_EFFECT_SLIDE_TO_TOP), 503},
    {sipName_SHOW_SB_ALWAYS, static_cast<int>(::wxSHOW_SB_ALWAYS), 495},
    {sipName_SHOW_SB_DEFAULT, static_cast<int>(::wxSHOW_SB_DEFAULT), 495},
    {sipName_SHOW_SB_NEVER, static_cast<int>(::wxSHOW_SB_NEVER), 495},
    {sipName_SHRINK, static_cast<int>(::wxSHRINK), 552},
    {sipName_SHUTDOWN_FORCE, static_cast<int>(::wxSHUTDOWN_FORCE), 505},
    {sipName_SHUTDOWN_LOGOFF, static_cast<int>(::wxSHUTDOWN_LOGOFF), 505},
    {sipName_SHUTDOWN_POWEROFF, static_cast<int>(::wxSHUTDOWN_POWEROFF), 505},
    {sipName_SHUTDOWN_REBOOT, static_cast<int>(::wxSHUTDOWN_REBOOT), 505},
    {sipName_SIGABRT, static_cast<int>(::wxSIGABRT), 506},
    {sipName_SIGALRM, static_cast<int>(::wxSIGALRM), 506},
    {sipName_SIGBUS, static_cast<int>(::wxSIGBUS), 506},
    {sipName_SIGEMT, static_cast<int>(::wxSIGEMT), 506},
    {sipName_SIGFPE, static_cast<int>(::wxSIGFPE), 506},
    {sipName_SIGHUP, static_cast<int>(::wxSIGHUP), 506},
    {sipName_SIGILL, static_cast<int>(::wxSIGILL), 506},
    {sipName_SIGINT, static_cast<int>(::wxSIGINT), 506},
    {sipName_SIGKILL, static_cast<int>(::wxSIGKILL), 506},
    {sipName_SIGNONE, static_cast<int>(::wxSIGNONE), 506},
    {sipName_SIGPIPE, static_cast<int>(::wxSIGPIPE), 506},
    {sipName_SIGQUIT, static_cast<int>(::wxSIGQUIT), 506},
    {sipName_SIGSEGV, static_cast<int>(::wxSIGSEGV), 506},
    {sipName_SIGSYS, static_cast<int>(::wxSIGSYS), 506},
    {sipName_SIGTERM, static_cast<int>(::wxSIGTERM), 506},
    {sipName_SIGTRAP, static_cast<int>(::wxSIGTRAP), 506},
    {sipName_SIZER_FLAG_BITS_MASK, static_cast<int>(::wxSIZER_FLAG_BITS_MASK), 513},
    {sipName_SOUTH, static_cast<int>(::wxSOUTH), 137},
    {sipName_SPLIT_HORIZONTAL, static_cast<int>(::wxSPLIT_HORIZONTAL), 524},
    {sipName_SPLIT_VERTICAL, static_cast<int>(::wxSPLIT_VERTICAL), 524},
    {sipName_SRC_INVERT, static_cast<int>(::wxSRC_INVERT), 470},
    {sipName_STOCK_FOR_BUTTON, static_cast<int>(::wxSTOCK_FOR_BUTTON), 546},
    {sipName_STOCK_NOFLAGS, static_cast<int>(::wxSTOCK_NOFLAGS), 546},
    {sipName_STOCK_WITHOUT_ELLIPSIS, static_cast<int>(::wxSTOCK_WITHOUT_ELLIPSIS), 546},
    {sipName_STOCK_WITH_ACCELERATOR, static_cast<int>(::wxSTOCK_WITH_ACCELERATOR), 546},
    {sipName_STOCK_WITH_MNEMONIC, static_cast<int>(::wxSTOCK_WITH_MNEMONIC), 546},
    {sipName_STREAM_EOF, static_cast<int>(::wxSTREAM_EOF), 551},
    {sipName_STREAM_NO_ERROR, static_cast<int>(::wxSTREAM_NO_ERROR), 551},
    {sipName_STREAM_READ_ERROR, static_cast<int>(::wxSTREAM_READ_ERROR), 551},
    {sipName_STREAM_WRITE_ERROR, static_cast<int>(::wxSTREAM_WRITE_ERROR), 551},
    {sipName_STRETCH_MASK, static_cast<int>(::wxSTRETCH_MASK), 552},
    {sipName_STRETCH_NOT, static_cast<int>(::wxSTRETCH_NOT), 552},
    {sipName_SVG_SHAPE_RENDERING_AUTO, static_cast<int>(::wxSVG_SHAPE_RENDERING_AUTO), 490},
    {sipName_SVG_SHAPE_RENDERING_CRISP_EDGES, static_cast<int>(::wxSVG_SHAPE_RENDERING_CRISP_EDGES), 490},
    {sipName_SVG_SHAPE_RENDERING_GEOMETRIC_PRECISION, static_cast<int>(::wxSVG_SHAPE_RENDERING_GEOMETRIC_PRECISION), 490},
    {sipName_SVG_SHAPE_RENDERING_OPTIMISE_SPEED, static_cast<int>(::wxSVG_SHAPE_RENDERING_OPTIMISE_SPEED), 490},
    {sipName_SVG_SHAPE_RENDERING_OPTIMIZE_SPEED, static_cast<int>(::wxSVG_SHAPE_RENDERING_OPTIMIZE_SPEED), 490},
    {sipName_SYS_ANSI_FIXED_FONT, static_cast<int>(::wxSYS_ANSI_FIXED_FONT), 559},
    {sipName_SYS_ANSI_VAR_FONT, static_cast<int>(::wxSYS_ANSI_VAR_FONT), 559},
    {sipName_SYS_BORDER_X, static_cast<int>(::wxSYS_BORDER_X), 560},
    {sipName_SYS_BORDER_Y, static_cast<int>(::wxSYS_BORDER_Y), 560},
    {sipName_SYS_CAN_DRAW_FRAME_DECORATIONS, static_cast<int>(::wxSYS_CAN_DRAW_FRAME_DECORATIONS), 558},
    {sipName_SYS_CAN_ICONIZE_FRAME, static_cast<int>(::wxSYS_CAN_ICONIZE_FRAME), 558},
    {sipName_SYS_CAPTION_Y, static_cast<int>(::wxSYS_CAPTION_Y), 560},
    {sipName_SYS_CARET_OFF_MSEC, static_cast<int>(::wxSYS_CARET_OFF_MSEC), 560},
    {sipName_SYS_CARET_ON_MSEC, static_cast<int>(::wxSYS_CARET_ON_MSEC), 560},
    {sipName_SYS_CARET_TIMEOUT_MSEC, static_cast<int>(::wxSYS_CARET_TIMEOUT_MSEC), 560},
    {sipName_SYS_COLOUR_3DDKSHADOW, static_cast<int>(::wxSYS_COLOUR_3DDKSHADOW), 557},
    {sipName_SYS_COLOUR_3DFACE, static_cast<int>(::wxSYS_COLOUR_3DFACE), 557},
    {sipName_SYS_COLOUR_3DHIGHLIGHT, static_cast<int>(::wxSYS_COLOUR_3DHIGHLIGHT), 557},
    {sipName_SYS_COLOUR_3DHILIGHT, static_cast<int>(::wxSYS_COLOUR_3DHILIGHT), 557},
    {sipName_SYS_COLOUR_3DLIGHT, static_cast<int>(::wxSYS_COLOUR_3DLIGHT), 557},
    {sipName_SYS_COLOUR_3DSHADOW, static_cast<int>(::wxSYS_COLOUR_3DSHADOW), 557},
    {sipName_SYS_COLOUR_ACTIVEBORDER, static_cast<int>(::wxSYS_COLOUR_ACTIVEBORDER), 557},
    {sipName_SYS_COLOUR_ACTIVECAPTION, static_cast<int>(::wxSYS_COLOUR_ACTIVECAPTION), 557},
    {sipName_SYS_COLOUR_APPWORKSPACE, static_cast<int>(::wxSYS_COLOUR_APPWORKSPACE), 557},
    {sipName_SYS_COLOUR_BACKGROUND, static_cast<int>(::wxSYS_COLOUR_BACKGROUND), 557},
    {sipName_SYS_COLOUR_BTNFACE, static_cast<int>(::wxSYS_COLOUR_BTNFACE), 557},
    {sipName_SYS_COLOUR_BTNHIGHLIGHT, static_cast<int>(::wxSYS_COLOUR_BTNHIGHLIGHT), 557},
    {sipName_SYS_COLOUR_BTNHILIGHT, static_cast<int>(::wxSYS_COLOUR_BTNHILIGHT), 557},
    {sipName_SYS_COLOUR_BTNSHADOW, static_cast<int>(::wxSYS_COLOUR_BTNSHADOW), 557},
    {sipName_SYS_COLOUR_BTNTEXT, static_cast<int>(::wxSYS_COLOUR_BTNTEXT), 557},
    {sipName_SYS_COLOUR_CAPTIONTEXT, static_cast<int>(::wxSYS_COLOUR_CAPTIONTEXT), 557},
    {sipName_SYS_COLOUR_DESKTOP, static_cast<int>(::wxSYS_COLOUR_DESKTOP), 557},
    {sipName_SYS_COLOUR_FRAMEBK, static_cast<int>(::wxSYS_COLOUR_FRAMEBK), 557},
    {sipName_SYS_COLOUR_GRADIENTACTIVECAPTION, static_cast<int>(::wxSYS_COLOUR_GRADIENTACTIVECAPTION), 557},
    {sipName_SYS_COLOUR_GRADIENTINACTIVECAPTION, static_cast<int>(::wxSYS_COLOUR_GRADIENTINACTIVECAPTION), 557},
    {sipName_SYS_COLOUR_GRAYTEXT, static_cast<int>(::wxSYS_COLOUR_GRAYTEXT), 557},
    {sipName_SYS_COLOUR_HIGHLIGHT, static_cast<int>(::wxSYS_COLOUR_HIGHLIGHT), 557},
    {sipName_SYS_COLOUR_HIGHLIGHTTEXT, static_cast<int>(::wxSYS_COLOUR_HIGHLIGHTTEXT), 557},
    {sipName_SYS_COLOUR_HOTLIGHT, static_cast<int>(::wxSYS_COLOUR_HOTLIGHT), 557},
    {sipName_SYS_COLOUR_INACTIVEBORDER, static_cast<int>(::wxSYS_COLOUR_INACTIVEBORDER), 557},
    {sipName_SYS_COLOUR_INACTIVECAPTION, static_cast<int>(::wxSYS_COLOUR_INACTIVECAPTION), 557},
    {sipName_SYS_COLOUR_INACTIVECAPTIONTEXT, static_cast<int>(::wxSYS_COLOUR_INACTIVECAPTIONTEXT), 557},
    {sipName_SYS_COLOUR_INFOBK, static_cast<int>(::wxSYS_COLOUR_INFOBK), 557},
    {sipName_SYS_COLOUR_INFOTEXT, static_cast<int>(::wxSYS_COLOUR_INFOTEXT), 557},
    {sipName_SYS_COLOUR_LISTBOX, static_cast<int>(::wxSYS_COLOUR_LISTBOX), 557},
    {sipName_SYS_COLOUR_LISTBOXHIGHLIGHTTEXT, static_cast<int>(::wxSYS_COLOUR_LISTBOXHIGHLIGHTTEXT), 557},
    {sipName_SYS_COLOUR_LISTBOXTEXT, static_cast<int>(::wxSYS_COLOUR_LISTBOXTEXT), 557},
    {sipName_SYS_COLOUR_MENU, static_cast<int>(::wxSYS_COLOUR_MENU), 557},
    {sipName_SYS_COLOUR_MENUBAR, static_cast<int>(::wxSYS_COLOUR_MENUBAR), 557},
    {sipName_SYS_COLOUR_MENUHILIGHT, static_cast<int>(::wxSYS_COLOUR_MENUHILIGHT), 557},
    {sipName_SYS_COLOUR_MENUTEXT, static_cast<int>(::wxSYS_COLOUR_MENUTEXT), 557},
    {sipName_SYS_COLOUR_SCROLLBAR, static_cast<int>(::wxSYS_COLOUR_SCROLLBAR), 557},
    {sipName_SYS_COLOUR_WINDOW, static_cast<int>(::wxSYS_COLOUR_WINDOW), 557},
    {sipName_SYS_COLOUR_WINDOWFRAME, static_cast<int>(::wxSYS_COLOUR_WINDOWFRAME), 557},
    {sipName_SYS_COLOUR_WINDOWTEXT, static_cast<int>(::wxSYS_COLOUR_WINDOWTEXT), 557},
    {sipName_SYS_CURSOR_X, static_cast<int>(::wxSYS_CURSOR_X), 560},
    {sipName_SYS_CURSOR_Y, static_cast<int>(::wxSYS_CURSOR_Y), 560},
    {sipName_SYS_DCLICK_MSEC, static_cast<int>(::wxSYS_DCLICK_MSEC), 560},
    {sipName_SYS_DCLICK_X, static_cast<int>(::wxSYS_DCLICK_X), 560},
    {sipName_SYS_DCLICK_Y, static_cast<int>(::wxSYS_DCLICK_Y), 560},
    {sipName_SYS_DEFAULT_GUI_FONT, static_cast<int>(::wxSYS_DEFAULT_GUI_FONT), 559},
    {sipName_SYS_DEVICE_DEFAULT_FONT, static_cast<int>(::wxSYS_DEVICE_DEFAULT_FONT), 559},
    {sipName_SYS_DRAG_X, static_cast<int>(::wxSYS_DRAG_X), 560},
    {sipName_SYS_DRAG_Y, static_cast<int>(::wxSYS_DRAG_Y), 560},
    {sipName_SYS_EDGE_X, static_cast<int>(::wxSYS_EDGE_X), 560},
    {sipName_SYS_EDGE_Y, static_cast<int>(::wxSYS_EDGE_Y), 560},
    {sipName_SYS_FRAMESIZE_X, static_cast<int>(::wxSYS_FRAMESIZE_X), 560},
    {sipName_SYS_FRAMESIZE_Y, static_cast<int>(::wxSYS_FRAMESIZE_Y), 560},
    {sipName_SYS_HSCROLL_ARROW_X, static_cast<int>(::wxSYS_HSCROLL_ARROW_X), 560},
    {sipName_SYS_HSCROLL_ARROW_Y, static_cast<int>(::wxSYS_HSCROLL_ARROW_Y), 560},
    {sipName_SYS_HSCROLL_Y, static_cast<int>(::wxSYS_HSCROLL_Y), 560},
    {sipName_SYS_HTHUMB_X, static_cast<int>(::wxSYS_HTHUMB_X), 560},
    {sipName_SYS_ICONSPACING_X, static_cast<int>(::wxSYS_ICONSPACING_X), 560},
    {sipName_SYS_ICONSPACING_Y, static_cast<int>(::wxSYS_ICONSPACING_Y), 560},
    {sipName_SYS_ICON_X, static_cast<int>(::wxSYS_ICON_X), 560},
    {sipName_SYS_ICON_Y, static_cast<int>(::wxSYS_ICON_Y), 560},
    {sipName_SYS_MENU_Y, static_cast<int>(::wxSYS_MENU_Y), 560},
    {sipName_SYS_MOUSE_BUTTONS, static_cast<int>(::wxSYS_MOUSE_BUTTONS), 560},
    {sipName_SYS_NETWORK_PRESENT, static_cast<int>(::wxSYS_NETWORK_PRESENT), 560},
    {sipName_SYS_OEM_FIXED_FONT, static_cast<int>(::wxSYS_OEM_FIXED_FONT), 559},
    {sipName_SYS_PENWINDOWS_PRESENT, static_cast<int>(::wxSYS_PENWINDOWS_PRESENT), 560},
    {sipName_SYS_SCREEN_DESKTOP, static_cast<int>(::wxSYS_SCREEN_DESKTOP), 562},
    {sipName_SYS_SCREEN_NONE, static_cast<int>(::wxSYS_SCREEN_NONE), 562},
    {sipName_SYS_SCREEN_PDA, static_cast<int>(::wxSYS_SCREEN_PDA), 562},
    {sipName_SYS_SCREEN_SMALL, static_cast<int>(::wxSYS_SCREEN_SMALL), 562},
    {sipName_SYS_SCREEN_TINY, static_cast<int>(::wxSYS_SCREEN_TINY), 562},
    {sipName_SYS_SCREEN_X, static_cast<int>(::wxSYS_SCREEN_X), 560},
    {sipName_SYS_SCREEN_Y, static_cast<int>(::wxSYS_SCREEN_Y), 560},
    {sipName_SYS_SHOW_SOUNDS, static_cast<int>(::wxSYS_SHOW_SOUNDS), 560},
    {sipName_SYS_SMALLICON_X, static_cast<int>(::wxSYS_SMALLICON_X), 560},
    {sipName_SYS_SMALLICON_Y, static_cast<int>(::wxSYS_SMALLICON_Y), 560},
    {sipName_SYS_SWAP_BUTTONS, static_cast<int>(::wxSYS_SWAP_BUTTONS), 560},
    {sipName_SYS_SYSTEM_FONT, static_cast<int>(::wxSYS_SYSTEM_FONT), 559},
    {sipName_SYS_TABLET_PRESENT, static_cast<int>(::wxSYS_TABLET_PRESENT), 558},
    {sipName_SYS_VSCROLL_ARROW_X, static_cast<int>(::wxSYS_VSCROLL_ARROW_X), 560},
    {sipName_SYS_VSCROLL_ARROW_Y, static_cast<int>(::wxSYS_VSCROLL_ARROW_Y), 560},
    {sipName_SYS_VSCROLL_X, static_cast<int>(::wxSYS_VSCROLL_X), 560},
    {sipName_SYS_VTHUMB_Y, static_cast<int>(::wxSYS_VTHUMB_Y), 560},
    {sipName_SYS_WINDOWMIN_X, static_cast<int>(::wxSYS_WINDOWMIN_X), 560},
    {sipName_SYS_WINDOWMIN_Y, static_cast<int>(::wxSYS_WINDOWMIN_Y), 560},
    {sipName_SameAs, static_cast<int>(::wxSameAs), 481},
    {sipName_TEXT_ALIGNMENT_CENTER, static_cast<int>(::wxTEXT_ALIGNMENT_CENTER), 568},
    {sipName_TEXT_ALIGNMENT_CENTRE, static_cast<int>(::wxTEXT_ALIGNMENT_CENTRE), 568},
    {sipName_TEXT_ALIGNMENT_DEFAULT, static_cast<int>(::wxTEXT_ALIGNMENT_DEFAULT), 568},
    {sipName_TEXT_ALIGNMENT_JUSTIFIED, static_cast<int>(::wxTEXT_ALIGNMENT_JUSTIFIED), 568},
    {sipName_TEXT_ALIGNMENT_LEFT, static_cast<int>(::wxTEXT_ALIGNMENT_LEFT), 568},
    {sipName_TEXT_ALIGNMENT_RIGHT, static_cast<int>(::wxTEXT_ALIGNMENT_RIGHT), 568},
    {sipName_TEXT_ATTR_ALIGNMENT, static_cast<int>(::wxTEXT_ATTR_ALIGNMENT), 571},
    {sipName_TEXT_ATTR_ALL, static_cast<int>(::wxTEXT_ATTR_ALL), 571},
    {sipName_TEXT_ATTR_AVOID_PAGE_BREAK_AFTER, static_cast<int>(::wxTEXT_ATTR_AVOID_PAGE_BREAK_AFTER), 571},
    {sipName_TEXT_ATTR_AVOID_PAGE_BREAK_BEFORE, static_cast<int>(::wxTEXT_ATTR_AVOID_PAGE_BREAK_BEFORE), 571},
    {sipName_TEXT_ATTR_BACKGROUND_COLOUR, static_cast<int>(::wxTEXT_ATTR_BACKGROUND_COLOUR), 571},
    {sipName_TEXT_ATTR_BULLET, static_cast<int>(::wxTEXT_ATTR_BULLET), 571},
    {sipName_TEXT_ATTR_BULLET_NAME, static_cast<int>(::wxTEXT_ATTR_BULLET_NAME), 571},
    {sipName_TEXT_ATTR_BULLET_NUMBER, static_cast<int>(::wxTEXT_ATTR_BULLET_NUMBER), 571},
    {sipName_TEXT_ATTR_BULLET_STYLE, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE), 571},
    {sipName_TEXT_ATTR_BULLET_STYLE_ALIGN_CENTRE, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_ALIGN_CENTRE), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_ALIGN_LEFT, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_ALIGN_LEFT), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_ALIGN_RIGHT, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_ALIGN_RIGHT), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_ARABIC, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_ARABIC), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_BITMAP, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_BITMAP), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_CONTINUATION, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_CONTINUATION), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_LETTERS_LOWER, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_LETTERS_LOWER), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_LETTERS_UPPER, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_LETTERS_UPPER), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_NONE, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_NONE), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_OUTLINE, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_OUTLINE), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_PARENTHESES, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_PARENTHESES), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_PERIOD, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_PERIOD), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_RIGHT_PARENTHESIS, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_RIGHT_PARENTHESIS), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_ROMAN_LOWER, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_ROMAN_LOWER), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_ROMAN_UPPER, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_ROMAN_UPPER), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_STANDARD, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_STANDARD), 569},
    {sipName_TEXT_ATTR_BULLET_STYLE_SYMBOL, static_cast<int>(::wxTEXT_ATTR_BULLET_STYLE_SYMBOL), 569},
    {sipName_TEXT_ATTR_BULLET_TEXT, static_cast<int>(::wxTEXT_ATTR_BULLET_TEXT), 571},
    {sipName_TEXT_ATTR_CHARACTER, static_cast<int>(::wxTEXT_ATTR_CHARACTER), 571},
    {sipName_TEXT_ATTR_CHARACTER_STYLE_NAME, static_cast<int>(::wxTEXT_ATTR_CHARACTER_STYLE_NAME), 571},
    {sipName_TEXT_ATTR_EFFECTS, static_cast<int>(::wxTEXT_ATTR_EFFECTS), 571},
    {sipName_TEXT_ATTR_EFFECT_CAPITALS, static_cast<int>(::wxTEXT_ATTR_EFFECT_CAPITALS), 570},
    {sipName_TEXT_ATTR_EFFECT_DOUBLE_STRIKETHROUGH, static_cast<int>(::wxTEXT_ATTR_EFFECT_DOUBLE_STRIKETHROUGH), 570},
    {sipName_TEXT_ATTR_EFFECT_EMBOSS, static_cast<int>(::wxTEXT_ATTR_EFFECT_EMBOSS), 570},
    {sipName_TEXT_ATTR_EFFECT_ENGRAVE, static_cast<int>(::wxTEXT_ATTR_EFFECT_ENGRAVE), 570},
    {sipName_TEXT_ATTR_EFFECT_NONE, static_cast<int>(::wxTEXT_ATTR_EFFECT_NONE), 570},
    {sipName_TEXT_ATTR_EFFECT_OUTLINE, static_cast<int>(::wxTEXT_ATTR_EFFECT_OUTLINE), 570},
    {sipName_TEXT_ATTR_EFFECT_RTL, static_cast<int>(::wxTEXT_ATTR_EFFECT_RTL), 570},
    {sipName_TEXT_ATTR_EFFECT_SHADOW, static_cast<int>(::wxTEXT_ATTR_EFFECT_SHADOW), 570},
    {sipName_TEXT_ATTR_EFFECT_SMALL_CAPITALS, static_cast<int>(::wxTEXT_ATTR_EFFECT_SMALL_CAPITALS), 570},
    {sipName_TEXT_ATTR_EFFECT_STRIKETHROUGH, static_cast<int>(::wxTEXT_ATTR_EFFECT_STRIKETHROUGH), 570},
    {sipName_TEXT_ATTR_EFFECT_SUBSCRIPT, static_cast<int>(::wxTEXT_ATTR_EFFECT_SUBSCRIPT), 570},
    {sipName_TEXT_ATTR_EFFECT_SUPERSCRIPT, static_cast<int>(::wxTEXT_ATTR_EFFECT_SUPERSCRIPT), 570},
    {sipName_TEXT_ATTR_EFFECT_SUPPRESS_HYPHENATION, static_cast<int>(::wxTEXT_ATTR_EFFECT_SUPPRESS_HYPHENATION), 570},
    {sipName_TEXT_ATTR_FONT, static_cast<int>(::wxTEXT_ATTR_FONT), 571},
    {sipName_TEXT_ATTR_FONT_ENCODING, static_cast<int>(::wxTEXT_ATTR_FONT_ENCODING), 571},
    {sipName_TEXT_ATTR_FONT_FACE, static_cast<int>(::wxTEXT_ATTR_FONT_FACE), 571},
    {sipName_TEXT_ATTR_FONT_FAMILY, static_cast<int>(::wxTEXT_ATTR_FONT_FAMILY), 571},
    {sipName_TEXT_ATTR_FONT_ITALIC, static_cast<int>(::wxTEXT_ATTR_FONT_ITALIC), 571},
    {sipName_TEXT_ATTR_FONT_PIXEL_SIZE, static_cast<int>(::wxTEXT_ATTR_FONT_PIXEL_SIZE), 571},
    {sipName_TEXT_ATTR_FONT_POINT_SIZE, static_cast<int>(::wxTEXT_ATTR_FONT_POINT_SIZE), 571},
    {sipName_TEXT_ATTR_FONT_SIZE, static_cast<int>(::wxTEXT_ATTR_FONT_SIZE), 571},
    {sipName_TEXT_ATTR_FONT_STRIKETHROUGH, static_cast<int>(::wxTEXT_ATTR_FONT_STRIKETHROUGH), 571},
    {sipName_TEXT_ATTR_FONT_UNDERLINE, static_cast<int>(::wxTEXT_ATTR_FONT_UNDERLINE), 571},
    {sipName_TEXT_ATTR_FONT_WEIGHT, static_cast<int>(::wxTEXT_ATTR_FONT_WEIGHT), 571},
    {sipName_TEXT_ATTR_LEFT_INDENT, static_cast<int>(::wxTEXT_ATTR_LEFT_INDENT), 571},
    {sipName_TEXT_ATTR_LINE_SPACING, static_cast<int>(::wxTEXT_ATTR_LINE_SPACING), 571},
    {sipName_TEXT_ATTR_LINE_SPACING_HALF, static_cast<int>(::wxTEXT_ATTR_LINE_SPACING_HALF), 572},
    {sipName_TEXT_ATTR_LINE_SPACING_NORMAL, static_cast<int>(::wxTEXT_ATTR_LINE_SPACING_NORMAL), 572},
    {sipName_TEXT_ATTR_LINE_SPACING_TWICE, static_cast<int>(::wxTEXT_ATTR_LINE_SPACING_TWICE), 572},
    {sipName_TEXT_ATTR_LIST_STYLE_NAME, static_cast<int>(::wxTEXT_ATTR_LIST_STYLE_NAME), 571},
    {sipName_TEXT_ATTR_OUTLINE_LEVEL, static_cast<int>(::wxTEXT_ATTR_OUTLINE_LEVEL), 571},
    {sipName_TEXT_ATTR_PAGE_BREAK, static_cast<int>(::wxTEXT_ATTR_PAGE_BREAK), 571},
    {sipName_TEXT_ATTR_PARAGRAPH, static_cast<int>(::wxTEXT_ATTR_PARAGRAPH), 571},
    {sipName_TEXT_ATTR_PARAGRAPH_STYLE_NAME, static_cast<int>(::wxTEXT_ATTR_PARAGRAPH_STYLE_NAME), 571},
    {sipName_TEXT_ATTR_PARA_SPACING_AFTER, static_cast<int>(::wxTEXT_ATTR_PARA_SPACING_AFTER), 571},
    {sipName_TEXT_ATTR_PARA_SPACING_BEFORE, static_cast<int>(::wxTEXT_ATTR_PARA_SPACING_BEFORE), 571},
    {sipName_TEXT_ATTR_RIGHT_INDENT, static_cast<int>(::wxTEXT_ATTR_RIGHT_INDENT), 571},
    {sipName_TEXT_ATTR_TABS, static_cast<int>(::wxTEXT_ATTR_TABS), 571},
    {sipName_TEXT_ATTR_TEXT_COLOUR, static_cast<int>(::wxTEXT_ATTR_TEXT_COLOUR), 571},
    {sipName_TEXT_ATTR_UNDERLINE_DOUBLE, static_cast<int>(::wxTEXT_ATTR_UNDERLINE_DOUBLE), 573},
    {sipName_TEXT_ATTR_UNDERLINE_NONE, static_cast<int>(::wxTEXT_ATTR_UNDERLINE_NONE), 573},
    {sipName_TEXT_ATTR_UNDERLINE_SOLID, static_cast<int>(::wxTEXT_ATTR_UNDERLINE_SOLID), 573},
    {sipName_TEXT_ATTR_UNDERLINE_SPECIAL, static_cast<int>(::wxTEXT_ATTR_UNDERLINE_SPECIAL), 573},
    {sipName_TEXT_ATTR_URL, static_cast<int>(::wxTEXT_ATTR_URL), 571},
    {sipName_TE_HT_BEFORE, static_cast<int>(::wxTE_HT_BEFORE), 577},
    {sipName_TE_HT_BELOW, static_cast<int>(::wxTE_HT_BELOW), 577},
    {sipName_TE_HT_BEYOND, static_cast<int>(::wxTE_HT_BEYOND), 577},
    {sipName_TE_HT_ON_TEXT, static_cast<int>(::wxTE_HT_ON_TEXT), 577},
    {sipName_TE_HT_UNKNOWN, static_cast<int>(::wxTE_HT_UNKNOWN), 577},
    {sipName_TILE, static_cast<int>(::wxTILE), 552},
    {sipName_TITLEBAR_BUTTON_CLOSE, static_cast<int>(::wxTITLEBAR_BUTTON_CLOSE), 590},
    {sipName_TITLEBAR_BUTTON_HELP, static_cast<int>(::wxTITLEBAR_BUTTON_HELP), 590},
    {sipName_TITLEBAR_BUTTON_ICONIZE, static_cast<int>(::wxTITLEBAR_BUTTON_ICONIZE), 590},
    {sipName_TITLEBAR_BUTTON_MAXIMIZE, static_cast<int>(::wxTITLEBAR_BUTTON_MAXIMIZE), 590},
    {sipName_TITLEBAR_BUTTON_RESTORE, static_cast<int>(::wxTITLEBAR_BUTTON_RESTORE), 590},
    {sipName_TOOL_STYLE_BUTTON, static_cast<int>(::wxTOOL_STYLE_BUTTON), 594},
    {sipName_TOOL_STYLE_CONTROL, static_cast<int>(::wxTOOL_STYLE_CONTROL), 594},
    {sipName_TOOL_STYLE_SEPARATOR, static_cast<int>(::wxTOOL_STYLE_SEPARATOR), 594},
    {sipName_TOP, static_cast<int>(::wxTOP), 137},
    {sipName_TextFileType_Dos, static_cast<int>(::wxTextFileType_Dos), 582},
    {sipName_TextFileType_Mac, static_cast<int>(::wxTextFileType_Mac), 582},
    {sipName_TextFileType_None, static_cast<int>(::wxTextFileType_None), 582},
    {sipName_TextFileType_Os2, static_cast<int>(::wxTextFileType_Os2), 582},
    {sipName_TextFileType_Unix, static_cast<int>(::wxTextFileType_Unix), 582},
    {sipName_Top, static_cast<int>(::wxTop), 146},
    {sipName_TreeItemIcon_Expanded, static_cast<int>(::wxTreeItemIcon_Expanded), 605},
    {sipName_TreeItemIcon_Max, static_cast<int>(::wxTreeItemIcon_Max), 605},
    {sipName_TreeItemIcon_Normal, static_cast<int>(::wxTreeItemIcon_Normal), 605},
    {sipName_TreeItemIcon_Selected, static_cast<int>(::wxTreeItemIcon_Selected), 605},
    {sipName_TreeItemIcon_SelectedExpanded, static_cast<int>(::wxTreeItemIcon_SelectedExpanded), 605},
    {sipName_UP, static_cast<int>(::wxUP), 137},
    {sipName_UPDATE_UI_FROMIDLE, static_cast<int>(::wxUPDATE_UI_FROMIDLE), 614},
    {sipName_UPDATE_UI_NONE, static_cast<int>(::wxUPDATE_UI_NONE), 614},
    {sipName_UPDATE_UI_PROCESS_ALL, static_cast<int>(::wxUPDATE_UI_PROCESS_ALL), 616},
    {sipName_UPDATE_UI_PROCESS_SPECIFIED, static_cast<int>(::wxUPDATE_UI_PROCESS_SPECIFIED), 616},
    {sipName_UPDATE_UI_RECURSE, static_cast<int>(::wxUPDATE_UI_RECURSE), 614},
    {sipName_Unconstrained, static_cast<int>(::wxUnconstrained), 481},
    {sipName_VERTICAL, static_cast<int>(::wxVERTICAL), 394},
    {sipName_WEST, static_cast<int>(::wxWEST), 137},
    {sipName_WINDING_RULE, static_cast<int>(::wxWINDING_RULE), 426},
    {sipName_WINDOW_VARIANT_LARGE, static_cast<int>(::wxWINDOW_VARIANT_LARGE), 642},
    {sipName_WINDOW_VARIANT_MAX, static_cast<int>(::wxWINDOW_VARIANT_MAX), 642},
    {sipName_WINDOW_VARIANT_MINI, static_cast<int>(::wxWINDOW_VARIANT_MINI), 642},
    {sipName_WINDOW_VARIANT_NORMAL, static_cast<int>(::wxWINDOW_VARIANT_NORMAL), 642},
    {sipName_WINDOW_VARIANT_SMALL, static_cast<int>(::wxWINDOW_VARIANT_SMALL), 642},
    {sipName_WXK_ADD, static_cast<int>(::WXK_ADD), 305},
    {sipName_WXK_ALT, static_cast<int>(::WXK_ALT), 305},
    {sipName_WXK_BACK, static_cast<int>(::WXK_BACK), 305},
    {sipName_WXK_BROWSER_BACK, static_cast<int>(::WXK_BROWSER_BACK), 305},
    {sipName_WXK_BROWSER_FAVORITES, static_cast<int>(::WXK_BROWSER_FAVORITES), 305},
    {sipName_WXK_BROWSER_FORWARD, static_cast<int>(::WXK_BROWSER_FORWARD), 305},
    {sipName_WXK_BROWSER_HOME, static_cast<int>(::WXK_BROWSER_HOME), 305},
    {sipName_WXK_BROWSER_REFRESH, static_cast<int>(::WXK_BROWSER_REFRESH), 305},
    {sipName_WXK_BROWSER_SEARCH, static_cast<int>(::WXK_BROWSER_SEARCH), 305},
    {sipName_WXK_BROWSER_STOP, static_cast<int>(::WXK_BROWSER_STOP), 305},
    {sipName_WXK_CANCEL, static_cast<int>(::WXK_CANCEL), 305},
    {sipName_WXK_CAPITAL, static_cast<int>(::WXK_CAPITAL), 305},
    {sipName_WXK_CATEGORY_ARROW, static_cast<int>(::WXK_CATEGORY_ARROW), 304},
    {sipName_WXK_CATEGORY_CUT, static_cast<int>(::WXK_CATEGORY_CUT), 304},
    {sipName_WXK_CATEGORY_JUMP, static_cast<int>(::WXK_CATEGORY_JUMP), 304},
    {sipName_WXK_CATEGORY_NAVIGATION, static_cast<int>(::WXK_CATEGORY_NAVIGATION), 304},
    {sipName_WXK_CATEGORY_PAGING, static_cast<int>(::WXK_CATEGORY_PAGING), 304},
    {sipName_WXK_CATEGORY_TAB, static_cast<int>(::WXK_CATEGORY_TAB), 304},
    {sipName_WXK_CLEAR, static_cast<int>(::WXK_CLEAR), 305},
    {sipName_WXK_COMMAND, static_cast<int>(::WXK_COMMAND), 305},
    {sipName_WXK_CONTROL, static_cast<int>(::WXK_CONTROL), 305},
    {sipName_WXK_CONTROL_A, static_cast<int>(::WXK_CONTROL_A), 305},
    {sipName_WXK_CONTROL_B, static_cast<int>(::WXK_CONTROL_B), 305},
    {sipName_WXK_CONTROL_C, static_cast<int>(::WXK_CONTROL_C), 305},
    {sipName_WXK_CONTROL_D, static_cast<int>(::WXK_CONTROL_D), 305},
    {sipName_WXK_CONTROL_E, static_cast<int>(::WXK_CONTROL_E), 305},
    {sipName_WXK_CONTROL_F, static_cast<int>(::WXK_CONTROL_F), 305},
    {sipName_WXK_CONTROL_G, static_cast<int>(::WXK_CONTROL_G), 305},
    {sipName_WXK_CONTROL_H, static_cast<int>(::WXK_CONTROL_H), 305},
    {sipName_WXK_CONTROL_I, static_cast<int>(::WXK_CONTROL_I), 305},
    {sipName_WXK_CONTROL_J, static_cast<int>(::WXK_CONTROL_J), 305},
    {sipName_WXK_CONTROL_K, static_cast<int>(::WXK_CONTROL_K), 305},
    {sipName_WXK_CONTROL_L, static_cast<int>(::WXK_CONTROL_L), 305},
    {sipName_WXK_CONTROL_M, static_cast<int>(::WXK_CONTROL_M), 305},
    {sipName_WXK_CONTROL_N, static_cast<int>(::WXK_CONTROL_N), 305},
    {sipName_WXK_CONTROL_O, static_cast<int>(::WXK_CONTROL_O), 305},
    {sipName_WXK_CONTROL_P, static_cast<int>(::WXK_CONTROL_P), 305},
    {sipName_WXK_CONTROL_Q, static_cast<int>(::WXK_CONTROL_Q), 305},
    {sipName_WXK_CONTROL_R, static_cast<int>(::WXK_CONTROL_R), 305},
    {sipName_WXK_CONTROL_S, static_cast<int>(::WXK_CONTROL_S), 305},
    {sipName_WXK_CONTROL_T, static_cast<int>(::WXK_CONTROL_T), 305},
    {sipName_WXK_CONTROL_U, static_cast<int>(::WXK_CONTROL_U), 305},
    {sipName_WXK_CONTROL_V, static_cast<int>(::WXK_CONTROL_V), 305},
    {sipName_WXK_CONTROL_W, static_cast<int>(::WXK_CONTROL_W), 305},
    {sipName_WXK_CONTROL_X, static_cast<int>(::WXK_CONTROL_X), 305},
    {sipName_WXK_CONTROL_Y, static_cast<int>(::WXK_CONTROL_Y), 305},
    {sipName_WXK_CONTROL_Z, static_cast<int>(::WXK_CONTROL_Z), 305},
    {sipName_WXK_DECIMAL, static_cast<int>(::WXK_DECIMAL), 305},
    {sipName_WXK_DELETE, static_cast<int>(::WXK_DELETE), 305},
    {sipName_WXK_DIVIDE, static_cast<int>(::WXK_DIVIDE), 305},
    {sipName_WXK_DOWN, static_cast<int>(::WXK_DOWN), 305},
    {sipName_WXK_END, static_cast<int>(::WXK_END), 305},
    {sipName_WXK_ESCAPE, static_cast<int>(::WXK_ESCAPE), 305},
    {sipName_WXK_EXECUTE, static_cast<int>(::WXK_EXECUTE), 305},
    {sipName_WXK_F1, static_cast<int>(::WXK_F1), 305},
    {sipName_WXK_F10, static_cast<int>(::WXK_F10), 305},
    {sipName_WXK_F11, static_cast<int>(::WXK_F11), 305},
    {sipName_WXK_F12, static_cast<int>(::WXK_F12), 305},
    {sipName_WXK_F13, static_cast<int>(::WXK_F13), 305},
    {sipName_WXK_F14, static_cast<int>(::WXK_F14), 305},
    {sipName_WXK_F15, static_cast<int>(::WXK_F15), 305},
    {sipName_WXK_F16, static_cast<int>(::WXK_F16), 305},
    {sipName_WXK_F17, static_cast<int>(::WXK_F17), 305},
    {sipName_WXK_F18, static_cast<int>(::WXK_F18), 305},
    {sipName_WXK_F19, static_cast<int>(::WXK_F19), 305},
    {sipName_WXK_F2, static_cast<int>(::WXK_F2), 305},
    {sipName_WXK_F20, static_cast<int>(::WXK_F20), 305},
    {sipName_WXK_F21, static_cast<int>(::WXK_F21), 305},
    {sipName_WXK_F22, static_cast<int>(::WXK_F22), 305},
    {sipName_WXK_F23, static_cast<int>(::WXK_F23), 305},
    {sipName_WXK_F24, static_cast<int>(::WXK_F24), 305},
    {sipName_WXK_F3, static_cast<int>(::WXK_F3), 305},
    {sipName_WXK_F4, static_cast<int>(::WXK_F4), 305},
    {sipName_WXK_F5, static_cast<int>(::WXK_F5), 305},
    {sipName_WXK_F6, static_cast<int>(::WXK_F6), 305},
    {sipName_WXK_F7, static_cast<int>(::WXK_F7), 305},
    {sipName_WXK_F8, static_cast<int>(::WXK_F8), 305},
    {sipName_WXK_F9, static_cast<int>(::WXK_F9), 305},
    {sipName_WXK_HELP, static_cast<int>(::WXK_HELP), 305},
    {sipName_WXK_HOME, static_cast<int>(::WXK_HOME), 305},
    {sipName_WXK_INSERT, static_cast<int>(::WXK_INSERT), 305},
    {sipName_WXK_LAUNCH_0, static_cast<int>(::WXK_LAUNCH_0), 305},
    {sipName_WXK_LAUNCH_1, static_cast<int>(::WXK_LAUNCH_1), 305},
    {sipName_WXK_LAUNCH_2, static_cast<int>(::WXK_LAUNCH_2), 305},
    {sipName_WXK_LAUNCH_3, static_cast<int>(::WXK_LAUNCH_3), 305},
    {sipName_WXK_LAUNCH_4, static_cast<int>(::WXK_LAUNCH_4), 305},
    {sipName_WXK_LAUNCH_5, static_cast<int>(::WXK_LAUNCH_5), 305},
    {sipName_WXK_LAUNCH_6, static_cast<int>(::WXK_LAUNCH_6), 305},
    {sipName_WXK_LAUNCH_7, static_cast<int>(::WXK_LAUNCH_7), 305},
    {sipName_WXK_LAUNCH_8, static_cast<int>(::WXK_LAUNCH_8), 305},
    {sipName_WXK_LAUNCH_9, static_cast<int>(::WXK_LAUNCH_9), 305},
    {sipName_WXK_LAUNCH_A, static_cast<int>(::WXK_LAUNCH_A), 305},
    {sipName_WXK_LAUNCH_APP1, static_cast<int>(::WXK_LAUNCH_APP1), 305},
    {sipName_WXK_LAUNCH_APP2, static_cast<int>(::WXK_LAUNCH_APP2), 305},
    {sipName_WXK_LAUNCH_B, static_cast<int>(::WXK_LAUNCH_B), 305},
    {sipName_WXK_LAUNCH_C, static_cast<int>(::WXK_LAUNCH_C), 305},
    {sipName_WXK_LAUNCH_D, static_cast<int>(::WXK_LAUNCH_D), 305},
    {sipName_WXK_LAUNCH_E, static_cast<int>(::WXK_LAUNCH_E), 305},
    {sipName_WXK_LAUNCH_F, static_cast<int>(::WXK_LAUNCH_F), 305},
    {sipName_WXK_LAUNCH_MAIL, static_cast<int>(::WXK_LAUNCH_MAIL), 305},
    {sipName_WXK_LBUTTON, static_cast<int>(::WXK_LBUTTON), 305},
    {sipName_WXK_LEFT, static_cast<int>(::WXK_LEFT), 305},
    {sipName_WXK_MBUTTON, static_cast<int>(::WXK_MBUTTON), 305},
    {sipName_WXK_MEDIA_NEXT_TRACK, static_cast<int>(::WXK_MEDIA_NEXT_TRACK), 305},
    {sipName_WXK_MEDIA_PLAY_PAUSE, static_cast<int>(::WXK_MEDIA_PLAY_PAUSE), 305},
    {sipName_WXK_MEDIA_PREV_TRACK, static_cast<int>(::WXK_MEDIA_PREV_TRACK), 305},
    {sipName_WXK_MEDIA_STOP, static_cast<int>(::WXK_MEDIA_STOP), 305},
    {sipName_WXK_MENU, static_cast<int>(::WXK_MENU), 305},
    {sipName_WXK_MULTIPLY, static_cast<int>(::WXK_MULTIPLY), 305},
    {sipName_WXK_NONE, static_cast<int>(::WXK_NONE), 305},
    {sipName_WXK_NUMLOCK, static_cast<int>(::WXK_NUMLOCK), 305},
    {sipName_WXK_NUMPAD0, static_cast<int>(::WXK_NUMPAD0), 305},
    {sipName_WXK_NUMPAD1, static_cast<int>(::WXK_NUMPAD1), 305},
    {sipName_WXK_NUMPAD2, static_cast<int>(::WXK_NUMPAD2), 305},
    {sipName_WXK_NUMPAD3, static_cast<int>(::WXK_NUMPAD3), 305},
    {sipName_WXK_NUMPAD4, static_cast<int>(::WXK_NUMPAD4), 305},
    {sipName_WXK_NUMPAD5, static_cast<int>(::WXK_NUMPAD5), 305},
    {sipName_WXK_NUMPAD6, static_cast<int>(::WXK_NUMPAD6), 305},
    {sipName_WXK_NUMPAD7, static_cast<int>(::WXK_NUMPAD7), 305},
    {sipName_WXK_NUMPAD8, static_cast<int>(::WXK_NUMPAD8), 305},
    {sipName_WXK_NUMPAD9, static_cast<int>(::WXK_NUMPAD9), 305},
    {sipName_WXK_NUMPAD_ADD, static_cast<int>(::WXK_NUMPAD_ADD), 305},
    {sipName_WXK_NUMPAD_BEGIN, static_cast<int>(::WXK_NUMPAD_BEGIN), 305},
    {sipName_WXK_NUMPAD_DECIMAL, static_cast<int>(::WXK_NUMPAD_DECIMAL), 305},
    {sipName_WXK_NUMPAD_DELETE, static_cast<int>(::WXK_NUMPAD_DELETE), 305},
    {sipName_WXK_NUMPAD_DIVIDE, static_cast<int>(::WXK_NUMPAD_DIVIDE), 305},
    {sipName_WXK_NUMPAD_DOWN, static_cast<int>(::WXK_NUMPAD_DOWN), 305},
    {sipName_WXK_NUMPAD_END, static_cast<int>(::WXK_NUMPAD_END), 305},
    {sipName_WXK_NUMPAD_ENTER, static_cast<int>(::WXK_NUMPAD_ENTER), 305},
    {sipName_WXK_NUMPAD_EQUAL, static_cast<int>(::WXK_NUMPAD_EQUAL), 305},
    {sipName_WXK_NUMPAD_F1, static_cast<int>(::WXK_NUMPAD_F1), 305},
    {sipName_WXK_NUMPAD_F2, static_cast<int>(::WXK_NUMPAD_F2), 305},
    {sipName_WXK_NUMPAD_F3, static_cast<int>(::WXK_NUMPAD_F3), 305},
    {sipName_WXK_NUMPAD_F4, static_cast<int>(::WXK_NUMPAD_F4), 305},
    {sipName_WXK_NUMPAD_HOME, static_cast<int>(::WXK_NUMPAD_HOME), 305},
    {sipName_WXK_NUMPAD_INSERT, static_cast<int>(::WXK_NUMPAD_INSERT), 305},
    {sipName_WXK_NUMPAD_LEFT, static_cast<int>(::WXK_NUMPAD_LEFT), 305},
    {sipName_WXK_NUMPAD_MULTIPLY, static_cast<int>(::WXK_NUMPAD_MULTIPLY), 305},
    {sipName_WXK_NUMPAD_PAGEDOWN, static_cast<int>(::WXK_NUMPAD_PAGEDOWN), 305},
    {sipName_WXK_NUMPAD_PAGEUP, static_cast<int>(::WXK_NUMPAD_PAGEUP), 305},
    {sipName_WXK_NUMPAD_RIGHT, static_cast<int>(::WXK_NUMPAD_RIGHT), 305},
    {sipName_WXK_NUMPAD_SEPARATOR, static_cast<int>(::WXK_NUMPAD_SEPARATOR), 305},
    {sipName_WXK_NUMPAD_SPACE, static_cast<int>(::WXK_NUMPAD_SPACE), 305},
    {sipName_WXK_NUMPAD_SUBTRACT, static_cast<int>(::WXK_NUMPAD_SUBTRACT), 305},
    {sipName_WXK_NUMPAD_TAB, static_cast<int>(::WXK_NUMPAD_TAB), 305},
    {sipName_WXK_NUMPAD_UP, static_cast<int>(::WXK_NUMPAD_UP), 305},
    {sipName_WXK_PAGEDOWN, static_cast<int>(::WXK_PAGEDOWN), 305},
    {sipName_WXK_PAGEUP, static_cast<int>(::WXK_PAGEUP), 305},
    {sipName_WXK_PAUSE, static_cast<int>(::WXK_PAUSE), 305},
    {sipName_WXK_PRINT, static_cast<int>(::WXK_PRINT), 305},
    {sipName_WXK_RAW_CONTROL, static_cast<int>(::WXK_RAW_CONTROL), 305},
    {sipName_WXK_RBUTTON, static_cast<int>(::WXK_RBUTTON), 305},
    {sipName_WXK_RETURN, static_cast<int>(::WXK_RETURN), 305},
    {sipName_WXK_RIGHT, static_cast<int>(::WXK_RIGHT), 305},
    {sipName_WXK_SCROLL, static_cast<int>(::WXK_SCROLL), 305},
    {sipName_WXK_SELECT, static_cast<int>(::WXK_SELECT), 305},
    {sipName_WXK_SEPARATOR, static_cast<int>(::WXK_SEPARATOR), 305},
    {sipName_WXK_SHIFT, static_cast<int>(::WXK_SHIFT), 305},
    {sipName_WXK_SNAPSHOT, static_cast<int>(::WXK_SNAPSHOT), 305},
    {sipName_WXK_SPACE, static_cast<int>(::WXK_SPACE), 305},
    {sipName_WXK_SPECIAL1, static_cast<int>(::WXK_SPECIAL1), 305},
    {sipName_WXK_SPECIAL10, static_cast<int>(::WXK_SPECIAL10), 305},
    {sipName_WXK_SPECIAL11, static_cast<int>(::WXK_SPECIAL11), 305},
    {sipName_WXK_SPECIAL12, static_cast<int>(::WXK_SPECIAL12), 305},
    {sipName_WXK_SPECIAL13, static_cast<int>(::WXK_SPECIAL13), 305},
    {sipName_WXK_SPECIAL14, static_cast<int>(::WXK_SPECIAL14), 305},
    {sipName_WXK_SPECIAL15, static_cast<int>(::WXK_SPECIAL15), 305},
    {sipName_WXK_SPECIAL16, static_cast<int>(::WXK_SPECIAL16), 305},
    {sipName_WXK_SPECIAL17, static_cast<int>(::WXK_SPECIAL17), 305},
    {sipName_WXK_SPECIAL18, static_cast<int>(::WXK_SPECIAL18), 305},
    {sipName_WXK_SPECIAL19, static_cast<int>(::WXK_SPECIAL19), 305},
    {sipName_WXK_SPECIAL2, static_cast<int>(::WXK_SPECIAL2), 305},
    {sipName_WXK_SPECIAL20, static_cast<int>(::WXK_SPECIAL20), 305},
    {sipName_WXK_SPECIAL3, static_cast<int>(::WXK_SPECIAL3), 305},
    {sipName_WXK_SPECIAL4, static_cast<int>(::WXK_SPECIAL4), 305},
    {sipName_WXK_SPECIAL5, static_cast<int>(::WXK_SPECIAL5), 305},
    {sipName_WXK_SPECIAL6, static_cast<int>(::WXK_SPECIAL6), 305},
    {sipName_WXK_SPECIAL7, static_cast<int>(::WXK_SPECIAL7), 305},
    {sipName_WXK_SPECIAL8, static_cast<int>(::WXK_SPECIAL8), 305},
    {sipName_WXK_SPECIAL9, static_cast<int>(::WXK_SPECIAL9), 305},
    {sipName_WXK_START, static_cast<int>(::WXK_START), 305},
    {sipName_WXK_SUBTRACT, static_cast<int>(::WXK_SUBTRACT), 305},
    {sipName_WXK_TAB, static_cast<int>(::WXK_TAB), 305},
    {sipName_WXK_UP, static_cast<int>(::WXK_UP), 305},
    {sipName_WXK_VOLUME_DOWN, static_cast<int>(::WXK_VOLUME_DOWN), 305},
    {sipName_WXK_VOLUME_MUTE, static_cast<int>(::WXK_VOLUME_MUTE), 305},
    {sipName_WXK_VOLUME_UP, static_cast<int>(::WXK_VOLUME_UP), 305},
    {sipName_WXK_WINDOWS_LEFT, static_cast<int>(::WXK_WINDOWS_LEFT), 305},
    {sipName_WXK_WINDOWS_MENU, static_cast<int>(::WXK_WINDOWS_MENU), 305},
    {sipName_WXK_WINDOWS_RIGHT, static_cast<int>(::WXK_WINDOWS_RIGHT), 305},
    {sipName_Width, static_cast<int>(::wxWidth), 146},
    {sipName_XOR, static_cast<int>(::wxXOR), 470},
};


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes__core[] = {
    &sipTypeDef__core__ScrolledWindowBase.ctd_base,
    &enumTypes[0].etd_base,
    &enumTypes[1].etd_base,
    &enumTypes[2].etd_base,
    &enumTypes[3].etd_base,
    &sipTypeDef__core_wxAcceleratorEntry.ctd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef__core_wxAcceleratorTable.ctd_base,
    &sipTypeDef__core_wxAccessible.ctd_base,
    &sipTypeDef__core_wxActivateEvent.ctd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef__core_wxActivityIndicator.ctd_base,
    &sipTypeDef__core_wxAffineMatrix2D.ctd_base,
    &sipTypeDef__core_wxAffineMatrix2DBase.ctd_base,
    &enumTypes[6].etd_base,
    &sipTypeDef__core_wxAlphaPixelData.ctd_base,
    &sipTypeDef__core_wxAlphaPixelData_Accessor.ctd_base,
    &enumTypes[7].etd_base,
    &sipTypeDef__core_wxAnyButton.ctd_base,
    &enumTypes[8].etd_base,
    &sipTypeDef__core_wxAppConsole.ctd_base,
    &sipTypeDef__core_wxAppTraits.ctd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef__core_wxArchiveFSHandler.ctd_base,
    &sipTypeDef__core_wxArrayDouble.mtd_base,
    &sipTypeDef__core_wxArrayInt.mtd_base,
    &sipTypeDef__core_wxArrayString.mtd_base,
    &sipTypeDef__core_wxArrayVideoModes.ctd_base,
    &sipTypeDef__core_wxArtProvider.ctd_base,
    &sipTypeDef__core_wxAutoBufferedPaintDC.ctd_base,
    &enumTypes[10].etd_base,
    &enumTypes[11].etd_base,
    &sipTypeDef__core_wxBitmap.ctd_base,
    &enumTypes[12].etd_base,
    &sipTypeDef__core_wxBitmapBundle.ctd_base,
    &sipTypeDef__core_wxBitmapBundleImpl.ctd_base,
    &sipTypeDef__core_wxBitmapButton.ctd_base,
    &sipTypeDef__core_wxBitmapDataObject.ctd_base,
    &sipTypeDef__core_wxBitmapToggleButton.ctd_base,
    &enumTypes[13].etd_base,
    &enumTypes[14].etd_base,
    &sipTypeDef__core_wxBookCtrlBase.ctd_base,
    &sipTypeDef__core_wxBookCtrlEvent.ctd_base,
    &enumTypes[15].etd_base,
    &sipTypeDef__core_wxBoxSizer.ctd_base,
    &sipTypeDef__core_wxBrush.ctd_base,
    &sipTypeDef__core_wxBrushList.ctd_base,
    &enumTypes[16].etd_base,
    &sipTypeDef__core_wxBufferedDC.ctd_base,
    &sipTypeDef__core_wxBufferedPaintDC.ctd_base,
    &sipTypeDef__core_wxBusyCursor.ctd_base,
    &sipTypeDef__core_wxBusyInfo.ctd_base,
    &sipTypeDef__core_wxBusyInfoFlags.ctd_base,
    &sipTypeDef__core_wxButton.ctd_base,
    &sipTypeDef__core_wxCaret.ctd_base,
    &sipTypeDef__core_wxCharBuffer.mtd_base,
    &sipTypeDef__core_wxCheckBox.ctd_base,
    &enumTypes[17].etd_base,
    &sipTypeDef__core_wxCheckListBox.ctd_base,
    &sipTypeDef__core_wxChildFocusEvent.ctd_base,
    &sipTypeDef__core_wxChoice.ctd_base,
    &sipTypeDef__core_wxChoicebook.ctd_base,
    &sipTypeDef__core_wxClassInfo.ctd_base,
    &sipTypeDef__core_wxClientDC.ctd_base,
    &sipTypeDef__core_wxClientData.mtd_base,
    &sipTypeDef__core_wxClientDataContainer.ctd_base,
    &sipTypeDef__core_wxClipboard.ctd_base,
    &sipTypeDef__core_wxClipboardTextEvent.ctd_base,
    &sipTypeDef__core_wxCloseEvent.ctd_base,
    &sipTypeDef__core_wxCollapsibleHeaderCtrl.ctd_base,
    &sipTypeDef__core_wxCollapsiblePane.ctd_base,
    &sipTypeDef__core_wxCollapsiblePaneEvent.ctd_base,
    &sipTypeDef__core_wxColour.ctd_base,
    &sipTypeDef__core_wxColourData.ctd_base,
    &sipTypeDef__core_wxColourDatabase.ctd_base,
    &sipTypeDef__core_wxColourDialog.ctd_base,
    &sipTypeDef__core_wxColourDialogEvent.ctd_base,
    &sipTypeDef__core_wxColourPickerCtrl.ctd_base,
    &sipTypeDef__core_wxColourPickerEvent.ctd_base,
    &sipTypeDef__core_wxComboBox.ctd_base,
    &sipTypeDef__core_wxComboCtrl.ctd_base,
    &sipTypeDef__core_wxComboCtrlFeatures.ctd_base,
    &sipTypeDef__core_wxComboPopup.ctd_base,
    &sipTypeDef__core_wxCommand.ctd_base,
    &sipTypeDef__core_wxCommandEvent.ctd_base,
    &sipTypeDef__core_wxCommandList.ctd_base,
    &sipTypeDef__core_wxCommandList_iterator.ctd_base,
    &sipTypeDef__core_wxCommandProcessor.ctd_base,
    &enumTypes[18].etd_base,
    &sipTypeDef__core_wxConfig.ctd_base,
    &sipTypeDef__core_wxConfigBase.ctd_base,
    &enumTypes[19].etd_base,
    &sipTypeDef__core_wxConfigPathChanger.ctd_base,
    &enumTypes[20].etd_base,
    &sipTypeDef__core_wxContextHelp.ctd_base,
    &sipTypeDef__core_wxContextHelpButton.ctd_base,
    &sipTypeDef__core_wxContextMenuEvent.ctd_base,
    &sipTypeDef__core_wxControl.ctd_base,
    &sipTypeDef__core_wxControlWithItems.ctd_base,
    &sipTypeDef__core_wxCursor.ctd_base,
    &sipTypeDef__core_wxCustomDataObject.ctd_base,
    &sipTypeDef__core_wxDC.ctd_base,
    &sipTypeDef__core_wxDCBrushChanger.ctd_base,
    &sipTypeDef__core_wxDCClipper.ctd_base,
    &sipTypeDef__core_wxDCFontChanger.ctd_base,
    &sipTypeDef__core_wxDCOverlay.ctd_base,
    &sipTypeDef__core_wxDCPenChanger.ctd_base,
    &sipTypeDef__core_wxDCTextBgColourChanger.ctd_base,
    &sipTypeDef__core_wxDCTextBgModeChanger.ctd_base,
    &sipTypeDef__core_wxDCTextColourChanger.ctd_base,
    &sipTypeDef__core_wxDPIChangedEvent.ctd_base,
    &sipTypeDef__core_wxDashCArrayHolder.ctd_base,
    &sipTypeDef__core_wxDataFormat.ctd_base,
    &enumTypes[21].etd_base,
    &sipTypeDef__core_wxDataObject.ctd_base,
    &enumTypes[22].etd_base,
    &sipTypeDef__core_wxDataObjectComposite.ctd_base,
    &sipTypeDef__core_wxDataObjectSimple.ctd_base,
    &sipTypeDef__core_wxDateSpan.ctd_base,
    &sipTypeDef__core_wxDateTime.ctd_base,
    &enumTypes[23].etd_base,
    &enumTypes[24].etd_base,
    &enumTypes[25].etd_base,
    &enumTypes[26].etd_base,
    &enumTypes[27].etd_base,
    &sipTypeDef__core_wxDateTime_TimeZone.ctd_base,
    &sipTypeDef__core_wxDateTime_Tm.ctd_base,
    &enumTypes[28].etd_base,
    &enumTypes[29].etd_base,
    &enumTypes[30].etd_base,
    &sipTypeDef__core_wxDelegateRendererNative.ctd_base,
    &sipTypeDef__core_wxDialog.ctd_base,
    &enumTypes[31].etd_base,
    &sipTypeDef__core_wxDialogLayoutAdapter.ctd_base,
    &sipTypeDef__core_wxDirDialog.ctd_base,
    &sipTypeDef__core_wxDirFilterListCtrl.ctd_base,
    &sipTypeDef__core_wxDirPickerCtrl.ctd_base,
    &enumTypes[32].etd_base,
    &sipTypeDef__core_wxDisplay.ctd_base,
    &sipTypeDef__core_wxDisplayChangedEvent.ctd_base,
    &sipTypeDef__core_wxDragImage.ctd_base,
    &enumTypes[33].etd_base,
    &sipTypeDef__core_wxDropFilesEvent.ctd_base,
    &sipTypeDef__core_wxDropSource.ctd_base,
    &sipTypeDef__core_wxDropTarget.ctd_base,
    &enumTypes[34].etd_base,
    &enumTypes[35].etd_base,
    &enumTypes[36].etd_base,
    &enumTypes[37].etd_base,
    &enumTypes[38].etd_base,
    &sipTypeDef__core_wxEraseEvent.ctd_base,
    &sipTypeDef__core_wxEvent.ctd_base,
    &sipTypeDef__core_wxEventBlocker.ctd_base,
    &enumTypes[39].etd_base,
    &sipTypeDef__core_wxEventFilter.ctd_base,
    &sipTypeDef__core_wxEventLoopActivator.ctd_base,
    &sipTypeDef__core_wxEventLoopBase.ctd_base,
    &enumTypes[40].etd_base,
    &sipTypeDef__core_wxEvtHandler.ctd_base,
    &sipTypeDef__core_wxExecuteEnv.ctd_base,
    &sipTypeDef__core_wxFSFile.ctd_base,
    &enumTypes[41].etd_base,
    &enumTypes[42].etd_base,
    &sipTypeDef__core_wxFileConfig.ctd_base,
    &sipTypeDef__core_wxFileCtrl.ctd_base,
    &sipTypeDef__core_wxFileCtrlEvent.ctd_base,
    &sipTypeDef__core_wxFileDataObject.ctd_base,
    &sipTypeDef__core_wxFileDialog.ctd_base,
    &sipTypeDef__core_wxFileDialogButton.ctd_base,
    &sipTypeDef__core_wxFileDialogCheckBox.ctd_base,
    &sipTypeDef__core_wxFileDialogChoice.ctd_base,
    &sipTypeDef__core_wxFileDialogCustomControl.ctd_base,
    &sipTypeDef__core_wxFileDialogCustomize.ctd_base,
    &sipTypeDef__core_wxFileDialogCustomizeHook.ctd_base,
    &sipTypeDef__core_wxFileDialogRadioButton.ctd_base,
    &sipTypeDef__core_wxFileDialogStaticText.ctd_base,
    &sipTypeDef__core_wxFileDialogTextCtrl.ctd_base,
    &sipTypeDef__core_wxFileDirPickerEvent.ctd_base,
    &sipTypeDef__core_wxFileDropTarget.ctd_base,
    &sipTypeDef__core_wxFileHistory.ctd_base,
    &sipTypeDef__core_wxFileHistoryMenuList.ctd_base,
    &sipTypeDef__core_wxFileHistoryMenuList_iterator.ctd_base,
    &enumTypes[43].etd_base,
    &sipTypeDef__core_wxFileName.mtd_base,
    &sipTypeDef__core_wxFilePickerCtrl.ctd_base,
    &sipTypeDef__core_wxFileSystem.ctd_base,
    &sipTypeDef__core_wxFileSystemHandler.ctd_base,
    &enumTypes[44].etd_base,
    &sipTypeDef__core_wxFileSystemWatcher.ctd_base,
    &sipTypeDef__core_wxFileSystemWatcherEvent.ctd_base,
    &sipTypeDef__core_wxFileTranslationsLoader.ctd_base,
    &sipTypeDef__core_wxFileType.ctd_base,
    &sipTypeDef__core_wxFileType_MessageParameters.ctd_base,
    &sipTypeDef__core_wxFileTypeInfo.ctd_base,
    &sipTypeDef__core_wxFilterFSHandler.ctd_base,
    &sipTypeDef__core_wxFindDialogEvent.ctd_base,
    &sipTypeDef__core_wxFindReplaceData.ctd_base,
    &sipTypeDef__core_wxFindReplaceDialog.ctd_base,
    &enumTypes[45].etd_base,
    &enumTypes[46].etd_base,
    &sipTypeDef__core_wxFlexGridSizer.ctd_base,
    &enumTypes[47].etd_base,
    &enumTypes[48].etd_base,
    &sipTypeDef__core_wxFocusEvent.ctd_base,
    &sipTypeDef__core_wxFont.ctd_base,
    &sipTypeDef__core_wxFontData.ctd_base,
    &sipTypeDef__core_wxFontDialog.ctd_base,
    &enumTypes[49].etd_base,
    &sipTypeDef__core_wxFontEnumerator.ctd_base,
    &enumTypes[50].etd_base,
    &enumTypes[51].etd_base,
    &sipTypeDef__core_wxFontInfo.ctd_base,
    &sipTypeDef__core_wxFontList.ctd_base,
    &sipTypeDef__core_wxFontMapper.ctd_base,
    &sipTypeDef__core_wxFontMetrics.ctd_base,
    &sipTypeDef__core_wxFontPickerCtrl.ctd_base,
    &sipTypeDef__core_wxFontPickerEvent.ctd_base,
    &enumTypes[52].etd_base,
    &enumTypes[53].etd_base,
    &enumTypes[54].etd_base,
    &sipTypeDef__core_wxFrame.ctd_base,
    &sipTypeDef__core_wxFullScreenEvent.ctd_base,
    &sipTypeDef__core_wxGBPosition.ctd_base,
    &sipTypeDef__core_wxGBSizerItem.ctd_base,
    &sipTypeDef__core_wxGBSpan.ctd_base,
    &sipTypeDef__core_wxGCDC.ctd_base,
    &sipTypeDef__core_wxGDIObject.ctd_base,
    &sipTypeDef__core_wxGIFHandler.ctd_base,
    &sipTypeDef__core_wxGUIEventLoop.ctd_base,
    &sipTypeDef__core_wxGauge.ctd_base,
    &sipTypeDef__core_wxGenericDirCtrl.ctd_base,
    &sipTypeDef__core_wxGenericDragImage.ctd_base,
    &sipTypeDef__core_wxGenericMessageDialog.ctd_base,
    &sipTypeDef__core_wxGenericProgressDialog.ctd_base,
    &sipTypeDef__core_wxGenericStaticBitmap.ctd_base,
    &enumTypes[55].etd_base,
    &enumTypes[56].etd_base,
    &sipTypeDef__core_wxGestureEvent.ctd_base,
    &enumTypes[57].etd_base,
    &sipTypeDef__core_wxGraphicsBitmap.ctd_base,
    &sipTypeDef__core_wxGraphicsBrush.ctd_base,
    &sipTypeDef__core_wxGraphicsContext.ctd_base,
    &sipTypeDef__core_wxGraphicsFont.ctd_base,
    &sipTypeDef__core_wxGraphicsGradientStop.ctd_base,
    &sipTypeDef__core_wxGraphicsGradientStops.ctd_base,
    &sipTypeDef__core_wxGraphicsMatrix.ctd_base,
    &sipTypeDef__core_wxGraphicsObject.ctd_base,
    &sipTypeDef__core_wxGraphicsPath.ctd_base,
    &sipTypeDef__core_wxGraphicsPen.ctd_base,
    &sipTypeDef__core_wxGraphicsPenInfo.ctd_base,
    &sipTypeDef__core_wxGraphicsRenderer.ctd_base,
    &sipTypeDef__core_wxGridBagSizer.ctd_base,
    &sipTypeDef__core_wxGridSizer.ctd_base,
    &sipTypeDef__core_wxHScrolledWindow.ctd_base,
    &sipTypeDef__core_wxHTMLDataObject.ctd_base,
    &sipTypeDef__core_wxHVScrolledWindow.ctd_base,
    &sipTypeDef__core_wxHeaderButtonParams.ctd_base,
    &sipTypeDef__core_wxHeaderColumn.ctd_base,
    &sipTypeDef__core_wxHeaderColumnSimple.ctd_base,
    &sipTypeDef__core_wxHeaderCtrl.ctd_base,
    &sipTypeDef__core_wxHeaderCtrlEvent.ctd_base,
    &sipTypeDef__core_wxHeaderCtrlSimple.ctd_base,
    &enumTypes[58].etd_base,
    &sipTypeDef__core_wxHelpControllerBase.ctd_base,
    &sipTypeDef__core_wxHelpControllerHelpProvider.ctd_base,
    &sipTypeDef__core_wxHelpEvent.ctd_base,
    &enumTypes[59].etd_base,
    &sipTypeDef__core_wxHelpProvider.ctd_base,
    &enumTypes[60].etd_base,
    &enumTypes[61].etd_base,
    &sipTypeDef__core_wxIFFHandler.ctd_base,
    &sipTypeDef__core_wxIcon.ctd_base,
    &sipTypeDef__core_wxIconBundle.ctd_base,
    &sipTypeDef__core_wxIconLocation.ctd_base,
    &sipTypeDef__core_wxIconizeEvent.ctd_base,
    &sipTypeDef__core_wxIdManager.ctd_base,
    &sipTypeDef__core_wxIdleEvent.ctd_base,
    &enumTypes[62].etd_base,
    &sipTypeDef__core_wxImage.ctd_base,
    &sipTypeDef__core_wxImage_HSVValue.ctd_base,
    &sipTypeDef__core_wxImage_RGBValue.ctd_base,
    &enumTypes[63].etd_base,
    &sipTypeDef__core_wxImageArray.ctd_base,
    &sipTypeDef__core_wxImageDataObject.ctd_base,
    &sipTypeDef__core_wxImageHandler.ctd_base,
    &sipTypeDef__core_wxImageHistogram.ctd_base,
    &sipTypeDef__core_wxImageList.ctd_base,
    &enumTypes[64].etd_base,
    &enumTypes[65].etd_base,
    &enumTypes[66].etd_base,
    &sipTypeDef__core_wxIndividualLayoutConstraint.ctd_base,
    &sipTypeDef__core_wxInfoBar.ctd_base,
    &sipTypeDef__core_wxInitDialogEvent.ctd_base,
    &sipTypeDef__core_wxInputStream.ctd_base,
    &sipTypeDef__core_wxIntCArrayHolder.ctd_base,
    &sipTypeDef__core_wxIntPtr.mtd_base,
    &sipTypeDef__core_wxInternetFSHandler.ctd_base,
    &enumTypes[67].etd_base,
    &sipTypeDef__core_wxItemAttr.ctd_base,
    &sipTypeDef__core_wxItemContainer.ctd_base,
    &sipTypeDef__core_wxItemContainerImmutable.ctd_base,
    &enumTypes[68].etd_base,
    &sipTypeDef__core_wxJPEGHandler.ctd_base,
    &sipTypeDef__core_wxJoystickEvent.ctd_base,
    &enumTypes[69].etd_base,
    &enumTypes[70].etd_base,
    &sipTypeDef__core_wxKeyEvent.ctd_base,
    &enumTypes[71].etd_base,
    &sipTypeDef__core_wxKeyboardState.ctd_base,
    &enumTypes[72].etd_base,
    &enumTypes[73].etd_base,
    &enumTypes[74].etd_base,
    &sipTypeDef__core_wxLanguageInfo.ctd_base,
    &sipTypeDef__core_wxLayoutConstraints.ctd_base,
    &enumTypes[75].etd_base,
    &sipTypeDef__core_wxLinuxDistributionInfo.ctd_base,
    &sipTypeDef__core_wxListBox.ctd_base,
    &enumTypes[76].etd_base,
    &sipTypeDef__core_wxListCtrl.ctd_base,
    &sipTypeDef__core_wxListEvent.ctd_base,
    &sipTypeDef__core_wxListItem.ctd_base,
    &sipTypeDef__core_wxListView.ctd_base,
    &sipTypeDef__core_wxListbook.ctd_base,
    &sipTypeDef__core_wxLocale.ctd_base,
    &enumTypes[77].etd_base,
    &enumTypes[78].etd_base,
    &enumTypes[79].etd_base,
    &enumTypes[80].etd_base,
    &enumTypes[81].etd_base,
    &enumTypes[82].etd_base,
    &sipTypeDef__core_wxLog.ctd_base,
    &sipTypeDef__core_wxLogBuffer.ctd_base,
    &sipTypeDef__core_wxLogChain.ctd_base,
    &sipTypeDef__core_wxLogFormatter.ctd_base,
    &sipTypeDef__core_wxLogGui.ctd_base,
    &sipTypeDef__core_wxLogInterposer.ctd_base,
    &sipTypeDef__core_wxLogInterposerTemp.ctd_base,
    &enumTypes[83].etd_base,
    &sipTypeDef__core_wxLogNull.ctd_base,
    &sipTypeDef__core_wxLogRecordInfo.ctd_base,
    &sipTypeDef__core_wxLogStderr.ctd_base,
    &sipTypeDef__core_wxLogTextCtrl.ctd_base,
    &sipTypeDef__core_wxLogWindow.ctd_base,
    &sipTypeDef__core_wxLongLong.mtd_base,
    &sipTypeDef__core_wxLongPressEvent.ctd_base,
    &sipTypeDef__core_wxMDIChildFrame.ctd_base,
    &sipTypeDef__core_wxMDIChildFrameBase.ctd_base,
    &sipTypeDef__core_wxMDIClientWindow.ctd_base,
    &sipTypeDef__core_wxMDIParentFrame.ctd_base,
    &enumTypes[84].etd_base,
    &sipTypeDef__core_wxMask.ctd_base,
    &sipTypeDef__core_wxMatrix2D.ctd_base,
    &sipTypeDef__core_wxMaximizeEvent.ctd_base,
    &sipTypeDef__core_wxMemoryBuffer.mtd_base,
    &sipTypeDef__core_wxMemoryDC.ctd_base,
    &sipTypeDef__core_wxMemoryFSHandler.ctd_base,
    &sipTypeDef__core_wxMenu.ctd_base,
    &sipTypeDef__core_wxMenuBar.ctd_base,
    &sipTypeDef__core_wxMenuEvent.ctd_base,
    &sipTypeDef__core_wxMenuItem.ctd_base,
    &sipTypeDef__core_wxMenuItemList.ctd_base,
    &sipTypeDef__core_wxMenuItemList_iterator.ctd_base,
    &sipTypeDef__core_wxMenuList.ctd_base,
    &sipTypeDef__core_wxMenuList_iterator.ctd_base,
    &sipTypeDef__core_wxMessageDialog.ctd_base,
    &sipTypeDef__core_wxMessageDialogButtonLabel.mtd_base,
    &sipTypeDef__core_wxMetafile.ctd_base,
    &sipTypeDef__core_wxMetafileDC.ctd_base,
    &sipTypeDef__core_wxMimeTypesManager.ctd_base,
    &sipTypeDef__core_wxMiniFrame.ctd_base,
    &sipTypeDef__core_wxMirrorDC.ctd_base,
    &sipTypeDef__core_wxModalDialogHook.ctd_base,
    &enumTypes[85].etd_base,
    &sipTypeDef__core_wxMouseCaptureChangedEvent.ctd_base,
    &sipTypeDef__core_wxMouseCaptureLostEvent.ctd_base,
    &sipTypeDef__core_wxMouseEvent.ctd_base,
    &sipTypeDef__core_wxMouseEventsManager.ctd_base,
    &sipTypeDef__core_wxMouseState.ctd_base,
    &enumTypes[86].etd_base,
    &sipTypeDef__core_wxMoveEvent.ctd_base,
    &sipTypeDef__core_wxMsgCatalog.ctd_base,
    &sipTypeDef__core_wxMultiChoiceDialog.ctd_base,
    &sipTypeDef__core_wxNativeFontInfo.ctd_base,
    &sipTypeDef__core_wxNativePixelData.ctd_base,
    &sipTypeDef__core_wxNativePixelData_Accessor.ctd_base,
    &enumTypes[87].etd_base,
    &sipTypeDef__core_wxNavigationKeyEvent.ctd_base,
    &enumTypes[88].etd_base,
    &sipTypeDef__core_wxNonOwnedWindow.ctd_base,
    &sipTypeDef__core_wxNotebook.ctd_base,
    &sipTypeDef__core_wxNotifyEvent.ctd_base,
    &sipTypeDef__core_wxNumberEntryDialog.ctd_base,
    &sipTypeDef__core_wxObject.ctd_base,
    &enumTypes[89].etd_base,
    &enumTypes[90].etd_base,
    &enumTypes[91].etd_base,
    &sipTypeDef__core_wxOutputStream.ctd_base,
    &sipTypeDef__core_wxOverlay.ctd_base,
    &sipTypeDef__core_wxPCXHandler.ctd_base,
    &sipTypeDef__core_wxPNGHandler.ctd_base,
    &sipTypeDef__core_wxPNMHandler.ctd_base,
    &sipTypeDef__core_wxPageSetupDialog.ctd_base,
    &sipTypeDef__core_wxPageSetupDialogData.ctd_base,
    &sipTypeDef__core_wxPaintDC.ctd_base,
    &sipTypeDef__core_wxPaintEvent.ctd_base,
    &sipTypeDef__core_wxPalette.ctd_base,
    &sipTypeDef__core_wxPaletteChangedEvent.ctd_base,
    &sipTypeDef__core_wxPanGestureEvent.ctd_base,
    &sipTypeDef__core_wxPanel.ctd_base,
    &enumTypes[92].etd_base,
    &sipTypeDef__core_wxPasswordEntryDialog.ctd_base,
    &sipTypeDef__core_wxPen.ctd_base,
    &enumTypes[93].etd_base,
    &sipTypeDef__core_wxPenInfo.ctd_base,
    &enumTypes[94].etd_base,
    &sipTypeDef__core_wxPenList.ctd_base,
    &enumTypes[95].etd_base,
    &enumTypes[96].etd_base,
    &sipTypeDef__core_wxPickerBase.ctd_base,
    &sipTypeDef__core_wxPixelDataBase.ctd_base,
    &sipTypeDef__core_wxPlatformId.ctd_base,
    &sipTypeDef__core_wxPlatformInfo.ctd_base,
    &sipTypeDef__core_wxPoint.ctd_base,
    &sipTypeDef__core_wxPoint2DDouble.ctd_base,
    &sipTypeDef__core_wxPointList.ctd_base,
    &sipTypeDef__core_wxPointList_iterator.ctd_base,
    &enumTypes[97].etd_base,
    &sipTypeDef__core_wxPopupTransientWindow.ctd_base,
    &sipTypeDef__core_wxPopupWindow.ctd_base,
    &enumTypes[98].etd_base,
    &sipTypeDef__core_wxPosition.ctd_base,
    &sipTypeDef__core_wxPostScriptDC.ctd_base,
    &sipTypeDef__core_wxPowerEvent.ctd_base,
    &sipTypeDef__core_wxPowerResource.ctd_base,
    &sipTypeDef__core_wxPowerResourceBlocker.ctd_base,
    &enumTypes[99].etd_base,
    &enumTypes[100].etd_base,
    &sipTypeDef__core_wxPreferencesEditor.ctd_base,
    &sipTypeDef__core_wxPreferencesPage.ctd_base,
    &sipTypeDef__core_wxPressAndTapEvent.ctd_base,
    &sipTypeDef__core_wxPreviewCanvas.ctd_base,
    &sipTypeDef__core_wxPreviewControlBar.ctd_base,
    &sipTypeDef__core_wxPreviewFrame.ctd_base,
    &enumTypes[101].etd_base,
    &sipTypeDef__core_wxPrintAbortDialog.ctd_base,
    &enumTypes[102].etd_base,
    &sipTypeDef__core_wxPrintData.ctd_base,
    &sipTypeDef__core_wxPrintDialog.ctd_base,
    &sipTypeDef__core_wxPrintDialogData.ctd_base,
    &enumTypes[103].etd_base,
    &enumTypes[104].etd_base,
    &sipTypeDef__core_wxPrintPreview.ctd_base,
    &sipTypeDef__core_wxPrinter.ctd_base,
    &sipTypeDef__core_wxPrinterDC.ctd_base,
    &enumTypes[105].etd_base,
    &sipTypeDef__core_wxPrintout.ctd_base,
    &sipTypeDef__core_wxProcess.ctd_base,
    &sipTypeDef__core_wxProcessEvent.ctd_base,
    &sipTypeDef__core_wxProgressDialog.ctd_base,
    &sipTypeDef__core_wxPropagateOnce.ctd_base,
    &sipTypeDef__core_wxPropagationDisabler.ctd_base,
    &sipTypeDef__core_wxPyApp.ctd_base,
    &sipTypeDef__core_wxPyBuffer.mtd_base,
    &sipTypeDef__core_wxPyCommandEvent.ctd_base,
    &sipTypeDef__core_wxPyEvent.ctd_base,
    &sipTypeDef__core_wxPySingleChoiceDialog.ctd_base,
    &sipTypeDef__core_wxPyUserData.mtd_base,
    &sipTypeDef__core_wxQueryNewPaletteEvent.ctd_base,
    &sipTypeDef__core_wxRadioBox.ctd_base,
    &sipTypeDef__core_wxRadioButton.ctd_base,
    &enumTypes[106].etd_base,
    &sipTypeDef__core_wxRealPoint.ctd_base,
    &sipTypeDef__core_wxRearrangeCtrl.ctd_base,
    &sipTypeDef__core_wxRearrangeDialog.ctd_base,
    &sipTypeDef__core_wxRearrangeList.ctd_base,
    &sipTypeDef__core_wxRect.ctd_base,
    &sipTypeDef__core_wxRect2DDouble.ctd_base,
    &sipTypeDef__core_wxRefCounter.ctd_base,
    &sipTypeDef__core_wxRegion.ctd_base,
    &enumTypes[107].etd_base,
    &sipTypeDef__core_wxRegionIterator.ctd_base,
    &enumTypes[108].etd_base,
    &sipTypeDef__core_wxRendererNative.ctd_base,
    &sipTypeDef__core_wxRendererVersion.ctd_base,
    &sipTypeDef__core_wxRichMessageDialog.ctd_base,
    &sipTypeDef__core_wxRotateGestureEvent.ctd_base,
    &sipTypeDef__core_wxSVGBitmapEmbedHandler.ctd_base,
    &sipTypeDef__core_wxSVGBitmapFileHandler.ctd_base,
    &sipTypeDef__core_wxSVGBitmapHandler.ctd_base,
    &sipTypeDef__core_wxSVGFileDC.ctd_base,
    &enumTypes[109].etd_base,
    &sipTypeDef__core_wxScreenDC.ctd_base,
    &sipTypeDef__core_wxScrollBar.ctd_base,
    &sipTypeDef__core_wxScrollEvent.ctd_base,
    &sipTypeDef__core_wxScrollWinEvent.ctd_base,
    &enumTypes[110].etd_base,
    &sipTypeDef__core_wxScrolledCanvas.ctd_base,
    &sipTypeDef__core_wxScrolledWindow.ctd_base,
    &sipTypeDef__core_wxSearchCtrl.ctd_base,
    &enumTypes[111].etd_base,
    &sipTypeDef__core_wxSetCursorEvent.ctd_base,
    &sipTypeDef__core_wxSettableHeaderColumn.ctd_base,
    &sipTypeDef__core_wxSharedClientDataContainer.ctd_base,
    &enumTypes[112].etd_base,
    &sipTypeDef__core_wxShowEvent.ctd_base,
    &enumTypes[113].etd_base,
    &enumTypes[114].etd_base,
    &sipTypeDef__core_wxSimpleHelpProvider.ctd_base,
    &sipTypeDef__core_wxSimplebook.ctd_base,
    &sipTypeDef__core_wxSingleInstanceChecker.ctd_base,
    &sipTypeDef__core_wxSize.ctd_base,
    &sipTypeDef__core_wxSizeEvent.ctd_base,
    &sipTypeDef__core_wxSizer.ctd_base,
    &enumTypes[115].etd_base,
    &sipTypeDef__core_wxSizerFlags.ctd_base,
    &sipTypeDef__core_wxSizerItem.ctd_base,
    &sipTypeDef__core_wxSizerItemList.ctd_base,
    &sipTypeDef__core_wxSizerItemList_iterator.ctd_base,
    &sipTypeDef__core_wxSlider.ctd_base,
    &sipTypeDef__core_wxSpinButton.ctd_base,
    &sipTypeDef__core_wxSpinCtrl.ctd_base,
    &sipTypeDef__core_wxSpinCtrlDouble.ctd_base,
    &sipTypeDef__core_wxSpinDoubleEvent.ctd_base,
    &sipTypeDef__core_wxSpinEvent.ctd_base,
    &enumTypes[116].etd_base,
    &sipTypeDef__core_wxSplitterEvent.ctd_base,
    &sipTypeDef__core_wxSplitterRenderParams.ctd_base,
    &sipTypeDef__core_wxSplitterWindow.ctd_base,
    &enumTypes[117].etd_base,
    &sipTypeDef__core_wxStandardPaths.ctd_base,
    &enumTypes[118].etd_base,
    &enumTypes[119].etd_base,
    &enumTypes[120].etd_base,
    &enumTypes[121].etd_base,
    &sipTypeDef__core_wxStaticBitmap.ctd_base,
    &enumTypes[122].etd_base,
    &sipTypeDef__core_wxStaticBox.ctd_base,
    &sipTypeDef__core_wxStaticBoxSizer.ctd_base,
    &sipTypeDef__core_wxStaticLine.ctd_base,
    &sipTypeDef__core_wxStaticText.ctd_base,
    &sipTypeDef__core_wxStatusBar.ctd_base,
    &sipTypeDef__core_wxStatusBarPane.ctd_base,
    &sipTypeDef__core_wxStdDialogButtonSizer.ctd_base,
    &enumTypes[123].etd_base,
    &sipTypeDef__core_wxStockGDI.ctd_base,
    &enumTypes[124].etd_base,
    &enumTypes[125].etd_base,
    &sipTypeDef__core_wxStockPreferencesPage.ctd_base,
    &enumTypes[126].etd_base,
    &sipTypeDef__core_wxStopWatch.ctd_base,
    &sipTypeDef__core_wxStreamBase.ctd_base,
    &enumTypes[127].etd_base,
    &enumTypes[128].etd_base,
    &sipTypeDef__core_wxString.mtd_base,
    &sipTypeDef__core_wxStringCArrayHolder.ctd_base,
    &sipTypeDef__core_wxSysColourChangedEvent.ctd_base,
    &sipTypeDef__core_wxSystemAppearance.ctd_base,
    &enumTypes[129].etd_base,
    &enumTypes[130].etd_base,
    &enumTypes[131].etd_base,
    &enumTypes[132].etd_base,
    &sipTypeDef__core_wxSystemOptions.ctd_base,
    &enumTypes[133].etd_base,
    &sipTypeDef__core_wxSystemSettings.ctd_base,
    &sipTypeDef__core_wxTDIChildFrame.ctd_base,
    &sipTypeDef__core_wxTGAHandler.ctd_base,
    &sipTypeDef__core_wxTIFFHandler.ctd_base,
    &sipTypeDef__core_wxTextAttr.ctd_base,
    &enumTypes[134].etd_base,
    &enumTypes[135].etd_base,
    &enumTypes[136].etd_base,
    &enumTypes[137].etd_base,
    &enumTypes[138].etd_base,
    &enumTypes[139].etd_base,
    &sipTypeDef__core_wxTextCompleter.ctd_base,
    &sipTypeDef__core_wxTextCompleterSimple.ctd_base,
    &sipTypeDef__core_wxTextCtrl.ctd_base,
    &enumTypes[140].etd_base,
    &sipTypeDef__core_wxTextDataObject.ctd_base,
    &sipTypeDef__core_wxTextDropTarget.ctd_base,
    &sipTypeDef__core_wxTextEntry.ctd_base,
    &sipTypeDef__core_wxTextEntryDialog.ctd_base,
    &enumTypes[141].etd_base,
    &sipTypeDef__core_wxTextUrlEvent.ctd_base,
    &sipTypeDef__core_wxThreadEvent.ctd_base,
    &sipTypeDef__core_wxTimeSpan.ctd_base,
    &sipTypeDef__core_wxTimer.ctd_base,
    &sipTypeDef__core_wxTimerEvent.ctd_base,
    &sipTypeDef__core_wxTimerRunner.ctd_base,
    &sipTypeDef__core_wxTipWindow.ctd_base,
    &enumTypes[142].etd_base,
    &sipTypeDef__core_wxToggleButton.ctd_base,
    &sipTypeDef__core_wxToolBar.ctd_base,
    &sipTypeDef__core_wxToolBarToolBase.ctd_base,
    &enumTypes[143].etd_base,
    &sipTypeDef__core_wxToolTip.ctd_base,
    &sipTypeDef__core_wxToolbook.ctd_base,
    &sipTypeDef__core_wxTopLevelWindow.ctd_base,
    &sipTypeDef__core_wxTopLevelWindow_GeometrySerializer.ctd_base,
    &sipTypeDef__core_wxTrackable.ctd_base,
    &sipTypeDef__core_wxTranslations.ctd_base,
    &sipTypeDef__core_wxTranslationsLoader.ctd_base,
    &sipTypeDef__core_wxTreeCtrl.ctd_base,
    &sipTypeDef__core_wxTreeEvent.ctd_base,
    &sipTypeDef__core_wxTreeItemData.mtd_base,
    &enumTypes[144].etd_base,
    &sipTypeDef__core_wxTreeItemId.ctd_base,
    &sipTypeDef__core_wxTreebook.ctd_base,
    &sipTypeDef__core_wxTwoFingerTapEvent.ctd_base,
    &sipTypeDef__core_wxUIActionSimulator.ctd_base,
    &sipTypeDef__core_wxUIntPtr.mtd_base,
    &sipTypeDef__core_wxULongLong.mtd_base,
    &sipTypeDef__core_wxURLDataObject.ctd_base,
    &sipTypeDef__core_wxUniChar.ctd_base,
    &enumTypes[145].etd_base,
    &sipTypeDef__core_wxUpdateUIEvent.ctd_base,
    &enumTypes[146].etd_base,
    &sipTypeDef__core_wxVListBox.ctd_base,
    &sipTypeDef__core_wxVScrolledWindow.ctd_base,
    &sipTypeDef__core_wxValidator.ctd_base,
    &sipTypeDef__core_wxVarHScrollHelper.ctd_base,
    &sipTypeDef__core_wxVarHVScrollHelper.ctd_base,
    &sipTypeDef__core_wxVarScrollHelperBase.ctd_base,
    &sipTypeDef__core_wxVarVScrollHelper.ctd_base,
    &sipTypeDef__core_wxVariant.mtd_base,
    &sipTypeDef__core_wxVariantList.mtd_base,
    &sipTypeDef__core_wxVector_0100wxBitmap.mtd_base,
    &sipTypeDef__core_wxVector_0100wxBitmapBundle.mtd_base,
    &sipTypeDef__core_wxVersionInfo.ctd_base,
    &sipTypeDef__core_wxVideoMode.ctd_base,
    &sipTypeDef__core_wxVisualAttributes.ctd_base,
    &sipTypeDef__core_wxWindow.ctd_base,
    &sipTypeDef__core_wxWindow_ChildrenRepositioningGuard.ctd_base,
    &sipTypeDef__core_wxWindowBase.ctd_base,
    &sipTypeDef__core_wxWindowCreateEvent.ctd_base,
    &sipTypeDef__core_wxWindowDC.ctd_base,
    &sipTypeDef__core_wxWindowDestroyEvent.ctd_base,
    &sipTypeDef__core_wxWindowDisabler.ctd_base,
    &sipTypeDef__core_wxWindowIDRef.ctd_base,
    &sipTypeDef__core_wxWindowList.ctd_base,
    &sipTypeDef__core_wxWindowList_iterator.ctd_base,
    &sipTypeDef__core_wxWindowModalDialogEvent.ctd_base,
    &enumTypes[147].etd_base,
    &sipTypeDef__core_wxWithImages.ctd_base,
    &sipTypeDef__core_wxWrapSizer.ctd_base,
    &sipTypeDef__core_wxXPMHandler.ctd_base,
    &sipTypeDef__core_wxZoomGestureEvent.ctd_base,
};


/*
 * These define each typedef in this module.
 */
static sipTypedefDef typedefsTable[] = {
    {"ChildrenRepositioningGuard", "wxWindow::ChildrenRepositioningGuard"},
    {"byte", "unsigned char"},
    {"ssize_t", "Py_ssize_t"},
    {"time_t", "long long"},
    {"ulong", "unsigned long"},
    {"wxArtClient", "wxString"},
    {"wxArtID", "wxString"},
    {"wxByte", "unsigned char"},
    {"wxChar", "wchar_t"},
    {"wxChar16", "unsigned short"},
    {"wxChar32", "uint"},
    {"wxCoord", "int"},
    {"wxDateTime::wxDateTime_t", "unsigned short"},
    {"wxDouble", "double"},
    {"wxDword", "uint"},
    {"wxEventType", "int"},
    {"wxFileOffset", "long long"},
    {"wxFloat32", "float"},
    {"wxFloat64", "double"},
    {"wxInt16", "short"},
    {"wxInt32", "int"},
    {"wxInt64", "long long"},
    {"wxInt8", "signed char"},
    {"wxLogLevel", "unsigned long"},
    {"wxLongLong_t", "long long"},
    {"wxObjectConstructorFn", "void*"},
    {"wxObjectRefData", "wxRefCounter"},
    {"wxPoint2D", "wxPoint2DDouble"},
    {"wxPrintQuality", "int"},
    {"wxRect2D", "wxRect2DDouble"},
    {"wxTextCoord", "long"},
    {"wxTextPos", "long"},
    {"wxTreeItemIdValue", "void*"},
    {"wxUChar", "wchar_t"},
    {"wxULongLong_t", "unsigned long long"},
    {"wxUint16", "unsigned short"},
    {"wxUint32", "uint"},
    {"wxUint64", "unsigned long long"},
    {"wxUint8", "unsigned char"},
    {"wxUniChar::value_type", "uint"},
    {"wxWindowID", "int"},
    {"wxWord", "unsigned short"},
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_wxObject, {392, 255, 0}, SIP_NULLPTR},
    {sipSubClass_wxWindow, {392, 255, 0}, SIP_NULLPTR},
    {SIP_NULLPTR, {0, 0, 0}, SIP_NULLPTR}
};


/* Define the class and enum instances to be added to this module dictionary. */
static sipTypeInstanceDef typeInstances[] = {
    {sipName_TheMimeTypesManager, & ::wxTheMimeTypesManager, &sipType_wxMimeTypesManager, SIP_INDIRECT},
    {0, 0, 0, 0}
};


/* Define the strings to be added to this module dictionary. */
static sipStringInstanceDef stringInstances[] = {
    {sipName_ART_ADD_BOOKMARK, wxART_ADD_BOOKMARK, 'N'},
    {sipName_ART_BUTTON, wxART_BUTTON, 'N'},
    {sipName_ART_CDROM, wxART_CDROM, 'N'},
    {sipName_ART_CLOSE, wxART_CLOSE, 'N'},
    {sipName_ART_CMN_DIALOG, wxART_CMN_DIALOG, 'N'},
    {sipName_ART_COPY, wxART_COPY, 'N'},
    {sipName_ART_CROSS_MARK, wxART_CROSS_MARK, 'N'},
    {sipName_ART_CUT, wxART_CUT, 'N'},
    {sipName_ART_DELETE, wxART_DELETE, 'N'},
    {sipName_ART_DEL_BOOKMARK, wxART_DEL_BOOKMARK, 'N'},
    {sipName_ART_EDIT, wxART_EDIT, 'N'},
    {sipName_ART_ERROR, wxART_ERROR, 'N'},
    {sipName_ART_EXECUTABLE_FILE, wxART_EXECUTABLE_FILE, 'N'},
    {sipName_ART_FILE_OPEN, wxART_FILE_OPEN, 'N'},
    {sipName_ART_FILE_SAVE, wxART_FILE_SAVE, 'N'},
    {sipName_ART_FILE_SAVE_AS, wxART_FILE_SAVE_AS, 'N'},
    {sipName_ART_FIND, wxART_FIND, 'N'},
    {sipName_ART_FIND_AND_REPLACE, wxART_FIND_AND_REPLACE, 'N'},
    {sipName_ART_FLOPPY, wxART_FLOPPY, 'N'},
    {sipName_ART_FOLDER, wxART_FOLDER, 'N'},
    {sipName_ART_FOLDER_OPEN, wxART_FOLDER_OPEN, 'N'},
    {sipName_ART_FRAME_ICON, wxART_FRAME_ICON, 'N'},
    {sipName_ART_FULL_SCREEN, wxART_FULL_SCREEN, 'N'},
    {sipName_ART_GOTO_FIRST, wxART_GOTO_FIRST, 'N'},
    {sipName_ART_GOTO_LAST, wxART_GOTO_LAST, 'N'},
    {sipName_ART_GO_BACK, wxART_GO_BACK, 'N'},
    {sipName_ART_GO_DIR_UP, wxART_GO_DIR_UP, 'N'},
    {sipName_ART_GO_DOWN, wxART_GO_DOWN, 'N'},
    {sipName_ART_GO_FORWARD, wxART_GO_FORWARD, 'N'},
    {sipName_ART_GO_HOME, wxART_GO_HOME, 'N'},
    {sipName_ART_GO_TO_PARENT, wxART_GO_TO_PARENT, 'N'},
    {sipName_ART_GO_UP, wxART_GO_UP, 'N'},
    {sipName_ART_HARDDISK, wxART_HARDDISK, 'N'},
    {sipName_ART_HELP, wxART_HELP, 'N'},
    {sipName_ART_HELP_BOOK, wxART_HELP_BOOK, 'N'},
    {sipName_ART_HELP_BROWSER, wxART_HELP_BROWSER, 'N'},
    {sipName_ART_HELP_FOLDER, wxART_HELP_FOLDER, 'N'},
    {sipName_ART_HELP_PAGE, wxART_HELP_PAGE, 'N'},
    {sipName_ART_HELP_SETTINGS, wxART_HELP_SETTINGS, 'N'},
    {sipName_ART_HELP_SIDE_PANEL, wxART_HELP_SIDE_PANEL, 'N'},
    {sipName_ART_INFORMATION, wxART_INFORMATION, 'N'},
    {sipName_ART_LIST, wxART_LIST, 'N'},
    {sipName_ART_LIST_VIEW, wxART_LIST_VIEW, 'N'},
    {sipName_ART_MENU, wxART_MENU, 'N'},
    {sipName_ART_MESSAGE_BOX, wxART_MESSAGE_BOX, 'N'},
    {sipName_ART_MINUS, wxART_MINUS, 'N'},
    {sipName_ART_MISSING_IMAGE, wxART_MISSING_IMAGE, 'N'},
    {sipName_ART_NEW, wxART_NEW, 'N'},
    {sipName_ART_NEW_DIR, wxART_NEW_DIR, 'N'},
    {sipName_ART_NORMAL_FILE, wxART_NORMAL_FILE, 'N'},
    {sipName_ART_OTHER, wxART_OTHER, 'N'},
    {sipName_ART_PASTE, wxART_PASTE, 'N'},
    {sipName_ART_PLUS, wxART_PLUS, 'N'},
    {sipName_ART_PRINT, wxART_PRINT, 'N'},
    {sipName_ART_QUESTION, wxART_QUESTION, 'N'},
    {sipName_ART_QUIT, wxART_QUIT, 'N'},
    {sipName_ART_REDO, wxART_REDO, 'N'},
    {sipName_ART_REMOVABLE, wxART_REMOVABLE, 'N'},
    {sipName_ART_REPORT_VIEW, wxART_REPORT_VIEW, 'N'},
    {sipName_ART_TICK_MARK, wxART_TICK_MARK, 'N'},
    {sipName_ART_TIP, wxART_TIP, 'N'},
    {sipName_ART_TOOLBAR, wxART_TOOLBAR, 'N'},
    {sipName_ART_UNDO, wxART_UNDO, 'N'},
    {sipName_ART_WARNING, wxART_WARNING, 'N'},
    {sipName_ART_WX_LOGO, wxART_WX_LOGO, 'N'},
    {sipName_ButtonNameStr, wxButtonNameStr, 'N'},
    {sipName_CheckBoxNameStr, wxCheckBoxNameStr, 'N'},
    {sipName_ChoiceNameStr, wxChoiceNameStr, 'N'},
    {sipName_CollapsibleHeaderCtrlNameStr, wxCollapsibleHeaderCtrlNameStr, 'N'},
    {sipName_CollapsiblePaneNameStr, wxCollapsiblePaneNameStr, 'N'},
    {sipName_ColourPickerCtrlNameStr, wxColourPickerCtrlNameStr, 'N'},
    {sipName_ColourPickerWidgetNameStr, wxColourPickerWidgetNameStr, 'N'},
    {sipName_ComboBoxNameStr, wxComboBoxNameStr, 'N'},
    {sipName_ControlNameStr, wxControlNameStr, 'N'},
    {sipName_DefaultDateTimeFormat, wxDefaultDateTimeFormat, 'N'},
    {sipName_DefaultTimeSpanFormat, wxDefaultTimeSpanFormat, 'N'},
    {sipName_DialogNameStr, wxDialogNameStr, 'N'},
    {sipName_DirDialogDefaultFolderStr, wxDirDialogDefaultFolderStr, 'N'},
    {sipName_DirDialogNameStr, wxDirDialogNameStr, 'N'},
    {sipName_DirPickerCtrlNameStr, wxDirPickerCtrlNameStr, 'N'},
    {sipName_DirPickerWidgetLabel, wxDirPickerWidgetLabel, 'N'},
    {sipName_DirPickerWidgetNameStr, wxDirPickerWidgetNameStr, 'N'},
    {sipName_DirSelectorPromptStr, wxDirSelectorPromptStr, 'N'},
    {sipName_FileCtrlNameStr, wxFileCtrlNameStr, 'N'},
    {sipName_FileDialogNameStr, wxFileDialogNameStr, 'N'},
    {sipName_FilePickerCtrlNameStr, wxFilePickerCtrlNameStr, 'N'},
    {sipName_FilePickerWidgetLabel, wxFilePickerWidgetLabel, 'N'},
    {sipName_FilePickerWidgetNameStr, wxFilePickerWidgetNameStr, 'N'},
    {sipName_FileSelectorDefaultWildcardStr, wxFileSelectorDefaultWildcardStr, 'N'},
    {sipName_FileSelectorPromptStr, wxFileSelectorPromptStr, 'N'},
    {sipName_FontPickerCtrlNameStr, wxFontPickerCtrlNameStr, 'N'},
    {sipName_FontPickerWidgetNameStr, wxFontPickerWidgetNameStr, 'N'},
    {sipName_FrameNameStr, wxFrameNameStr, 'N'},
    {sipName_GaugeNameStr, wxGaugeNameStr, 'N'},
    {sipName_GetPasswordFromUserPromptStr, wxGetPasswordFromUserPromptStr, 'N'},
    {sipName_GetTextFromUserPromptStr, wxGetTextFromUserPromptStr, 'N'},
    {sipName_HeaderCtrlNameStr, wxHeaderCtrlNameStr, 'N'},
    {sipName_ListBoxNameStr, wxListBoxNameStr, 'N'},
    {sipName_ListCtrlNameStr, wxListCtrlNameStr, 'N'},
    {sipName_MessageBoxCaptionStr, wxMessageBoxCaptionStr, 'N'},
    {sipName_NotebookNameStr, wxNotebookNameStr, 'N'},
    {sipName_PanelNameStr, wxPanelNameStr, 'N'},
    {sipName_RadioBoxNameStr, wxRadioBoxNameStr, 'N'},
    {sipName_RadioButtonNameStr, wxRadioButtonNameStr, 'N'},
    {sipName_RearrangeDialogNameStr, wxRearrangeDialogNameStr, 'N'},
    {sipName_RearrangeListNameStr, wxRearrangeListNameStr, 'N'},
    {sipName_ScrollBarNameStr, wxScrollBarNameStr, 'N'},
    {sipName_SearchCtrlNameStr, wxSearchCtrlNameStr, 'N'},
    {sipName_SliderNameStr, wxSliderNameStr, 'N'},
    {sipName_StaticBitmapNameStr, wxStaticBitmapNameStr, 'N'},
    {sipName_StaticBoxNameStr, wxStaticBoxNameStr, 'N'},
    {sipName_StaticLineNameStr, wxStaticLineNameStr, 'N'},
    {sipName_StaticTextNameStr, wxStaticTextNameStr, 'N'},
    {sipName_StatusBarNameStr, wxStatusBarNameStr, 'N'},
    {sipName_TextCtrlNameStr, wxTextCtrlNameStr, 'N'},
    {sipName_ToolBarNameStr, wxToolBarNameStr, 'N'},
    {sipName_TreeCtrlNameStr, wxTreeCtrlNameStr, 'N'},
    {sipName_VListBoxNameStr, wxVListBoxNameStr, 'N'},
    {0, 0, 0}
};


/* Define the enum members and ints to be added to this module. */
static sipIntInstanceDef intInstances[] = {
    {sipName_ACC_EVENT_OBJECT_ACCELERATORCHANGE, wxACC_EVENT_OBJECT_ACCELERATORCHANGE},
    {sipName_ACC_EVENT_OBJECT_CREATE, wxACC_EVENT_OBJECT_CREATE},
    {sipName_ACC_EVENT_OBJECT_DEFACTIONCHANGE, wxACC_EVENT_OBJECT_DEFACTIONCHANGE},
    {sipName_ACC_EVENT_OBJECT_DESCRIPTIONCHANGE, wxACC_EVENT_OBJECT_DESCRIPTIONCHANGE},
    {sipName_ACC_EVENT_OBJECT_DESTROY, wxACC_EVENT_OBJECT_DESTROY},
    {sipName_ACC_EVENT_OBJECT_FOCUS, wxACC_EVENT_OBJECT_FOCUS},
    {sipName_ACC_EVENT_OBJECT_HELPCHANGE, wxACC_EVENT_OBJECT_HELPCHANGE},
    {sipName_ACC_EVENT_OBJECT_HIDE, wxACC_EVENT_OBJECT_HIDE},
    {sipName_ACC_EVENT_OBJECT_LOCATIONCHANGE, wxACC_EVENT_OBJECT_LOCATIONCHANGE},
    {sipName_ACC_EVENT_OBJECT_NAMECHANGE, wxACC_EVENT_OBJECT_NAMECHANGE},
    {sipName_ACC_EVENT_OBJECT_PARENTCHANGE, wxACC_EVENT_OBJECT_PARENTCHANGE},
    {sipName_ACC_EVENT_OBJECT_REORDER, wxACC_EVENT_OBJECT_REORDER},
    {sipName_ACC_EVENT_OBJECT_SELECTION, wxACC_EVENT_OBJECT_SELECTION},
    {sipName_ACC_EVENT_OBJECT_SELECTIONADD, wxACC_EVENT_OBJECT_SELECTIONADD},
    {sipName_ACC_EVENT_OBJECT_SELECTIONREMOVE, wxACC_EVENT_OBJECT_SELECTIONREMOVE},
    {sipName_ACC_EVENT_OBJECT_SELECTIONWITHIN, wxACC_EVENT_OBJECT_SELECTIONWITHIN},
    {sipName_ACC_EVENT_OBJECT_SHOW, wxACC_EVENT_OBJECT_SHOW},
    {sipName_ACC_EVENT_OBJECT_STATECHANGE, wxACC_EVENT_OBJECT_STATECHANGE},
    {sipName_ACC_EVENT_OBJECT_VALUECHANGE, wxACC_EVENT_OBJECT_VALUECHANGE},
    {sipName_ACC_EVENT_SYSTEM_ALERT, wxACC_EVENT_SYSTEM_ALERT},
    {sipName_ACC_EVENT_SYSTEM_CAPTUREEND, wxACC_EVENT_SYSTEM_CAPTUREEND},
    {sipName_ACC_EVENT_SYSTEM_CAPTURESTART, wxACC_EVENT_SYSTEM_CAPTURESTART},
    {sipName_ACC_EVENT_SYSTEM_CONTEXTHELPEND, wxACC_EVENT_SYSTEM_CONTEXTHELPEND},
    {sipName_ACC_EVENT_SYSTEM_CONTEXTHELPSTART, wxACC_EVENT_SYSTEM_CONTEXTHELPSTART},
    {sipName_ACC_EVENT_SYSTEM_DIALOGEND, wxACC_EVENT_SYSTEM_DIALOGEND},
    {sipName_ACC_EVENT_SYSTEM_DIALOGSTART, wxACC_EVENT_SYSTEM_DIALOGSTART},
    {sipName_ACC_EVENT_SYSTEM_DRAGDROPEND, wxACC_EVENT_SYSTEM_DRAGDROPEND},
    {sipName_ACC_EVENT_SYSTEM_DRAGDROPSTART, wxACC_EVENT_SYSTEM_DRAGDROPSTART},
    {sipName_ACC_EVENT_SYSTEM_FOREGROUND, wxACC_EVENT_SYSTEM_FOREGROUND},
    {sipName_ACC_EVENT_SYSTEM_MENUEND, wxACC_EVENT_SYSTEM_MENUEND},
    {sipName_ACC_EVENT_SYSTEM_MENUPOPUPEND, wxACC_EVENT_SYSTEM_MENUPOPUPEND},
    {sipName_ACC_EVENT_SYSTEM_MENUPOPUPSTART, wxACC_EVENT_SYSTEM_MENUPOPUPSTART},
    {sipName_ACC_EVENT_SYSTEM_MENUSTART, wxACC_EVENT_SYSTEM_MENUSTART},
    {sipName_ACC_EVENT_SYSTEM_MINIMIZEEND, wxACC_EVENT_SYSTEM_MINIMIZEEND},
    {sipName_ACC_EVENT_SYSTEM_MINIMIZESTART, wxACC_EVENT_SYSTEM_MINIMIZESTART},
    {sipName_ACC_EVENT_SYSTEM_MOVESIZEEND, wxACC_EVENT_SYSTEM_MOVESIZEEND},
    {sipName_ACC_EVENT_SYSTEM_MOVESIZESTART, wxACC_EVENT_SYSTEM_MOVESIZESTART},
    {sipName_ACC_EVENT_SYSTEM_SCROLLINGEND, wxACC_EVENT_SYSTEM_SCROLLINGEND},
    {sipName_ACC_EVENT_SYSTEM_SCROLLINGSTART, wxACC_EVENT_SYSTEM_SCROLLINGSTART},
    {sipName_ACC_EVENT_SYSTEM_SOUND, wxACC_EVENT_SYSTEM_SOUND},
    {sipName_ACC_EVENT_SYSTEM_SWITCHEND, wxACC_EVENT_SYSTEM_SWITCHEND},
    {sipName_ACC_EVENT_SYSTEM_SWITCHSTART, wxACC_EVENT_SYSTEM_SWITCHSTART},
    {sipName_ACC_SELF, wxACC_SELF},
    {sipName_ACC_STATE_SYSTEM_ALERT_HIGH, wxACC_STATE_SYSTEM_ALERT_HIGH},
    {sipName_ACC_STATE_SYSTEM_ALERT_LOW, wxACC_STATE_SYSTEM_ALERT_LOW},
    {sipName_ACC_STATE_SYSTEM_ALERT_MEDIUM, wxACC_STATE_SYSTEM_ALERT_MEDIUM},
    {sipName_ACC_STATE_SYSTEM_ANIMATED, wxACC_STATE_SYSTEM_ANIMATED},
    {sipName_ACC_STATE_SYSTEM_BUSY, wxACC_STATE_SYSTEM_BUSY},
    {sipName_ACC_STATE_SYSTEM_CHECKED, wxACC_STATE_SYSTEM_CHECKED},
    {sipName_ACC_STATE_SYSTEM_COLLAPSED, wxACC_STATE_SYSTEM_COLLAPSED},
    {sipName_ACC_STATE_SYSTEM_DEFAULT, wxACC_STATE_SYSTEM_DEFAULT},
    {sipName_ACC_STATE_SYSTEM_EXPANDED, wxACC_STATE_SYSTEM_EXPANDED},
    {sipName_ACC_STATE_SYSTEM_EXTSELECTABLE, wxACC_STATE_SYSTEM_EXTSELECTABLE},
    {sipName_ACC_STATE_SYSTEM_FLOATING, wxACC_STATE_SYSTEM_FLOATING},
    {sipName_ACC_STATE_SYSTEM_FOCUSABLE, wxACC_STATE_SYSTEM_FOCUSABLE},
    {sipName_ACC_STATE_SYSTEM_FOCUSED, wxACC_STATE_SYSTEM_FOCUSED},
    {sipName_ACC_STATE_SYSTEM_HOTTRACKED, wxACC_STATE_SYSTEM_HOTTRACKED},
    {sipName_ACC_STATE_SYSTEM_INVISIBLE, wxACC_STATE_SYSTEM_INVISIBLE},
    {sipName_ACC_STATE_SYSTEM_MARQUEED, wxACC_STATE_SYSTEM_MARQUEED},
    {sipName_ACC_STATE_SYSTEM_MIXED, wxACC_STATE_SYSTEM_MIXED},
    {sipName_ACC_STATE_SYSTEM_MULTISELECTABLE, wxACC_STATE_SYSTEM_MULTISELECTABLE},
    {sipName_ACC_STATE_SYSTEM_OFFSCREEN, wxACC_STATE_SYSTEM_OFFSCREEN},
    {sipName_ACC_STATE_SYSTEM_PRESSED, wxACC_STATE_SYSTEM_PRESSED},
    {sipName_ACC_STATE_SYSTEM_PROTECTED, wxACC_STATE_SYSTEM_PROTECTED},
    {sipName_ACC_STATE_SYSTEM_READONLY, wxACC_STATE_SYSTEM_READONLY},
    {sipName_ACC_STATE_SYSTEM_SELECTABLE, wxACC_STATE_SYSTEM_SELECTABLE},
    {sipName_ACC_STATE_SYSTEM_SELECTED, wxACC_STATE_SYSTEM_SELECTED},
    {sipName_ACC_STATE_SYSTEM_SELFVOICING, wxACC_STATE_SYSTEM_SELFVOICING},
    {sipName_ACC_STATE_SYSTEM_UNAVAILABLE, wxACC_STATE_SYSTEM_UNAVAILABLE},
    {sipName_ALPHA_OPAQUE, wxALPHA_OPAQUE},
    {sipName_ALPHA_TRANSPARENT, wxALPHA_TRANSPARENT},
    {sipName_ALWAYS_SHOW_SB, wxALWAYS_SHOW_SB},
    {sipName_APPLY, wxAPPLY},
    {sipName_BACKINGSTORE, wxBACKINGSTORE},
    {sipName_BACKWARD, wxBACKWARD},
    {sipName_BITMAP_SCREEN_DEPTH, wxBITMAP_SCREEN_DEPTH},
    {sipName_BI_EXPAND, wxBI_EXPAND},
    {sipName_BK_ALIGN_MASK, wxBK_ALIGN_MASK},
    {sipName_BK_BOTTOM, wxBK_BOTTOM},
    {sipName_BK_DEFAULT, wxBK_DEFAULT},
    {sipName_BK_LEFT, wxBK_LEFT},
    {sipName_BK_RIGHT, wxBK_RIGHT},
    {sipName_BK_TOP, wxBK_TOP},
    {sipName_BORDER, wxBORDER},
    {sipName_BUFFER_CLIENT_AREA, wxBUFFER_CLIENT_AREA},
    {sipName_BUFFER_USES_SHARED_BUFFER, wxBUFFER_USES_SHARED_BUFFER},
    {sipName_BUFFER_VIRTUAL_AREA, wxBUFFER_VIRTUAL_AREA},
    {sipName_BU_ALIGN_MASK, wxBU_ALIGN_MASK},
    {sipName_BU_AUTODRAW, wxBU_AUTODRAW},
    {sipName_BU_BOTTOM, wxBU_BOTTOM},
    {sipName_BU_EXACTFIT, wxBU_EXACTFIT},
    {sipName_BU_LEFT, wxBU_LEFT},
    {sipName_BU_NOTEXT, wxBU_NOTEXT},
    {sipName_BU_RIGHT, wxBU_RIGHT},
    {sipName_BU_TOP, wxBU_TOP},
    {sipName_CANCEL, wxCANCEL},
    {sipName_CAPTION, wxCAPTION},
    {sipName_CB_DROPDOWN, wxCB_DROPDOWN},
    {sipName_CB_READONLY, wxCB_READONLY},
    {sipName_CB_SIMPLE, wxCB_SIMPLE},
    {sipName_CB_SORT, wxCB_SORT},
    {sipName_CHB_ALIGN_MASK, wxCHB_ALIGN_MASK},
    {sipName_CHB_BOTTOM, wxCHB_BOTTOM},
    {sipName_CHB_DEFAULT, wxCHB_DEFAULT},
    {sipName_CHB_LEFT, wxCHB_LEFT},
    {sipName_CHB_RIGHT, wxCHB_RIGHT},
    {sipName_CHB_TOP, wxCHB_TOP},
    {sipName_CHK_2STATE, wxCHK_2STATE},
    {sipName_CHK_3STATE, wxCHK_3STATE},
    {sipName_CHK_ALLOW_3RD_STATE_FOR_USER, wxCHK_ALLOW_3RD_STATE_FOR_USER},
    {sipName_CHOICEDLG_STYLE, wxCHOICEDLG_STYLE},
    {sipName_CHOICE_HEIGHT, wxCHOICE_HEIGHT},
    {sipName_CHOICE_WIDTH, wxCHOICE_WIDTH},
    {sipName_CLIP_CHILDREN, wxCLIP_CHILDREN},
    {sipName_CLIP_SIBLINGS, wxCLIP_SIBLINGS},
    {sipName_CLOSE, wxCLOSE},
    {sipName_CLOSE_BOX, wxCLOSE_BOX},
    {sipName_CLRP_DEFAULT_STYLE, wxCLRP_DEFAULT_STYLE},
    {sipName_CLRP_SHOW_ALPHA, wxCLRP_SHOW_ALPHA},
    {sipName_CLRP_SHOW_LABEL, wxCLRP_SHOW_LABEL},
    {sipName_CLRP_USE_TEXTCTRL, wxCLRP_USE_TEXTCTRL},
    {sipName_COLOURED, wxCOLOURED},
    {sipName_CP_DEFAULT_STYLE, wxCP_DEFAULT_STYLE},
    {sipName_CP_NO_TLW_RESIZE, wxCP_NO_TLW_RESIZE},
    {sipName_DD_CHANGE_DIR, wxDD_CHANGE_DIR},
    {sipName_DD_DEFAULT_STYLE, wxDD_DEFAULT_STYLE},
    {sipName_DD_DIR_MUST_EXIST, wxDD_DIR_MUST_EXIST},
    {sipName_DD_MULTIPLE, wxDD_MULTIPLE},
    {sipName_DD_NEW_DIR_BUTTON, wxDD_NEW_DIR_BUTTON},
    {sipName_DD_SHOW_HIDDEN, wxDD_SHOW_HIDDEN},
    {sipName_DEFAULT_DIALOG_STYLE, wxDEFAULT_DIALOG_STYLE},
    {sipName_DEFAULT_FRAME_STYLE, wxDEFAULT_FRAME_STYLE},
    {sipName_DIALOG_ADAPTATION_ANY_SIZER, wxDIALOG_ADAPTATION_ANY_SIZER},
    {sipName_DIALOG_ADAPTATION_LOOSE_BUTTONS, wxDIALOG_ADAPTATION_LOOSE_BUTTONS},
    {sipName_DIALOG_ADAPTATION_NONE, wxDIALOG_ADAPTATION_NONE},
    {sipName_DIALOG_ADAPTATION_STANDARD_SIZER, wxDIALOG_ADAPTATION_STANDARD_SIZER},
    {sipName_DIALOG_EX_CONTEXTHELP, wxDIALOG_EX_CONTEXTHELP},
    {sipName_DIALOG_EX_METAL, wxDIALOG_EX_METAL},
    {sipName_DIALOG_NO_PARENT, wxDIALOG_NO_PARENT},
    {sipName_DIRP_CHANGE_DIR, wxDIRP_CHANGE_DIR},
    {sipName_DIRP_DEFAULT_STYLE, wxDIRP_DEFAULT_STYLE},
    {sipName_DIRP_DIR_MUST_EXIST, wxDIRP_DIR_MUST_EXIST},
    {sipName_DIRP_SMALL, wxDIRP_SMALL},
    {sipName_DIRP_USE_TEXTCTRL, wxDIRP_USE_TEXTCTRL},
    {sipName_DOUBLE_BORDER, wxDOUBLE_BORDER},
    {sipName_DefaultCoord, wxDefaultCoord},
    {sipName_FC_DEFAULT_STYLE, wxFC_DEFAULT_STYLE},
    {sipName_FD_DEFAULT_STYLE, wxFD_DEFAULT_STYLE},
    {sipName_FIXED_LENGTH, wxFIXED_LENGTH},
    {sipName_FLP_CHANGE_DIR, wxFLP_CHANGE_DIR},
    {sipName_FLP_DEFAULT_STYLE, wxFLP_DEFAULT_STYLE},
    {sipName_FLP_FILE_MUST_EXIST, wxFLP_FILE_MUST_EXIST},
    {sipName_FLP_OPEN, wxFLP_OPEN},
    {sipName_FLP_OVERWRITE_PROMPT, wxFLP_OVERWRITE_PROMPT},
    {sipName_FLP_SAVE, wxFLP_SAVE},
    {sipName_FLP_SMALL, wxFLP_SMALL},
    {sipName_FLP_USE_TEXTCTRL, wxFLP_USE_TEXTCTRL},
    {sipName_FNTP_DEFAULT_STYLE, wxFNTP_DEFAULT_STYLE},
    {sipName_FNTP_FONTDESC_AS_LABEL, wxFNTP_FONTDESC_AS_LABEL},
    {sipName_FNTP_USEFONT_FOR_LABEL, wxFNTP_USEFONT_FOR_LABEL},
    {sipName_FNTP_USE_TEXTCTRL, wxFNTP_USE_TEXTCTRL},
    {sipName_FONTBTN_DEFAULT_STYLE, wxFONTBTN_DEFAULT_STYLE},
    {sipName_FORWARD, wxFORWARD},
    {sipName_FRAME_DRAWER, wxFRAME_DRAWER},
    {sipName_FRAME_EX_CONTEXTHELP, wxFRAME_EX_CONTEXTHELP},
    {sipName_FRAME_EX_METAL, wxFRAME_EX_METAL},
    {sipName_FRAME_FLOAT_ON_PARENT, wxFRAME_FLOAT_ON_PARENT},
    {sipName_FRAME_NO_TASKBAR, wxFRAME_NO_TASKBAR},
    {sipName_FRAME_NO_WINDOW_MENU, wxFRAME_NO_WINDOW_MENU},
    {sipName_FRAME_SHAPED, wxFRAME_SHAPED},
    {sipName_FRAME_TOOL_WINDOW, wxFRAME_TOOL_WINDOW},
    {sipName_FULL_REPAINT_ON_RESIZE, wxFULL_REPAINT_ON_RESIZE},
    {sipName_GA_HORIZONTAL, wxGA_HORIZONTAL},
    {sipName_GA_PROGRESS, wxGA_PROGRESS},
    {sipName_GA_SMOOTH, wxGA_SMOOTH},
    {sipName_GA_TEXT, wxGA_TEXT},
    {sipName_GA_VERTICAL, wxGA_VERTICAL},
    {sipName_HELP, wxHELP},
    {sipName_HELP_NETSCAPE, wxHELP_NETSCAPE},
    {sipName_HSCROLL, wxHSCROLL},
    {sipName_ICONIZE, wxICONIZE},
    {sipName_ICON_ASTERISK, wxICON_ASTERISK},
    {sipName_ICON_AUTH_NEEDED, wxICON_AUTH_NEEDED},
    {sipName_ICON_ERROR, wxICON_ERROR},
    {sipName_ICON_EXCLAMATION, wxICON_EXCLAMATION},
    {sipName_ICON_HAND, wxICON_HAND},
    {sipName_ICON_INFORMATION, wxICON_INFORMATION},
    {sipName_ICON_MASK, wxICON_MASK},
    {sipName_ICON_NONE, wxICON_NONE},
    {sipName_ICON_QUESTION, wxICON_QUESTION},
    {sipName_ICON_SCREEN_DEPTH, wxICON_SCREEN_DEPTH},
    {sipName_ICON_STOP, wxICON_STOP},
    {sipName_ICON_WARNING, wxICON_WARNING},
    {sipName_ID_PREVIEW_CLOSE, wxID_PREVIEW_CLOSE},
    {sipName_ID_PREVIEW_FIRST, wxID_PREVIEW_FIRST},
    {sipName_ID_PREVIEW_GOTO, wxID_PREVIEW_GOTO},
    {sipName_ID_PREVIEW_LAST, wxID_PREVIEW_LAST},
    {sipName_ID_PREVIEW_NEXT, wxID_PREVIEW_NEXT},
    {sipName_ID_PREVIEW_PREVIOUS, wxID_PREVIEW_PREVIOUS},
    {sipName_ID_PREVIEW_PRINT, wxID_PREVIEW_PRINT},
    {sipName_ID_PREVIEW_ZOOM, wxID_PREVIEW_ZOOM},
    {sipName_ID_PREVIEW_ZOOM_IN, wxID_PREVIEW_ZOOM_IN},
    {sipName_ID_PREVIEW_ZOOM_OUT, wxID_PREVIEW_ZOOM_OUT},
    {sipName_IMAGELIST_DRAW_FOCUSED, wxIMAGELIST_DRAW_FOCUSED},
    {sipName_IMAGELIST_DRAW_NORMAL, wxIMAGELIST_DRAW_NORMAL},
    {sipName_IMAGELIST_DRAW_SELECTED, wxIMAGELIST_DRAW_SELECTED},
    {sipName_IMAGELIST_DRAW_TRANSPARENT, wxIMAGELIST_DRAW_TRANSPARENT},
    {sipName_IMAGE_ALPHA_OPAQUE, wxIMAGE_ALPHA_OPAQUE},
    {sipName_IMAGE_ALPHA_THRESHOLD, wxIMAGE_ALPHA_THRESHOLD},
    {sipName_IMAGE_ALPHA_TRANSPARENT, wxIMAGE_ALPHA_TRANSPARENT},
    {sipName_INT16_MAX, wxINT16_MAX},
    {sipName_INT16_MIN, wxINT16_MIN},
    {sipName_INT32_MAX, wxINT32_MAX},
    {sipName_INT32_MIN, wxINT32_MIN},
    {sipName_INT8_MAX, wxINT8_MAX},
    {sipName_INT8_MIN, wxINT8_MIN},
    {sipName_LAYOUT_DEFAULT_MARGIN, wxLAYOUT_DEFAULT_MARGIN},
    {sipName_LB_ALIGN_MASK, wxLB_ALIGN_MASK},
    {sipName_LB_ALWAYS_SB, wxLB_ALWAYS_SB},
    {sipName_LB_BOTTOM, wxLB_BOTTOM},
    {sipName_LB_DEFAULT, wxLB_DEFAULT},
    {sipName_LB_EXTENDED, wxLB_EXTENDED},
    {sipName_LB_HSCROLL, wxLB_HSCROLL},
    {sipName_LB_INT_HEIGHT, wxLB_INT_HEIGHT},
    {sipName_LB_LEFT, wxLB_LEFT},
    {sipName_LB_MULTIPLE, wxLB_MULTIPLE},
    {sipName_LB_NEEDED_SB, wxLB_NEEDED_SB},
    {sipName_LB_NO_SB, wxLB_NO_SB},
    {sipName_LB_OWNERDRAW, wxLB_OWNERDRAW},
    {sipName_LB_RIGHT, wxLB_RIGHT},
    {sipName_LB_SINGLE, wxLB_SINGLE},
    {sipName_LB_SORT, wxLB_SORT},
    {sipName_LB_TOP, wxLB_TOP},
    {sipName_LC_ALIGN_LEFT, wxLC_ALIGN_LEFT},
    {sipName_LC_ALIGN_TOP, wxLC_ALIGN_TOP},
    {sipName_LC_AUTOARRANGE, wxLC_AUTOARRANGE},
    {sipName_LC_EDIT_LABELS, wxLC_EDIT_LABELS},
    {sipName_LC_HRULES, wxLC_HRULES},
    {sipName_LC_ICON, wxLC_ICON},
    {sipName_LC_LIST, wxLC_LIST},
    {sipName_LC_MASK_ALIGN, wxLC_MASK_ALIGN},
    {sipName_LC_MASK_SORT, wxLC_MASK_SORT},
    {sipName_LC_MASK_TYPE, wxLC_MASK_TYPE},
    {sipName_LC_NO_HEADER, wxLC_NO_HEADER},
    {sipName_LC_NO_SORT_HEADER, wxLC_NO_SORT_HEADER},
    {sipName_LC_REPORT, wxLC_REPORT},
    {sipName_LC_SINGLE_SEL, wxLC_SINGLE_SEL},
    {sipName_LC_SMALL_ICON, wxLC_SMALL_ICON},
    {sipName_LC_SORT_ASCENDING, wxLC_SORT_ASCENDING},
    {sipName_LC_SORT_DESCENDING, wxLC_SORT_DESCENDING},
    {sipName_LC_VIRTUAL, wxLC_VIRTUAL},
    {sipName_LC_VRULES, wxLC_VRULES},
    {sipName_LIST_GETSUBITEMRECT_WHOLEITEM, wxLIST_GETSUBITEMRECT_WHOLEITEM},
    {sipName_LIST_HITTEST_ABOVE, wxLIST_HITTEST_ABOVE},
    {sipName_LIST_HITTEST_BELOW, wxLIST_HITTEST_BELOW},
    {sipName_LIST_HITTEST_NOWHERE, wxLIST_HITTEST_NOWHERE},
    {sipName_LIST_HITTEST_ONITEM, wxLIST_HITTEST_ONITEM},
    {sipName_LIST_HITTEST_ONITEMICON, wxLIST_HITTEST_ONITEMICON},
    {sipName_LIST_HITTEST_ONITEMLABEL, wxLIST_HITTEST_ONITEMLABEL},
    {sipName_LIST_HITTEST_ONITEMSTATEICON, wxLIST_HITTEST_ONITEMSTATEICON},
    {sipName_LIST_HITTEST_TOLEFT, wxLIST_HITTEST_TOLEFT},
    {sipName_LIST_HITTEST_TORIGHT, wxLIST_HITTEST_TORIGHT},
    {sipName_LIST_MASK_DATA, wxLIST_MASK_DATA},
    {sipName_LIST_MASK_FORMAT, wxLIST_MASK_FORMAT},
    {sipName_LIST_MASK_IMAGE, wxLIST_MASK_IMAGE},
    {sipName_LIST_MASK_STATE, wxLIST_MASK_STATE},
    {sipName_LIST_MASK_TEXT, wxLIST_MASK_TEXT},
    {sipName_LIST_MASK_WIDTH, wxLIST_MASK_WIDTH},
    {sipName_LIST_SET_ITEM, wxLIST_SET_ITEM},
    {sipName_LIST_STATE_CUT, wxLIST_STATE_CUT},
    {sipName_LIST_STATE_DONTCARE, wxLIST_STATE_DONTCARE},
    {sipName_LIST_STATE_DROPHILITED, wxLIST_STATE_DROPHILITED},
    {sipName_LIST_STATE_FOCUSED, wxLIST_STATE_FOCUSED},
    {sipName_LIST_STATE_SELECTED, wxLIST_STATE_SELECTED},
    {sipName_LI_HORIZONTAL, wxLI_HORIZONTAL},
    {sipName_LI_VERTICAL, wxLI_VERTICAL},
    {sipName_MAJOR_VERSION, MAJOR_VERSION},
    {sipName_MAXIMIZE, wxMAXIMIZE},
    {sipName_MAXIMIZE_BOX, wxMAXIMIZE_BOX},
    {sipName_MB_DOCKABLE, wxMB_DOCKABLE},
    {sipName_MENU_TEAROFF, wxMENU_TEAROFF},
    {sipName_MINIMIZE, wxMINIMIZE},
    {sipName_MINIMIZE_BOX, wxMINIMIZE_BOX},
    {sipName_MINOR_VERSION, MINOR_VERSION},
    {sipName_MORE, wxMORE},
    {sipName_NB_BOTTOM, wxNB_BOTTOM},
    {sipName_NB_DEFAULT, wxNB_DEFAULT},
    {sipName_NB_FIXEDWIDTH, wxNB_FIXEDWIDTH},
    {sipName_NB_LEFT, wxNB_LEFT},
    {sipName_NB_MULTILINE, wxNB_MULTILINE},
    {sipName_NB_NOPAGETHEME, wxNB_NOPAGETHEME},
    {sipName_NB_RIGHT, wxNB_RIGHT},
    {sipName_NB_TOP, wxNB_TOP},
    {sipName_NO, wxNO},
    {sipName_NOT_FOUND, wxNOT_FOUND},
    {sipName_NO_BORDER, wxNO_BORDER},
    {sipName_NO_DEFAULT, wxNO_DEFAULT},
    {sipName_NO_FULL_REPAINT_ON_RESIZE, wxNO_FULL_REPAINT_ON_RESIZE},
    {sipName_NO_IMAGE, NO_IMAGE},
    {sipName_OK, wxOK},
    {sipName_OK_DEFAULT, wxOK_DEFAULT},
    {sipName_PB_SMALL, wxPB_SMALL},
    {sipName_PB_USE_TEXTCTRL, wxPB_USE_TEXTCTRL},
    {sipName_PD_APP_MODAL, wxPD_APP_MODAL},
    {sipName_PD_AUTO_HIDE, wxPD_AUTO_HIDE},
    {sipName_PD_CAN_ABORT, wxPD_CAN_ABORT},
    {sipName_PD_CAN_SKIP, wxPD_CAN_SKIP},
    {sipName_PD_ELAPSED_TIME, wxPD_ELAPSED_TIME},
    {sipName_PD_ESTIMATED_TIME, wxPD_ESTIMATED_TIME},
    {sipName_PD_REMAINING_TIME, wxPD_REMAINING_TIME},
    {sipName_PD_SMOOTH, wxPD_SMOOTH},
    {sipName_POPUP_WINDOW, wxPOPUP_WINDOW},
    {sipName_PREVIEW_DEFAULT, wxPREVIEW_DEFAULT},
    {sipName_PREVIEW_FIRST, wxPREVIEW_FIRST},
    {sipName_PREVIEW_GOTO, wxPREVIEW_GOTO},
    {sipName_PREVIEW_LAST, wxPREVIEW_LAST},
    {sipName_PREVIEW_NEXT, wxPREVIEW_NEXT},
    {sipName_PREVIEW_PREVIOUS, wxPREVIEW_PREVIOUS},
    {sipName_PREVIEW_PRINT, wxPREVIEW_PRINT},
    {sipName_PREVIEW_ZOOM, wxPREVIEW_ZOOM},
    {sipName_PRINT_QUALITY_DRAFT, wxPRINT_QUALITY_DRAFT},
    {sipName_PRINT_QUALITY_HIGH, wxPRINT_QUALITY_HIGH},
    {sipName_PRINT_QUALITY_LOW, wxPRINT_QUALITY_LOW},
    {sipName_PRINT_QUALITY_MEDIUM, wxPRINT_QUALITY_MEDIUM},
    {sipName_PU_CONTAINS_CONTROLS, wxPU_CONTAINS_CONTROLS},
    {sipName_RAISED_BORDER, wxRAISED_BORDER},
    {sipName_RA_HORIZONTAL, wxRA_HORIZONTAL},
    {sipName_RA_LEFTTORIGHT, wxRA_LEFTTORIGHT},
    {sipName_RA_SPECIFY_COLS, wxRA_SPECIFY_COLS},
    {sipName_RA_SPECIFY_ROWS, wxRA_SPECIFY_ROWS},
    {sipName_RA_TOPTOBOTTOM, wxRA_TOPTOBOTTOM},
    {sipName_RA_VERTICAL, wxRA_VERTICAL},
    {sipName_RB_GROUP, wxRB_GROUP},
    {sipName_RB_SINGLE, wxRB_SINGLE},
    {sipName_RELEASE_NUMBER, RELEASE_NUMBER},
    {sipName_RESET, wxRESET},
    {sipName_RESIZE_BORDER, wxRESIZE_BORDER},
    {sipName_RETAINED, wxRETAINED},
    {sipName_SB_FLAT, wxSB_FLAT},
    {sipName_SB_HORIZONTAL, wxSB_HORIZONTAL},
    {sipName_SB_NORMAL, wxSB_NORMAL},
    {sipName_SB_RAISED, wxSB_RAISED},
    {sipName_SB_SUNKEN, wxSB_SUNKEN},
    {sipName_SB_VERTICAL, wxSB_VERTICAL},
    {sipName_SETUP, wxSETUP},
    {sipName_SIMPLE_BORDER, wxSIMPLE_BORDER},
    {sipName_SIZE_ALLOW_MINUS_ONE, wxSIZE_ALLOW_MINUS_ONE},
    {sipName_SIZE_AUTO, wxSIZE_AUTO},
    {sipName_SIZE_AUTO_HEIGHT, wxSIZE_AUTO_HEIGHT},
    {sipName_SIZE_AUTO_WIDTH, wxSIZE_AUTO_WIDTH},
    {sipName_SIZE_FORCE, wxSIZE_FORCE},
    {sipName_SIZE_FORCE_EVENT, wxSIZE_FORCE_EVENT},
    {sipName_SIZE_NO_ADJUSTMENTS, wxSIZE_NO_ADJUSTMENTS},
    {sipName_SIZE_USE_EXISTING, wxSIZE_USE_EXISTING},
    {sipName_SL_AUTOTICKS, wxSL_AUTOTICKS},
    {sipName_SL_BOTH, wxSL_BOTH},
    {sipName_SL_BOTTOM, wxSL_BOTTOM},
    {sipName_SL_HORIZONTAL, wxSL_HORIZONTAL},
    {sipName_SL_INVERSE, wxSL_INVERSE},
    {sipName_SL_LABELS, wxSL_LABELS},
    {sipName_SL_LEFT, wxSL_LEFT},
    {sipName_SL_MIN_MAX_LABELS, wxSL_MIN_MAX_LABELS},
    {sipName_SL_RIGHT, wxSL_RIGHT},
    {sipName_SL_SELRANGE, wxSL_SELRANGE},
    {sipName_SL_TICKS, wxSL_TICKS},
    {sipName_SL_TOP, wxSL_TOP},
    {sipName_SL_VALUE_LABEL, wxSL_VALUE_LABEL},
    {sipName_SL_VERTICAL, wxSL_VERTICAL},
    {sipName_SP_3D, wxSP_3D},
    {sipName_SP_3DBORDER, wxSP_3DBORDER},
    {sipName_SP_3DSASH, wxSP_3DSASH},
    {sipName_SP_ARROW_KEYS, wxSP_ARROW_KEYS},
    {sipName_SP_BORDER, wxSP_BORDER},
    {sipName_SP_HORIZONTAL, wxSP_HORIZONTAL},
    {sipName_SP_LIVE_UPDATE, wxSP_LIVE_UPDATE},
    {sipName_SP_NOBORDER, wxSP_NOBORDER},
    {sipName_SP_NOSASH, wxSP_NOSASH},
    {sipName_SP_NO_XP_THEME, wxSP_NO_XP_THEME},
    {sipName_SP_PERMIT_UNSPLIT, wxSP_PERMIT_UNSPLIT},
    {sipName_SP_THIN_SASH, wxSP_THIN_SASH},
    {sipName_SP_VERTICAL, wxSP_VERTICAL},
    {sipName_SP_WRAP, wxSP_WRAP},
    {sipName_STATIC_BORDER, wxSTATIC_BORDER},
    {sipName_STAY_ON_TOP, wxSTAY_ON_TOP},
    {sipName_STB_DEFAULT_STYLE, wxSTB_DEFAULT_STYLE},
    {sipName_STB_ELLIPSIZE_END, wxSTB_ELLIPSIZE_END},
    {sipName_STB_ELLIPSIZE_MIDDLE, wxSTB_ELLIPSIZE_MIDDLE},
    {sipName_STB_ELLIPSIZE_START, wxSTB_ELLIPSIZE_START},
    {sipName_STB_SHOW_TIPS, wxSTB_SHOW_TIPS},
    {sipName_STB_SIZEGRIP, wxSTB_SIZEGRIP},
    {sipName_ST_ELLIPSIZE_END, wxST_ELLIPSIZE_END},
    {sipName_ST_ELLIPSIZE_MIDDLE, wxST_ELLIPSIZE_MIDDLE},
    {sipName_ST_ELLIPSIZE_START, wxST_ELLIPSIZE_START},
    {sipName_ST_NO_AUTORESIZE, wxST_NO_AUTORESIZE},
    {sipName_SUNKEN_BORDER, wxSUNKEN_BORDER},
    {sipName_SYSTEM_MENU, wxSYSTEM_MENU},
    {sipName_TAB_TRAVERSAL, wxTAB_TRAVERSAL},
    {sipName_TBK_BUTTONBAR, wxTBK_BUTTONBAR},
    {sipName_TBK_HORZ_LAYOUT, wxTBK_HORZ_LAYOUT},
    {sipName_TC_BOTTOM, wxTC_BOTTOM},
    {sipName_TC_FIXEDWIDTH, wxTC_FIXEDWIDTH},
    {sipName_TC_LEFT, wxTC_LEFT},
    {sipName_TC_MULTILINE, wxTC_MULTILINE},
    {sipName_TC_OWNERDRAW, wxTC_OWNERDRAW},
    {sipName_TC_RIGHT, wxTC_RIGHT},
    {sipName_TC_RIGHTJUSTIFY, wxTC_RIGHTJUSTIFY},
    {sipName_TC_TOP, wxTC_TOP},
    {sipName_TEXT_TYPE_ANY, wxTEXT_TYPE_ANY},
    {sipName_TE_AUTO_URL, wxTE_AUTO_URL},
    {sipName_TE_BESTWRAP, wxTE_BESTWRAP},
    {sipName_TE_CENTER, wxTE_CENTER},
    {sipName_TE_CENTRE, wxTE_CENTRE},
    {sipName_TE_CHARWRAP, wxTE_CHARWRAP},
    {sipName_TE_DONTWRAP, wxTE_DONTWRAP},
    {sipName_TE_LEFT, wxTE_LEFT},
    {sipName_TE_MULTILINE, wxTE_MULTILINE},
    {sipName_TE_NOHIDESEL, wxTE_NOHIDESEL},
    {sipName_TE_NO_VSCROLL, wxTE_NO_VSCROLL},
    {sipName_TE_PASSWORD, wxTE_PASSWORD},
    {sipName_TE_PROCESS_ENTER, wxTE_PROCESS_ENTER},
    {sipName_TE_PROCESS_TAB, wxTE_PROCESS_TAB},
    {sipName_TE_READONLY, wxTE_READONLY},
    {sipName_TE_RICH, wxTE_RICH},
    {sipName_TE_RICH2, wxTE_RICH2},
    {sipName_TE_RIGHT, wxTE_RIGHT},
    {sipName_TE_WORDWRAP, wxTE_WORDWRAP},
    {sipName_TIMER_CONTINUOUS, wxTIMER_CONTINUOUS},
    {sipName_TIMER_ONE_SHOT, wxTIMER_ONE_SHOT},
    {sipName_TINY_CAPTION, wxTINY_CAPTION},
    {sipName_TRANSPARENT_WINDOW, wxTRANSPARENT_WINDOW},
    {sipName_TREE_HITTEST_ABOVE, wxTREE_HITTEST_ABOVE},
    {sipName_TREE_HITTEST_BELOW, wxTREE_HITTEST_BELOW},
    {sipName_TREE_HITTEST_NOWHERE, wxTREE_HITTEST_NOWHERE},
    {sipName_TREE_HITTEST_ONITEM, wxTREE_HITTEST_ONITEM},
    {sipName_TREE_HITTEST_ONITEMBUTTON, wxTREE_HITTEST_ONITEMBUTTON},
    {sipName_TREE_HITTEST_ONITEMICON, wxTREE_HITTEST_ONITEMICON},
    {sipName_TREE_HITTEST_ONITEMINDENT, wxTREE_HITTEST_ONITEMINDENT},
    {sipName_TREE_HITTEST_ONITEMLABEL, wxTREE_HITTEST_ONITEMLABEL},
    {sipName_TREE_HITTEST_ONITEMLOWERPART, wxTREE_HITTEST_ONITEMLOWERPART},
    {sipName_TREE_HITTEST_ONITEMRIGHT, wxTREE_HITTEST_ONITEMRIGHT},
    {sipName_TREE_HITTEST_ONITEMSTATEICON, wxTREE_HITTEST_ONITEMSTATEICON},
    {sipName_TREE_HITTEST_ONITEMUPPERPART, wxTREE_HITTEST_ONITEMUPPERPART},
    {sipName_TREE_HITTEST_TOLEFT, wxTREE_HITTEST_TOLEFT},
    {sipName_TREE_HITTEST_TORIGHT, wxTREE_HITTEST_TORIGHT},
    {sipName_TREE_ITEMSTATE_NEXT, wxTREE_ITEMSTATE_NEXT},
    {sipName_TREE_ITEMSTATE_NONE, wxTREE_ITEMSTATE_NONE},
    {sipName_TREE_ITEMSTATE_PREV, wxTREE_ITEMSTATE_PREV},
    {sipName_TR_DEFAULT_STYLE, wxTR_DEFAULT_STYLE},
    {sipName_TR_EDIT_LABELS, wxTR_EDIT_LABELS},
    {sipName_TR_FULL_ROW_HIGHLIGHT, wxTR_FULL_ROW_HIGHLIGHT},
    {sipName_TR_HAS_BUTTONS, wxTR_HAS_BUTTONS},
    {sipName_TR_HAS_VARIABLE_ROW_HEIGHT, wxTR_HAS_VARIABLE_ROW_HEIGHT},
    {sipName_TR_HIDE_ROOT, wxTR_HIDE_ROOT},
    {sipName_TR_LINES_AT_ROOT, wxTR_LINES_AT_ROOT},
    {sipName_TR_MULTIPLE, wxTR_MULTIPLE},
    {sipName_TR_NO_BUTTONS, wxTR_NO_BUTTONS},
    {sipName_TR_NO_LINES, wxTR_NO_LINES},
    {sipName_TR_ROW_LINES, wxTR_ROW_LINES},
    {sipName_TR_SINGLE, wxTR_SINGLE},
    {sipName_TR_TWIST_BUTTONS, wxTR_TWIST_BUTTONS},
    {sipName_TextEntryDialogStyle, wxTextEntryDialogStyle},
    {sipName_UINT16_MAX, wxUINT16_MAX},
    {sipName_UINT8_MAX, wxUINT8_MAX},
    {sipName_USE_ACCESSIBILITY, wxUSE_ACCESSIBILITY},
    {sipName_USE_FSWATCHER, wxUSE_FSWATCHER},
    {sipName_USE_UIACTIONSIMULATOR, wxUSE_UIACTIONSIMULATOR},
    {sipName_WANTS_CHARS, wxWANTS_CHARS},
    {sipName_WS_EX_BLOCK_EVENTS, wxWS_EX_BLOCK_EVENTS},
    {sipName_WS_EX_CONTEXTHELP, wxWS_EX_CONTEXTHELP},
    {sipName_WS_EX_PROCESS_IDLE, wxWS_EX_PROCESS_IDLE},
    {sipName_WS_EX_PROCESS_UI_UPDATES, wxWS_EX_PROCESS_UI_UPDATES},
    {sipName_WS_EX_THEMED_BACKGROUND, wxWS_EX_THEMED_BACKGROUND},
    {sipName_WS_EX_TRANSIENT, wxWS_EX_TRANSIENT},
    {sipName_YES, wxYES},
    {sipName_YES_DEFAULT, wxYES_DEFAULT},
    {sipName_YES_NO, wxYES_NO},
    {sipName_wxEVT_ACTIVATE, wxEVT_ACTIVATE},
    {sipName_wxEVT_ACTIVATE_APP, wxEVT_ACTIVATE_APP},
    {sipName_wxEVT_ANY, wxEVT_ANY},
    {sipName_wxEVT_AUX1_DCLICK, wxEVT_AUX1_DCLICK},
    {sipName_wxEVT_AUX1_DOWN, wxEVT_AUX1_DOWN},
    {sipName_wxEVT_AUX1_UP, wxEVT_AUX1_UP},
    {sipName_wxEVT_AUX2_DCLICK, wxEVT_AUX2_DCLICK},
    {sipName_wxEVT_AUX2_DOWN, wxEVT_AUX2_DOWN},
    {sipName_wxEVT_AUX2_UP, wxEVT_AUX2_UP},
    {sipName_wxEVT_BUTTON, wxEVT_BUTTON},
    {sipName_wxEVT_CHAR, wxEVT_CHAR},
    {sipName_wxEVT_CHAR_HOOK, wxEVT_CHAR_HOOK},
    {sipName_wxEVT_CHECKBOX, wxEVT_CHECKBOX},
    {sipName_wxEVT_CHECKLISTBOX, wxEVT_CHECKLISTBOX},
    {sipName_wxEVT_CHILD_FOCUS, wxEVT_CHILD_FOCUS},
    {sipName_wxEVT_CHOICE, wxEVT_CHOICE},
    {sipName_wxEVT_CHOICEBOOK_PAGE_CHANGED, wxEVT_CHOICEBOOK_PAGE_CHANGED},
    {sipName_wxEVT_CHOICEBOOK_PAGE_CHANGING, wxEVT_CHOICEBOOK_PAGE_CHANGING},
    {sipName_wxEVT_CLIPBOARD_CHANGED, wxEVT_CLIPBOARD_CHANGED},
    {sipName_wxEVT_CLOSE_WINDOW, wxEVT_CLOSE_WINDOW},
    {sipName_wxEVT_COLLAPSIBLEHEADER_CHANGED, wxEVT_COLLAPSIBLEHEADER_CHANGED},
    {sipName_wxEVT_COLLAPSIBLEPANE_CHANGED, wxEVT_COLLAPSIBLEPANE_CHANGED},
    {sipName_wxEVT_COLOURPICKER_CHANGED, wxEVT_COLOURPICKER_CHANGED},
    {sipName_wxEVT_COLOURPICKER_CURRENT_CHANGED, wxEVT_COLOURPICKER_CURRENT_CHANGED},
    {sipName_wxEVT_COLOURPICKER_DIALOG_CANCELLED, wxEVT_COLOURPICKER_DIALOG_CANCELLED},
    {sipName_wxEVT_COLOUR_CHANGED, wxEVT_COLOUR_CHANGED},
    {sipName_wxEVT_COMBOBOX, wxEVT_COMBOBOX},
    {sipName_wxEVT_COMBOBOX_CLOSEUP, wxEVT_COMBOBOX_CLOSEUP},
    {sipName_wxEVT_COMBOBOX_DROPDOWN, wxEVT_COMBOBOX_DROPDOWN},
    {sipName_wxEVT_COMMAND_ENTER, wxEVT_COMMAND_ENTER},
    {sipName_wxEVT_COMMAND_KILL_FOCUS, wxEVT_COMMAND_KILL_FOCUS},
    {sipName_wxEVT_COMMAND_LEFT_CLICK, wxEVT_COMMAND_LEFT_CLICK},
    {sipName_wxEVT_COMMAND_LEFT_DCLICK, wxEVT_COMMAND_LEFT_DCLICK},
    {sipName_wxEVT_COMMAND_RIGHT_CLICK, wxEVT_COMMAND_RIGHT_CLICK},
    {sipName_wxEVT_COMMAND_RIGHT_DCLICK, wxEVT_COMMAND_RIGHT_DCLICK},
    {sipName_wxEVT_COMMAND_SET_FOCUS, wxEVT_COMMAND_SET_FOCUS},
    {sipName_wxEVT_CONTEXT_MENU, wxEVT_CONTEXT_MENU},
    {sipName_wxEVT_CREATE, wxEVT_CREATE},
    {sipName_wxEVT_DESTROY, wxEVT_DESTROY},
    {sipName_wxEVT_DETAILED_HELP, wxEVT_DETAILED_HELP},
    {sipName_wxEVT_DIRCTRL_FILEACTIVATED, wxEVT_DIRCTRL_FILEACTIVATED},
    {sipName_wxEVT_DIRCTRL_SELECTIONCHANGED, wxEVT_DIRCTRL_SELECTIONCHANGED},
    {sipName_wxEVT_DIRPICKER_CHANGED, wxEVT_DIRPICKER_CHANGED},
    {sipName_wxEVT_DISPLAY_CHANGED, wxEVT_DISPLAY_CHANGED},
    {sipName_wxEVT_DPI_CHANGED, wxEVT_DPI_CHANGED},
    {sipName_wxEVT_DROP_FILES, wxEVT_DROP_FILES},
    {sipName_wxEVT_END_PROCESS, wxEVT_END_PROCESS},
    {sipName_wxEVT_END_SESSION, wxEVT_END_SESSION},
    {sipName_wxEVT_ENTER_WINDOW, wxEVT_ENTER_WINDOW},
    {sipName_wxEVT_ERASE_BACKGROUND, wxEVT_ERASE_BACKGROUND},
    {sipName_wxEVT_FILECTRL_FILEACTIVATED, wxEVT_FILECTRL_FILEACTIVATED},
    {sipName_wxEVT_FILECTRL_FILTERCHANGED, wxEVT_FILECTRL_FILTERCHANGED},
    {sipName_wxEVT_FILECTRL_FOLDERCHANGED, wxEVT_FILECTRL_FOLDERCHANGED},
    {sipName_wxEVT_FILECTRL_SELECTIONCHANGED, wxEVT_FILECTRL_SELECTIONCHANGED},
    {sipName_wxEVT_FILEPICKER_CHANGED, wxEVT_FILEPICKER_CHANGED},
    {sipName_wxEVT_FIND, wxEVT_FIND},
    {sipName_wxEVT_FIND_CLOSE, wxEVT_FIND_CLOSE},
    {sipName_wxEVT_FIND_NEXT, wxEVT_FIND_NEXT},
    {sipName_wxEVT_FIND_REPLACE, wxEVT_FIND_REPLACE},
    {sipName_wxEVT_FIND_REPLACE_ALL, wxEVT_FIND_REPLACE_ALL},
    {sipName_wxEVT_FONTPICKER_CHANGED, wxEVT_FONTPICKER_CHANGED},
    {sipName_wxEVT_FSWATCHER, wxEVT_FSWATCHER},
    {sipName_wxEVT_FULLSCREEN, wxEVT_FULLSCREEN},
    {sipName_wxEVT_GESTURE_PAN, wxEVT_GESTURE_PAN},
    {sipName_wxEVT_GESTURE_ROTATE, wxEVT_GESTURE_ROTATE},
    {sipName_wxEVT_GESTURE_ZOOM, wxEVT_GESTURE_ZOOM},
    {sipName_wxEVT_HEADER_BEGIN_REORDER, wxEVT_HEADER_BEGIN_REORDER},
    {sipName_wxEVT_HEADER_BEGIN_RESIZE, wxEVT_HEADER_BEGIN_RESIZE},
    {sipName_wxEVT_HEADER_CLICK, wxEVT_HEADER_CLICK},
    {sipName_wxEVT_HEADER_DCLICK, wxEVT_HEADER_DCLICK},
    {sipName_wxEVT_HEADER_DRAGGING_CANCELLED, wxEVT_HEADER_DRAGGING_CANCELLED},
    {sipName_wxEVT_HEADER_END_REORDER, wxEVT_HEADER_END_REORDER},
    {sipName_wxEVT_HEADER_END_RESIZE, wxEVT_HEADER_END_RESIZE},
    {sipName_wxEVT_HEADER_MIDDLE_CLICK, wxEVT_HEADER_MIDDLE_CLICK},
    {sipName_wxEVT_HEADER_MIDDLE_DCLICK, wxEVT_HEADER_MIDDLE_DCLICK},
    {sipName_wxEVT_HEADER_RESIZING, wxEVT_HEADER_RESIZING},
    {sipName_wxEVT_HEADER_RIGHT_CLICK, wxEVT_HEADER_RIGHT_CLICK},
    {sipName_wxEVT_HEADER_RIGHT_DCLICK, wxEVT_HEADER_RIGHT_DCLICK},
    {sipName_wxEVT_HEADER_SEPARATOR_DCLICK, wxEVT_HEADER_SEPARATOR_DCLICK},
    {sipName_wxEVT_HELP, wxEVT_HELP},
    {sipName_wxEVT_HIBERNATE, wxEVT_HIBERNATE},
    {sipName_wxEVT_HOTKEY, wxEVT_HOTKEY},
    {sipName_wxEVT_ICONIZE, wxEVT_ICONIZE},
    {sipName_wxEVT_IDLE, wxEVT_IDLE},
    {sipName_wxEVT_INIT_DIALOG, wxEVT_INIT_DIALOG},
    {sipName_wxEVT_JOY_BUTTON_DOWN, wxEVT_JOY_BUTTON_DOWN},
    {sipName_wxEVT_JOY_BUTTON_UP, wxEVT_JOY_BUTTON_UP},
    {sipName_wxEVT_JOY_MOVE, wxEVT_JOY_MOVE},
    {sipName_wxEVT_JOY_ZMOVE, wxEVT_JOY_ZMOVE},
    {sipName_wxEVT_KEY_DOWN, wxEVT_KEY_DOWN},
    {sipName_wxEVT_KEY_UP, wxEVT_KEY_UP},
    {sipName_wxEVT_KILL_FOCUS, wxEVT_KILL_FOCUS},
    {sipName_wxEVT_LEAVE_WINDOW, wxEVT_LEAVE_WINDOW},
    {sipName_wxEVT_LEFT_DCLICK, wxEVT_LEFT_DCLICK},
    {sipName_wxEVT_LEFT_DOWN, wxEVT_LEFT_DOWN},
    {sipName_wxEVT_LEFT_UP, wxEVT_LEFT_UP},
    {sipName_wxEVT_LISTBOOK_PAGE_CHANGED, wxEVT_LISTBOOK_PAGE_CHANGED},
    {sipName_wxEVT_LISTBOOK_PAGE_CHANGING, wxEVT_LISTBOOK_PAGE_CHANGING},
    {sipName_wxEVT_LISTBOX, wxEVT_LISTBOX},
    {sipName_wxEVT_LISTBOX_DCLICK, wxEVT_LISTBOX_DCLICK},
    {sipName_wxEVT_LIST_BEGIN_DRAG, wxEVT_LIST_BEGIN_DRAG},
    {sipName_wxEVT_LIST_BEGIN_LABEL_EDIT, wxEVT_LIST_BEGIN_LABEL_EDIT},
    {sipName_wxEVT_LIST_BEGIN_RDRAG, wxEVT_LIST_BEGIN_RDRAG},
    {sipName_wxEVT_LIST_CACHE_HINT, wxEVT_LIST_CACHE_HINT},
    {sipName_wxEVT_LIST_COL_BEGIN_DRAG, wxEVT_LIST_COL_BEGIN_DRAG},
    {sipName_wxEVT_LIST_COL_CLICK, wxEVT_LIST_COL_CLICK},
    {sipName_wxEVT_LIST_COL_DRAGGING, wxEVT_LIST_COL_DRAGGING},
    {sipName_wxEVT_LIST_COL_END_DRAG, wxEVT_LIST_COL_END_DRAG},
    {sipName_wxEVT_LIST_COL_RIGHT_CLICK, wxEVT_LIST_COL_RIGHT_CLICK},
    {sipName_wxEVT_LIST_DELETE_ALL_ITEMS, wxEVT_LIST_DELETE_ALL_ITEMS},
    {sipName_wxEVT_LIST_DELETE_ITEM, wxEVT_LIST_DELETE_ITEM},
    {sipName_wxEVT_LIST_END_LABEL_EDIT, wxEVT_LIST_END_LABEL_EDIT},
    {sipName_wxEVT_LIST_INSERT_ITEM, wxEVT_LIST_INSERT_ITEM},
    {sipName_wxEVT_LIST_ITEM_ACTIVATED, wxEVT_LIST_ITEM_ACTIVATED},
    {sipName_wxEVT_LIST_ITEM_CHECKED, wxEVT_LIST_ITEM_CHECKED},
    {sipName_wxEVT_LIST_ITEM_DESELECTED, wxEVT_LIST_ITEM_DESELECTED},
    {sipName_wxEVT_LIST_ITEM_FOCUSED, wxEVT_LIST_ITEM_FOCUSED},
    {sipName_wxEVT_LIST_ITEM_MIDDLE_CLICK, wxEVT_LIST_ITEM_MIDDLE_CLICK},
    {sipName_wxEVT_LIST_ITEM_RIGHT_CLICK, wxEVT_LIST_ITEM_RIGHT_CLICK},
    {sipName_wxEVT_LIST_ITEM_SELECTED, wxEVT_LIST_ITEM_SELECTED},
    {sipName_wxEVT_LIST_ITEM_UNCHECKED, wxEVT_LIST_ITEM_UNCHECKED},
    {sipName_wxEVT_LIST_KEY_DOWN, wxEVT_LIST_KEY_DOWN},
    {sipName_wxEVT_LONG_PRESS, wxEVT_LONG_PRESS},
    {sipName_wxEVT_MAGNIFY, wxEVT_MAGNIFY},
    {sipName_wxEVT_MAXIMIZE, wxEVT_MAXIMIZE},
    {sipName_wxEVT_MENU, wxEVT_MENU},
    {sipName_wxEVT_MENU_CLOSE, wxEVT_MENU_CLOSE},
    {sipName_wxEVT_MENU_HIGHLIGHT, wxEVT_MENU_HIGHLIGHT},
    {sipName_wxEVT_MENU_OPEN, wxEVT_MENU_OPEN},
    {sipName_wxEVT_MIDDLE_DCLICK, wxEVT_MIDDLE_DCLICK},
    {sipName_wxEVT_MIDDLE_DOWN, wxEVT_MIDDLE_DOWN},
    {sipName_wxEVT_MIDDLE_UP, wxEVT_MIDDLE_UP},
    {sipName_wxEVT_MOTION, wxEVT_MOTION},
    {sipName_wxEVT_MOUSEWHEEL, wxEVT_MOUSEWHEEL},
    {sipName_wxEVT_MOUSE_CAPTURE_CHANGED, wxEVT_MOUSE_CAPTURE_CHANGED},
    {sipName_wxEVT_MOUSE_CAPTURE_LOST, wxEVT_MOUSE_CAPTURE_LOST},
    {sipName_wxEVT_MOVE, wxEVT_MOVE},
    {sipName_wxEVT_MOVE_END, wxEVT_MOVE_END},
    {sipName_wxEVT_MOVE_START, wxEVT_MOVE_START},
    {sipName_wxEVT_MOVING, wxEVT_MOVING},
    {sipName_wxEVT_NAVIGATION_KEY, wxEVT_NAVIGATION_KEY},
    {sipName_wxEVT_NC_PAINT, wxEVT_NC_PAINT},
    {sipName_wxEVT_NOTEBOOK_PAGE_CHANGED, wxEVT_NOTEBOOK_PAGE_CHANGED},
    {sipName_wxEVT_NOTEBOOK_PAGE_CHANGING, wxEVT_NOTEBOOK_PAGE_CHANGING},
    {sipName_wxEVT_NULL, wxEVT_NULL},
    {sipName_wxEVT_PAINT, wxEVT_PAINT},
    {sipName_wxEVT_PALETTE_CHANGED, wxEVT_PALETTE_CHANGED},
    {sipName_wxEVT_POWER_RESUME, wxEVT_POWER_RESUME},
    {sipName_wxEVT_POWER_SUSPENDED, wxEVT_POWER_SUSPENDED},
    {sipName_wxEVT_POWER_SUSPENDING, wxEVT_POWER_SUSPENDING},
    {sipName_wxEVT_POWER_SUSPEND_CANCEL, wxEVT_POWER_SUSPEND_CANCEL},
    {sipName_wxEVT_PRESS_AND_TAP, wxEVT_PRESS_AND_TAP},
    {sipName_wxEVT_QUERY_END_SESSION, wxEVT_QUERY_END_SESSION},
    {sipName_wxEVT_QUERY_NEW_PALETTE, wxEVT_QUERY_NEW_PALETTE},
    {sipName_wxEVT_RADIOBOX, wxEVT_RADIOBOX},
    {sipName_wxEVT_RADIOBUTTON, wxEVT_RADIOBUTTON},
    {sipName_wxEVT_RIGHT_DCLICK, wxEVT_RIGHT_DCLICK},
    {sipName_wxEVT_RIGHT_DOWN, wxEVT_RIGHT_DOWN},
    {sipName_wxEVT_RIGHT_UP, wxEVT_RIGHT_UP},
    {sipName_wxEVT_SCROLLBAR, wxEVT_SCROLLBAR},
    {sipName_wxEVT_SCROLLWIN_BOTTOM, wxEVT_SCROLLWIN_BOTTOM},
    {sipName_wxEVT_SCROLLWIN_LINEDOWN, wxEVT_SCROLLWIN_LINEDOWN},
    {sipName_wxEVT_SCROLLWIN_LINEUP, wxEVT_SCROLLWIN_LINEUP},
    {sipName_wxEVT_SCROLLWIN_PAGEDOWN, wxEVT_SCROLLWIN_PAGEDOWN},
    {sipName_wxEVT_SCROLLWIN_PAGEUP, wxEVT_SCROLLWIN_PAGEUP},
    {sipName_wxEVT_SCROLLWIN_THUMBRELEASE, wxEVT_SCROLLWIN_THUMBRELEASE},
    {sipName_wxEVT_SCROLLWIN_THUMBTRACK, wxEVT_SCROLLWIN_THUMBTRACK},
    {sipName_wxEVT_SCROLLWIN_TOP, wxEVT_SCROLLWIN_TOP},
    {sipName_wxEVT_SCROLL_BOTTOM, wxEVT_SCROLL_BOTTOM},
    {sipName_wxEVT_SCROLL_CHANGED, wxEVT_SCROLL_CHANGED},
    {sipName_wxEVT_SCROLL_LINEDOWN, wxEVT_SCROLL_LINEDOWN},
    {sipName_wxEVT_SCROLL_LINEUP, wxEVT_SCROLL_LINEUP},
    {sipName_wxEVT_SCROLL_PAGEDOWN, wxEVT_SCROLL_PAGEDOWN},
    {sipName_wxEVT_SCROLL_PAGEUP, wxEVT_SCROLL_PAGEUP},
    {sipName_wxEVT_SCROLL_THUMBRELEASE, wxEVT_SCROLL_THUMBRELEASE},
    {sipName_wxEVT_SCROLL_THUMBTRACK, wxEVT_SCROLL_THUMBTRACK},
    {sipName_wxEVT_SCROLL_TOP, wxEVT_SCROLL_TOP},
    {sipName_wxEVT_SEARCH, wxEVT_SEARCH},
    {sipName_wxEVT_SEARCH_CANCEL, wxEVT_SEARCH_CANCEL},
    {sipName_wxEVT_SET_CURSOR, wxEVT_SET_CURSOR},
    {sipName_wxEVT_SET_FOCUS, wxEVT_SET_FOCUS},
    {sipName_wxEVT_SHOW, wxEVT_SHOW},
    {sipName_wxEVT_SIZE, wxEVT_SIZE},
    {sipName_wxEVT_SIZING, wxEVT_SIZING},
    {sipName_wxEVT_SLIDER, wxEVT_SLIDER},
    {sipName_wxEVT_SPIN, wxEVT_SPIN},
    {sipName_wxEVT_SPINCTRL, wxEVT_SPINCTRL},
    {sipName_wxEVT_SPINCTRLDOUBLE, wxEVT_SPINCTRLDOUBLE},
    {sipName_wxEVT_SPIN_DOWN, wxEVT_SPIN_DOWN},
    {sipName_wxEVT_SPIN_UP, wxEVT_SPIN_UP},
    {sipName_wxEVT_SPLITTER_DOUBLECLICKED, wxEVT_SPLITTER_DOUBLECLICKED},
    {sipName_wxEVT_SPLITTER_SASH_POS_CHANGED, wxEVT_SPLITTER_SASH_POS_CHANGED},
    {sipName_wxEVT_SPLITTER_SASH_POS_CHANGING, wxEVT_SPLITTER_SASH_POS_CHANGING},
    {sipName_wxEVT_SPLITTER_SASH_POS_RESIZE, wxEVT_SPLITTER_SASH_POS_RESIZE},
    {sipName_wxEVT_SPLITTER_UNSPLIT, wxEVT_SPLITTER_UNSPLIT},
    {sipName_wxEVT_SYS_COLOUR_CHANGED, wxEVT_SYS_COLOUR_CHANGED},
    {sipName_wxEVT_TEXT, wxEVT_TEXT},
    {sipName_wxEVT_TEXT_COPY, wxEVT_TEXT_COPY},
    {sipName_wxEVT_TEXT_CUT, wxEVT_TEXT_CUT},
    {sipName_wxEVT_TEXT_ENTER, wxEVT_TEXT_ENTER},
    {sipName_wxEVT_TEXT_MAXLEN, wxEVT_TEXT_MAXLEN},
    {sipName_wxEVT_TEXT_PASTE, wxEVT_TEXT_PASTE},
    {sipName_wxEVT_TEXT_URL, wxEVT_TEXT_URL},
    {sipName_wxEVT_THREAD, wxEVT_THREAD},
    {sipName_wxEVT_TIMER, wxEVT_TIMER},
    {sipName_wxEVT_TOGGLEBUTTON, wxEVT_TOGGLEBUTTON},
    {sipName_wxEVT_TOOL, wxEVT_TOOL},
    {sipName_wxEVT_TOOLBOOK_PAGE_CHANGED, wxEVT_TOOLBOOK_PAGE_CHANGED},
    {sipName_wxEVT_TOOLBOOK_PAGE_CHANGING, wxEVT_TOOLBOOK_PAGE_CHANGING},
    {sipName_wxEVT_TOOL_DROPDOWN, wxEVT_TOOL_DROPDOWN},
    {sipName_wxEVT_TOOL_ENTER, wxEVT_TOOL_ENTER},
    {sipName_wxEVT_TOOL_RCLICKED, wxEVT_TOOL_RCLICKED},
    {sipName_wxEVT_TREEBOOK_NODE_COLLAPSED, wxEVT_TREEBOOK_NODE_COLLAPSED},
    {sipName_wxEVT_TREEBOOK_NODE_EXPANDED, wxEVT_TREEBOOK_NODE_EXPANDED},
    {sipName_wxEVT_TREEBOOK_PAGE_CHANGED, wxEVT_TREEBOOK_PAGE_CHANGED},
    {sipName_wxEVT_TREEBOOK_PAGE_CHANGING, wxEVT_TREEBOOK_PAGE_CHANGING},
    {sipName_wxEVT_TREE_BEGIN_DRAG, wxEVT_TREE_BEGIN_DRAG},
    {sipName_wxEVT_TREE_BEGIN_LABEL_EDIT, wxEVT_TREE_BEGIN_LABEL_EDIT},
    {sipName_wxEVT_TREE_BEGIN_RDRAG, wxEVT_TREE_BEGIN_RDRAG},
    {sipName_wxEVT_TREE_DELETE_ITEM, wxEVT_TREE_DELETE_ITEM},
    {sipName_wxEVT_TREE_END_DRAG, wxEVT_TREE_END_DRAG},
    {sipName_wxEVT_TREE_END_LABEL_EDIT, wxEVT_TREE_END_LABEL_EDIT},
    {sipName_wxEVT_TREE_GET_INFO, wxEVT_TREE_GET_INFO},
    {sipName_wxEVT_TREE_ITEM_ACTIVATED, wxEVT_TREE_ITEM_ACTIVATED},
    {sipName_wxEVT_TREE_ITEM_COLLAPSED, wxEVT_TREE_ITEM_COLLAPSED},
    {sipName_wxEVT_TREE_ITEM_COLLAPSING, wxEVT_TREE_ITEM_COLLAPSING},
    {sipName_wxEVT_TREE_ITEM_EXPANDED, wxEVT_TREE_ITEM_EXPANDED},
    {sipName_wxEVT_TREE_ITEM_EXPANDING, wxEVT_TREE_ITEM_EXPANDING},
    {sipName_wxEVT_TREE_ITEM_GETTOOLTIP, wxEVT_TREE_ITEM_GETTOOLTIP},
    {sipName_wxEVT_TREE_ITEM_MENU, wxEVT_TREE_ITEM_MENU},
    {sipName_wxEVT_TREE_ITEM_MIDDLE_CLICK, wxEVT_TREE_ITEM_MIDDLE_CLICK},
    {sipName_wxEVT_TREE_ITEM_RIGHT_CLICK, wxEVT_TREE_ITEM_RIGHT_CLICK},
    {sipName_wxEVT_TREE_KEY_DOWN, wxEVT_TREE_KEY_DOWN},
    {sipName_wxEVT_TREE_SEL_CHANGED, wxEVT_TREE_SEL_CHANGED},
    {sipName_wxEVT_TREE_SEL_CHANGING, wxEVT_TREE_SEL_CHANGING},
    {sipName_wxEVT_TREE_SET_INFO, wxEVT_TREE_SET_INFO},
    {sipName_wxEVT_TREE_STATE_IMAGE_CLICK, wxEVT_TREE_STATE_IMAGE_CLICK},
    {sipName_wxEVT_TWO_FINGER_TAP, wxEVT_TWO_FINGER_TAP},
    {sipName_wxEVT_UPDATE_UI, wxEVT_UPDATE_UI},
    {sipName_wxEVT_VLBOX, wxEVT_VLBOX},
    {sipName_wxEVT_WINDOW_MODAL_DIALOG_CLOSED, wxEVT_WINDOW_MODAL_DIALOG_CLOSED},
    {sipName_EXEC_ASYNC, static_cast<int>(::wxEXEC_ASYNC)},
    {sipName_EXEC_SYNC, static_cast<int>(::wxEXEC_SYNC)},
    {sipName_EXEC_SHOW_CONSOLE, static_cast<int>(::wxEXEC_SHOW_CONSOLE)},
    {sipName_EXEC_MAKE_GROUP_LEADER, static_cast<int>(::wxEXEC_MAKE_GROUP_LEADER)},
    {sipName_EXEC_NODISABLE, static_cast<int>(::wxEXEC_NODISABLE)},
    {sipName_EXEC_NOEVENTS, static_cast<int>(::wxEXEC_NOEVENTS)},
    {sipName_EXEC_HIDE_CONSOLE, static_cast<int>(::wxEXEC_HIDE_CONSOLE)},
    {sipName_EXEC_BLOCK, static_cast<int>(::wxEXEC_BLOCK)},
    {sipName_Strip_Mnemonics, static_cast<int>(::wxStrip_Mnemonics)},
    {sipName_Strip_Accel, static_cast<int>(::wxStrip_Accel)},
    {sipName_Strip_CJKMnemonics, static_cast<int>(::wxStrip_CJKMnemonics)},
    {sipName_Strip_All, static_cast<int>(::wxStrip_All)},
    {sipName_Strip_Menu, static_cast<int>(::wxStrip_Menu)},
    {sipName_FD_OPEN, static_cast<int>(::wxFD_OPEN)},
    {sipName_FD_SAVE, static_cast<int>(::wxFD_SAVE)},
    {sipName_FD_OVERWRITE_PROMPT, static_cast<int>(::wxFD_OVERWRITE_PROMPT)},
    {sipName_FD_NO_FOLLOW, static_cast<int>(::wxFD_NO_FOLLOW)},
    {sipName_FD_FILE_MUST_EXIST, static_cast<int>(::wxFD_FILE_MUST_EXIST)},
    {sipName_FD_CHANGE_DIR, static_cast<int>(::wxFD_CHANGE_DIR)},
    {sipName_FD_PREVIEW, static_cast<int>(::wxFD_PREVIEW)},
    {sipName_FD_MULTIPLE, static_cast<int>(::wxFD_MULTIPLE)},
    {sipName_FD_SHOW_HIDDEN, static_cast<int>(::wxFD_SHOW_HIDDEN)},
    {sipName_DIRCTRL_DIR_ONLY, static_cast<int>(::wxDIRCTRL_DIR_ONLY)},
    {sipName_DIRCTRL_SELECT_FIRST, static_cast<int>(::wxDIRCTRL_SELECT_FIRST)},
    {sipName_DIRCTRL_SHOW_FILTERS, static_cast<int>(::wxDIRCTRL_SHOW_FILTERS)},
    {sipName_DIRCTRL_3D_INTERNAL, static_cast<int>(::wxDIRCTRL_3D_INTERNAL)},
    {sipName_DIRCTRL_EDIT_LABELS, static_cast<int>(::wxDIRCTRL_EDIT_LABELS)},
    {sipName_DIRCTRL_MULTIPLE, static_cast<int>(::wxDIRCTRL_MULTIPLE)},
    {sipName_DIRCTRL_DEFAULT_STYLE, static_cast<int>(::wxDIRCTRL_DEFAULT_STYLE)},
    {sipName_FULLSCREEN_NOMENUBAR, static_cast<int>(::wxFULLSCREEN_NOMENUBAR)},
    {sipName_FULLSCREEN_NOTOOLBAR, static_cast<int>(::wxFULLSCREEN_NOTOOLBAR)},
    {sipName_FULLSCREEN_NOSTATUSBAR, static_cast<int>(::wxFULLSCREEN_NOSTATUSBAR)},
    {sipName_FULLSCREEN_NOBORDER, static_cast<int>(::wxFULLSCREEN_NOBORDER)},
    {sipName_FULLSCREEN_NOCAPTION, static_cast<int>(::wxFULLSCREEN_NOCAPTION)},
    {sipName_FULLSCREEN_ALL, static_cast<int>(::wxFULLSCREEN_ALL)},
    {sipName_USER_ATTENTION_INFO, static_cast<int>(::wxUSER_ATTENTION_INFO)},
    {sipName_USER_ATTENTION_ERROR, static_cast<int>(::wxUSER_ATTENTION_ERROR)},
    {sipName_CC_SPECIAL_DCLICK, static_cast<int>(::wxCC_SPECIAL_DCLICK)},
    {sipName_CC_STD_BUTTON, static_cast<int>(::wxCC_STD_BUTTON)},
    {sipName_FC_OPEN, static_cast<int>(::wxFC_OPEN)},
    {sipName_FC_SAVE, static_cast<int>(::wxFC_SAVE)},
    {sipName_FC_MULTIPLE, static_cast<int>(::wxFC_MULTIPLE)},
    {sipName_FC_NOSHOWHIDDEN, static_cast<int>(::wxFC_NOSHOWHIDDEN)},
    {sipName_LIST_FIND_UP, static_cast<int>(::wxLIST_FIND_UP)},
    {sipName_LIST_FIND_DOWN, static_cast<int>(::wxLIST_FIND_DOWN)},
    {sipName_LIST_FIND_LEFT, static_cast<int>(::wxLIST_FIND_LEFT)},
    {sipName_LIST_FIND_RIGHT, static_cast<int>(::wxLIST_FIND_RIGHT)},
    {sipName_LIST_RECT_BOUNDS, static_cast<int>(::wxLIST_RECT_BOUNDS)},
    {sipName_LIST_RECT_ICON, static_cast<int>(::wxLIST_RECT_ICON)},
    {sipName_LIST_RECT_LABEL, static_cast<int>(::wxLIST_RECT_LABEL)},
    {sipName_LIST_AUTOSIZE, static_cast<int>(::wxLIST_AUTOSIZE)},
    {sipName_LIST_AUTOSIZE_USEHEADER, static_cast<int>(::wxLIST_AUTOSIZE_USEHEADER)},
    {sipName_LIST_ALIGN_DEFAULT, static_cast<int>(::wxLIST_ALIGN_DEFAULT)},
    {sipName_LIST_ALIGN_LEFT, static_cast<int>(::wxLIST_ALIGN_LEFT)},
    {sipName_LIST_ALIGN_TOP, static_cast<int>(::wxLIST_ALIGN_TOP)},
    {sipName_LIST_ALIGN_SNAP_TO_GRID, static_cast<int>(::wxLIST_ALIGN_SNAP_TO_GRID)},
    {sipName_LIST_NEXT_ABOVE, static_cast<int>(::wxLIST_NEXT_ABOVE)},
    {sipName_LIST_NEXT_ALL, static_cast<int>(::wxLIST_NEXT_ALL)},
    {sipName_LIST_NEXT_BELOW, static_cast<int>(::wxLIST_NEXT_BELOW)},
    {sipName_LIST_NEXT_LEFT, static_cast<int>(::wxLIST_NEXT_LEFT)},
    {sipName_LIST_NEXT_RIGHT, static_cast<int>(::wxLIST_NEXT_RIGHT)},
    {sipName_TB_HORIZONTAL, static_cast<int>(::wxTB_HORIZONTAL)},
    {sipName_TB_TOP, static_cast<int>(::wxTB_TOP)},
    {sipName_TB_VERTICAL, static_cast<int>(::wxTB_VERTICAL)},
    {sipName_TB_LEFT, static_cast<int>(::wxTB_LEFT)},
    {sipName_TB_FLAT, static_cast<int>(::wxTB_FLAT)},
    {sipName_TB_DOCKABLE, static_cast<int>(::wxTB_DOCKABLE)},
    {sipName_TB_NOICONS, static_cast<int>(::wxTB_NOICONS)},
    {sipName_TB_TEXT, static_cast<int>(::wxTB_TEXT)},
    {sipName_TB_NODIVIDER, static_cast<int>(::wxTB_NODIVIDER)},
    {sipName_TB_NOALIGN, static_cast<int>(::wxTB_NOALIGN)},
    {sipName_TB_HORZ_LAYOUT, static_cast<int>(::wxTB_HORZ_LAYOUT)},
    {sipName_TB_HORZ_TEXT, static_cast<int>(::wxTB_HORZ_TEXT)},
    {sipName_TB_NO_TOOLTIPS, static_cast<int>(::wxTB_NO_TOOLTIPS)},
    {sipName_TB_BOTTOM, static_cast<int>(::wxTB_BOTTOM)},
    {sipName_TB_RIGHT, static_cast<int>(::wxTB_RIGHT)},
    {sipName_TB_DEFAULT_STYLE, static_cast<int>(::wxTB_DEFAULT_STYLE)},
    {sipName_HD_ALLOW_REORDER, static_cast<int>(::wxHD_ALLOW_REORDER)},
    {sipName_HD_ALLOW_HIDE, static_cast<int>(::wxHD_ALLOW_HIDE)},
    {sipName_HD_BITMAP_ON_RIGHT, static_cast<int>(::wxHD_BITMAP_ON_RIGHT)},
    {sipName_HD_DEFAULT_STYLE, static_cast<int>(::wxHD_DEFAULT_STYLE)},
    {sipName_COL_RESIZABLE, static_cast<int>(::wxCOL_RESIZABLE)},
    {sipName_COL_SORTABLE, static_cast<int>(::wxCOL_SORTABLE)},
    {sipName_COL_REORDERABLE, static_cast<int>(::wxCOL_REORDERABLE)},
    {sipName_COL_HIDDEN, static_cast<int>(::wxCOL_HIDDEN)},
    {sipName_COL_DEFAULT_FLAGS, static_cast<int>(::wxCOL_DEFAULT_FLAGS)},
    {sipName_COL_WIDTH_DEFAULT, static_cast<int>(::wxCOL_WIDTH_DEFAULT)},
    {sipName_COL_WIDTH_AUTOSIZE, static_cast<int>(::wxCOL_WIDTH_AUTOSIZE)},
    {sipName_SPLIT_DRAG_NONE, static_cast<int>(::wxSPLIT_DRAG_NONE)},
    {sipName_SPLIT_DRAG_DRAGGING, static_cast<int>(::wxSPLIT_DRAG_DRAGGING)},
    {sipName_SPLIT_DRAG_LEFT_DOWN, static_cast<int>(::wxSPLIT_DRAG_LEFT_DOWN)},
    {sipName_NB_HITTEST_NOWHERE, static_cast<int>(::wxNB_HITTEST_NOWHERE)},
    {sipName_NB_HITTEST_ONICON, static_cast<int>(::wxNB_HITTEST_ONICON)},
    {sipName_NB_HITTEST_ONLABEL, static_cast<int>(::wxNB_HITTEST_ONLABEL)},
    {sipName_NB_HITTEST_ONITEM, static_cast<int>(::wxNB_HITTEST_ONITEM)},
    {sipName_NB_HITTEST_ONPAGE, static_cast<int>(::wxNB_HITTEST_ONPAGE)},
    {sipName_BK_HITTEST_NOWHERE, static_cast<int>(::wxBK_HITTEST_NOWHERE)},
    {sipName_BK_HITTEST_ONICON, static_cast<int>(::wxBK_HITTEST_ONICON)},
    {sipName_BK_HITTEST_ONLABEL, static_cast<int>(::wxBK_HITTEST_ONLABEL)},
    {sipName_BK_HITTEST_ONITEM, static_cast<int>(::wxBK_HITTEST_ONITEM)},
    {sipName_BK_HITTEST_ONPAGE, static_cast<int>(::wxBK_HITTEST_ONPAGE)},
    {sipName_SEND_EVENT_POST, static_cast<int>(::wxSEND_EVENT_POST)},
    {sipName_TOUCH_NONE, static_cast<int>(::wxTOUCH_NONE)},
    {sipName_TOUCH_VERTICAL_PAN_GESTURE, static_cast<int>(::wxTOUCH_VERTICAL_PAN_GESTURE)},
    {sipName_TOUCH_HORIZONTAL_PAN_GESTURE, static_cast<int>(::wxTOUCH_HORIZONTAL_PAN_GESTURE)},
    {sipName_TOUCH_PAN_GESTURES, static_cast<int>(::wxTOUCH_PAN_GESTURES)},
    {sipName_TOUCH_ZOOM_GESTURE, static_cast<int>(::wxTOUCH_ZOOM_GESTURE)},
    {sipName_TOUCH_ROTATE_GESTURE, static_cast<int>(::wxTOUCH_ROTATE_GESTURE)},
    {sipName_TOUCH_PRESS_GESTURES, static_cast<int>(::wxTOUCH_PRESS_GESTURES)},
    {sipName_TOUCH_ALL_GESTURES, static_cast<int>(::wxTOUCH_ALL_GESTURES)},
    {sipName_EXTEND_LAST_ON_EACH_LINE, static_cast<int>(::wxEXTEND_LAST_ON_EACH_LINE)},
    {sipName_REMOVE_LEADING_SPACES, static_cast<int>(::wxREMOVE_LEADING_SPACES)},
    {sipName_WRAPSIZER_DEFAULT_FLAGS, static_cast<int>(::wxWRAPSIZER_DEFAULT_FLAGS)},
    {sipName_JOY_BUTTON_ANY, static_cast<int>(::wxJOY_BUTTON_ANY)},
    {sipName_JOY_BUTTON1, static_cast<int>(::wxJOY_BUTTON1)},
    {sipName_JOY_BUTTON2, static_cast<int>(::wxJOY_BUTTON2)},
    {sipName_JOY_BUTTON3, static_cast<int>(::wxJOY_BUTTON3)},
    {sipName_JOY_BUTTON4, static_cast<int>(::wxJOY_BUTTON4)},
    {sipName_JOYSTICK1, static_cast<int>(::wxJOYSTICK1)},
    {sipName_JOYSTICK2, static_cast<int>(::wxJOYSTICK2)},
    {sipName_CONFIG_USE_LOCAL_FILE, static_cast<int>(::wxCONFIG_USE_LOCAL_FILE)},
    {sipName_CONFIG_USE_GLOBAL_FILE, static_cast<int>(::wxCONFIG_USE_GLOBAL_FILE)},
    {sipName_CONFIG_USE_RELATIVE_PATH, static_cast<int>(::wxCONFIG_USE_RELATIVE_PATH)},
    {sipName_CONFIG_USE_NO_ESCAPE_CHARACTERS, static_cast<int>(::wxCONFIG_USE_NO_ESCAPE_CHARACTERS)},
    {sipName_CONFIG_USE_SUBDIR, static_cast<int>(::wxCONFIG_USE_SUBDIR)},
    {sipName_Drag_CopyOnly, static_cast<int>(::wxDrag_CopyOnly)},
    {sipName_Drag_AllowMove, static_cast<int>(::wxDrag_AllowMove)},
    {sipName_Drag_DefaultMove, static_cast<int>(::wxDrag_DefaultMove)},
    {sipName_CONTROL_NONE, static_cast<int>(::wxCONTROL_NONE)},
    {sipName_CONTROL_DISABLED, static_cast<int>(::wxCONTROL_DISABLED)},
    {sipName_CONTROL_FOCUSED, static_cast<int>(::wxCONTROL_FOCUSED)},
    {sipName_CONTROL_PRESSED, static_cast<int>(::wxCONTROL_PRESSED)},
    {sipName_CONTROL_SPECIAL, static_cast<int>(::wxCONTROL_SPECIAL)},
    {sipName_CONTROL_ISDEFAULT, static_cast<int>(::wxCONTROL_ISDEFAULT)},
    {sipName_CONTROL_ISSUBMENU, static_cast<int>(::wxCONTROL_ISSUBMENU)},
    {sipName_CONTROL_EXPANDED, static_cast<int>(::wxCONTROL_EXPANDED)},
    {sipName_CONTROL_SIZEGRIP, static_cast<int>(::wxCONTROL_SIZEGRIP)},
    {sipName_CONTROL_FLAT, static_cast<int>(::wxCONTROL_FLAT)},
    {sipName_CONTROL_CELL, static_cast<int>(::wxCONTROL_CELL)},
    {sipName_CONTROL_CURRENT, static_cast<int>(::wxCONTROL_CURRENT)},
    {sipName_CONTROL_SELECTED, static_cast<int>(::wxCONTROL_SELECTED)},
    {sipName_CONTROL_CHECKED, static_cast<int>(::wxCONTROL_CHECKED)},
    {sipName_CONTROL_CHECKABLE, static_cast<int>(::wxCONTROL_CHECKABLE)},
    {sipName_CONTROL_UNDETERMINED, static_cast<int>(::wxCONTROL_UNDETERMINED)},
    {sipName_IMAGE_LIST_NORMAL, static_cast<int>(::wxIMAGE_LIST_NORMAL)},
    {sipName_IMAGE_LIST_SMALL, static_cast<int>(::wxIMAGE_LIST_SMALL)},
    {sipName_IMAGE_LIST_STATE, static_cast<int>(::wxIMAGE_LIST_STATE)},
    {sipName_BMP_24BPP, static_cast<int>(::wxBMP_24BPP)},
    {sipName_BMP_8BPP, static_cast<int>(::wxBMP_8BPP)},
    {sipName_BMP_8BPP_GREY, static_cast<int>(::wxBMP_8BPP_GREY)},
    {sipName_BMP_8BPP_GRAY, static_cast<int>(::wxBMP_8BPP_GRAY)},
    {sipName_BMP_8BPP_RED, static_cast<int>(::wxBMP_8BPP_RED)},
    {sipName_BMP_8BPP_PALETTE, static_cast<int>(::wxBMP_8BPP_PALETTE)},
    {sipName_BMP_4BPP, static_cast<int>(::wxBMP_4BPP)},
    {sipName_BMP_1BPP, static_cast<int>(::wxBMP_1BPP)},
    {sipName_BMP_1BPP_BW, static_cast<int>(::wxBMP_1BPP_BW)},
    {sipName_C2S_NAME, static_cast<int>(::wxC2S_NAME)},
    {sipName_C2S_CSS_SYNTAX, static_cast<int>(::wxC2S_CSS_SYNTAX)},
    {sipName_C2S_HTML_SYNTAX, static_cast<int>(::wxC2S_HTML_SYNTAX)},
    {0, 0}
};


/* Define the unsigned longs to be added to this module dictionary. */
static sipUnsignedLongInstanceDef unsignedLongInstances[] = {
    {sipName_UINT32_MAX, wxUINT32_MAX},
    {0, 0}
};


/* Define the long longs to be added to this module dictionary. */
static sipLongLongInstanceDef longLongInstances[] = {
    {sipName_INT64_MAX, wxINT64_MAX},
    {sipName_INT64_MIN, wxINT64_MIN},
    {0, 0}
};


/* Define the unsigned long longs to be added to this module dictionary. */
static sipUnsignedLongLongInstanceDef unsignedLongLongInstances[] = {
    {sipName_UINT64_MAX, wxUINT64_MAX},
    {0, 0}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI__core = {
    SIP_NULLPTR,
    8,
    sipNameNr_wx__core,
    0,
    sipStrings__core,
    SIP_NULLPTR,
    SIP_NULLPTR,
    647,
    sipExportedTypes__core,
    SIP_NULLPTR,
    2352,
    enummembers,
    42,
    typedefsTable,
    SIP_NULLPTR,
    convertorsTable,
    {typeInstances, SIP_NULLPTR, SIP_NULLPTR, stringInstances, intInstances, SIP_NULLPTR, unsignedLongInstances, longLongInstances, unsignedLongLongInstances, SIP_NULLPTR},
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI__core;


/* The Python module initialisation function. */
#if defined(SIP_STATIC_MODULE)
extern "C" PyObject *PyInit__core()
#else
PyMODINIT_FUNC PyInit__core()
#endif
{
    static PyMethodDef sip_methods[] = {
        {sipName__wxPyCleanup, func__wxPyCleanup, METH_VARARGS, doc__wxPyCleanup},
        {sipName_IsMainThread, func_IsMainThread, METH_VARARGS, doc_IsMainThread},
        {sipName_GetStockLabel, SIP_MLMETH_CAST(func_GetStockLabel), METH_VARARGS|METH_KEYWORDS, doc_GetStockLabel},
        {sipName_HexToDec, SIP_MLMETH_CAST(func_HexToDec), METH_VARARGS|METH_KEYWORDS, doc_HexToDec},
        {sipName_DecToHex, SIP_MLMETH_CAST(func_DecToHex), METH_VARARGS|METH_KEYWORDS, doc_DecToHex},
        {sipName_Sleep, SIP_MLMETH_CAST(func_Sleep), METH_VARARGS|METH_KEYWORDS, doc_Sleep},
        {sipName_Now, func_Now, METH_VARARGS, doc_Now},
        {sipName_MilliSleep, SIP_MLMETH_CAST(func_MilliSleep), METH_VARARGS|METH_KEYWORDS, doc_MilliSleep},
        {sipName_MicroSleep, SIP_MLMETH_CAST(func_MicroSleep), METH_VARARGS|METH_KEYWORDS, doc_MicroSleep},
        {sipName_Shutdown, SIP_MLMETH_CAST(func_Shutdown), METH_VARARGS|METH_KEYWORDS, doc_Shutdown},
        {sipName_Shell, SIP_MLMETH_CAST(func_Shell), METH_VARARGS|METH_KEYWORDS, doc_Shell},
        {sipName_Kill, SIP_MLMETH_CAST(func_Kill), METH_VARARGS|METH_KEYWORDS, doc_Kill},
        {sipName_GetProcessId, func_GetProcessId, METH_VARARGS, doc_GetProcessId},
        {sipName_Execute, SIP_MLMETH_CAST(func_Execute), METH_VARARGS|METH_KEYWORDS, doc_Execute},
        {sipName_GetNativeCpuArchitectureName, func_GetNativeCpuArchitectureName, METH_VARARGS, doc_GetNativeCpuArchitectureName},
        {sipName_GetCpuArchitectureName, func_GetCpuArchitectureName, METH_VARARGS, doc_GetCpuArchitectureName},
        {sipName_IsPlatformLittleEndian, func_IsPlatformLittleEndian, METH_VARARGS, doc_IsPlatformLittleEndian},
        {sipName_IsPlatform64Bit, func_IsPlatform64Bit, METH_VARARGS, doc_IsPlatform64Bit},
        {sipName_CheckOsVersion, SIP_MLMETH_CAST(func_CheckOsVersion), METH_VARARGS|METH_KEYWORDS, doc_CheckOsVersion},
        {sipName_GetOsVersion, SIP_MLMETH_CAST(func_GetOsVersion), METH_VARARGS|METH_KEYWORDS, doc_GetOsVersion},
        {sipName_GetOsDescription, func_GetOsDescription, METH_VARARGS, doc_GetOsDescription},
        {sipName_GetUserName, func_GetUserName, METH_VARARGS, doc_GetUserName},
        {sipName_GetUserId, func_GetUserId, METH_VARARGS, doc_GetUserId},
        {sipName_GetUserHome, SIP_MLMETH_CAST(func_GetUserHome), METH_VARARGS|METH_KEYWORDS, doc_GetUserHome},
        {sipName_GetFullHostName, func_GetFullHostName, METH_VARARGS, doc_GetFullHostName},
        {sipName_GetHostName, func_GetHostName, METH_VARARGS, doc_GetHostName},
        {sipName_GetHomeDir, func_GetHomeDir, METH_VARARGS, doc_GetHomeDir},
        {sipName_GetEmailAddress, func_GetEmailAddress, METH_VARARGS, doc_GetEmailAddress},
        {sipName_StripMenuCodes, SIP_MLMETH_CAST(func_StripMenuCodes), METH_VARARGS|METH_KEYWORDS, doc_StripMenuCodes},
        {sipName_LaunchDefaultBrowser, SIP_MLMETH_CAST(func_LaunchDefaultBrowser), METH_VARARGS|METH_KEYWORDS, doc_LaunchDefaultBrowser},
        {sipName_LaunchDefaultApplication, SIP_MLMETH_CAST(func_LaunchDefaultApplication), METH_VARARGS|METH_KEYWORDS, doc_LaunchDefaultApplication},
        {sipName_RegisterId, SIP_MLMETH_CAST(func_RegisterId), METH_VARARGS|METH_KEYWORDS, doc_RegisterId},
        {sipName_NewId, func_NewId, METH_VARARGS, doc_NewId},
        {sipName_FindMenuItemId, SIP_MLMETH_CAST(func_FindMenuItemId), METH_VARARGS|METH_KEYWORDS, doc_FindMenuItemId},
        {sipName_FindWindowAtPoint, SIP_MLMETH_CAST(func_FindWindowAtPoint), METH_VARARGS|METH_KEYWORDS, doc_FindWindowAtPoint},
        {sipName_EnableTopLevelWindows, SIP_MLMETH_CAST(func_EnableTopLevelWindows), METH_VARARGS|METH_KEYWORDS, doc_EnableTopLevelWindows},
        {sipName_GetMouseState, func_GetMouseState, METH_VARARGS, doc_GetMouseState},
        {sipName_GetMousePosition, func_GetMousePosition, METH_VARARGS, doc_GetMousePosition},
        {sipName_GetKeyState, SIP_MLMETH_CAST(func_GetKeyState), METH_VARARGS|METH_KEYWORDS, doc_GetKeyState},
        {sipName_GetPowerType, func_GetPowerType, METH_VARARGS, doc_GetPowerType},
        {sipName_GetBatteryState, func_GetBatteryState, METH_VARARGS, doc_GetBatteryState},
        {sipName_SecureZeroMemory, SIP_MLMETH_CAST(func_SecureZeroMemory), METH_VARARGS|METH_KEYWORDS, doc_SecureZeroMemory},
        {sipName_GetLibraryVersionInfo, func_GetLibraryVersionInfo, METH_VARARGS, doc_GetLibraryVersionInfo},
        {sipName_InfoMessageBox, SIP_MLMETH_CAST(func_InfoMessageBox), METH_VARARGS|METH_KEYWORDS, doc_InfoMessageBox},
        {sipName_Bell, func_Bell, METH_VARARGS, doc_Bell},
        {sipName_IsBusy, func_IsBusy, METH_VARARGS, doc_IsBusy},
        {sipName_EndBusyCursor, func_EndBusyCursor, METH_VARARGS, doc_EndBusyCursor},
        {sipName_BeginBusyCursor, SIP_MLMETH_CAST(func_BeginBusyCursor), METH_VARARGS|METH_KEYWORDS, doc_BeginBusyCursor},
        {sipName_GetNumberFromUser, SIP_MLMETH_CAST(func_GetNumberFromUser), METH_VARARGS|METH_KEYWORDS, doc_GetNumberFromUser},
        {sipName_GetPasswordFromUser, SIP_MLMETH_CAST(func_GetPasswordFromUser), METH_VARARGS|METH_KEYWORDS, doc_GetPasswordFromUser},
        {sipName_GetTextFromUser, SIP_MLMETH_CAST(func_GetTextFromUser), METH_VARARGS|METH_KEYWORDS, doc_GetTextFromUser},
        {sipName_GetFontFromUser, SIP_MLMETH_CAST(func_GetFontFromUser), METH_VARARGS|METH_KEYWORDS, doc_GetFontFromUser},
        {sipName_GetSingleChoice, SIP_MLMETH_CAST(func_GetSingleChoice), METH_VARARGS|METH_KEYWORDS, doc_GetSingleChoice},
        {sipName_GetColourFromUser, SIP_MLMETH_CAST(func_GetColourFromUser), METH_VARARGS|METH_KEYWORDS, doc_GetColourFromUser},
        {sipName_MessageBox, SIP_MLMETH_CAST(func_MessageBox), METH_VARARGS|METH_KEYWORDS, doc_MessageBox},
        {sipName_SaveFileSelector, SIP_MLMETH_CAST(func_SaveFileSelector), METH_VARARGS|METH_KEYWORDS, doc_SaveFileSelector},
        {sipName_LoadFileSelector, SIP_MLMETH_CAST(func_LoadFileSelector), METH_VARARGS|METH_KEYWORDS, doc_LoadFileSelector},
        {sipName_FileSelectorEx, SIP_MLMETH_CAST(func_FileSelectorEx), METH_VARARGS|METH_KEYWORDS, doc_FileSelectorEx},
        {sipName_FileSelector, SIP_MLMETH_CAST(func_FileSelector), METH_VARARGS|METH_KEYWORDS, doc_FileSelector},
        {sipName_DirSelector, SIP_MLMETH_CAST(func_DirSelector), METH_VARARGS|METH_KEYWORDS, doc_DirSelector},
        {sipName_FindWindowByLabel, SIP_MLMETH_CAST(func_FindWindowByLabel), METH_VARARGS|METH_KEYWORDS, doc_FindWindowByLabel},
        {sipName_FindWindowByName, SIP_MLMETH_CAST(func_FindWindowByName), METH_VARARGS|METH_KEYWORDS, doc_FindWindowByName},
        {sipName_FindWindowById, SIP_MLMETH_CAST(func_FindWindowById), METH_VARARGS|METH_KEYWORDS, doc_FindWindowById},
        {sipName_GetTopLevelWindows, func_GetTopLevelWindows, METH_VARARGS, doc_GetTopLevelWindows},
        {sipName_DumpWindow, SIP_MLMETH_CAST(func_DumpWindow), METH_VARARGS|METH_KEYWORDS, doc_DumpWindow},
        {sipName_GetTopLevelParent, SIP_MLMETH_CAST(func_GetTopLevelParent), METH_VARARGS|METH_KEYWORDS, doc_GetTopLevelParent},
        {sipName_GetActiveWindow, func_GetActiveWindow, METH_VARARGS, doc_GetActiveWindow},
        {sipName_FindWindowAtPointer, SIP_MLMETH_CAST(func_FindWindowAtPointer), METH_VARARGS|METH_KEYWORDS, doc_FindWindowAtPointer},
        {sipName_Exit, func_Exit, METH_VARARGS, doc_Exit},
        {sipName_SafeYield, SIP_MLMETH_CAST(func_SafeYield), METH_VARARGS|METH_KEYWORDS, doc_SafeYield},
        {sipName_Yield, func_Yield, METH_VARARGS, doc_Yield},
        {sipName_WakeUpIdle, func_WakeUpIdle, METH_VARARGS, doc_WakeUpIdle},
        {sipName_HandleFatalExceptions, SIP_MLMETH_CAST(func_HandleFatalExceptions), METH_VARARGS|METH_KEYWORDS, doc_HandleFatalExceptions},
        {sipName_GetApp, func_GetApp, METH_VARARGS, doc_GetApp},
        {sipName_testCppClone, SIP_MLMETH_CAST(func_testCppClone), METH_VARARGS|METH_KEYWORDS, doc_testCppClone},
        {sipName_QueueEvent, SIP_MLMETH_CAST(func_QueueEvent), METH_VARARGS|METH_KEYWORDS, doc_QueueEvent},
        {sipName_PostEvent, SIP_MLMETH_CAST(func_PostEvent), METH_VARARGS|METH_KEYWORDS, doc_PostEvent},
        {sipName_NewEventType, func_NewEventType, METH_VARARGS, doc_NewEventType},
        {sipName_testVariantTypeName, SIP_MLMETH_CAST(func_testVariantTypeName), METH_VARARGS|METH_KEYWORDS, doc_testVariantTypeName},
        {sipName_testVariantTypemap, SIP_MLMETH_CAST(func_testVariantTypemap), METH_VARARGS|METH_KEYWORDS, doc_testVariantTypemap},
        {sipName_IsDragResultOk, SIP_MLMETH_CAST(func_IsDragResultOk), METH_VARARGS|METH_KEYWORDS, doc_IsDragResultOk},
        {sipName_LogSysError, SIP_MLMETH_CAST(func_LogSysError), METH_VARARGS|METH_KEYWORDS, doc_LogSysError},
        {sipName_LogStatus, SIP_MLMETH_CAST(func_LogStatus), METH_VARARGS|METH_KEYWORDS, doc_LogStatus},
        {sipName_LogDebug, SIP_MLMETH_CAST(func_LogDebug), METH_VARARGS|METH_KEYWORDS, doc_LogDebug},
        {sipName_LogError, SIP_MLMETH_CAST(func_LogError), METH_VARARGS|METH_KEYWORDS, doc_LogError},
        {sipName_LogFatalError, SIP_MLMETH_CAST(func_LogFatalError), METH_VARARGS|METH_KEYWORDS, doc_LogFatalError},
        {sipName_LogWarning, SIP_MLMETH_CAST(func_LogWarning), METH_VARARGS|METH_KEYWORDS, doc_LogWarning},
        {sipName_LogVerbose, SIP_MLMETH_CAST(func_LogVerbose), METH_VARARGS|METH_KEYWORDS, doc_LogVerbose},
        {sipName_LogInfo, func_LogInfo, METH_VARARGS, doc_LogInfo},
        {sipName_LogMessage, SIP_MLMETH_CAST(func_LogMessage), METH_VARARGS|METH_KEYWORDS, doc_LogMessage},
        {sipName_LogGeneric, SIP_MLMETH_CAST(func_LogGeneric), METH_VARARGS|METH_KEYWORDS, doc_LogGeneric},
        {sipName_SysErrorMsg, SIP_MLMETH_CAST(func_SysErrorMsg), METH_VARARGS|METH_KEYWORDS, doc_SysErrorMsg},
        {sipName_SysErrorMsgStr, SIP_MLMETH_CAST(func_SysErrorMsgStr), METH_VARARGS|METH_KEYWORDS, doc_SysErrorMsgStr},
        {sipName_SysErrorCode, func_SysErrorCode, METH_VARARGS, doc_SysErrorCode},
        {sipName_SafeShowMessage, SIP_MLMETH_CAST(func_SafeShowMessage), METH_VARARGS|METH_KEYWORDS, doc_SafeShowMessage},
        {sipName_AutoBufferedPaintDCFactory, SIP_MLMETH_CAST(func_AutoBufferedPaintDCFactory), METH_VARARGS|METH_KEYWORDS, doc_AutoBufferedPaintDCFactory},
        {sipName_FFont, SIP_MLMETH_CAST(func_FFont), METH_VARARGS|METH_KEYWORDS, doc_FFont},
        {sipName_InitAllImageHandlers, func_InitAllImageHandlers, METH_VARARGS, doc_InitAllImageHandlers},
        {sipName_testColourTypeMap, SIP_MLMETH_CAST(func_testColourTypeMap), METH_VARARGS|METH_KEYWORDS, doc_testColourTypeMap},
        {sipName_MacThemeColour, SIP_MLMETH_CAST(func_MacThemeColour), METH_VARARGS|METH_KEYWORDS, doc_MacThemeColour},
        {sipName_IntersectRect, SIP_MLMETH_CAST(func_IntersectRect), METH_VARARGS|METH_KEYWORDS, doc_IntersectRect},
        {sipName_GetDisplaySizeMM, func_GetDisplaySizeMM, METH_VARARGS, doc_GetDisplaySizeMM},
        {sipName_DisplaySizeMM, SIP_MLMETH_CAST(func_DisplaySizeMM), METH_VARARGS|METH_KEYWORDS, doc_DisplaySizeMM},
        {sipName_GetDisplaySize, func_GetDisplaySize, METH_VARARGS, doc_GetDisplaySize},
        {sipName_DisplaySize, SIP_MLMETH_CAST(func_DisplaySize), METH_VARARGS|METH_KEYWORDS, doc_DisplaySize},
        {sipName_GetDisplayPPI, func_GetDisplayPPI, METH_VARARGS, doc_GetDisplayPPI},
        {sipName_GetClientDisplayRect, func_GetClientDisplayRect, METH_VARARGS, doc_GetClientDisplayRect},
        {sipName_ClientDisplayRect, SIP_MLMETH_CAST(func_ClientDisplayRect), METH_VARARGS|METH_KEYWORDS, doc_ClientDisplayRect},
        {sipName_SetCursor, SIP_MLMETH_CAST(func_SetCursor), METH_VARARGS|METH_KEYWORDS, doc_SetCursor},
        {sipName_DisplayDepth, func_DisplayDepth, METH_VARARGS, doc_DisplayDepth},
        {sipName_ColourDisplay, func_ColourDisplay, METH_VARARGS, doc_ColourDisplay},
        {sipName_GetTranslation, SIP_MLMETH_CAST(func_GetTranslation), METH_VARARGS|METH_KEYWORDS, doc_GetTranslation},
        {sipName_Setlocale, SIP_MLMETH_CAST(func_Setlocale), METH_VARARGS|METH_KEYWORDS, doc_Setlocale},
        {sipName_GetLocale, func_GetLocale, METH_VARARGS, doc_GetLocale},
        {sipName_IsRunningUnderWine, func_IsRunningUnderWine, METH_VARARGS, doc_IsRunningUnderWine},
        {sipName_testArrayDoubleTypemap, SIP_MLMETH_CAST(func_testArrayDoubleTypemap), METH_VARARGS|METH_KEYWORDS, doc_testArrayDoubleTypemap},
        {sipName_testArrayIntTypemap, SIP_MLMETH_CAST(func_testArrayIntTypemap), METH_VARARGS|METH_KEYWORDS, doc_testArrayIntTypemap},
        {sipName_testArrayStringTypemap, SIP_MLMETH_CAST(func_testArrayStringTypemap), METH_VARARGS|METH_KEYWORDS, doc_testArrayStringTypemap},
        {sipName_testStringTypemap, SIP_MLMETH_CAST(func_testStringTypemap), METH_VARARGS|METH_KEYWORDS, doc_testStringTypemap},
        {sipName_Trap, func_Trap, METH_VARARGS, doc_Trap},
        {sipName_DisableAsserts, func_DisableAsserts, METH_VARARGS, doc_DisableAsserts},
        {sipName_Abort, func_Abort, METH_VARARGS, doc_Abort},
        {sipName_testUIntPtrTypemap, SIP_MLMETH_CAST(func_testUIntPtrTypemap), METH_VARARGS|METH_KEYWORDS, doc_testUIntPtrTypemap},
        {sipName_testIntPtrTypemap, SIP_MLMETH_CAST(func_testIntPtrTypemap), METH_VARARGS|METH_KEYWORDS, doc_testIntPtrTypemap},
        {sipName_testSizetTypemap, SIP_MLMETH_CAST(func_testSizetTypemap), METH_VARARGS|METH_KEYWORDS, doc_testSizetTypemap},
        {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
    };

    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "wx._core",
        SIP_NULLPTR,
        -1,
        sip_methods,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_NULLPTR
    };

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
    if ((sipModule = PyModule_Create(&sip_module_def)) == SIP_NULLPTR)
        return SIP_NULLPTR;

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
    if ((sip_sipmod = PyImport_ImportModule("wx.siplib")) == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

    if (sip_capiobj == SIP_NULLPTR || !PyCapsule_CheckExact(sip_capiobj))
    {
        PyErr_SetString(PyExc_AttributeError, "wx.siplib._C_API is missing or has the wrong type");
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    sipAPI__core = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, "wx.siplib._C_API"));

    if (sipAPI__core == SIP_NULLPTR)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }
    PyDateTime_IMPORT;
        wxPyPreInit(sipModuleDict);
    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI__core, 12, 8, 0) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }
    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI__core,sipModuleDict) < 0)
    {
        Py_DECREF(sipModule);
        return SIP_NULLPTR;
    }

    /*
     * Define the class, mapped type and enum instances that have to be
     * added inline.
     */
    sipAddTypeInstance(sipModuleDict,sipName_DefaultDateTime,const_cast< ::wxDateTime *>(& ::wxDefaultDateTime),sipType_wxDateTime);
    sipAddTypeInstance(sipModuleDict,sipName_DefaultPosition,const_cast< ::wxPoint *>(& ::wxDefaultPosition),sipType_wxPoint);
    sipAddTypeInstance(sipModuleDict,sipName_DefaultSize,const_cast< ::wxSize *>(& ::wxDefaultSize),sipType_wxSize);
    sipAddTypeInstance(sipModuleDict,sipName_DefaultSpan,const_cast< ::wxGBSpan *>(& ::wxDefaultSpan),sipType_wxGBSpan);
    sipAddTypeInstance(sipModuleDict,sipName_DefaultValidator,const_cast< ::wxValidator *>(& ::wxDefaultValidator),sipType_wxValidator);
    sipAddTypeInstance(sipModuleDict,sipName_DefaultVideoMode,const_cast< ::wxVideoMode *>(& ::wxDefaultVideoMode),sipType_wxVideoMode);
    sipAddTypeInstance(sipModuleDict,sipName_FormatInvalid,const_cast< ::wxDataFormat *>(& ::wxFormatInvalid),sipType_wxDataFormat);
    sipAddTypeInstance(sipModuleDict,sipName_NullAcceleratorTable,& ::wxNullAcceleratorTable,sipType_wxAcceleratorTable);
    sipAddTypeInstance(sipModuleDict,sipName_NullBitmap,& ::wxNullBitmap,sipType_wxBitmap);
    sipAddTypeInstance(sipModuleDict,sipName_NullBrush,& ::wxNullBrush,sipType_wxBrush);
    sipAddTypeInstance(sipModuleDict,sipName_NullColour,& ::wxNullColour,sipType_wxColour);
    sipAddTypeInstance(sipModuleDict,sipName_NullCursor,& ::wxNullCursor,sipType_wxCursor);
    sipAddTypeInstance(sipModuleDict,sipName_NullFont,& ::wxNullFont,sipType_wxFont);
    sipAddTypeInstance(sipModuleDict,sipName_NullGraphicsBitmap,const_cast< ::wxGraphicsBitmap *>(& ::wxNullGraphicsBitmap),sipType_wxGraphicsBitmap);
    sipAddTypeInstance(sipModuleDict,sipName_NullGraphicsBrush,const_cast< ::wxGraphicsBrush *>(& ::wxNullGraphicsBrush),sipType_wxGraphicsBrush);
    sipAddTypeInstance(sipModuleDict,sipName_NullGraphicsFont,const_cast< ::wxGraphicsFont *>(& ::wxNullGraphicsFont),sipType_wxGraphicsFont);
    sipAddTypeInstance(sipModuleDict,sipName_NullGraphicsMatrix,const_cast< ::wxGraphicsMatrix *>(& ::wxNullGraphicsMatrix),sipType_wxGraphicsMatrix);
    sipAddTypeInstance(sipModuleDict,sipName_NullGraphicsPath,const_cast< ::wxGraphicsPath *>(& ::wxNullGraphicsPath),sipType_wxGraphicsPath);
    sipAddTypeInstance(sipModuleDict,sipName_NullGraphicsPen,const_cast< ::wxGraphicsPen *>(& ::wxNullGraphicsPen),sipType_wxGraphicsPen);
    sipAddTypeInstance(sipModuleDict,sipName_NullIcon,& ::wxNullIcon,sipType_wxIcon);
    sipAddTypeInstance(sipModuleDict,sipName_NullIconBundle,& ::wxNullIconBundle,sipType_wxIconBundle);
    sipAddTypeInstance(sipModuleDict,sipName_NullImage,& ::wxNullImage,sipType_wxImage);
    sipAddTypeInstance(sipModuleDict,sipName_NullPalette,& ::wxNullPalette,sipType_wxPalette);
    sipAddTypeInstance(sipModuleDict,sipName_NullPen,& ::wxNullPen,sipType_wxPen);
    sipAddTypeInstance(sipModuleDict,sipName_TransparentColour,& ::wxTransparentColour,sipType_wxColour);
    PyDict_SetItemString(sipModuleDict, "VSCROLL", wxPyInt_FromLong(static_cast<int>(wxVSCROLL)));
    PyDict_SetItemString(sipModuleDict, "WINDOW_STYLE_MASK", wxPyInt_FromLong(static_cast<int>(wxWINDOW_STYLE_MASK)));
    PyDict_SetItemString(sipModuleDict, "CANCEL_DEFAULT", wxPyInt_FromLong(static_cast<int>(wxCANCEL_DEFAULT)));
    // Code that will run when _core is imported that will stash away a
    // pointer to the API structure.
    PyObject* wxmod = PyImport_ImportModule("wx");
    PyObject* wxmodDict = PyModule_GetDict(wxmod);
    PyObject* apiObj = PyCapsule_New(&API, "wx._wxPyAPI", NULL);
    PyDict_SetItemString(wxmodDict, "_wxPyAPI", apiObj);

    Py_XDECREF(apiObj);
    Py_DECREF(wxmod);
    wxPyGetAPIPtr();
        wxPyCoreModuleInject(sipModuleDict);

    return sipModule;
}
